{"version":3,"sources":["webpack://LeafletMapAdapter/webpack/universalModuleDefinition","webpack://LeafletMapAdapter/webpack/bootstrap","webpack://LeafletMapAdapter/external \"leaflet\"","webpack://LeafletMapAdapter/external \"events\"","webpack://LeafletMapAdapter/external \"leaflet.wms/src/leaflet.wms.js\"","webpack://LeafletMapAdapter/./src/layer-adapters/BaseAdapter.ts","webpack://LeafletMapAdapter/./src/layer-adapters/TileAdapter.ts","webpack://LeafletMapAdapter/./src/layer-adapters/GeoJsonAdapter.ts","webpack://LeafletMapAdapter/./src/controls/Attribution.ts","webpack://LeafletMapAdapter/./src/layer-adapters/ImageAdapter.ts","webpack://LeafletMapAdapter/./src/leaflet-map-adapter.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__0__","__WEBPACK_EXTERNAL_MODULE__1__","__WEBPACK_EXTERNAL_MODULE__2__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ID","BaseAdapter","map","options","this","id","String","assign","addLayer","TileAdapter_ID","TileAdapter_TileAdapter","_super","TileAdapter","__extends","url","opt","__rest","external_leaflet_","GeoJsonAdapter_ID","GeoJsonAdapter_GeoJsonAdapter","GeoJsonAdapter","GeoJsonAdapter_extends","data","AttributionControl","_this","customAttribution","concat","forEach","x","addAttribution","Attribution_extends","Attribution","ImageAdapter_ID","ImageAdapter_ImageAdapter","ImageAdapter","updateWmsParamsFromOpt","__assign","transparent","updateWmsParams","layer","leaflet_wms_js_default","a","overlay","updateWmsParams_1","wmsParams","leaflet_map_adapter_LeafletMapAdapter","LeafletMapAdapter","target","layerAdapters","displayProjection","lonlatProjection","emitter","external_events_","_layers","DPI","IPM","_order","_length","_baseLayers","zoomControl","attributionControl","emit","_addMapListeners","getContainer","onMapLoad","cb","Promise","resolve","setCenter","latLng","setView","getZoom","setZoom","zoom","fit","e","fitBounds","getLayerAdapter","getLayer","layerName","undefined","getLayers","keys","isLayerOnTheMap","onMap","addControl","controlDef","position","control","engine","controlAdapters","replace","adapterDef","baselayer","adapterEngine","adapter_1","addlayerFun","toResolve_1","layerId","layerOpts","baseLayer","push","order","then","reject","removeLayer","showLayer","toggleLayer","hideLayer","setLayerOpacity","getScaleForResolution","res","mpu","parseFloat","getResolutionForScale","scale","status","action","source","addTo","setZIndex","once","onMapClick","evt","coord","containerPoint","latlng","pixel","left","top","y","on","IMAGE","TILE","GEOJSON","ZOOM","Zoom","ATTRIBUTION","__webpack_exports__"],"mappings":"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","file":"leaflet-map-adapter.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"leaflet\"), require(\"events\"), require(\"leaflet.wms/src/leaflet.wms.js\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"leaflet\", \"events\", \"leaflet.wms/src/leaflet.wms.js\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LeafletMapAdapter\"] = factory(require(\"leaflet\"), require(\"events\"), require(\"leaflet.wms/src/leaflet.wms.js\"));\n\telse\n\t\troot[\"LeafletMapAdapter\"] = factory(root[\"leaflet\"], root[\"events\"], root[\"leaflet.wms/src/leaflet.wms.js\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__0__, __WEBPACK_EXTERNAL_MODULE__1__, __WEBPACK_EXTERNAL_MODULE__2__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__0__;","module.exports = __WEBPACK_EXTERNAL_MODULE__1__;","module.exports = __WEBPACK_EXTERNAL_MODULE__2__;","import { LayerAdapter } from '@nextgis/webmap';\r\nimport {Map, Layer} from 'leaflet';\r\n\r\nlet ID = 1;\r\n\r\nexport abstract class BaseAdapter implements LayerAdapter {\r\n\r\n  map: Map;\r\n  name: string;\r\n  options;\r\n\r\n  constructor(map, options?) {\r\n    this.map = map;\r\n    this.name = options.id || String(ID++);\r\n    this.options = Object.assign({}, this.options, options);\r\n  }\r\n\r\n  addLayer(options?): Layer {\r\n    return null;\r\n  }\r\n}\r\n","import { LayerAdapter } from '@nextgis/webmap';\r\nimport { TileLayer } from 'leaflet';\r\nimport { BaseAdapter } from './BaseAdapter';\r\n\r\nlet ID = 1;\r\n\r\nexport class TileAdapter extends BaseAdapter implements LayerAdapter {\r\n\r\n  name: string;\r\n\r\n  addLayer(options?) {\r\n\r\n    this.name = options.id || 'tile-' + ID++;\r\n    const {url, ...opt} = options;\r\n    const layer = new TileLayer(url, opt);\r\n\r\n    // layer.addTo(this.map);\r\n\r\n    return layer;\r\n  }\r\n}\r\n","import { LayerAdapter } from '@nextgis/webmap';\r\nimport { GeoJSON } from 'leaflet';\r\nimport { BaseAdapter } from './BaseAdapter';\r\n\r\nlet ID = 1;\r\n\r\nexport class GeoJsonAdapter extends BaseAdapter implements LayerAdapter {\r\n\r\n  name: string;\r\n\r\n  addLayer(options?) {\r\n\r\n    this.name = options.id || 'geojson-' + ID++;\r\n\r\n    const layer = new GeoJSON(options.data, options);\r\n\r\n    // layer.addTo(this.map);\r\n\r\n    return layer;\r\n  }\r\n}\r\n","import { Control } from 'leaflet';\r\n// import { AttributionControlOptions } from '@nextgis/webmap';\r\n\r\nexport class AttributionControl extends Control.Attribution {\r\n\r\n  // options: AttributionControlOptions\r\n  constructor(options) {\r\n    super(options);\r\n    if (options.customAttribution) {\r\n      const attributions = [].concat(options.customAttribution);\r\n      attributions.forEach((x) => this.addAttribution(x));\r\n    }\r\n  }\r\n\r\n}\r\n","import { LayerAdapter } from '@nextgis/webmap';\r\nimport wms from 'leaflet.wms/src/leaflet.wms.js';\r\n\r\nlet ID = 1;\r\n\r\nexport class ImageAdapter implements LayerAdapter {\r\n\r\n  name: string;\r\n  layer: any;\r\n\r\n  addLayer(options?) {\r\n    options = { transparent: true, ...options };\r\n    const updateWmsParamsFromOpt = options.updateWmsParams;\r\n    this.name = options.id || 'image-' + ID++;\r\n    this.layer = wms.overlay(options.url, options);\r\n    if (updateWmsParamsFromOpt) {\r\n      const updateWmsParams = this.layer.updateWmsParams;\r\n      this.layer.updateWmsParams = function (map) {\r\n        updateWmsParams.call(this, map);\r\n        this.wmsParams = updateWmsParamsFromOpt(this.wmsParams);\r\n      };\r\n    }\r\n    return this.layer;\r\n  }\r\n}\r\n","import { MapAdapter, MapOptions } from '@nextgis/webmap';\nimport { Map, Control } from 'leaflet';\nimport { EventEmitter } from 'events';\nimport { TileAdapter } from './layer-adapters/TileAdapter';\nimport { GeoJsonAdapter } from './layer-adapters/GeoJsonAdapter';\nimport { AttributionControl } from './controls/Attribution';\nimport { ImageAdapter } from './layer-adapters/ImageAdapter';\n// import { ImageAdapter } from './layer-adapters/ImageAdapter';\n// import { OsmAdapter } from './layer-adapters/OsmAdapter';\n// import { MarkerAdapter } from './layer-adapters/MarkerAdapter';\n\ninterface LayerMem {\n  layer: any;\n  onMap: boolean;\n  order?: number;\n  baseLayer?: boolean;\n}\n\nexport interface LeafletMapAdapterOptions extends MapOptions {\n  id?: string;\n}\n\nexport default class LeafletMapAdapter implements MapAdapter {\n\n  static layerAdapters = {\n    IMAGE: ImageAdapter,\n    TILE: TileAdapter,\n    GEOJSON: GeoJsonAdapter,\n    // // MVT: MvtAdapter,\n    // OSM: OsmAdapter,\n    // MARKER: MarkerAdapter,\n  };\n\n  static controlAdapters = {\n    ZOOM: Control.Zoom,\n    ATTRIBUTION: AttributionControl,\n  };\n\n  options: LeafletMapAdapterOptions = { target: 'map' };\n\n  layerAdapters = LeafletMapAdapter.layerAdapters;\n\n  displayProjection = 'EPSG:3857';\n  lonlatProjection = 'EPSG:4326';\n  emitter = new EventEmitter();\n\n  map: Map;\n\n  _layers: { [x: string]: LayerMem } = {};\n\n  private DPI = 1000 / 39.37 / 0.28;\n  private IPM = 39.37;\n  private _order = 0;\n  private _length = 9999; // TODO: get real layers length count, after all registered\n  private _baseLayers: string[] = [];\n\n  // create(options: MapOptions = {target: 'map'}) {\n  create(options: LeafletMapAdapterOptions = { target: 'map' }) {\n    this.options = Object.assign({}, options);\n\n    this.map = new Map(this.options.target, { zoomControl: false, attributionControl: false });\n    this.emitter.emit('create', { map: this.map });\n\n    this._addMapListeners();\n  }\n\n  getContainer(): HTMLElement {\n    return this.map.getContainer();\n  }\n\n  onMapLoad(cb?: any) {\n    return new Promise((resolve) => {\n      resolve(cb && cb());\n    });\n  }\n\n  setCenter(latLng: [number, number]) {\n    this.map.setView(latLng, this.map.getZoom());\n  }\n\n  setZoom(zoom: number) {\n    this.map.setZoom(zoom);\n  }\n\n  // [extent_left, extent_bottom, extent_right, extent_top];\n  fit(e: [number, number, number, number]) {\n    // top, left, bottom, right\n    this.map.fitBounds([[e[3], e[0]], [e[1], e[2]]]);\n  }\n\n  getLayerAdapter(name: string) {\n    return LeafletMapAdapter.layerAdapters[name];\n  }\n\n  getLayer(layerName: string) {\n    return this._layers[layerName] !== undefined;\n  }\n\n  getLayers(): string[] {\n    return Object.keys(this._layers);\n  }\n\n  isLayerOnTheMap(layerName: string): boolean {\n    const layerMem = this._layers[layerName];\n    return layerMem.onMap;\n  }\n\n  addControl(controlDef, position, options) {\n    let control;\n    if (typeof controlDef === 'string') {\n      const engine = LeafletMapAdapter.controlAdapters[controlDef];\n      if (engine) {\n        control = new engine(options);\n      }\n    } else {\n      control = controlDef;\n    }\n    if (control) {\n      control.options.position = position.replace('-', '');\n      this.map.addControl(control);\n      return control;\n    }\n  }\n\n  addLayer(adapterDef, options?, baselayer?: boolean) {\n\n    let adapterEngine;\n    if (typeof adapterDef === 'string') {\n      adapterEngine = this.getLayerAdapter(adapterDef);\n    } else {\n      adapterEngine = adapterDef;\n    }\n    if (adapterEngine) {\n      const adapter = new adapterEngine(this.map, options);\n      const layer = adapter.addLayer(options);\n\n      const addlayerFun = adapter.addLayer(options);\n      const toResolve = (l) => {\n        const layerId = adapter.name;\n        const layerOpts: LayerMem = { layer: l, onMap: false };\n        if (baselayer) {\n          layerOpts.baseLayer = true;\n          this._baseLayers.push(layerId);\n        } else {\n          layerOpts.order = options.order || this._order++;\n        }\n        this._layers[layerId] = layerOpts;\n        // this._length++;\n\n        return adapter;\n      };\n      return addlayerFun.then ? addlayerFun.then((l) => toResolve(l)) : Promise.resolve(toResolve(layer));\n    }\n    return Promise.reject('No adapter');\n  }\n\n  removeLayer(layerName: string) {\n    // ignore\n  }\n\n  showLayer(layerName: string) {\n    this.toggleLayer(layerName, true);\n  }\n\n  hideLayer(layerName: string) {\n    this.toggleLayer(layerName, false);\n  }\n\n  setLayerOpacity(layerName: string, value: number) {\n    // ignore\n  }\n\n  getScaleForResolution(res, mpu) {\n    return parseFloat(res) * (mpu * this.IPM * this.DPI);\n  }\n\n  getResolutionForScale(scale, mpu) {\n    return parseFloat(scale) / (mpu * this.IPM * this.DPI);\n  }\n\n  toggleLayer(layerName: string, status: boolean) {\n    const action = (source: Map, l: LayerMem) => {\n      if (status) {\n        if (source instanceof Map) {\n          l.layer.addTo(source);\n          // TODO: set order for any layer\n          if (l.layer.setZIndex) {\n            const order = l.baseLayer ? 0 : this._length - l.order;\n            l.layer.setZIndex(order);\n          }\n        }\n      } else {\n        source.removeLayer(l.layer);\n      }\n      l.onMap = status;\n    };\n    const layer = this._layers[layerName];\n    if (layer && layer.onMap !== status) {\n      if (this.map) {\n        action(this.map, layer);\n      } else {\n        this.emitter.once('create', (data) => {\n          action(data.map, layer);\n        });\n      }\n    }\n  }\n\n  onMapClick(evt) {\n    const coord = evt.containerPoint;\n    const latLng = evt.latlng;\n    this.emitter.emit('click', {\n      latLng,\n      pixel: { left: coord.x, top: coord.y },\n      source: evt,\n    });\n  }\n\n  private _addMapListeners() {\n    this.map.on('click', (evt) => {\n      this.onMapClick(evt);\n    });\n  }\n\n}\n"],"sourceRoot":""}