{"version":3,"file":"ngw-kit.js","sources":["../src/ngw-kit.ts"],"sourcesContent":["import { NgwConnector } from '@nextgis/ngw-connector';\nimport { WebMap, StarterKit } from '@nextgis/webmap';\n\nexport interface NgwLayerOptions {\n  id: number;\n  adapter?: 'IMAGE' | 'TILE';\n}\n\nexport interface NgwConfig {\n  applicationUrl: string;\n  assetUrl: string;\n  amdUrl: string;\n  id: number;\n}\n\nexport interface NgwKitOptions {\n  baseUrl?: string;\n  pixelRadius?: number;\n  resourceId?: number;\n  auth?: {\n    login: string;\n    password: string;\n  };\n}\n\ninterface RequestOptions {\n  srs: number;\n  geom: any;\n  layers: string[];\n}\n\nexport class NgwKit implements StarterKit {\n\n  static updateWmsParams = (params, resourceId) => {\n    const { bbox, width, height } = params;\n    return {\n      resource: resourceId,\n      extent: bbox,\n      size: width + ',' + height,\n      timestamp: Date.now(),\n    };\n  }\n\n  static addNgwLayer(options: NgwLayerOptions, webMap, baseUrl) {\n    const adapter = options.adapter || 'IMAGE';\n    if (adapter === 'IMAGE' || adapter === 'TILE') {\n      let url = baseUrl;\n      let addLayerPromise;\n      if (adapter === 'IMAGE') {\n        url += '/api/component/render/image';\n        addLayerPromise = webMap.map.addLayer(adapter, {\n          url,\n          id: String(options.id),\n          resourceId: options.id,\n          updateWmsParams: (params) => NgwKit.updateWmsParams(params, options.id )\n        });\n      } else if (adapter === 'TILE') {\n        url += '/api/component/render/tile?z={z}&x={x}&y={y}&resource=' + options.id;\n        addLayerPromise = webMap.map.addLayer(adapter, { url });\n      }\n      return addLayerPromise;\n    } else {\n      throw new Error(adapter + ' not supported yet. Only TILE');\n    }\n  }\n\n  options: NgwKitOptions = {};\n\n  url: string;\n  resourceId: number;\n  connector: NgwConnector;\n\n  // Radius for searching objects in pixels\n  pixelRadius = 10; // webmapSettings.identify_radius,\n\n  constructor(options?: NgwKitOptions) {\n    this.options = { ...this.options, ...options };\n    if (this.options.pixelRadius) {\n      this.pixelRadius = options.pixelRadius;\n    }\n    this.url = this.options.baseUrl;\n    this.resourceId = options.resourceId;\n    this.connector = new NgwConnector({ baseUrl: this.url, auth: this.options.auth });\n  }\n\n  getSettings() {\n    return new Promise((resolve) => {\n      this.connector.request('resource.item', { id: this.resourceId }).then((data) => {\n        const webmap = data.webmap;\n        if (webmap) {\n          this._updateItemsParams(webmap.root_item);\n          resolve(data.webmap);\n        }\n      });\n    });\n  }\n\n  onMapClick(ev, webMap: WebMap) {\n    // this.sendIdentifyRequest(ev, webMap);\n  }\n\n  // options is temporal to set list of layers id, because layers id is not item parameter now\n  sendIdentifyRequest(ev, webMap: WebMap, options: { layers?: string[] } = {}) {\n\n    if (webMap.map.requestGeomString) {\n      webMap.emitter.emit('start-identify', { ev });\n      const geom = webMap.map.requestGeomString(ev.pixel, this.pixelRadius);\n      let layers: string[] = options.layers;\n      if (!layers) {\n        // TODO: layer_style_id - 1 is hardcode to get layers id for geonote.nextgis.com instant\n        layers = webMap.layers.tree.getDescendants().filter((x) => {\n          return x.item.item_type === 'layer' && x.properties.get('visibility');\n        }).map((x) => String(Number(x.item.layer_style_id) - 1));\n      }\n      const data: RequestOptions = {\n        geom,\n        srs: 3857,\n        layers,\n      };\n      return this.connector.post('feature_layer.identify', { data }).then((resp) => {\n        webMap.emitter.emit('identify', { ev, data: resp });\n        return resp;\n      });\n    }\n  }\n\n  private _updateItemsParams(item) {\n    if (item) {\n      if (item.children) {\n        item.children.forEach((x) => this._updateItemsParams(x));\n      } else if (item.item_type === 'layer' && item.layer_adapter === 'image') {\n        const url = fixUrlStr(this.url + '/api/component/render/image');\n        item.url = url;\n        item.resourceId = item.layer_style_id;\n        item.updateWmsParams = (params) => NgwKit.updateWmsParams(params, item.resourceId);\n      }\n    }\n  }\n}\n\nexport function fixUrlStr(url: string) {\n  // remove double slash\n  return url.replace(/([^:]\\/)\\/+/g, '$1');\n}\n"],"names":["NgwConnector"],"mappings":"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"}