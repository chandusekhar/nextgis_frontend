{"version":3,"sources":["webpack://NgwOl/webpack/universalModuleDefinition","webpack://NgwOl/webpack/bootstrap","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/extent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/GeometryType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/transform.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events/EventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/util.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/array.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/math.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/TileState.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/obj.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/GeometryLayout.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/epsg3857.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/epsg4326.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/projections.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/transforms.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/asserts.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/functions.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/dom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ImageState.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Object.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/ReplayType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ViewHint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/css.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapBrowserEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/has.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/Polygon.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/LineString.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/Point.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/Units.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/transform.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Collection.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events/Event.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Feature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/LayerType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/EventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/easing.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/SimpleGeometry.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Property.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/color.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/replay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/IconOrigin.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ViewProperty.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Layer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/reproj/common.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/extent/Relationship.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/Control.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/inflate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/coordinate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/reverse.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/orient.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/CollectionEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/vector.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapProperty.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/colorlike.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/IconAnchorUnits.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/deflate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/tilecoord.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/EventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/OverlayPositioning.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/Geometry.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/size.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/closest.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Stroke.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events/Target.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/State.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/FormatType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/contains.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Fill.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/simplify.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ObjectEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapBrowserPointerEvent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/VectorTileRenderType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/TileRange.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Circle.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/RegularShape.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Style.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/string.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Disposable.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Tile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/rotationconstraint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/TileProperty.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/proj/Projection.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/interpolate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ImageBase.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/area.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/intersectsextent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapEvent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/VectorContext.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/Event.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/reproj.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/LinearRing.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/tilegrid/common.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/interiorpoint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/structs/PriorityQueue.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/extent/Corner.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/structs/RBush.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/AssertionError.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Observable.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/TileCache.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapBrowserEvent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/PluggableMap.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/Source.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/structs/LRUCache.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Group.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/rbush/index.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Text.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/Map.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/IconImage.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Icon.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/sphere.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/IconImageCache.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/EventSource.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/MouseSource.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/MsSource.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/NativeSource.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/PointerEvent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/TouchSource.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/pointer/PointerEventHandler.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Image.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ImageTile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ImageCanvas.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Kinetic.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/util.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/Zoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/Rotate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/Attribution.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/MapBrowserEventHandler.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/TileQueue.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Overlay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/Immediate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/Map.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/Layer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/IntermediateCanvas.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/ImageLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/TileLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/textpath.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/Instruction.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/Replay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/ImageReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/LineStringReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/PolygonReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/straightchunk.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/TextReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/canvas/ReplayGroup.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/VectorLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/canvas/VectorTileLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Map.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/centerconstraint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/View.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/resolutionconstraint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/reproj/Triangulation.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Base.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Image.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/VectorRenderType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/featureloader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/segments.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/TextPlacement.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/length.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/Layer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/ReplayGroup.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/Property.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/Interaction.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/DoubleClickZoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events/condition.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/Pointer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/DragPan.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/DragRotate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/Box.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/DragBox.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/DragZoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/events/KeyCode.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/KeyboardPan.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/KeyboardZoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/MouseWheelZoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/PinchRotate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction/PinchZoom.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/interaction.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Image.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Tile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/reproj/Tile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/tileurlfunction.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/tilegrid/TileGrid.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/tilegrid.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/Tile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/TileEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/UrlTile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/TileImage.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/XYZ.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/FullScreen.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/OverviewMap.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/ScaleLine.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/ZoomSlider.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control/ZoomToExtent.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/control.js","webpack://NgwOl/../ngw-map/lib/ngw-map.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/@nextgis/ol-map-adapter/lib/ol-map-adapter.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/pbf/index.js","webpack://NgwOl/./src/ngw-ol.ts","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ol.css?f999","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/ol.css","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/css-loader/lib/css-base.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/style-loader/lib/addStyles.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/style-loader/lib/urls.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/OSM.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/quickselect/quickselect.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ieee754/index.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/Feature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/JSONFeature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/MultiLineString.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/MultiPoint.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/center.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/MultiPolygon.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/EsriJSON.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/GeometryCollection.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GeoJSON.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/xml.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/XMLFeature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GMLBase.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/xsd.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GML3.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GML.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GPX.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/TextFeature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/KML.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/IGC.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/Feature.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/MVT.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/XLink.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/XML.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/OWS.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/flip.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/Polyline.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/TopoJSON.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/GML2.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Filter.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/LogicalNary.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/And.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Bbox.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Spatial.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Comparison.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Contains.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/ComparisonBinary.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/During.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/EqualTo.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/GreaterThan.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/GreaterThanOrEqualTo.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Intersects.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/IsBetween.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/IsLike.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/IsNull.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/LessThan.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/LessThanOrEqualTo.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Not.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/NotEqualTo.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Or.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter/Within.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/WFS.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/filter.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/WKT.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/WMSCapabilities.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/WMSGetFeatureInfo.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format/WMTSCapabilities.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/format.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/GeolocationProperty.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Geolocation.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/geodesic.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/Graticule.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/VectorImageTile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/VectorTile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/Shader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/Fragment.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/Vertex.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/circlereplay/defaultshader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/circlereplay/defaultshader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/vec/mat4.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/Replay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/Buffer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/CircleReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/texturereplay/defaultshader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/texturereplay/defaultshader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/ContextEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/webgl/Context.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/TextureReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/ImageReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/geom/flat/topology.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/linestringreplay/defaultshader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/linestringreplay/defaultshader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/LineStringReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/polygonreplay/defaultshader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/polygonreplay/defaultshader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/structs/LinkedList.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/PolygonReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/Atlas.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/style/AtlasManager.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/TextReplay.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/ReplayGroup.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/render/webgl/Immediate.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/defaultmapshader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/defaultmapshader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/Layer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/ImageLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/Map.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/tilelayershader.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/tilelayershader/Locations.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/TileLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/renderer/webgl/VectorLayer.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/WebGLMap.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/index.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/common.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/reproj/Image.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/Image.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/WMSServerType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/ImageWMS.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/uri.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Vector.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/Heatmap.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/layer/VectorTile.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/loadingstrategy.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/VectorEventType.js","webpack://NgwOl/C:/Users/rendr/nextgis/nextgis_frontend_apps/node_modules/ol/source/Vector.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__webpack_exports__","boundingExtent","buffer","clone","closestSquaredDistanceXY","containsCoordinate","containsExtent","containsXY","coordinateRelationship","createEmpty","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","createOrUpdateFromFlatCoordinates","createOrUpdateFromRings","equals","extend","extendCoordinate","extendCoordinates","extendFlatCoordinates","extendRings","extendXY","forEachCorner","getArea","getBottomLeft","getBottomRight","getCenter","getCorner","getEnlargedArea","getForViewAndSize","getHeight","getIntersectionArea","getIntersection","getMargin","getSize","getTopLeft","getTopRight","getWidth","intersects","isEmpty","returnOrUpdate","scaleFromCenter","intersectsSegment","applyTransform","_asserts_js__WEBPACK_IMPORTED_MODULE_0__","_extent_Corner_js__WEBPACK_IMPORTED_MODULE_1__","_extent_Relationship_js__WEBPACK_IMPORTED_MODULE_2__","coordinates","extent","ii","length","opt_extent","slice","x","y","dx","dy","coordinate","extent1","extent2","minX","minY","maxX","maxY","relationship","UNKNOWN","LEFT","RIGHT","BELOW","ABOVE","INTERSECTING","Infinity","flatCoordinates","offset","end","stride","rings","Math","min","max","callback","opt_this","val","area","corner","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x1","x2","x3","y0","y1","y2","y3","intersection","deltaX","deltaY","start","startRel","endRel","startX","startY","endX","endY","slope","transformFn","xs","ys","apply","_boundingExtentXYs","listen","listenOnce","unlisten","unlistenByKey","unlistenAll","_obj_js__WEBPACK_IMPORTED_MODULE_0__","findListener","listeners","listener","opt_setDeleteIndex","listenerObj","bindTo","deleteIndex","getListeners","target","type","listenerMap","ol_lm","undefined","getListenerMap","removeListeners","removeEventListener","boundListener","keys","opt_once","callOnce","addEventListener","evt","bindListener","push","indexOf","splice","ONE","SRC_ALPHA","COLOR_ATTACHMENT0","COLOR_BUFFER_BIT","TRIANGLES","TRIANGLE_STRIP","ONE_MINUS_SRC_ALPHA","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","STREAM_DRAW","STATIC_DRAW","DYNAMIC_DRAW","CULL_FACE","BLEND","STENCIL_TEST","DEPTH_TEST","SCISSOR_TEST","UNSIGNED_BYTE","UNSIGNED_SHORT","UNSIGNED_INT","FLOAT","RGBA","FRAGMENT_SHADER","VERTEX_SHADER","LINEAR","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_2D","TEXTURE0","CLAMP_TO_EDGE","FRAMEBUFFER","getContext","DEBUG","MAX_TEXTURE_SIZE","EXTENSIONS","CONTEXT_IDS","canvas","opt_attributes","context","e","gl","document","createElement","failIfMajorPerformanceCaveat","getParameter","getSupportedExtensions","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","reset","multiply","setFromArray","rotate","scale","translate","compose","invert","tmp_","Array","transform","set","transform1","transform2","a1","b1","c1","d1","e1","f1","a2","b2","c2","d2","e2","f2","a","b","f","angle","dx1","dy1","sx","sy","dx2","dy2","det","mat","determinant","CHANGE","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","ERROR","KEYDOWN","KEYPRESS","LOAD","MOUSEDOWN","MOUSEMOVE","MOUSEOUT","MOUSEUP","MOUSEWHEEL","MSPOINTERDOWN","RESIZE","TOUCHSTART","TOUCHMOVE","TOUCHEND","WHEEL","inherits","childCtor","parentCtor","constructor","getUid","VERSION","uidCounter_","obj","ol_uid","binarySearch","haystack","needle","opt_comparator","mid","cmp","comparator","numberSafeCompareFunction","low","high","found","includes","arr","linearFindNearest","direction","reverseSubArray","begin","tmp","data","extension","isArray","remove","arr1","arr2","len1","stableSort","compareFnc","index","sort","isSorted","opt_func","opt_strict","compare","every","currentVal","res","clamp","cosh","roundUpToPowerOfTwo","squaredSegmentDistance","squaredDistance","solveLinearSystem","toDegrees","toRadians","modulo","lerp","exp","pow","ceil","log","LN2","maxRow","maxEl","abs","absValue","j","coef","k","angleInRadians","PI","angleInDegrees","IDLE","LOADING","LOADED","EMPTY","ABORT","assign","clear","getValues","var_sources","arguments$1","arguments","TypeError","output","source","values","XY","XYZ","XYM","XYZM","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","epsg3857_EPSG3857Projection","Projection","EPSG3857Projection","code","this","units","Units","METERS","global","worldExtent","getPointResolution","point","math","__proto__","proj_Projection","PROJECTIONS","fromEPSG4326","input","opt_output","opt_dimension","dimension","halfSize","tan","epsg3857_toEPSG4326","atan","epsg4326_EXTENT","METERS_PER_UNIT","epsg4326_EPSG4326Projection","EPSG4326Projection","opt_axisOrientation","DEGREES","axisOrientation","metersPerUnit","epsg4326_PROJECTIONS","cache","transforms","transforms_add","destination","sourceCode","getCode","destinationCode","cloneTransform","identityTransform","addProjection","projection","add","addProjections","projections","forEach","proj_get","projectionLike","opt_units","pointResolution","getPointResolutionFunc","getUnits","toEPSG4326","getTransformFromProjections","vertices","sphere","getMetersPerUnit","addEquivalentProjections","addEquivalentTransforms","projections1","projections2","forwardTransform","inverseTransform","projection1","projection2","clearAllProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","addCoordinateTransforms","forward","inverse","sourceProj","destProj","fromLonLat","opt_projection","proj_transform","toLonLat","lonLat","lon","equivalent","equalUnits","sourceProjection","destinationProjection","transformFunc","transforms_get","getTransform","transformExtent","ol_extent","transformWithProjections","addCommon","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineDashOffset","defaultLineJoin","defaultMiterLimit","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","defaultLineWidth","labelCache","checkFont","measureTextHeight","measureTextWidth","rotateAtOffset","resetTransform","drawImage","_css_js__WEBPACK_IMPORTED_MODULE_0__","_dom_js__WEBPACK_IMPORTED_MODULE_1__","_obj_js__WEBPACK_IMPORTED_MODULE_2__","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_3__","_transform_js__WEBPACK_IMPORTED_MODULE_4__","checkedFonts","measureContext","textHeights","interval","referenceWidth","retries","checked","referenceFonts","len","text","isAvailable","font","getMeasureContext","weight","fontWeight","available","referenceFont","measureText","width","check","done","clearInterval","fontSpec","fontFamilies","fontFamily","setInterval","span","heights","height","textContent","style","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","offsetX","offsetY","opacity","image","originX","originY","w","h","alpha","globalAlpha","setTransform","assert","_AssertionError_js__WEBPACK_IMPORTED_MODULE_0__","assertion","errorCode","TRUE","FALSE","VOID","createCanvasContext2D","opt_width","opt_height","outerWidth","element","offsetWidth","getComputedStyle","parseInt","marginLeft","marginRight","outerHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChildren","lastChild","getChangeEventType","_util_js__WEBPACK_IMPORTED_MODULE_0__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Observable_js__WEBPACK_IMPORTED_MODULE_2__","_events_Event_js__WEBPACK_IMPORTED_MODULE_3__","_obj_js__WEBPACK_IMPORTED_MODULE_4__","ObjectEvent","Event","oldValue","BaseObject","Observable","opt_values","values_","setProperties","getKeys","getProperties","notify","eventType","dispatchEvent","PROPERTYCHANGE","opt_silent","unset","changeEventTypeCache","DEFAULT","IMAGE","TEXT","ANIMATING","INTERACTING","CLASS_HIDDEN","CLASS_SELECTABLE","CLASS_UNSELECTABLE","CLASS_UNSUPPORTED","CLASS_CONTROL","CLASS_COLLAPSED","getFontFamilies","family","split","_events_EventType_js__WEBPACK_IMPORTED_MODULE_0__","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","FIREFOX","SAFARI","WEBKIT","MAC","DEVICE_PIXEL_RATIO","CANVAS_LINE_DASH","GEOLOCATION","TOUCH","POINTER","MSPOINTER","ua","navigator","userAgent","toLowerCase","devicePixelRatio","has","setLineDash","circular","fromExtent","fromCircle","makeRegular","_array_js__WEBPACK_IMPORTED_MODULE_0__","_extent_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_2__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_3__","_geom_LinearRing_js__WEBPACK_IMPORTED_MODULE_4__","_geom_Point_js__WEBPACK_IMPORTED_MODULE_5__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_6__","_sphere_js__WEBPACK_IMPORTED_MODULE_7__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_8__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_contains_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_12__","_geom_flat_interiorpoint_js__WEBPACK_IMPORTED_MODULE_13__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_14__","_geom_flat_orient_js__WEBPACK_IMPORTED_MODULE_15__","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_16__","_math_js__WEBPACK_IMPORTED_MODULE_17__","Polygon","SimpleGeometry","opt_layout","opt_ends","ends_","flatInteriorPointRevision_","flatInteriorPoint_","maxDelta_","maxDeltaRevision_","orientedRevision_","orientedFlatCoordinates_","setFlatCoordinates","setCoordinates","appendLinearRing","linearRing","getFlatCoordinates","changed","layout","closestPointXY","closestPoint","minSquaredDistance","getExtent","getRevision","sqrt","getOrientedFlatCoordinates","getCoordinates","opt_right","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","ends","linearRings","getSimplifiedGeometryInternal","squaredTolerance","simplifiedFlatCoordinates","simplifiedEnds","getType","intersectsExtent","setLayout","radius","opt_n","opt_sphereRadius","circle","opt_sides","opt_angle","sides","getStride","getLayout","arrayLength","polygon","getRadius","startAngle","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_closest_js__WEBPACK_IMPORTED_MODULE_5__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_6__","_geom_flat_inflate_js__WEBPACK_IMPORTED_MODULE_7__","_geom_flat_interpolate_js__WEBPACK_IMPORTED_MODULE_8__","_geom_flat_intersectsextent_js__WEBPACK_IMPORTED_MODULE_9__","_geom_flat_length_js__WEBPACK_IMPORTED_MODULE_10__","_geom_flat_segments_js__WEBPACK_IMPORTED_MODULE_11__","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_12__","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","forEachSegment","getCoordinateAtM","opt_extrapolate","extrapolate","getCoordinateAt","fraction","opt_dest","getLength","getFlatMidpoint","_extent_js__WEBPACK_IMPORTED_MODULE_0__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_1__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_deflate_js__WEBPACK_IMPORTED_MODULE_3__","_math_js__WEBPACK_IMPORTED_MODULE_4__","Point","computeExtent","FEET","PIXELS","TILE_PIXELS","USFEET","transform2D","dest","anchor","anchorX","anchorY","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_1__","_Object_js__WEBPACK_IMPORTED_MODULE_2__","Property","CollectionEvent","opt_element","Collection","opt_array","opt_options","options","unique_","unique","array_","assertUnique_","updateLength_","pop","array","getArray","item","insertAt","elem","ADD","removeAt","prev","REMOVE","setAt","opt_except","stopPropagation","propagationStopped","preventDefault","createStyleFunction","_events_js__WEBPACK_IMPORTED_MODULE_1__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_2__","_Object_js__WEBPACK_IMPORTED_MODULE_3__","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_4__","_style_Style_js__WEBPACK_IMPORTED_MODULE_5__","Feature","opt_geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","setId","id","styles","TILE","VECTOR_TILE","VECTOR","POSTCOMPOSE","PRECOMPOSE","RENDER","RENDERCOMPLETE","easeIn","easeOut","inAndOut","linear","getStrideForLayout","transformGeom2D","_functions_js__WEBPACK_IMPORTED_MODULE_0__","_geom_Geometry_js__WEBPACK_IMPORTED_MODULE_2__","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_3__","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_4__","_obj_js__WEBPACK_IMPORTED_MODULE_5__","Geometry","getFirstCoordinate","getLastCoordinate","getSimplifiedGeometry","simplifiedGeometryRevision","simplifiedGeometryCache","simplifiedGeometryMaxMinSquaredTolerance","toString","simplifiedGeometry","nesting","getLayoutForStride","opt_sy","opt_anchor","simpleGeometry","OPACITY","VISIBLE","Z_INDEX","MAX_RESOLUTION","MIN_RESOLUTION","SOURCE","asString","asArray","_math_js__WEBPACK_IMPORTED_MODULE_1__","HEX_COLOR_RE_","NAMED_COLOR_RE_","color","fromString","cacheSize","g","exec","el","rgb","fromNamed","hasAlpha","substr","normalize","map","Number","fromStringInternal_","ORDER","TEXT_ALIGN","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_0__","right","top","middle","hanging","alphabetic","ideographic","bottom","CENTER","RESOLUTION","ROTATION","visibleAtResolution","_events_js__WEBPACK_IMPORTED_MODULE_0__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_1__","_util_js__WEBPACK_IMPORTED_MODULE_2__","_layer_Base_js__WEBPACK_IMPORTED_MODULE_4__","_layer_Property_js__WEBPACK_IMPORTED_MODULE_5__","_obj_js__WEBPACK_IMPORTED_MODULE_6__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_source_State_js__WEBPACK_IMPORTED_MODULE_8__","Layer","BaseLayer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","setMap","handleSourcePropertyChange_","setSource","getLayersArray","getLayerStatesArray","opt_states","states","getLayerState","getSource","getSourceState","getState","UNDEFINED","handleSourceChange_","layerState","managed","getZIndex","zIndex","frameState","layerStatesArray","layerStates","render","visible","minResolution","maxResolution","ERROR_THRESHOLD","ENABLE_RASTER_REPROJECTION","_MapEventType_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_3__","_events_js__WEBPACK_IMPORTED_MODULE_4__","Control","target_","map_","listenerKeys","setTarget","disposeInternal","getMap","getOverlayContainerStopEvent","POSTRENDER","getElementById","inflateCoordinates","opt_coordinates","inflateCoordinatesArray","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","degreesToStringHDMS","_math_js__WEBPACK_IMPORTED_MODULE_0__","_string_js__WEBPACK_IMPORTED_MODULE_1__","delta","hemispheres","degrees","opt_fractionDigits","normalizedDegrees","dflPrecision","precision","deg","floor","sec","charAt","coordinate1","coordinate2","cosAngle","sinAngle","linearRingIsClockwise","edge","linearRingIsOriented","isClockwise","linearRingsAreOriented","orientLinearRings","orientLinearRingsArray","defaultOrder","getSquaredTolerance","getTolerance","renderFeature","_ImageState_js__WEBPACK_IMPORTED_MODULE_1__","_geom_GeometryType_js__WEBPACK_IMPORTED_MODULE_2__","_render_ReplayType_js__WEBPACK_IMPORTED_MODULE_3__","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","replayGroup","feature","imageStyle","getImage","getImageState","imageReplay","getReplay","setImageStyle","addDeclutter","drawPoint","textStyle","getText","textReplay","setTextStyle","drawText","strokeStyle","getStroke","lineStringReplay","setFillStrokeStyle","drawLineString","fillStyle","getFill","polygonReplay","drawPolygon","MultiPoint","drawMultiPoint","MultiLineString","drawMultiLineString","MultiPolygon","drawMultiPolygon","GeometryCollection","geometries","getGeometriesArray","geometryRenderer","Circle","circleReplay","drawCircle","feature1","feature2","pixelRatio","tolerance","thisArg","loading","imageState","unlistenImageChange","load","listenImageChange","getGeometryFunction","getRenderer","renderGeometry","getGeometries","replay","drawCustom","renderFeatureInternal","LAYERGROUP","SIZE","TARGET","VIEW","asColorLike","_color_js__WEBPACK_IMPORTED_MODULE_0__","CanvasPattern","CanvasGradient","isColorLike","FRACTION","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","deflateMultiCoordinatesArray","opt_endss","z","opt_tileCoord","getKeyZXY","getKey","tileCoord","fromKey","hash","withinExtentAndZ","tileGrid","getMinZoom","getMaxZoom","tileRange","getTileRangeForExtentAndZ","getFullTileRange","BOTTOM_CENTER","CENTER_LEFT","CENTER_CENTER","CENTER_RIGHT","TOP_CENTER","_Object_js__WEBPACK_IMPORTED_MODULE_0__","_functions_js__WEBPACK_IMPORTED_MODULE_2__","_geom_flat_transform_js__WEBPACK_IMPORTED_MODULE_3__","_proj_js__WEBPACK_IMPORTED_MODULE_4__","_proj_Units_js__WEBPACK_IMPORTED_MODULE_5__","_transform_js__WEBPACK_IMPORTED_MODULE_6__","tmpTransform","extent_","extentRevision_","getClosestPoint","opt_closestPoint","NaN","intersectsCoordinate","simplify","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","hasArea","ratio","opt_size","toSize","maxSquaredDelta","arrayMaxSquaredDelta","multiArrayMaxSquaredDelta","assignClosestPoint","assignClosestArrayPoint","assignClosestMultiArrayPoint","assignClosest","offset1","offset2","i$1","squaredDelta","maxDelta","isRing","opt_tmpPoint","tmpPoint","Stroke","color_","lineCap_","lineCap","lineDash_","lineDash","lineDashOffset_","lineDashOffset","lineJoin_","lineJoin","miterLimit_","miterLimit","width_","checksum_","getColor","getLineCap","getLineDash","getLineDashOffset","getLineJoin","getMiterLimit","setColor","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","getChecksum","_Disposable_js__WEBPACK_IMPORTED_MODULE_0__","Target","Disposable","pendingRemovals_","dispatching_","listeners_","event","propagate","pendingRemovals","hasListener","opt_type","READY","JSON","XML","linearRingContainsExtent","linearRingContainsXY","linearRingsContainsXY","linearRingssContainsXY","wn","_color_js__WEBPACK_IMPORTED_MODULE_1__","Fill","douglasPeucker","douglasPeuckerArray","snap","quantizeArray","quantizeMultiArray","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","round","quantize","simplifiedEndss","MapBrowserPointerEvent","MapBrowserEvent","pointerEvent","opt_dragging","opt_frameState","originalEvent","HYBRID","TileRange","contains","containsTileRange","MOVESTART","MOVEEND","RegularShape","CircleStyle","points","fill","stroke","atlasManager","atlasManager_","setOpacity","getOpacity","setScale","getScale","setRadius","radius_","render_","ImageStyle","rotateWithView","checksums_","canvas_","hitDetectionCanvas_","fill_","origin_","points_","radius1","radius2_","radius2","angle_","stroke_","anchor_","size_","imageSize_","hitDetectionImageSize_","getPoints","getRadius2","getAngle","getRotation","getRotateWithView","getAnchor","getHitDetectionImage","getImageSize","getHitDetectionImageSize","ImageState","getOrigin","imageSize","strokeWidth","colorlike","renderOptions","dom","draw_","createHitDetectionCanvas_","renderHitDetectionCallback","hasCustomHitDetectionImage","drawHitDetectionCanvas_","info","hitImage","angle0","radiusC","beginPath","arc","lineTo","lineWidth","closePath","strokeChecksum","fillChecksum","checksum","toFunction","createDefaultStyle","Style","geometry_","geometryFunction_","defaultGeometryFunction","image_","renderer_","renderer","text_","zIndex_","styleFunction","asserts","setRenderer","setFill","setImage","setStroke","setText","setZIndex","defaultStyles","padNumber","number","opt_precision","numberString","toFixed","decimal","join","compareVersions","v1","v2","s1","s2","n1","n2","disposed_","dispose","_TileState_js__WEBPACK_IMPORTED_MODULE_0__","_easing_js__WEBPACK_IMPORTED_MODULE_1__","_events_Target_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_3__","Tile","EventTarget","state","interimTile","transition_","transition","transitionStarts_","getInterimTile","tile","refreshInterimChain","getTileCoord","setState","getAlpha","time","inTransition","endTransition","disable","none","createSnapToN","createSnapToZero","theta","opt_tolerance","PRELOAD","USE_INTERIM_TILES_ON_ERROR","_proj_Units_js__WEBPACK_IMPORTED_MODULE_0__","code_","units_","worldExtent_","axisOrientation_","global_","canWrapX_","getPointResolutionFunc_","defaultTileGrid_","metersPerUnit_","canWrapX","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","setExtent","setWorldExtent","setGetPointResolution","func","interpolatePoint","lineStringCoordinateAtM","lineStringsCoordinateAtM","pointX","pointY","cumulativeLengths","lo","hi","m0","interpolate","_events_Target_js__WEBPACK_IMPORTED_MODULE_0__","ImageBase","pixelRatio_","getPixelRatio","getResolution","twiceArea","linearRingss","intersectsLineString","intersectsLineStringArray","intersectsLinearRingArray","intersectsLinearRingMultiArray","_flat_contains_js__WEBPACK_IMPORTED_MODULE_1__","_flat_segments_js__WEBPACK_IMPORTED_MODULE_2__","coordinatesExtent","point1","point2","intersectsLinearRing","MapEvent","VectorContext","drawGeometry","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","opt_declutterGroup","RenderEvent","opt_vectorContext","opt_context","opt_glContext","vectorContext","glContext","calculateSourceResolution","_dom_js__WEBPACK_IMPORTED_MODULE_0__","_math_js__WEBPACK_IMPORTED_MODULE_2__","_proj_js__WEBPACK_IMPORTED_MODULE_3__","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","distance","targetExtent","triangulation","sources","gutter","opt_renderEdges","sourceDataExtent","src","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","u2","sourceNumericalShiftX","sourceNumericalShiftY","augmentedMatrix","affineCoefs","save","p0","p1","p2","moveTo","clip","restore","_geom_GeometryLayout_js__WEBPACK_IMPORTED_MODULE_1__","_geom_SimpleGeometry_js__WEBPACK_IMPORTED_MODULE_3__","_geom_flat_area_js__WEBPACK_IMPORTED_MODULE_4__","_geom_flat_simplify_js__WEBPACK_IMPORTED_MODULE_8__","LinearRing","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","getInteriorPointOfArray","getInteriorPointsOfMultiArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","segmentLength","isNaN","interiorPoints","_obj_js__WEBPACK_IMPORTED_MODULE_1__","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","rbush__WEBPACK_IMPORTED_MODULE_1__","rbush__WEBPACK_IMPORTED_MODULE_1___default","_extent_js__WEBPACK_IMPORTED_MODULE_2__","_obj_js__WEBPACK_IMPORTED_MODULE_3__","RBush","opt_maxEntries","rbush_","items_","insert","extents","items","uid","update","bbox","getAll","all","getInExtent","search","forEach_","forEachInExtent","result","concat","rbush","AssertionError","Error","message","_events_Target_js__WEBPACK_IMPORTED_MODULE_1__","revision_","on","once","un","_structs_LRUCache_js__WEBPACK_IMPORTED_MODULE_0__","_tilecoord_js__WEBPACK_IMPORTED_MODULE_1__","TileCache","LRUCache","opt_highWaterMark","expireCache","usedTiles","canExpireCache","peekLast","zKey","pruneExceptNewestZ","peekFirstKey","browserEvent","pixel","getEventPixel","getCoordinateFromPixel","dragging","_Collection_js__WEBPACK_IMPORTED_MODULE_1__","_CollectionEventType_js__WEBPACK_IMPORTED_MODULE_2__","_MapBrowserEvent_js__WEBPACK_IMPORTED_MODULE_3__","_MapBrowserEventHandler_js__WEBPACK_IMPORTED_MODULE_4__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_5__","_MapEvent_js__WEBPACK_IMPORTED_MODULE_6__","_MapEventType_js__WEBPACK_IMPORTED_MODULE_7__","_MapProperty_js__WEBPACK_IMPORTED_MODULE_8__","_render_EventType_js__WEBPACK_IMPORTED_MODULE_9__","_Object_js__WEBPACK_IMPORTED_MODULE_10__","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_11__","_TileQueue_js__WEBPACK_IMPORTED_MODULE_12__","_View_js__WEBPACK_IMPORTED_MODULE_13__","_ViewHint_js__WEBPACK_IMPORTED_MODULE_14__","_asserts_js__WEBPACK_IMPORTED_MODULE_15__","_dom_js__WEBPACK_IMPORTED_MODULE_16__","_events_js__WEBPACK_IMPORTED_MODULE_17__","_events_Event_js__WEBPACK_IMPORTED_MODULE_18__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_19__","_extent_js__WEBPACK_IMPORTED_MODULE_20__","_functions_js__WEBPACK_IMPORTED_MODULE_21__","_has_js__WEBPACK_IMPORTED_MODULE_22__","_layer_Group_js__WEBPACK_IMPORTED_MODULE_23__","_size_js__WEBPACK_IMPORTED_MODULE_24__","_structs_PriorityQueue_js__WEBPACK_IMPORTED_MODULE_25__","_transform_js__WEBPACK_IMPORTED_MODULE_26__","PluggableMap","optionsInternal","keyboardEventTarget","controls","interactions","overlays","layerGroup","layers","view","createOptionsInternal","maxTilesLoading_","maxTilesLoading","loadTilesWhileAnimating_","loadTilesWhileAnimating","loadTilesWhileInteracting_","loadTilesWhileInteracting","animationDelayKey_","animationDelay_","renderFrame_","Date","now","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","className","overflow","msTouchAction","touchAction","overlayContainer_","overlayContainerStopEvent_","overlayEvents","mapBrowserEventHandler_","moveTolerance","handleMapBrowserEvent","keyboardEventTarget_","keyHandlerKeys_","handleBrowserEvent","overlays_","overlayIdIndex_","createRenderer","handleResize_","focus_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","skippedFeatureUids_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","control","interaction","addOverlayInternal_","addControl","getControls","addInteraction","getInteractions","addLayer","layer","getLayerGroup","getLayers","addOverlay","overlay","getOverlays","cancelAnimationFrame","forEachFeatureAtPixel","hitTolerance","layerFilter","forEachFeatureAtCoordinate","getFeaturesAtPixel","features","forEachLayerAtPixel","hasFeatureAtPixel","hasFeatureAtCoordinate","getEventCoordinate","viewportPosition","getBoundingClientRect","eventPosition","changedTouches","clientX","clientY","getTarget","getTargetElement","pixelToCoordinateTransform","getOverlayById","getPixelFromCoordinate","coordinateToPixelTransform","getView","getViewport","getOverlayContainer","tileSourceKey","tileCenter","tileResolution","wantedTiles","focus","mapBrowserEvent","interactionsArray","getActive","handleEvent","handlePostRender","tileQueue","maxTotalLoading","maxNewLoads","hints","viewHints","getTilesLoading","loadMoreTiles","animate","getLoading","dispatchRenderEvent","postRenderFunctions","targetElement","updateSize","removeLayerRenderers","handleViewPropertyChanged_","setAttribute","isRendered","renderSync","requestAnimationFrame","removeControl","removeInteraction","removeLayer","removeOverlay","viewState","previousFrameState","isDef","getHints","skippedFeatureUids","renderFrame","setTimeout","setLayerGroup","setSize","setView","skipFeature","featureUid","computedStyle","parseFloat","unskipFeature","_Object_js__WEBPACK_IMPORTED_MODULE_1__","_proj_js__WEBPACK_IMPORTED_MODULE_2__","_source_State_js__WEBPACK_IMPORTED_MODULE_3__","Source","projection_","attributions_","adaptAttributions_","attributions","state_","wrapX_","wrapX","attributionLike","getAttributions","getProjection","getResolutions","getWrapX","refresh","setAttributions","highWaterMark","count_","entries_","oldest_","newest_","containsKey","entry","value_","key_","newer","older","peekLastKey","replace","prune","_ObjectEventType_js__WEBPACK_IMPORTED_MODULE_4__","_asserts_js__WEBPACK_IMPORTED_MODULE_5__","_events_js__WEBPACK_IMPORTED_MODULE_6__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_7__","_extent_js__WEBPACK_IMPORTED_MODULE_8__","_layer_Base_js__WEBPACK_IMPORTED_MODULE_9__","_obj_js__WEBPACK_IMPORTED_MODULE_10__","_source_State_js__WEBPACK_IMPORTED_MODULE_11__","LAYERS","LayerGroup","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","handleLayersAdd_","handleLayersRemove_","layersArray","collectionEvent","pos","ownLayerState","default","quickselect","maxEntries","format","_maxEntries","_minEntries","_initFormat","findItem","equalsFn","calcBBox","toBBox","distBBox","children","destNode","createNode","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","enlargedArea","intersectionArea","multiSelect","_all","childBBox","nodesToSearch","collides","_build","_splitRoot","tmpNode","_insert","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","right2","right3","N2","N1","_chooseSubtree","level","targetNode","enlargement","minArea","minEnlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","bbox1","bbox2","overlap","minOverlap","_allDistMargin","leftBBox","rightBBox","siblings","compareArr","Function","_style_Fill_js__WEBPACK_IMPORTED_MODULE_0__","_style_TextPlacement_js__WEBPACK_IMPORTED_MODULE_1__","Text","font_","rotation_","rotateWithView_","scale_","textAlign_","textAlign","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","padding_","getFont","getPlacement","getMaxAngle","getOverflow","getTextAlign","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRotation","setTextAlign","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","sortByZIndex","_Disposable_js__WEBPACK_IMPORTED_MODULE_1__","_events_js__WEBPACK_IMPORTED_MODULE_2__","_extent_js__WEBPACK_IMPORTED_MODULE_4__","_functions_js__WEBPACK_IMPORTED_MODULE_5__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_6__","_style_IconImageCache_js__WEBPACK_IMPORTED_MODULE_7__","_transform_js__WEBPACK_IMPORTED_MODULE_8__","MapRenderer","layerRenderers_","layerRendererListeners_","layerRendererConstructors_","registerLayerRenderers","constructors","getLayerRendererConstructors","calculateMatrices2D","removeLayerRendererByKey_","thisArg2","viewResolution","translatedCoordinate","projectionExtent","worldWidth","layerRenderer","getLayerRenderer","layerKey","candidate","handleLayerRendererChange_","getLayerRendererByKey","getLayerRenderers","removeUnusedLayerRenderers_","scheduleExpireIconCache","scheduleRemoveUnusedLayerRenderers","expireIconCache","expire","state1","state2","IconImage_IconImage","IconImage","crossOrigin","hitDetectionImage_","Image","imageListenerKeys_","imageState_","src_","tainting_","determineTainting_","getImageData","dispatchChangeEvent_","EventType","handleImageError_","unlistenImage_","handleImageLoad_","replaceColor_","fillRect","getSrc","events","ctx","imgData","putImageData","Icon_Icon","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","img","imgSize","util","ol_color","iconImage_","iconImage","IconImageCache","offset_","offsetOrigin_","offsetOrigin","setAnchor","iconImageSize","getDistance","DEFAULT_RADIUS","opt_radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","bearing","lon1","dByR","lat","asin","shared","cache_","cacheSize_","maxCacheSize_","maxCacheSize","EventSource_EventSource","dispatcher","mapping","mapping_","getEvents","getHandlerForEvent","pointer_EventSource","POINTER_ID","POINTER_TYPE","mousedown","inEvent","isEventSimulatedFromTouch_","pointerMap","cancel","prepareEvent","down","mousemove","move","mouseup","button","up","cleanupMouse","mouseover","enterOver","mouseout","leaveOut","cloneEvent","pd","pointerId","isPrimary","pointerType","pointer_MouseSource","EventSource","MouseSource","lastTouches","lts","POINTER_TYPES","msPointerDown","prepareEvent_","msPointerMove","msPointerUp","cleanup","msPointerOut","msPointerOver","msPointerCancel","msLostPointerCapture","makeEvent","msGotPointerCapture","pointer_MsSource","MsSource","MSPointerDown","MSPointerMove","MSPointerUp","MSPointerOut","MSPointerOver","MSPointerCancel","MSGotPointerCapture","MSLostPointerCapture","pointerDown","fireNativeEvent","pointerMove","pointerUp","pointerOut","pointerOver","pointerCancel","lostPointerCapture","gotPointerCapture","pointer_NativeSource","NativeSource","pointerdown","pointermove","pointerup","pointerout","pointerover","pointercancel","gotpointercapture","lostpointercapture","HAS_BUTTONS","PointerEvent","opt_eventDict","eventDict","buttons","getButtons_","pressure","getPressure_","bubbles","cancelable","detail","screenX","screenY","ctrlKey","altKey","shiftKey","metaKey","relatedTarget","tiltX","tiltY","hwTimestamp","which","ev","MouseEvent","pointer_PointerEvent","touchstart","vacuumTouches_","setPrimaryTouch_","dedupSynthMouse_","clickCount_","processTouches_","overDown_","touchmove","moveOverOut_","touchend","upOut_","touchcancel","cancelOut_","pointer_TouchSource","TouchSource","mouseSource","firstTouchId_","resetId_","dedupTimeout_","isPrimaryTouch_","inTouch","identifier","cancelResetClickCount_","removePrimaryPointer_","inPointer","resetClickCount_","resetClickCountHandler_","clearTimeout","touchToPointer_","webkitRadiusX","radiusX","webkitRadiusY","radiusY","webkitForce","force","inFunction","touches","pointer","findTouch_","touchList","searchId","out","outTarget","over","enter","outEvent","leave","cleanUpPointer_","lt","CLONE_PROPS","PointerEventHandler_PointerEventHandler","PointerEventHandler","element_","eventMap_","eventSourceList_","registerSources","registerSource","register_","newEvents","handler","eventSource","addEvents_","unregister_","removeEvents_","eventHandler_","eventName","ol_events","eventCopy","fireEvent","contains_","container","contained","inType","wrapMouseEvent","_ImageBase_js__WEBPACK_IMPORTED_MODULE_0__","ImageWrapper","imageLoadFunction","imageLoadFunction_","_Tile_js__WEBPACK_IMPORTED_MODULE_0__","_TileState_js__WEBPACK_IMPORTED_MODULE_1__","_dom_js__WEBPACK_IMPORTED_MODULE_2__","_events_js__WEBPACK_IMPORTED_MODULE_3__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_4__","ImageTile","tileLoadFunction","tileLoadFunction_","getBlankImage","naturalWidth","naturalHeight","ImageCanvas","opt_loader","loader_","error_","getError","handleLoad_","err","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","duration","defaults","_Collection_js__WEBPACK_IMPORTED_MODULE_0__","_Attribution_js__WEBPACK_IMPORTED_MODULE_1__","_Rotate_js__WEBPACK_IMPORTED_MODULE_2__","_Zoom_js__WEBPACK_IMPORTED_MODULE_3__","zoom","zoomOptions","rotateOptions","attribution","attributionOptions","_control_Control_js__WEBPACK_IMPORTED_MODULE_2__","_css_js__WEBPACK_IMPORTED_MODULE_3__","_easing_js__WEBPACK_IMPORTED_MODULE_4__","Zoom","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","title","createTextNode","handleClick_","outElement","cssClasses","duration_","zoomByDelta_","currentResolution","newResolution","constrainResolution","getAnimating","cancelAnimations","easing","setResolution","_control_Control_js__WEBPACK_IMPORTED_MODULE_0__","_css_js__WEBPACK_IMPORTED_MODULE_1__","_easing_js__WEBPACK_IMPORTED_MODULE_2__","Rotate","label","label_","classList","tipLabel","callResetNorth_","resetNorth","autoHide_","autoHide","resetNorth_","mapEvent","msTransform","webkitTransform","_control_Control_js__WEBPACK_IMPORTED_MODULE_1__","_css_js__WEBPACK_IMPORTED_MODULE_2__","_events_EventType_js__WEBPACK_IMPORTED_MODULE_5__","Attribution","ulElement_","collapsed_","collapsed","collapsible_","collapsible","collapseLabel","collapseLabel_","activeLabel","renderedAttributions_","renderedVisible_","getSourceAttributions_","lookup","visibleAttributions","attributionGetter","updateElement_","display","innerHTML","handleToggle_","toggle","getCollapsible","setCollapsible","setCollapsed","getCollapsed","_has_js__WEBPACK_IMPORTED_MODULE_0__","_MapBrowserEventType_js__WEBPACK_IMPORTED_MODULE_1__","_MapBrowserPointerEvent_js__WEBPACK_IMPORTED_MODULE_2__","_events_Target_js__WEBPACK_IMPORTED_MODULE_4__","_pointer_EventType_js__WEBPACK_IMPORTED_MODULE_5__","_pointer_PointerEventHandler_js__WEBPACK_IMPORTED_MODULE_6__","MapBrowserEventHandler","clickTimeoutId_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerEventHandler_","documentPointerEventHandler_","pointerdownListenerKey_","handlePointerDown_","relayedListenerKey_","relayEvent_","emulateClick_","newEvent","updateActivePointers_","handlePointerUp_","isMouseActionButton_","handlePointerMove_","isMoving_","TileQueue","tilePriorityFunction","tileChangeCallback","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","handleTileChange","tileKey","newLoads","abortedTiles","_MapEventType_js__WEBPACK_IMPORTED_MODULE_0__","_OverlayPositioning_js__WEBPACK_IMPORTED_MODULE_2__","_dom_js__WEBPACK_IMPORTED_MODULE_4__","_events_js__WEBPACK_IMPORTED_MODULE_5__","_extent_js__WEBPACK_IMPORTED_MODULE_6__","ELEMENT","MAP","OFFSET","POSITION","POSITIONING","Overlay","insertFirst","stopEvent","autoPan","autoPanAnimation","autoPanMargin","rendered","bottom_","left_","right_","top_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","insertBefore","childNodes","panIntoView","mapRect","getRect","overlayRect","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","box","pageXOffset","pageYOffset","setVisible","mapSize","updateRenderedPosition","getOptions","Immediate","CanvasImmediateRenderer","viewRotation","context_","transform_","viewRotation_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textScale_","textFillState_","textStrokeState_","textState_","pixelCoordinates_","tmpLocalTransform_","ol_transform","drawImages_","pixelCoordinates","flat_transform","localTransform","centerX","centerY","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","GeometryType","flatMidpoint","geometryExtent","flatMidpoints","getFlatMidpoints","flatInteriorPoint","getEndss","flatInteriorPoints","getFlatInteriorPoints","fillState","contextFillState","strokeState","contextStrokeState","textState","contextTextState","render_canvas","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","imageAnchor","imageImage","imageOrigin","textFillStyle","textFillStyleColor","textStrokeStyle","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textOffsetX","textOffsetY","textRotateWithView","textRotation","textScale","textText","textTextAlign","textTextBaseline","render_VectorContext","layerRendererConstructors","canvas_Map","CanvasMapRenderer","css","composeEvent","clearRect","renderer_Map","sourceState","State","prepareFrame","composeFrame","numLayers","forEachLayerAtCoordinate","ctor","canvas_Layer","LayerRenderer","CanvasLayerRenderer","renderedResolution","topLeft","topRight","bottomRight","bottomLeft","dispatchComposeEvent_","opt_transform","getLayer","functions","postCompose","preCompose","IntermediateCanvas","IntermediateCanvasRenderer","coordinateToCanvasPixelTransform","hitCanvasContext_","clipped","imageTransform","getImageTransform","dw","dh","ol_coordinate","imageData","ImageLayer_CanvasImageLayerRenderer","CanvasImageLayerRenderer","imageLayer","imageTransform_","skippedFeatures_","vectorRenderer_","LayerType","viewCenter","imageSource","vectorRenderer","renderedExtent","ViewHint","common","skippedFeatures","imageFrameState","newSkippedFeatures","replayGroupChanged","loadImage","imageExtent","imageResolution","imagePixelRatio","getRenderMode","VectorRenderType","mapRenderer","ImageLayer","TileLayer_CanvasTileLayerRenderer","CanvasTileLayerRenderer","tileLayer","opt_noContext","oversampling_","renderedExtent_","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","zDirection","isDrawableTile_","tileState","useInterimTilesOnError","getUseInterimTilesOnError","TileState","getTile","getPreload","tileSource","sourceRevision","getTileGridForProjection","getZForResolution","oversampling","getTileRangeExtent","tilePixelRatio","getTilePixelRatio","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","animatingOrInteracting","tmpTileRange","ol_util","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","tilePixelSize","getTilePixelSize","currentScale","currentTilePixelSize","currentZ","tileExtent","tileGutter","tilesToDraw","zs","tileCoordKey","getGutterForProjection","getTileCoordExtent","drawTileImage","updateUsedTiles","manageTilePyramid","scheduleExpireCache","getOpaque","alphaChanged","TileLayer","drawTextOnPath","measure","startM","previousAngle","reverse","numChars","segmentM","chunk","chunkLength","char","charLength","charM","segmentPos","unshift","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","Instruction_fillInstruction","Instruction_strokeInstruction","beginPathInstruction","closePathInstruction","canvas_Instruction","Replay_tmpExtent","Replay_CanvasReplay","CanvasReplay","maxExtent","overlaps","declutterTree","maxLineWidth","alignFill_","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","coordinateCache_","renderedTransform_","hitDetectionInstructions","replayTextBackground_","p3","p4","fillInstruction","strokeInstruction","setStrokeStyle_","replayImage_","declutterGroup","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","strokePadding","declutterArgs","applyPixelRatio","dashArray","dash","appendFlatCoordinates","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastCoord","nextCoord","skipped","Relationship","drawCustomCoordinates_","replayEnds","replayEnd","beginGeometry","replayEndss","replayBegin","myEnds","inflate","endGeometry","origin","repeatSize","instruction","renderDeclutter_","groupCount","declutterData","replay_","skippedFeaturesHash","featureCallback","opt_hitExtent","dd","prevX","prevY","roundX","roundY","skipFeatures","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","batchSize","fn","coords","baseline","fillKey","strokeKey","textKey","pathLength","flat_length","textLength","textStates","parts","render_replay","cc","chars","part","replayHitDetection","opt_featureCallback","reverseHitDetectionInstructions","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","finish","Replay","ImageReplay","CanvasImageReplay","declutterGroup_","anchorX_","anchorY_","height_","opacity_","originX_","originY_","drawCoordinates_","myBegin","hitDetectionImage","LineStringReplay","CanvasLineStringReplay","drawFlatCoordinates_","moveToLineToInstruction","lastStroke","PolygonReplay","CanvasPolygonReplay","drawFlatCoordinatess_","numEnds","setFillStrokeStyles_","circleInstruction","matchingChunk","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","acos","BATCH_CONSTRUCTORS","Default","CanvasTextReplay","labels_","fillStates","strokeStates","textKey_","fillKey_","strokeKey_","widths_","geometryType","TextPlacement","LINE","flatEnd","flatOffset","oo","range","drawChars_","drawTextImage_","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","ReplayGroup_CanvasReplayGroup","ReplayGroup","CanvasReplayGroup","opt_renderBuffer","declutterTree_","tolerance_","maxExtent_","overlaps_","resolution_","renderBuffer_","replaysByZIndex_","hitDetectionContext_","hitDetectionTransform_","group","declutter","flatClipCoords","getClipCoords","hasReplays","replays","candidates","replayKey","declutterReplays","hitExtent","contextSize","declutteredFeatures","replayType","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","ReplayType","zIndexKey","Constructor","getReplays","opt_replayTypes","opt_declutterReplays","replayTypes","render_ReplayGroup","0","canvas_ReplayGroup","VectorLayer_CanvasVectorLayerRenderer","CanvasVectorLayerRenderer","vectorLayer","getDeclutter","rbush_default","dirty_","renderedRevision_","renderedResolution_","renderedRenderOrder_","replayGroup_","events_EventType","handleFontsChanged_","vectorSource","clipExtent","replayContext","drawOffsetX","drawOffsetY","transparentLayer","hasRenderListeners","drawWidth","drawHeight","drawSize","world","mainContextAlpha","getVisible","handleStyleImageChange_","renderIfReadyAndVisible","animating","interacting","updateWhileAnimating","getUpdateWhileAnimating","updateWhileInteracting","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","vector","getOverlaps","loadFeatures","dirty","forEachFeatureInExtent","VectorLayer","IMAGE_REPLAYS","hybrid","VECTOR_REPLAYS","VectorTileLayer_CanvasVectorTileLayerRenderer","CanvasVectorTileLayerRenderer","renderedLayerRevision_","tmpTransform_","VectorTileRenderType","createReplayGroup_","renderTileImage_","layerRevision","renderMode","this$1","revision","renderOrder","replayState","getReplayState","renderedRenderOrder","sourceTileGrid","getTileGrid","zIndexKeys","loop","tt","sourceTile","tileKeys","sourceTileCoord","sourceTileExtent","sharedExtent","bufferedExtent","tileProjection","reproject","proj","setProjection","getFeatures","setReplayGroup","getReplayGroup","getReplayTransform_","renderResolution","tiles","clips","worldOffset","currentClip","zz","replayData","replayDeclutter","renderedTileRevision","wrappedTileCoord","pixelScale","VectorTileLayer","Map_Map","Map","ol_PluggableMap","DEFAULT_MIN_ZOOM","View_View","View","hints_","animations_","updateAnimationKey_","updateAnimations_","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","resolutions","power","createSnapToResolutions","defaultMaxResolution","defaultMinResolution","opt_maxLevel","oldLevel","newLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","minZoom_","centerConstraint","createExtent","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","rotationconstraint","createRotationConstraint","constraints_","options_","getUpdatedOptions_","newOptions","getZoom","var_args","animationCount","setCenter","setZoom","animationCallback","series","animation","complete","sourceRotation","targetRotation","isNoopAnimation","setHint","getInteracting","more","seriesComplete","elapsed","progress","calculateCenterZoom","calculateCenterRotate","filter","Boolean","currentCenter","getSizeFromViewport_","selector","querySelector","metrics","constrainCenter","opt_delta","opt_direction","getConstraints","opt_hints","calculateExtent","getMaxResolution","getMinResolution","getZoomForResolution","setMaxZoom","setMinZoom","getResolutionForExtent","xResolution","yResolution","getResolutionForValueFunction","opt_power","getValueForResolutionFunction","pixelResolution","nearest","getResolutionForZoom","fit","geometryOrExtent","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","constrainedResolution","centerRotX","centerRotY","centerOn","hint","ol_Object","returnValue","Triangulation","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","targetQuadExtent","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","_layer_Property_js__WEBPACK_IMPORTED_MODULE_1__","setMaxResolution","setMinResolution","zindex","getSnapToPixel","setRotateWithView","setSnapToPixel","loadFeaturesXhr","xhr","_format_FormatType_js__WEBPACK_IMPORTED_MODULE_1__","url","success","failure","XMLHttpRequest","open","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readFeatures","featureProjection","readProjection","getLastExtent","onerror","send","dataProjection","addFeatures","ret","lineStringLength","_TileState_js__WEBPACK_IMPORTED_MODULE_3__","_functions_js__WEBPACK_IMPORTED_MODULE_6__","_source_State_js__WEBPACK_IMPORTED_MODULE_7__","layer_","forEachLoadedTile","handleImageChange_","postRenderFunction","preload","opt_tileCallback","getTileCoordCenter","useTile","opt_duration","rotateWithoutConstraints","currentRotation","zoomByDelta","zoomWithoutConstraints","interaction_Interaction","Interaction","setActive","active","MapBrowserEventType","delta_","interaction_DoubleClickZoom","DoubleClickZoom","altShiftKeysOnly","condition_focus","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","handleDragEvent","handleUpEvent","handleDownEvent","handleMoveEvent","Pointer_centroid","pointerEvents","Pointer_handleEvent","updateTrackedPointers_","handlingDownUpSequence","handleDragEvent_","handledUp","handleUpEvent_","targetPointers","handled","handleDownEvent_","stopDown","handleMoveEvent_","Pointer","PointerInteraction","trackedPointers_","isPointerDraggingEvent","DragPan_handleDragEvent","panning_","centroid","lastPointersCount_","kinetic_","lastCentroid","DragPan_handleUpEvent","noKinetic_","centerpx","DragPan_handleDownEvent","condition_","interaction_DragPan","DragPan","kinetic","condition","DragRotate_handleDragEvent","lastAngle_","DragRotate_handleUpEvent","DragRotate_handleDownEvent","interaction_DragRotate","DragRotate","Box","RenderBox","startPixel_","endPixel_","startPixel","endPixel","setPixels","createOrUpdateGeometry","ol_Disposable","DragBoxEventType","BOXSTART","BOXDRAG","BOXEND","DragBoxEvent","defaultBoxEndCondition","minArea_","DragBox_handleDragEvent","box_","DragBox_handleUpEvent","boxEndCondition_","onBoxEnd_","DragBox_handleDownEvent","onBoxEnd","out_","mapExtent","boxPixelExtent","factor","interaction_DragZoom","DragBox","DragZoom","boxEndCondition","KeyCode","UP","DOWN","KeyboardPan_handleEvent","keyCode","mapUnitsDelta","pixelDelta_","pan","interaction_KeyboardPan","KeyboardPan","defaultCondition_","pixelDelta","KeyboardZoom_handleEvent","charCode","charCodeAt","interaction_KeyboardZoom","KeyboardZoom","Mode","TRACKPAD","MouseWheelZoom_handleEvent","wheelEvent","useAnchor_","lastAnchor_","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","wheelDeltaY","startTime_","mode_","trackpadEventGap_","trackpadTimeoutId_","decrementInteractingHint_","trackpadDeltaPerZoom_","rebound","trackpadZoomBuffer_","constrainResolution_","timeLeft","timeout_","timeoutId_","handleWheelZoom_","interaction_MouseWheelZoom","MouseWheelZoom","timeout","useAnchor","setMouseAnchor","PinchRotate_handleDragEvent","rotationDelta","touch0","touch1","rotationDelta_","rotating_","threshold_","PinchRotate_handleUpEvent","PinchRotate_handleDownEvent","interaction_PinchRotate","PinchRotate","threshold","PinchZoom_handleDragEvent","scaleDelta","lastDistance_","lastScaleDelta_","PinchZoom_handleUpEvent","PinchZoom_handleDownEvent","interaction_PinchZoom","PinchZoom","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","_LayerType_js__WEBPACK_IMPORTED_MODULE_0__","_layer_Layer_js__WEBPACK_IMPORTED_MODULE_1__","_layer_TileProperty_js__WEBPACK_IMPORTED_MODULE_2__","setPreload","setUseInterimTilesOnError","reproj_Tile","ReprojTile","targetTileGrid","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","reproj","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","unlistenSources_","reproject_","getTileSize","leftToLoad","sourceListenKey","ol_Tile","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","createFromTemplates","templates","tileUrlFunctions","tilecoord","createFromTileUrlFunctions","nullTileUrlFunction","tmpTileCoord","TileGrid_TileGrid","origins","origins_","tileSizes_","tileSizes","tileSize_","tileSize","tilegrid_common","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","forEachTileCoord","opt_tileRange","tileCoordExtent","ol_size","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","getTileCoordForCoordAndZ","getTileCoordResolution","fullTileRanges","tilegrid_TileGrid","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","Corner","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","ol_proj","half","Tile_TileSource","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","loaded","setKey","thisProj","getTileCoordForTileUrlFunction","worldsAway","source_Source","TileSourceEvent","TileEventType","UrlTile_UrlTile","UrlTile","tileUrlFunction","fixedTileUrlFunction","urls","setUrls","setUrl","setTileUrlFunction","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getUrls","setTileLoadFunction","opt_key","match","startCharCode","stopCharCode","String","fromCharCode","stop","expandUrl","defaultTileLoadFunction","imageTile","XYZ_XYZ","TileImage","createXYZ","reprojectionErrorThreshold","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","renderReprojectionEdges_","usedTileCache","getGutter","projKey","createTile_","urlTileCoord","tileUrl","newTile","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","getChangeType","changeType","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","requestFullscreen","isFullScreenSupported","mozFullScreenEnabled","msFullscreenEnabled","fullscreenEnabled","isFullScreen","webkitIsFullScreen","mozFullScreen","msFullscreenElement","fullscreenElement","requestFullScreen","control_FullScreen","FullScreen","cssClassName_","labelNode_","labelActive","labelActiveNode_","keys_","source_","handleFullScreen_","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","mozRequestFullScreenWithKeys","Element","ALLOW_KEYBOARD_INPUT","requestFullScreenWithKeys","handleFullScreenChange_","firstElementChild","control_Control","validateExtent_","updateBox_","control_OverviewMap","OverviewMap","ovmapDiv_","ovmap_","ovmap","boxSizing","boxOverlay_","OverlayPositioning","scope","overlayBox","mousePosition","computeDesiredMousePosition","endMoving","oldMap","oldView","unbindView_","ObjectEventType","handleMapPropertyChange_","bindView_","resetExtent_","MapProperty","newView","handleRotationChanged_","ovmapSize","ovextent","topLeftPixel","bottomRightPixel","boxWidth","boxHeight","ovmapWidth","ovmapHeight","recenter_","ovview","steps","MAX_RATIO","ovresolution","rotateBottomLeft","calculateCoordinateRotate_","coordinateRotate","MapEventType","getOverviewMap","UNITS_PROP","ScaleLine_Units","IMPERIAL","NAUTICAL","METRIC","US","LEADING_DIGITS","ScaleLine_render","viewState_","control_ScaleLine","ScaleLine","innerElement_","minWidth_","minWidth","renderedWidth_","renderedHTML_","handleUnitsChanged_","setUnits","pointResolutionUnits","nominalCount","suffix","metersPerDegree","html","Direction","VERTICAL","HORIZONTAL","ZoomSlider_render","sliderInitialized_","initSlider_","currentResolution_","setThumbPosition_","control_ZoomSlider","ZoomSlider","direction_","heightLimit_","widthLimit_","previousX_","previousY_","thumbSize_","thumbElement","containerElement","dragger_","pointer_EventType","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","containerSize","thumb","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","getPositionForResolution_","amount","control_ZoomToExtent","ZoomToExtent","handleZoomToExtent","eval","setPrototypeOf","Promise","next","throw","then","sent","trys","ops","return","iterator","asyncIterator","resolve","init","u","_maxListeners","defaultMaxListeners","_events","newListener","emit","_eventsCount","warned","emitter","console","warn","removeListener","EventEmitter","usingDomains","domain","Domain","getPrototypeOf","setMaxListeners","getMaxListeners","domainEmitter","domainThrown","addListener","prependListener","prependOnceListener","removeAllListeners","listenerCount","eventNames","Reflect","ownKeys","_children","setParent","_parent","addChildren","getParent","getParents","tree","getDescendants","getChildren","bubble","unBlock","propagation","isBlocked","_turnOn","_turnOff","_propagation","getHierarchyValue","_prepareValue","turnOff","_callOnSet","hierarchy","isGroup","blockChilds","turnOn","unblockChilds","block","_blocked","_block","getValue","_unBlock","_blockChild","_unBlockChild","_value","getProperty","find","_fireChangeEvent","getContainer","_container","destroy","_removeEventsListener","onSet","_properties","_propertiesList","_setPropertyHandler","handlers","CheckProperty","BaseProperty","list","v","initProperties","initItem","_layer","item_type","layer_adapter","toUpperCase","layer_enabled","showLayer","hideLayer","backspace","tab","shift","ctrl","alt","caps_lock","escape","page_up","page_down","home","left_arrow","up_arrow","right_arrow","down_arrow","delete","left_window_key","right_window_key","select_key","numpad_0","numpad_1","numpad_2","numpad_3","numpad_4","numpad_5","numpad_6","numpad_7","numpad_8","numpad_9","subtract","decimal_point","divide","f3","f4","f5","f6","f7","f8","f9","f10","f11","f12","num_lock","scroll_lock","equal_sign","_","keyCodeAlias","_windowOnFocus","windowOnFocus","_keysPressed","keysPressed","_keysReleased","keysReleased","addKeyboardEventsListener","pressed","removeKeyboardEventsListener","displayProjection","lonlatProjection","settingsIsLoading","_baseLayers","mapAdapter","_starterKits","starterKits","_addEventsListeners","settings","getSettings","_setupMap","addBaseLayer","isBaseLayer","extent_bottom","extent_left","extent_top","extent_right","_extent","_addTreeLayers","_addLayerProviders","_zoomToInitialExtent","root_item","getLayerAdapters","createAdapter","layerAdapters","_onMapClick","onMapClick","L","buildWebMap","WebMap","self","configurable","writable","getOwnPropertyDescriptor","reject","_state","_handled","_deferreds","_immediateFn","onFulfilled","onRejected","promise","_unhandledRejectionFn","catch","finally","race","route","_loadingQueue","_loadingStatus","connect","auth","login","password","getUserInfo","makeQuery","makeClientId","headers","Authorization","Access-Control-Allow-Origin","Access-Control-Allow-Headers","keyname","clientId","localStorage","setItem","stringify","btoa","unescape","encodeURIComponent","request","post","method","baseUrl","_setLoadingQueue","_getJson","_executeLoadingQueue","waiting","timestamp","XDomainRequest","onreadystatechange","readyState","parse","upload","onprogress","lengthComputable","total","onProgress","setRequestHeader","withCredentials","file","FormData","append","NgwConnector","setImmediate","_createAdapter","getQmsServices","tms","qmsid","QmsKit","_id","_clearFn","unref","ref","enroll","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","_onTimeout","clearImmediate","process","nextTick","postMessage","importScripts","onmessage","random","attachEvent","MessageChannel","port1","port2","documentElement","args","run","fun","browser","env","argv","version","versions","off","binding","cwd","chdir","umask","hmr","insertInto","locals","test","sourceRoot","atob","HTMLIFrameElement","contentDocument","head","refs","base","media","sourceMap","nextSibling","firstChild","before","attrs","nonce","nc","singleton","URL","createObjectURL","revokeObjectURL","Blob","rel","convertToAbsoluteUrls","href","styleSheet","cssText","location","protocol","host","pathname","trim","isLoaded","webMap","metadata","qmsId","_ngwLayers","connector","_createWebMap","_addControls","bounds","fitBounds","addNgwLayer","adapter","zoomToLayer","resource","cls","_fitNgwLayerExtend","maxLat","maxLon","minLat","minLon","lmap","customAttribution","utils","fixUrlStr","decorators","onMapLoad","decorate","ImageWMS","OSM","VectorSource","ol","__assign","ID","ImageAdapter","params","layer_style_id","query","queryObject","str","dec","decodeURIComponent","qp","queryToObject","BBOX","WIDTH","HEIGHT","layer$$1","EventHandlers","$getMaxListeners","that","_addListener","prepend","existing","emitWarning","_onceWrap","fired","evlistener","arrayClone","copy","er","doError","isFn","emitNone","arg1","emitOne","arg2","emitTwo","arg3","emitThree","emitMany","originalListener","spliceOne","unwrapListeners","OsmAdapter","ID$1","MarkerAdapter","_a","latLng","lng","Vector","ID$2","TileAdapter","OlMapAdapter","_layers","_order","_length","DPI","IPM","defOpt","logo","mapInitOptions","_olView","_addMapListeners","cb","toExtent","getLayerAdapter","layerName","isLayerOnTheMap","layerMem","onMap","adapterDef","baselayer","adapterEngine","_this","adapter_1","addlayerFun","toResolve_1","layerId","layerOpts","baseLayer","order","toggleLayer","setLayerOpacity","getScaleForResolution","mpu","getResolutionForScale","action","controlDef","control$$1","engine","controlAdapters","requestGeomString","pixelRadius","olMap","WKT","writeGeometry","MARKER","ZOOM","ATTRIBUTION","Pbf","ieee754","buf","ArrayBuffer","isView","Uint8Array","Varint","Fixed64","Bytes","Fixed32","readPackedEnd","pbf","readVarint","toNum","isSigned","makeRoomForExtraLength","startPos","extraLen","realloc","writePackedVarint","writeVarint","writePackedSVarint","writeSVarint","writePackedFloat","writeFloat","writePackedDouble","writeDouble","writePackedBoolean","writeBoolean","writePackedFixed32","writeFixed32","writePackedSFixed32","writeSFixed32","writePackedFixed64","writeFixed64","writePackedSFixed64","writeSFixed64","readUInt32","writeInt32","readInt32","readFields","readField","tag","skip","readMessage","readFixed32","readSFixed32","readFixed64","readSFixed64","readFloat","read","readDouble","readVarintRemainder","readVarint64","readSVarint","num","readBoolean","readString","b3","b0","bytesPerSequence","readUtf8","readBytes","subarray","readPackedVarint","readPackedSVarint","readPackedBoolean","readPackedFloat","readPackedDouble","readPackedFixed32","readPackedSFixed32","readPackedFixed64","readPackedSFixed64","writeTag","writeBigVarintLow","lsb","writeBigVarintHigh","writeBigVarint","writeString","lead","writeUtf8","write","writeBytes","writeRawMessage","writeMessage","writeBytesField","writeFixed32Field","writeSFixed32Field","writeFixed64Field","writeSFixed64Field","writeVarintField","writeSVarintField","writeStringField","writeFloatField","writeDoubleField","writeBooleanField","NgwOl","_super","_nextgis_ol_map_adapter__WEBPACK_IMPORTED_MODULE_2__","__extends","_nextgis_apps_ngw_map__WEBPACK_IMPORTED_MODULE_0___default","content","useSourceMap","cssMapping","sourceMapping","toComment","sourceURLs","cssWithMappingToString","mediaQuery","alreadyImportedModules","stylesInDom","isOldIE","memo","memoize","styleTarget","singletonCounter","stylesInsertedAtTop","fixUrls","addStylesToDom","domStyle","addStyle","listToStyles","newStyles","insertStyleElement","lastStyleElementInsertedAtTop","removeStyleElement","idx","createStyleElement","getNonce","addAttrs","styleIndex","applyToSingletonTag","link","createLinkElement","autoFixUrls","blob","oldSrc","newObj","newList","mayRemove","replaceText","textStore","replacement","cssNode","currentDir","fullMatch","origUrl","newUrl","unquotedOrigUrl","$1","swap","defaultCompare","quickselectStep","sd","newLeft","newRight","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","rt","Feature_FeatureFormat","defaultFeatureProjection","getReadOptions","adaptOptions","ol_obj","readFeature","readGeometry","writeFeature","writeFeatures","format_Feature","transformWithOptions","transformed","geom_Geometry","decimals","getObject","format_JSONFeature","FeatureFormat","JSONFeature","FormatType","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","geom_MultiLineString","lineString","ol_array","appendLineString","closest","opt_interpolate","GeometryLayout","flat_interpolate","getLineString","getLineStrings","lineStrings","midpoints","midpoint","intersectsextent","deflate","geom_SimpleGeometry","geom_MultiPoint","appendPoint","getPoint","geom_MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","appendPolygon","newEndss","flat_area","orient","interiorpoint","getInteriorPoints","getPolygon","prevEnds","getPolygons","polygons","lastEnds","GEOMETRY_READERS","getGeometryLayout","paths","GEOMETRY_WRITERS","EsriJSON_readGeometry","flatRing","outerRings","holes","clockwise","hole","matched","outerRing","containsHole","convertRings","geometryReader","hasZ","hasM","getHasZM","geometryWriter","esriJSON","hasZM","format_EsriJSON","EsriJSON","geometryName","esriJSONFeature","idField","attributes","esriJSONFeatures","objectIdFieldName","esriJSONObject","spatialReference","wkid","crs","objects","cloneGeometries","clonedGeometries","geom_GeometryCollection","opt_geometries","geometries_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","setGeometries","simplifiedGeometries","simplified","simplifiedGeometryCollection","setGeometriesArray","GeoJSON_GEOMETRY_READERS","GeoJSON_readGeometry","GeoJSON_GEOMETRY_WRITERS","rightHanded","GeoJSON_writeGeometry","format_GeoJSON","GeoJSON","extractGeometryName_","extractGeometryName","geoJSONFeature","geometry_name","geoJSONFeatures","DOCUMENT","implementation","createDocument","XML_SCHEMA_INSTANCE_URI","createElementNS","namespaceURI","qualifiedName","getAllTextContent","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","isDocument","Document","xml","makeArrayExtender","valueReader","objectStack","makeArrayPusher","makeReplacer","makeObjectPropertyPusher","opt_property","localName","makeObjectPropertySetter","makeChildAppender","nodeWriter","makeArraySerializer","serializersNS","nodeFactory","serializers","makeSimpleNodeFactory","serialize","opt_nodeName","opt_namespaceURI","fixedNodeName","nodeName","OBJECT_PROPERTY_NODE_FACTORY","makeSequence","orderedKeys","sequence","makeStructureNS","namespaceURIs","structure","opt_structureNS","structureNS","parseNode","parsersNS","nextElementSibling","parsers","parser","pushParseAndPop","opt_keys","pushSerializeAndPop","format_XMLFeature","XMLFeature","xmlSerializer_","XMLSerializer","readFeatureFromDocument","readFeatureFromNode","doc","readFeaturesFromDocument","readFeaturesFromNode","ELEMENT_NODE","readGeometryFromDocument","readGeometryFromNode","readProjectionFromDocument","readProjectionFromNode","writeFeatureNode","serializeToString","writeFeaturesNode","writeGeometryNode","GMLNS","ONLY_WHITESPACE_RE","GMLBase_GMLBase","GMLBase","featureType","featureNS","srsName","schemaLocation","FEATURE_COLLECTION_PARSERS","featureMember","readFeaturesInternal","featureMembers","ft","uri","featureTypes","ii$1","readFeatureElement","readGeometryElement","getAttribute","GEOMETRY_PARSERS_","fid","getAttributeNS","readPoint","readFlatCoordinatesFromNode_","readMultiPoint","MULTIPOINT_PARSERS_","readMultiLineString","MULTILINESTRING_PARSERS_","readMultiPolygon","MULTIPOLYGON_PARSERS_","pointMemberParser_","POINTMEMBER_PARSERS_","lineStringMemberParser_","LINESTRINGMEMBER_PARSERS_","polygonMemberParser_","POLYGONMEMBER_PARSERS_","readLineString","readFlatLinearRing_","ring","GEOMETRY_FLAT_COORDINATES_PARSERS_","readLinearRing","readPolygon","flatLinearRings","FLAT_LINEAR_RINGS_PARSERS_","http://www.opengis.net/gml","pointMember","pointMembers","lineStringMember","lineStringMembers","polygonMember","polygonMembers","RING_PARSERS","format_GMLBase","readBooleanString","string","readDateTime","dateTime","readDecimal","readDecimalString","readNonNegativeInteger","readNonNegativeIntegerString","writeBooleanTextNode","bool","writeStringTextNode","writeDecimalTextNode","toPrecision","writeNonNegativeIntegerTextNode","nonNegativeInteger","GML3_schemaLocation","MULTIGEOMETRY_TO_MEMBER_NODENAME","MultiCurve","MultiSurface","GML3_GML3","GML3","surface_","surface","curve_","curve","multiCurve_","multiCurve","multiSurface_","multiSurface","readMultiCurve_","MULTICURVE_PARSERS_","readMultiSurface_","MULTISURFACE_PARSERS_","curveMemberParser_","CURVEMEMBER_PARSERS_","surfaceMemberParser_","SURFACEMEMBER_PARSERS_","readPatch_","PATCHES_PARSERS_","readSegment_","SEGMENTS_PARSERS_","readPolygonPatch_","readLineStringSegment_","interiorParser_","flatLinearRing","exteriorParser_","readSurface_","SURFACE_PARSERS_","readCurve_","CURVE_PARSERS_","readEnvelope_","ENVELOPE_PARSERS_","readFlatPos_","re","containerSrs","readFlatPosList_","contextDimension","dim","writePos_","srsDimension","getCoords_","opt_srsName","opt_hasZ","writePosList_","writePoint_","writeEnvelope","ENVELOPE_SERIALIZERS_","writeLinearRing_","posList","RING_NODE_FACTORY_","exteriorWritten","writeSurfaceOrPolygon_","RING_SERIALIZERS_","patches","writeSurfacePatches_","writeCurveOrLineString_","segments","writeCurveSegments_","writeMultiSurfaceOrPolygon_","SURFACEORPOLYGONMEMBER_SERIALIZERS_","MULTIGEOMETRY_MEMBER_NODE_FACTORY_","writeMultiPoint_","POINTMEMBER_SERIALIZERS_","writeMultiCurveOrLineString_","LINESTRINGORCURVEMEMBER_SERIALIZERS_","writeRing_","writeSurfaceOrPolygonMember_","GEOMETRY_NODE_FACTORY_","writePointMember_","writeLineStringOrCurveMember_","line","writeGeometryElement","GEOMETRY_SERIALIZERS_","writeFeatureElement","writeFeatureMembers_","geom","setAttributeNS","interior","exterior","Surface","Curve","Envelope","curveMember","curveMembers","surfaceMember","surfaceMembers","lowerCorner","upperCorner","PolygonPatch","LineStringSegment","format_GML3","GML","format_GML","NAMESPACE_URIS","FEATURE_READER","rte","readRte","trk","readTrk","wpt","readWpt","GPX_PARSERS","LINK_PARSERS","GPX_SERIALIZERS","RTE_SEQUENCE","RTE_SERIALIZERS","TRK_SEQUENCE","TRK_SERIALIZERS","writeWptType","GPX_GPX","GPX","readExtensions_","readExtensions","handleReadExtensions_","extensionsNode","featureReader","gpx","GPX_NODE_FACTORY","RTE_PARSERS","cmt","desc","parseLink","extensions","parseExtensions","rtept","RTEPT_PARSERS","rteValues","layoutOptions","ele","TRK_PARSERS","trkseg","TRKSEG_PARSERS","trkpt","TRKPT_PARSERS","trkValues","WPT_PARSERS","magvar","geoidheight","sym","fix","sat","hdop","vdop","pdop","ageofdgpsdata","dgpsid","LINK_SEQUENCE","LINK_SERIALIZERS","writeLink","RTEPT_TYPE_SEQUENCE","geometryLayout","TRKSEG_SERIALIZERS","TRKSEG_NODE_FACTORY","WPT_TYPE_SEQUENCE","WPT_TYPE_SERIALIZERS","date","getUTCFullYear","ol_string","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","GEOMETRY_TYPE_TO_NODENAME","applyLayoutOptions","format_GPX","DEFAULT_COLOR","DEFAULT_IMAGE_STYLE_ANCHOR","DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS","DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS","DEFAULT_IMAGE_STYLE_SIZE","DEFAULT_IMAGE_STYLE_SRC","DEFAULT_IMAGE_SCALE_MULTIPLIER","format_TextFeature","TextFeature","readFeatureFromText","readFeaturesFromText","readGeometryFromText","readProjectionFromText","writeFeatureText","writeFeaturesText","writeGeometryText","IGCZ","BAROMETRIC","GPS","NONE","B_RECORD_RE","H_RECORD_RE","HFDTE_RECORD_RE","NEWLINE_RE","format_IGC","IGC","altitudeMode_","altitudeMode","year","month","day","lastDateTime","hour","minute","second","UTC","GX_NAMESPACE_URIS","KML_NAMESPACE_URIS","ICON_ANCHOR_UNITS_MAP","pixels","insetPixels","PLACEMARK_PARSERS","ExtendedData","extendedDataParser","Region","regionParser","MultiGeometry","readMultiGeometry","KML_readLineString","KML_readLinearRing","KML_readPoint","KML_readPolygon","readStyle","StyleMap","styleMapValue","readStyleMapValue","placemarkObject","address","description","phoneNumber","styleUrl","readURI","visibility","MultiTrack","GX_MULTITRACK_GEOMETRY_PARSERS","Track","readGxTrack","NETWORK_LINK_PARSERS","Link","KML_LINK_PARSERS","REGION_PARSERS","LatLonAltBox","LAT_LON_ALT_BOX_PARSERS","regionObject","Lod","LOD_PARSERS","lodObject","KML_SEQUENCE","KML_SERIALIZERS","DOCUMENT_SERIALIZERS","DOCUMENT_NODE_FACTORY","Placemark","writePlacemark","DEFAULT_FILL_STYLE","DEFAULT_NO_IMAGE_STYLE","DEFAULT_IMAGE_STYLE","DEFAULT_TEXT_STROKE_STYLE","DEFAULT_STROKE_STYLE","DEFAULT_TEXT_STYLE","DEFAULT_STYLE","DEFAULT_STYLE_ARRAY","KML_KML","KML","style_Style","defaultStyle_","defaultStyle","extractStyles_","extractStyles","writeStyles_","writeStyles","sharedStyles_","showPointNames_","showPointNames","readDocumentOrFolder_","Folder","readPlacemark_","readSharedStyle_","readSharedStyleMap_","sharedStyles","nameStyle","drawName","createNameStyleFunction","foundStyle","findStyle","styleValue","createFeatureStyleFunction","styleUri","baseURI","fs","readName","readNameFromDocument","readNameFromNode","n$1","readNetworkLinks","networkLinks","readNetworkLinksFromDocument","readNetworkLinksFromNode","readRegion","regions","readRegionFromDocument","readRegionFromNode","kml","xmlnsUri","textOffset","imageScale","foundText","readColor","hexColor","readFlatCoordinates","readScale","STYLE_MAP_PARSERS","Pair","pairObject","PAIR_PARSERS","ICON_STYLE_PARSERS","iconObject","ICON_PARSERS","heading","hotSpot","xunits","yunits","LABEL_STYLE_PARSERS","LINE_STYLE_PARSERS","POLY_STYLE_PARSERS","outline","FLAT_LINEAR_RING_PARSERS","readFlatLinearRing","GX_TRACK_PARSERS","when","whens","coord","gxTrackObject","GEOMETRY_FLAT_COORDINATES_PARSERS","readFlatCoordinatesFromNode","EXTRUDE_AND_ALTITUDE_MODE_PARSERS","extrude","tessellate","MULTI_GEOMETRY_PARSERS","multiGeometry","homogeneous","setCommonGeometryProperties","FLAT_LINEAR_RINGS_PARSERS","innerBoundaryIs","INNER_BOUNDARY_IS_PARSERS","outerBoundaryIs","OUTER_BOUNDARY_IS_PARSERS","STYLE_PARSERS","IconStyle","styleObject","IconObject","drawIcon","LabelStyle","LineStyle","PolyStyle","hasExtrude","hasTessellate","hasAltitudeMode","extrudes","tessellates","altitudeModes","DATA_PARSERS","displayName","EXTENDED_DATA_PARSERS","Data","featureObject","SchemaData","SCHEMA_DATA_PARSERS","SimpleData","minAltitude","maxAltitude","north","south","east","west","minLodPixels","maxLodPixels","minFadeExtent","maxFadeExtent","writeColorTextNode","rgba","abgr","hex","EXTENDEDDATA_NODE_SERIALIZERS","pair","createCDATASection","writeCDATASection","DATA_NODE_FACTORY","ICON_SEQUENCE","ICON_SERIALIZERS","GX_NODE_FACTORY","ICON_STYLE_SEQUENCE","ICON_STYLE_SERIALIZERS","icon","vec2","writeScaleTextNode","LABEL_STYLE_SEQUENCE","LABEL_STYLE_SERIALIZERS","LINE_STYLE_SEQUENCE","LINE_STYLE_SERIALIZERS","KML_GEOMETRY_TYPE_TO_NODENAME","GEOMETRY_NODE_FACTORY","POINT_NODE_FACTORY","LINE_STRING_NODE_FACTORY","LINEAR_RING_NODE_FACTORY","POLYGON_NODE_FACTORY","MULTI_GEOMETRY_SERIALIZERS","writePrimitiveGeometry","writePolygon","writeMultiGeometry","BOUNDARY_IS_SERIALIZERS","writeBoundaryIs","PLACEMARK_SERIALIZERS","namesAndValues","names","STYLE_SEQUENCE","STYLE_SERIALIZERS","PLACEMARK_SEQUENCE","EXTENDEDDATA_NODE_FACTORY","PRIMITIVE_GEOMETRY_SEQUENCE","PRIMITIVE_GEOMETRY_SERIALIZERS","d$1","POLYGON_SERIALIZERS","INNER_BOUNDARY_NODE_FACTORY","OUTER_BOUNDARY_NODE_FACTORY","POLY_STYLE_SERIALIZERS","COLOR_NODE_FACTORY","iconProperties","format_KML","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","render_Feature","layersPBFReader","layerPBFReader","featurePBFReader","readRawFeature","format_MVT","MVT","featureClass_","featureClass","layerName_","layers_","readRawGeometry_","cmd","coordsLen","currentEnd","cmdLen","createFeature_","rawFeature","getGeometryType","prevEndIndex","pbf_default","pbfLayers","pbfLayer","NAMESPACE_URI","readHref","XML_XML","readFromDocument","readFromNode","format_XML","OWS_NAMESPACE_URIS","PARSERS","ServiceIdentification","SERVICE_IDENTIFICATION_PARSERS","ServiceProvider","SERVICE_PROVIDER_PARSERS","OperationsMetadata","OPERATIONS_METADATA_PARSERS","OWS_OWS","OWS","owsObject","ADDRESS_PARSERS","DeliveryPoint","City","AdministrativeArea","PostalCode","Country","ElectronicMailAddress","ALLOWED_VALUES_PARSERS","Value","CONSTRAINT_PARSERS","AllowedValues","CONTACT_INFO_PARSERS","Phone","PHONE_PARSERS","Address","DCP_PARSERS","HTTP","HTTP_PARSERS","Get","REQUEST_METHOD_PARSERS","Post","OPERATION_PARSERS","DCP","Operation","Voice","Facsimile","Constraint","SERVICE_CONTACT_PARSERS","IndividualName","PositionName","ContactInfo","Abstract","AccessConstraints","Fees","Title","ServiceTypeVersion","ServiceType","ProviderName","ProviderSite","ServiceContact","format_OWS","flipXY","opt_destOffset","destOffset","encodeUnsignedInteger","encoded","format_Polyline","Polyline","factor_","geometryLayout_","opt_factor","lastNumbers","numbers","current","decodeUnsignedIntegers","decodeSignedIntegers","decodeFloats","decodeDeltas","encodeUnsignedIntegers","encodeSignedIntegers","encodeFloats","encodeDeltas","TopoJSON_GEOMETRY_READERS","transformVertex","arcs","concatenateArcs","polyArray","ringCoords","indices","readFeaturesFromGeometryCollection","collection","readFeatureFromGeometry","transformArc","vertex","format_TopoJSON","TopoJSON","topoJSONTopology","transformArcs","topoJSONFeatures","objectName","GML2_schemaLocation","GML2_MULTIGEOMETRY_TO_MEMBER_NODENAME","GML2_GML2","GML2","readFlatCoordinates_","coordsGroups","readBox_","BOX_PARSERS_","innerBoundaryIsParser_","outerBoundaryIsParser_","createCoordinatesNode_","writeCoordinates_","format_GML2","Filter_Filter","tagName_","getTagName","filter_Filter","filter_LogicalNary","Filter","LogicalNary","conditions","filter_And","And","filter_Bbox","Bbox","filter_Spatial","Spatial","filter_Comparison","Contains","Comparison","propertyName","filter_ComparisonBinary","During","ComparisonBinary","expression","opt_matchCase","matchCase","EqualTo","GreaterThan","GreaterThanOrEqualTo","Intersects","IsBetween","lowerBoundary","upperBoundary","IsLike","pattern","opt_wildCard","opt_singleChar","opt_escapeChar","wildCard","singleChar","escapeChar","IsNull","LessThan","LessThanOrEqualTo","Not","NotEqualTo","Or","Within","boundedBy","TRANSACTION_SUMMARY_PARSERS","http://www.opengis.net/wfs","totalInserted","totalUpdated","totalDeleted","TRANSACTION_RESPONSE_PARSERS","TransactionSummary","InsertResults","INSERT_RESULTS_PARSERS","QUERY_SERIALIZERS","PropertyName","TRANSACTION_SERIALIZERS","Insert","gmlVersion","Update","featurePrefix","typeName","getTypeName","XMLNS","writeOgcFidFilter","Delete","WFSNS","Native","nativeElement","vendorId","safeToIgnore","FEATURE_PREFIX","OGCNS","FESNS","SCHEMA_LOCATIONS","1.1.0","1.0.0","DEFAULT_VERSION","WFS_WFS","WFS","featureType_","featureNS_","gmlFormat_","gmlFormat","schemaLocation_","getFeatureType","setFeatureType","readTransactionResponse","readTransactionResponseFromDocument","readTransactionResponseFromNode","readFeatureCollectionMetadata","readFeatureCollectionMetadataFromDocument","readFeatureCollectionMetadataFromNode","writeGetFeature","handle","outputFormat","maxFeatures","resultType","filter_bbox","and","propertyNames","GETFEATURE_SERIALIZERS","writeTransaction","inserts","updates","deletes","baseObj","gmlOptions","nativeElements","OGC_FID_PARSERS","http://www.opengis.net/ogc","FeatureId","prefix","Query","writeFilterCondition","valueReference","timePeriod","writeTimeInstant","writeLogicalFilter","writeOgcPropertyName","PropertyIsEqualTo","writeComparisonFilter","PropertyIsNotEqualTo","PropertyIsLessThan","PropertyIsLessThanOrEqualTo","PropertyIsGreaterThan","PropertyIsGreaterThanOrEqualTo","PropertyIsNull","PropertyIsBetween","writeOgcLiteral","PropertyIsLike","writeOgcExpression","timeInstant","timePosition","format_WFS","GeometryConstructor","LINESTRING","MULTIPOINT","MULTILINESTRING","MULTIPOLYGON","Z","TokenType","WKTGeometryType","WKT_type","Lexer","wkt","index_","isAlpha_","isNumeric_","opt_decimal","isWhiteSpace_","nextChar_","nextToken","token","readNumber_","readText_","scientificNotation","substring","WKT_Parser","lexer","lexer_","token_","layout_","encodePointGeometry","encodeLineStringGeometry","encodePolygonGeometry","consume_","isTokenType","isMatch","parseGeometry_","parseGeometryLayout_","dimToken","dimInfo","parseGeometryCollectionText_","isEmptyGeometry_","formatErrorMessage_","parsePointText_","parsePoint_","parseLineStringText_","parsePointList_","parsePolygonText_","parseLineStringTextList_","parseMultiPointText_","parsePointTextList_","parseMultiLineStringText_","parseMultiPolygonText_","parsePolygonTextList_","dimensions","geomType","GeometryEncoder","components","geoms","encode","enc","geometryEncoder","encodeGeometryLayout","format_WKT","splitCollection_","splitCollection","parse_","WMSCapabilities_NAMESPACE_URIS","WMSCapabilities_PARSERS","Service","SERVICE_PARSERS","Capability","CAPABILITY_PARSERS","Request","REQUEST_PARSERS","Exception","EXCEPTION_PARSERS","LAYER_PARSERS","WMSCapabilities_WMSCapabilities","WMSCapabilities","wmsCapabilityObject","Name","KeywordList","readKeywordList","OnlineResource","ContactInformation","CONTACT_INFORMATION_PARSERS","LayerLimit","MaxWidth","MaxHeight","ContactPersonPrimary","CONTACT_PERSON_PARSERS","ContactPosition","ContactAddress","CONTACT_ADDRESS_PARSERS","ContactVoiceTelephone","ContactFacsimileTelephone","ContactElectronicMailAddress","ContactPerson","ContactOrganization","AddressType","StateOrProvince","PostCode","Format","CRS","EX_GeographicBoundingBox","geographicBoundingBox","EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS","westBoundLongitude","southBoundLatitude","eastBoundLongitude","northBoundLatitude","BoundingBox","Dimension","unitSymbol","multipleValues","nearestValue","ATTRIBUTION_PARSERS","AuthorityURL","authorityObject","readFormatOnlineresource","Identifier","MetadataURL","metadataObject","DataURL","FeatureListURL","WMSCapabilities_STYLE_PARSERS","MinScaleDenominator","MaxScaleDenominator","parentLayerObject","layerObject","queryable","cascaded","noSubsets","fixedWidth","fixedHeight","childValue","parentValue","LogoURL","readSizedFormatOnlineresource","GetCapabilities","readOperationType","GetMap","GetFeatureInfo","OPERATIONTYPE_PARSERS","DCPType","DCPTYPE_PARSERS","WMSCapabilities_HTTP_PARSERS","LegendURL","StyleSheetURL","StyleURL","FORMAT_ONLINERESOURCE_PARSERS","KEYWORDLIST_PARSERS","Keyword","formatOnlineresource","format_WMSCapabilities","format_WMSGetFeatureInfo","WMSGetFeatureInfo","readFeatures_","layerFeatures","gmlFeatures","WMTSCapabilities_NAMESPACE_URIS","WMTSCapabilities_OWS_NAMESPACE_URIS","WMTSCapabilities_PARSERS","Contents","CONTENTS_PARSERS","WMTSCapabilities_WMTSCapabilities","WMTSCapabilities","owsParser_","WMTSCapabilityObject","WMTSCapabilities_LAYER_PARSERS","TileMatrixSet","TMS_PARSERS","WMTSCapabilities_STYLE_PARSERS","isDefault","TileMatrixSetLink","TMS_LINKS_PARSERS","DIMENSION_PARSERS","ResourceURL","resourceType","WGS84BoundingBox","WGS84_BBOX_READERS","legend","TileMatrixSetLimits","TMS_LIMITS_LIST_PARSERS","TileMatrixLimits","TMS_LIMITS_PARSERS","TileMatrix","MinTileRow","MaxTileRow","MinTileCol","MaxTileCol","LowerCorner","readCoordinates","UpperCorner","WellKnownScaleSet","TM_PARSERS","SupportedCRS","TopLeftCorner","ScaleDenominator","TileWidth","TileHeight","MatrixWidth","MatrixHeight","format_WMTSCapabilities","GeolocationProperty","ACCURACY","ACCURACY_GEOMETRY","ALTITUDE","ALTITUDE_ACCURACY","HEADING","PROJECTION","SPEED","TRACKING","TRACKING_OPTIONS","ol_Geolocation","Geolocation","position_","watchId_","handleProjectionChanged_","handleTrackingChanged_","trackingOptions","setTrackingOptions","setTracking","tracking","getTracking","geolocation","watchPosition","positionChange_","positionError_","getTrackingOptions","clearWatch","accuracy","altitude","altitudeAccuracy","longitude","latitude","projectedPosition","speed","getAccuracy","getAccuracyGeometry","getAltitude","getAltitudeAccuracy","getHeading","getSpeed","geodesic_line","geoM","fracA","fracB","fracM","geoA","geoB","geoStack","fractionStack","fractions","maxIterations","INTERVALS","Graticule_Graticule","postcomposeListenerKey_","maxLat_","maxLon_","minLat_","minLon_","maxLatP_","maxLonP_","minLatP_","minLonP_","targetSize_","targetSize","maxLines_","maxLines","meridians_","parallels_","strokeStyle_","fromLonLatTransform_","toLonLatTransform_","projectionCenterLonLat_","meridiansLabels_","parallelsLabels_","showLabels","lonLabelFormatter_","lonLabelFormatter","latLabelFormatter_","latLabelFormatter","lonLabelPosition_","lonLabelPosition","latLabelPosition_","latLabelPosition","lonLabelStyle_","lonLabelStyle","latLabelStyle_","latLabelStyle","addMeridian_","getMeridian_","textPoint","getMeridianPoint_","clampedBottom","clampedTop","addParallel_","getParallel_","getParallelPoint_","clampedLeft","clampedRight","createGraticule_","getInterval_","cnt","centerLonLat","centerLon","centerLat","validExtent","epsg4326Projection","frac","meridian","getMeridians","lon2","parallel","getParallels","handlePostCompose_","labelData","updateProjectionInfo_","worldExtentP","render_EventType","ol_Graticule","ol_VectorImageTile","VectorImageTile","sourceTiles","replayState_","sourceRevision_","loadListenerKeys_","sourceTileListenerKeys_","sourceZ","useLoadedOnly","loadCount","sourceTileKey","consumers","finishLoading_","errorSourceTiles","setLoader","empty","DEFAULT_EXTENT","ol_VectorTile","VectorTile","format_","features_","replayGroups_","url_","getFormat","onLoad","setFeatures","onError","loader","Shader_WebGLShader","isAnimated","Shader","Fragment","WebGLShader","WebGLFragment","webgl","Vertex","WebGLVertex","fragment","defaultshader_Locations","program","u_projectionMatrix","getUniformLocation","u_offsetScaleMatrix","u_offsetRotateMatrix","u_lineWidth","u_pixelRatio","u_opacity","u_fillColor","u_strokeColor","u_size","a_position","getAttribLocation","a_instruction","a_radius","fromTransform","mat4","WebGLReplay","projectionMatrix_","offsetRotateMatrix_","offsetScaleMatrix_","tmpMat4_","indicesBuffer","startIndices","startIndicesFeature","verticesBuffer","getDeleteResourcesFunction","setUpProgram","shutDownProgram","locations","drawReplay","hitDetection","drawHitDetectionReplayOneByOne","drawHitDetectionReplay","oneByOne","drawHitDetectionReplayAll","DEPTH_BUFFER_BIT","tmpStencil","tmpStencilFunc","tmpStencilMaskVal","tmpStencilRef","tmpStencilMask","tmpStencilOpFail","tmpStencilOpPass","tmpStencilOpZFail","getGL","isEnabled","STENCIL_FUNC","STENCIL_VALUE_MASK","STENCIL_REF","STENCIL_WRITEMASK","STENCIL_FAIL","STENCIL_PASS_DEPTH_PASS","STENCIL_PASS_DEPTH_FAIL","enable","STENCIL_BUFFER_BIT","stencilMask","stencilFunc","ALWAYS","stencilOp","KEEP","REPLACE","NOTEQUAL","bindBuffer","projectionMatrix","offsetScaleMatrix","offsetRotateMatrix","uniformMatrix4fv","uniform1f","drawElements","elementType","hasOESElementIndexUint","numItems","offsetInBytes","DEFAULT_FILLSTYLE","DEFAULT_LINEDASH","DEFAULT_STROKESTYLE","EPSILON","triangleIsCounterClockwise","BufferUsage","WebGLBuffer","opt_arr","opt_usage","arr_","usage_","getUsage","Buffer","CircleReplay","WebGLCircleReplay","defaultLocations_","styles_","styleIndices_","fillColor","strokeColor","numVertices","numIndices","lastState","deleteBuffer","getProgram","useProgram","enableVertexAttribArray","vertexAttribPointer","uniform2fv","disableVertexAttribArray","nextStyle","setFillStyle_","drawReplaySkipping_","groupStart","featureIndex","featureStart","uniform4fv","defaultshader_fragment","defaultshader_vertex","texturereplay_defaultshader_Locations","u_image","a_texCoord","a_offsets","a_opacity","a_rotateWithView","ContextEventType","LOST","RESTORED","createTextureInternal","opt_wrapS","opt_wrapT","texture","createTexture","bindTexture","texParameteri","createEmptyTexture","texImage2D","Context","WebGLContext","gl_","bufferCache_","shaderCache_","programCache_","currentProgram_","hitDetectionFramebuffer_","hitDetectionTexture_","hitDetectionRenderbuffer_","getExtension","handleWebGLContextLost","handleWebGLContextRestored","bufferKey","bufferCacheEntry","arrayBuffer","createBuffer","Float32Array","Uint32Array","Uint16Array","bufferData","isContextLost","key$1","deleteProgram","key$2","deleteShader","deleteFramebuffer","deleteRenderbuffer","deleteTexture","getCanvas","getHitDetectionFramebuffer","initHitDetectionFramebuffer_","getShader","shaderObject","shaderKey","shader","createShader","shaderSource","compileShader","fragmentShaderObject","vertexShaderObject","programKey","createProgram","attachShader","linkProgram","framebuffer","createFramebuffer","bindFramebuffer","renderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","framebufferTexture2D","framebufferRenderbuffer","DEPTH_ATTACHMENT","TextureReplay","WebGLTextureReplay","groupIndices","hitDetectionGroupIndices","imageHeight","imageWidth","defaultLocations","textures","getTextures","drawCoordinates","createTextures","images","texturePerImage","getHitDetectionTextures","drawReplaySkipping","groupEnd","hitDetectionTextures","opt_all","WebGLImageReplay","images_","hitDetectionImages_","textures_","hitDetectionTextures_","currentImage","lineStringIsClosed","linestringreplay_defaultshader_fragment","linestringreplay_defaultshader_vertex","linestringreplay_defaultshader_Locations","u_miterLimit","u_color","a_lastPos","a_nextPos","a_direction","WebGLLineStringReplay","startCoords","sign","lastSign","addVertices_","product","isValid_","firstP","lastP","indexCount","drawPolygonCoordinates","holeFlatCoordinates","setPolygonStyle","opt_index","getCurrentIndex","tmpDepthFunc","DEPTH_FUNC","tmpDepthMask","DEPTH_WRITEMASK","depthMask","depthFunc","polygonreplay_defaultshader_fragment","polygonreplay_defaultshader_vertex","polygonreplay_defaultshader_Locations","LinkedList","opt_circular","first_","last_","head_","circular_","length_","insertItem","removeItem","firstItem","lastItem","nextItem","getNextItem","prevItem","getPrevItem","getCurrItem","setFirstItem","structs_LinkedList","WebGLPolygonReplay","rtree","processFlatCoordinates_","maxCoords","getMaxCoords_","holeLists","holeList","classifyPoints_","currList","currItem","getIntersections_","bridgeHole_","triangulate_","createPoint_","insertItem_","seg","ccw","s0","pointsReclassified","reflex","removeItem_","holeMaxX","listMaxX","bestPoint","p5","minDist","intersectingSegments","currSeg","calculateIntersection_","dist","pointsInTriangle","getPointsInTriangle_","currPoint","currTheta","p0Bridge","p1Bridge","simple","isSimple_","clipEars_","resolveSelfIntersections_","splitPolygon_","isClockwise_","s3","processedEars","variableCriterion","diagonalIsInside_","opt_touch","resolvedIntersections","breakCond","newPolygon","newRtree","opt_rtree","opt_reflex","segmentsInExtent","segment","denom","ub","p1IsLeftOf","p1IsRightOf","p3IsLeftOf","p3IsRightOf","p1InCone","p3InCone","currIndex","currLineIndex","holeFlatCoords","lineDeleter","nullStrokeStyle","Atlas_Atlas","space","space_","emptyBlocks_","renderCallback","split_","newBlock1","newBlock2","updateBlocks_","style_Atlas","AtlasManager_AtlasManager","currentSize_","initialSize","maxSize_","maxSize","atlases_","currentHitSize_","hitAtlases_","getInfo","getInfo_","hitInfo","mergeInfos_","atlases","opt_renderHitCallback","add_","renderHitCallback","isHitAtlas","atlas","style_AtlasManager","TextReplay_WebGLTextReplay","WebGLTextReplay","measureCanvas_","currAtlas_","currX","currY","charArr","charInfo","glyphAtlas","textSize","getTextSize_","textHeight","sum","curr","addCharToAtlas_","reduce","mCtx","getAtlas_","calculateHash_","HIT_DETECTION_SIZE","webgl_ReplayGroup","WebGLReplayGroup","replayHitDetection_","readPixels","WebGLImmediateRenderer","center_","imageStyle_","fillStyle_","textStyle_","defaultmapshader_fragment","defaultmapshader_vertex","defaultmapshader_Locations","u_texCoordMatrix","u_texture","webgl_Layer","WebGLLayerRenderer","arrayBuffer_","framebufferDimension","texCoordMatrix","uniform1i","getTexCoordMatrix","getProjectionMatrix","getTexture","drawArrays","ImageLayer_WebGLImageLayerRenderer","WebGLImageLayerRenderer","hitTransformationMatrix_","createTexture_","imageElement","updateProjectionMatrix_","canvasWidth","canvasHeight","canvasExtentWidth","canvasExtentHeight","getHitTransformationMatrix_","pixelOnFrameBuffer","mapCoordTransform","projectionMatrixInv","webgl_Map","WebGLMapRenderer","clipTileCanvasWidth_","clipTileCanvasHeight_","clipTileContext_","antialias","depth","preserveDrawingBuffer","stencil","textureCache_","tileTextureQueue_","loadNextTileTexture_","bindTileTexture","textureCacheFrameMarkerCount_","initializeGL_","magFilter","minFilter","textureCacheEntry","clipTileCanvas","clipTileContext","expireCache_","getTileTextureQueue","renderers","activeTexture","blendFuncSeparate","isTileTextureLoaded","layerStatesToDraw","layer_Layer","clearColor","viewport","hasFeature","tilelayershader_fragment","tilelayershader_vertex","tilelayershader_Locations","u_tileOffset","TileLayer_WebGLTileLayerRenderer","WebGLTileLayerRenderer","fragmentShader_","vertexShader_","locations_","renderArrayBuffer_","renderedTileRange_","renderedFramebufferExtent_","framebufferExtent","tilePixelResolution","tileRangeSize","maxDimension","framebufferExtentDimension","allTilesLoaded","tileTextureQueue","pixelOnMapScaled","pixelOnFrameBufferScaled","VectorLayer_WebGLVectorLayerRenderer","WebGLVectorLayerRenderer","layerState_","scissor","ol_WebGLMap","WebGLMap","control_util","reproj_Image","ReprojImage","getImageFunction","sourceImage","sourcePixelRatio","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","unlistenSource_","ol_ImageBase","ImageSourceEventType","ImageSourceEvent","defaultImageLoadFunction","source_Image","ImageSource","reprojectedImage_","reprojectedRevision_","findNearestResolution","getImageInternal","handleImageChange","WMSServerType","GETFEATUREINFO_IMAGE_SIZE","ImageWMS_ImageWMS","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","ratio_","getGetFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","SERVICE","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","getParams","viewWidth","viewHeight","viewExtent","requestWidth","requestHeight","requestExtent","getImageLoadFunction","dpi","keyParams","qs","appendParams","getUrl","setImageLoadFunction","updateParams","Vector_VectorLayer","renderBuffer","declutter_","updateWhileAnimating_","updateWhileInteracting_","renderMode_","setDeclutter","setRenderOrder","Heatmap_Property","BLUR","GRADIENT","DEFAULT_GRADIENT","layer_Heatmap","Heatmap","gradient","blur","shadow","gradient_","shadow_","circleImage_","styleCache_","handleGradientChanged_","setGradient","setBlur","handleStyleChanged_","weightFunction","handleRender_","createCircle_","getBlur","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","toDataURL","getGradient","colors","createLinearGradient","step","addColorStop","createGradient","view8","VectorTile_VectorTileLayer","TileProperty","loadingstrategy_all","VectorEventType","VectorSourceEvent","opt_feature","Vector_VectorSource","featureloader","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","undefIdIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","newFeatures","geometryFeatures","length$1","feature$1","featureKey$1","i$2","length$2","modifyingCollection","CollectionEventType","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","getFeaturesInExtent","getClosestFeatureToCoordinate","opt_filter","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removed"],"mappings":"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","file":"ngw-ol.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NgwOl\"] = factory();\n\telse\n\t\troot[\"NgwOl\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 147);\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  var extent = createEmpty();\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @private\n * @return {module:ol/extent~Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  var minX = Math.min.apply(null, xs);\n  var minY = Math.min.apply(null, ys);\n  var maxX = Math.max.apply(null, xs);\n  var maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {module:ol/extent~Extent} extent Extent to clone.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  var dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @return {module:ol/extent/Relationship} The relationship (bitwise compare with\n *     module:ol/extent/Relationship~Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var x = coordinate[0];\n  var y = coordinate[1];\n  var relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {module:ol/extent~Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  var extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {module:ol/extent~Extent} extent1 The extent to be modified.\n * @param {module:ol/extent~Extent} extent2 The extent that will be included in the first.\n * @return {module:ol/extent~Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} rings Rings.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this:T, module:ol/coordinate~Coordinate): S} callback Callback.\n * @param {T=} opt_this Value to use as `this` when executing `callback`.\n * @return {S|boolean} Value.\n * @template S, T\n */\nexport function forEachCorner(extent, callback, opt_this) {\n  var val;\n  val = callback.call(opt_this, getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback.call(opt_this, getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  var area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent/Corner} corner Corner.\n * @return {module:ol/coordinate~Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  var coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return (\n    /** @type {!module:ol/coordinate~Coordinate} */ (coordinate)\n  );\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  var minX = Math.min(extent1[0], extent2[0]);\n  var minY = Math.min(extent1[1], extent2[1]);\n  var maxX = Math.max(extent1[2], extent2[2]);\n  var maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {module:ol/size~Size} size Size.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  var dx = resolution * size[0] / 2;\n  var dy = resolution * size[1] / 2;\n  var cosRotation = Math.cos(rotation);\n  var sinRotation = Math.sin(rotation);\n  var xCos = dx * cosRotation;\n  var xSin = dx * sinRotation;\n  var yCos = dy * cosRotation;\n  var ySin = dy * sinRotation;\n  var x = center[0];\n  var y = center[1];\n  var x0 = x - xCos + ySin;\n  var x1 = x - xCos - ySin;\n  var x2 = x + xCos - ySin;\n  var x3 = x + xCos + ySin;\n  var y0 = y - xSin - yCos;\n  var y1 = y - xSin + yCos;\n  var y2 = y + xSin + yCos;\n  var y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  var intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent 2.\n * @param {module:ol/extent~Extent=} opt_extent Optional extent to populate with intersection.\n * @return {module:ol/extent~Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  var intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/size~Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/coordinate~Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {module:ol/extent~Extent} extent1 Extent 1.\n * @param {module:ol/extent~Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  var deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  var deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {module:ol/extent~Extent} extent The extent.\n * @param {module:ol/coordinate~Coordinate} start Segment start coordinate.\n * @param {module:ol/coordinate~Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  var intersects = false;\n  var startRel = coordinateRelationship(extent, start);\n  var endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    var minX = extent[0];\n    var minY = extent[1];\n    var maxX = extent[2];\n    var maxY = extent[3];\n    var startX = start[0];\n    var startY = start[1];\n    var endX = end[0];\n    var endY = end[1];\n    var slope = (endY - startY) / (endX - startX);\n    var x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/proj~TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {module:ol/extent~Extent=} opt_extent Destination extent.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  var coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  var xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  var ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n\n//# sourceMappingURL=extent.js.map","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {Object} [bindTo]\n * @property {module:ol/events~ListenerFunction} [boundListener]\n * @property {boolean} callOnce\n * @property {number} [deleteIndex]\n * @property {module:ol/events~ListenerFunction} listener\n * @property {module:ol/events/Target~EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function(module:ol/events/Event)|function(module:ol/events/Event): boolean} ListenerFunction\n * @api\n */\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  var boundListener = function(evt) {\n    var listener = listenerObj.listener;\n    var bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {!Array<!module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {!Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  var listenerObj;\n  for (var i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  var listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @return {!Object<string, Array<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  var listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    for (var i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    var listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  var listenerMap = getListenerMap(target);\n  var listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  var listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/Target~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  var listeners = getListeners(target, type);\n  if (listeners) {\n    var listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    var listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      var i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/Target~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  var listenerMap = getListenerMap(target);\n  for (var type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n\n//# sourceMappingURL=events.js.map","/**\n * @module ol/webgl\n */\n\n\n/**\n * Constants taken from goog.webgl\n */\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE = 1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SRC_ALPHA = 0x0302;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_ATTACHMENT0 = 0x8CE0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COLOR_BUFFER_BIT = 0x00004000;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLES = 0x0004;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TRIANGLE_STRIP = 0x0005;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ONE_MINUS_SRC_ALPHA = 0x0303;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ARRAY_BUFFER = 0x8892;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var ELEMENT_ARRAY_BUFFER = 0x8893;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STREAM_DRAW = 0x88E0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STATIC_DRAW = 0x88E4;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DYNAMIC_DRAW = 0x88E8;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CULL_FACE = 0x0B44;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var BLEND = 0x0BE2;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var STENCIL_TEST = 0x0B90;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEPTH_TEST = 0x0B71;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var SCISSOR_TEST = 0x0C11;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_BYTE = 0x1401;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_SHORT = 0x1403;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var UNSIGNED_INT = 0x1405;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FLOAT = 0x1406;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var RGBA = 0x1908;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAGMENT_SHADER = 0x8B30;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var VERTEX_SHADER = 0x8B31;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINK_STATUS = 0x8B82;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var LINEAR = 0x2601;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MAG_FILTER = 0x2800;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_MIN_FILTER = 0x2801;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_S = 0x2802;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_WRAP_T = 0x2803;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE_2D = 0x0DE1;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var TEXTURE0 = 0x84C0;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var CLAMP_TO_EDGE = 0x812F;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var COMPILE_STATUS = 0x8B81;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var FRAMEBUFFER = 0x8D40;\n\n\n/** end of goog.webgl constants\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar CONTEXT_IDS = [\n  'experimental-webgl',\n  'webgl',\n  'webkit-3d',\n  'moz-webgl'\n];\n\n\n/**\n * @param {HTMLCanvasElement} canvas Canvas.\n * @param {Object=} opt_attributes Attributes.\n * @return {WebGLRenderingContext} WebGL rendering context.\n */\nexport function getContext(canvas, opt_attributes) {\n  var ii = CONTEXT_IDS.length;\n  for (var i = 0; i < ii; ++i) {\n    try {\n      var context = canvas.getContext(CONTEXT_IDS[i], opt_attributes);\n      if (context) {\n        return /** @type {!WebGLRenderingContext} */ (context);\n      }\n    } catch (e) {\n      // pass\n    }\n  }\n  return null;\n}\n\n\n/**\n * Include debuggable shader sources.  Default is `true`. This should be set to\n * `false` for production builds.\n * @type {boolean}\n */\nexport var DEBUG = true;\n\n\n/**\n * The maximum supported WebGL texture size in pixels. If WebGL is not\n * supported, the value is set to `undefined`.\n * @type {number|undefined}\n */\nvar MAX_TEXTURE_SIZE; // value is set below\n\n\n/**\n * List of supported WebGL extensions.\n * @type {Array<string>}\n */\nvar EXTENSIONS; // value is set below\n\n\n/**\n * True if both OpenLayers and browser support WebGL.\n * @type {boolean}\n * @api\n */\nvar HAS = false;\n\n//TODO Remove side effects\nif (typeof window !== 'undefined' && 'WebGLRenderingContext' in window) {\n  try {\n    var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    var gl = getContext(canvas, {failIfMajorPerformanceCaveat: true});\n    if (gl) {\n      HAS = true;\n      MAX_TEXTURE_SIZE = /** @type {number} */ (gl.getParameter(gl.MAX_TEXTURE_SIZE));\n      EXTENSIONS = gl.getSupportedExtensions();\n    }\n  } catch (e) {\n    // pass\n  }\n}\n\nexport {HAS, MAX_TEXTURE_SIZE, EXTENSIONS};\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n\n//# sourceMappingURL=GeometryType.js.map","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {module:ol/transform~Transform}\n */\nvar tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!module:ol/transform~Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!module:ol/transform~Transform} transform1 Transform parameters of matrix 1.\n * @param {!module:ol/transform~Transform} transform2 Transform parameters of matrix 2.\n * @return {!module:ol/transform~Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  var a1 = transform1[0];\n  var b1 = transform1[1];\n  var c1 = transform1[2];\n  var d1 = transform1[3];\n  var e1 = transform1[4];\n  var f1 = transform1[5];\n  var a2 = transform2[0];\n  var b2 = transform2[1];\n  var c2 = transform2[2];\n  var d2 = transform2[3];\n  var e2 = transform2[4];\n  var f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!module:ol/transform~Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!module:ol/transform~Transform} transform1 Matrix to set transform to.\n * @param {!module:ol/transform~Transform} transform2 Matrix to set transform from.\n * @return {!module:ol/transform~Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {module:ol/transform~Transform} transform The transformation.\n * @param {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} coordinate The coordinate to transform.\n * @return {module:ol/coordinate~Coordinate|module:ol/pixel~Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  var x = coordinate[0];\n  var y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!module:ol/transform~Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!module:ol/transform~Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n\n/**\n * Applies translation to the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!module:ol/transform~Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!module:ol/transform~Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!module:ol/transform~Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  var sin = Math.sin(angle);\n  var cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!module:ol/transform~Transform} transform Transform.\n * @return {!module:ol/transform~Transform} Inverse of the transform.\n */\nexport function invert(transform) {\n  var det = determinant(transform);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  var a = transform[0];\n  var b = transform[1];\n  var c = transform[2];\n  var d = transform[3];\n  var e = transform[4];\n  var f = transform[5];\n\n  transform[0] = d / det;\n  transform[1] = -b / det;\n  transform[2] = -c / det;\n  transform[3] = a / det;\n  transform[4] = (c * f - d * e) / det;\n  transform[5] = -(a * f - b * e) / det;\n\n  return transform;\n}\n\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!module:ol/transform~Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~Event#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  ERROR: 'error',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  MOUSEDOWN: 'mousedown',\n  MOUSEMOVE: 'mousemove',\n  MOUSEOUT: 'mouseout',\n  MOUSEUP: 'mouseup',\n  MOUSEWHEEL: 'mousewheel',\n  MSPOINTERDOWN: 'MSPointerDown',\n  RESIZE: 'resize',\n  TOUCHSTART: 'touchstart',\n  TOUCHMOVE: 'touchmove',\n  TOUCHEND: 'touchend',\n  WHEEL: 'wheel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/util\n */\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * Usage:\n *\n *     function ParentClass(a, b) { }\n *     ParentClass.prototype.foo = function(a) { }\n *\n *     function ChildClass(a, b, c) {\n *       // Call parent constructor\n *       ParentClass.call(this, a, b);\n *     }\n *     inherits(ChildClass, ParentClass);\n *\n *     var child = new ChildClass('a', 'b', 'see');\n *     child.foo(); // This works.\n *\n * @param {!Function} childCtor Child constructor.\n * @param {!Function} parentCtor Parent constructor.\n * @function module:ol.inherits\n * @deprecated\n * @api\n */\nexport function inherits(childCtor, parentCtor) {\n  childCtor.prototype = Object.create(parentCtor.prototype);\n  childCtor.prototype.constructor = childCtor;\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nvar uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {number} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = ++uidCounter_);\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport var VERSION = '5.2.0';\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  var mid, cmp;\n  var comparator = opt_comparator || numberSafeCompareFunction;\n  var low = 0;\n  var high = haystack.length;\n  var found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  var n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    var i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    var tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  var extension = Array.isArray(data) ? data : [data];\n  var length = extension.length;\n  for (var i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  var i = arr.indexOf(obj);\n  var found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  var length = arr.length >>> 0;\n  var value;\n\n  for (var i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  var len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (var i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  var length = arr.length;\n  var tmp = Array(arr.length);\n  var i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  var index;\n  var found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  var compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    var res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n\n//# sourceMappingURL=array.js.map","/**\n * @module ol/math\n */\nimport {assert} from './asserts.js';\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport var cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  var cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      var y = Math.exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * @param {number} x X.\n * @return {number} The smallest power of two greater than or equal to x.\n */\nexport function roundUpToPowerOfTwo(x) {\n  assert(0 < x, 29); // `x` must be greater than `0`\n  return Math.pow(2, Math.ceil(Math.log(x) / Math.LN2));\n}\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  var n = mat.length;\n\n  for (var i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    var maxRow = i;\n    var maxEl = Math.abs(mat[i][i]);\n    for (var r = i + 1; r < n; r++) {\n      var absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    var tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (var j = i + 1; j < n; j++) {\n      var coef = -mat[j][i] / mat[i][i];\n      for (var k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  var x = new Array(n);\n  for (var l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (var m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  var r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n//# sourceMappingURL=math.js.map","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   * @api\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n\n//# sourceMappingURL=TileState.js.map","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport var assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  var arguments$1 = arguments;\n\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  var output = Object(target);\n  for (var i = 1, ii = arguments.length; i < ii; ++i) {\n    var source = arguments$1[i];\n    if (source !== undefined && source !== null) {\n      for (var key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (var property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  var values = [];\n  for (var property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  var property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n\n//# sourceMappingURL=obj.js.map","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n\n//# sourceMappingURL=GeometryLayout.js.map","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nvar EPSG3857Projection = (function (Projection) {\n  function EPSG3857Projection(code) {\n    Projection.call(this, {\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n  if ( Projection ) EPSG3857Projection.__proto__ = Projection;\n  EPSG3857Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG3857Projection.prototype.constructor = EPSG3857Projection;\n\n  return EPSG3857Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  var halfSize = HALF_SIZE;\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    var y = RADIUS *\n        Math.log(Math.tan(Math.PI * (input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  var length = input.length;\n  var dimension = opt_dimension > 1 ? opt_dimension : 2;\n  var output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (var i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n\n//# sourceMappingURL=epsg3857.js.map","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport var RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {module:ol/extent~Extent}\n */\nexport var EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nvar EPSG4326Projection = (function (Projection) {\n  function EPSG4326Projection(code, opt_axisOrientation) {\n    Projection.call(this, {\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n  if ( Projection ) EPSG4326Projection.__proto__ = Projection;\n  EPSG4326Projection.prototype = Object.create( Projection && Projection.prototype );\n  EPSG4326Projection.prototype.constructor = EPSG4326Projection;\n\n  return EPSG4326Projection;\n}(Projection));\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<module:ol/proj/Projection>}\n */\nexport var PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n\n//# sourceMappingURL=epsg4326.js.map","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, module:ol/proj/Projection>}\n */\nvar cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {module:ol/proj/Projection} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {module:ol/proj/Projection} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n\n//# sourceMappingURL=projections.js.map","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, module:ol/proj~TransformFunction>>}\n */\nvar transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} source Source.\n * @param {module:ol/proj/Projection} destination Destination.\n * @param {module:ol/proj~TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {module:ol/proj/Projection} source Source projection.\n * @param {module:ol/proj/Projection} destination Destination projection.\n * @return {module:ol/proj~TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  var sourceCode = source.getCode();\n  var destinationCode = destination.getCode();\n  var transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {module:ol/proj~TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  var transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n\n//# sourceMappingURL=transforms.js.map","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport * as projections from './proj/projections.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {module:ol/proj/Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  var output;\n  if (opt_output !== undefined) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (var i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {module:ol/proj/Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  projections.add(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {module:ol/proj~ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {module:ol/proj/Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  var projection = null;\n  if (projectionLike instanceof Projection) {\n    projection = projectionLike;\n  } else if (typeof projectionLike === 'string') {\n    var code = projectionLike;\n    projection = projections.get(code);\n  }\n  return projection;\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {module:ol/proj~ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {module:ol/coordinate~Coordinate} point Point to find adjusted resolution at.\n * @param {module:ol/proj/Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  var pointResolution;\n  var getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n  } else {\n    var units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      var toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      var vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      var width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      var height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      var metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<module:ol/proj/Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<module:ol/proj/Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<module:ol/proj/Projection>} projections2 Projections with equal\n *     meaning.\n * @param {module:ol/proj~TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {module:ol/proj~TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  projections.clear();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {module:ol/proj/Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {module:ol/proj/Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} coordTransform Coordinate\n *     transform.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      var length = input.length;\n      var dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      var output = opt_output !== undefined ? opt_output : new Array(length);\n      for (var i = 0; i < length; i += dimension) {\n        var point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (var j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {module:ol/proj~ProjectionLike} source Source projection.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(module:ol/coordinate~Coordinate): module:ol/coordinate~Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  var sourceProj = get(source);\n  var destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {module:ol/coordinate~Coordinate} coordinate Projected coordinate.\n * @param {module:ol/proj~ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {module:ol/coordinate~Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  var lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  var lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {module:ol/proj/Projection} projection1 Projection 1.\n * @param {module:ol/proj/Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  var equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    var transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {module:ol/proj/Projection} sourceProjection Source Projection object.\n * @param {module:ol/proj/Projection} destinationProjection Destination Projection\n *     object.\n * @return {module:ol/proj~TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  var sourceCode = sourceProjection.getCode();\n  var destinationCode = destinationProjection.getCode();\n  var transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {module:ol/proj~ProjectionLike} source Source.\n * @param {module:ol/proj~ProjectionLike} destination Destination.\n * @return {module:ol/proj~TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  var sourceProjection = get(source);\n  var destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {module:ol/extent~Extent} extent The extent to transform.\n * @param {module:ol/proj~ProjectionLike} source Source projection-like.\n * @param {module:ol/proj~ProjectionLike} destination Destination projection-like.\n * @return {module:ol/extent~Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  var transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {module:ol/coordinate~Coordinate} point Point.\n * @param {module:ol/proj/Projection} sourceProjection Source projection.\n * @param {module:ol/proj/Projection} destinationProjection Destination projection.\n * @return {module:ol/coordinate~Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  var transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n\n//# sourceMappingURL=proj.js.map","/**\n * @module ol/render/canvas\n */\nimport {getFontFamilies} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport LRUCache from '../structs/LRUCache.js';\nimport {create as createTransform} from '../transform.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {module:ol/colorlike~ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {module:ol/colorlike~ColorLike} [currentFillStyle]\n * @property {module:ol/colorlike~ColorLike} [currentStrokeStyle]\n * @property {string} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {string} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {module:ol/colorlike~ColorLike} [fillStyle]\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {string} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {string} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {module:ol/colorlike~ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n */\n\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultFillStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var defaultStrokeStyle = [0, 0, 0, 1];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {module:ol/structs/LRUCache<HTMLCanvasElement>}\n * @api\n */\nexport var labelCache = new LRUCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nvar measureContext = null;\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport var textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport var checkFont = (function() {\n  var retries = 60;\n  var checked = checkedFonts;\n  var size = '32px ';\n  var referenceFonts = ['monospace', 'serif'];\n  var len = referenceFonts.length;\n  var text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  var interval, referenceWidth;\n\n  function isAvailable(font) {\n    var context = getMeasureContext();\n    // Check weight ranges according to\n    // https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight#Fallback_weights\n    for (var weight = 100; weight <= 700; weight += 300) {\n      var fontWeight = weight + ' ';\n      var available = true;\n      for (var i = 0; i < len; ++i) {\n        var referenceFont = referenceFonts[i];\n        context.font = fontWeight + size + referenceFont;\n        referenceWidth = context.measureText(text).width;\n        if (font != referenceFont) {\n          context.font = fontWeight + size + font + ',' + referenceFont;\n          var width = context.measureText(text).width;\n          // If width and referenceWidth are the same, then the fallback was used\n          // instead of the font we wanted, so the font is not available.\n          available = available && width != referenceWidth;\n        }\n      }\n      if (available) {\n        // Consider font available when it is available in one weight range.\n        //FIXME With this we miss rare corner cases, so we should consider\n        //FIXME checking availability for each requested weight range.\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function check() {\n    var done = true;\n    for (var font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable(font)) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          labelCache.clear();\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    var fontFamilies = getFontFamilies(fontSpec);\n    if (!fontFamilies) {\n      return;\n    }\n    for (var i = 0, ii = fontFamilies.length; i < ii; ++i) {\n      var fontFamily = fontFamilies[i];\n      if (!(fontFamily in checked)) {\n        checked[fontFamily] = retries;\n        if (!isAvailable(fontFamily)) {\n          checked[fontFamily] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {module:ol/size~Size} Measurement.\n */\nexport var measureTextHeight = (function() {\n  var span;\n  var heights = textHeights;\n  return function(font) {\n    var height = heights[font];\n    if (height == undefined) {\n      if (!span) {\n        span = document.createElement('span');\n        span.textContent = 'M';\n        span.style.margin = span.style.padding = '0 !important';\n        span.style.position = 'absolute !important';\n        span.style.left = '-99999px !important';\n      }\n      span.style.font = font;\n      document.body.appendChild(span);\n      height = heights[font] = span.offsetHeight;\n      document.body.removeChild(span);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  var measureContext = getMeasureContext();\n  if (font != measureContext.font) {\n    measureContext.font = font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport var resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {module:ol/transform~Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  var alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (alpha) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n\n//# sourceMappingURL=canvas.js.map","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n\n//# sourceMappingURL=asserts.js.map","/**\n * @module ol/functions\n */\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n//# sourceMappingURL=functions.js.map","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  var canvas = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return /** @type {CanvasRenderingContext2D} */ (canvas.getContext('2d'));\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  var width = element.offsetWidth;\n  var style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  var height = element.offsetHeight;\n  var style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  var parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n//# sourceMappingURL=dom.js.map","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3\n};\n\n//# sourceMappingURL=ImageState.js.map","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n  */\nvar ObjectEvent = (function (Event) {\n  function ObjectEvent(type, key, oldValue) {\n    Event.call(this, type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n  if ( Event ) ObjectEvent.__proto__ = Event;\n  ObjectEvent.prototype = Object.create( Event && Event.prototype );\n  ObjectEvent.prototype.constructor = ObjectEvent;\n\n  return ObjectEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires module:ol/Object~ObjectEvent\n * @api\n */\nvar BaseObject = (function (Observable) {\n  function BaseObject(opt_values) {\n    Observable.call(this);\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  if ( Observable ) BaseObject.__proto__ = Observable;\n  BaseObject.prototype = Object.create( Observable && Observable.prototype );\n  BaseObject.prototype.constructor = BaseObject;\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  BaseObject.prototype.get = function get (key) {\n    var value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  };\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  BaseObject.prototype.getKeys = function getKeys () {\n    return Object.keys(this.values_);\n  };\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  BaseObject.prototype.getProperties = function getProperties () {\n    return assign({}, this.values_);\n  };\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  BaseObject.prototype.notify = function notify (key, oldValue) {\n    var eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  };\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.set = function set (key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      var oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.setProperties = function setProperties (values, opt_silent) {\n    var this$1 = this;\n\n    for (var key in values) {\n      this$1.set(key, values[key], opt_silent);\n    }\n  };\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  BaseObject.prototype.unset = function unset (key, opt_silent) {\n    if (key in this.values_) {\n      var oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  };\n\n  return BaseObject;\n}(Observable));\n\n\n/**\n * @type {Object<string, string>}\n */\nvar changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n\n//# sourceMappingURL=Object.js.map","/**\n * @module ol/render/ReplayType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n\n//# sourceMappingURL=ReplayType.js.map","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n\n//# sourceMappingURL=ViewHint.js.map","/**\n * @module ol/css\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport var CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {Object<string>} The font families (or null if the input spec is invalid).\n */\nexport var getFontFamilies = (function() {\n  var style;\n  var cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      var family = style.fontFamily;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      cache[font] = family.split(/,\\s?/);\n    }\n    return cache[font];\n  };\n})();\n\n//# sourceMappingURL=css.js.map","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=MapBrowserEventType.js.map","/**\n * @module ol/has\n */\n\nvar ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport var FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport var SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport var WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport var MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport var DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n\n/**\n * True if the browser's Canvas implementation implements {get,set}LineDash.\n * @type {boolean}\n */\nexport var CANVAS_LINE_DASH = function() {\n  var has = false;\n  try {\n    has = !!document.createElement('canvas').getContext('2d').setLineDash;\n  } catch (e) {\n    // pass\n  }\n  return has;\n}();\n\n\n/**\n * Is HTML5 geolocation supported in the current browser?\n * @const\n * @type {boolean}\n * @api\n */\nexport var GEOLOCATION = 'geolocation' in navigator;\n\n\n/**\n * True if browser supports touch events.\n * @const\n * @type {boolean}\n * @api\n */\nexport var TOUCH = 'ontouchstart' in window;\n\n\n/**\n * True if browser supports pointer events.\n * @const\n * @type {boolean}\n */\nexport var POINTER = 'PointerEvent' in window;\n\n\n/**\n * True if browser supports ms pointer events (IE 10).\n * @const\n * @type {boolean}\n */\nexport var MSPOINTER = !!(navigator.msPointerEnabled);\n\n\nexport {HAS as WEBGL} from './webgl.js';\n\n//# sourceMappingURL=has.js.map","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from '../geom/flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingsContainsXY} from '../geom/flat/contains.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointOfArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingIsOriented, orientLinearRings} from '../geom/flat/orient.js';\nimport {quantizeArray} from '../geom/flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nvar Polygon = (function (SimpleGeometry) {\n  function Polygon(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) Polygon.__proto__ = SimpleGeometry;\n  Polygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Polygon.prototype.constructor = Polygon;\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n   * @api\n   */\n  Polygon.prototype.appendLinearRing = function appendLinearRing (linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Polygon} Clone.\n   * @override\n   * @api\n   */\n  Polygon.prototype.clone = function clone () {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  Polygon.prototype.getArea = function getArea () {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  Polygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  Polygon.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  Polygon.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      var flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  };\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {module:ol/geom/Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  Polygon.prototype.getInteriorPoint = function getInteriorPoint () {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  };\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRingCount = function getLinearRingCount () {\n    return this.ends_.length;\n  };\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {module:ol/geom/LinearRing} Linear ring.\n   * @api\n   */\n  Polygon.prototype.getLinearRing = function getLinearRing (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<module:ol/geom/LinearRing>} Linear rings.\n   * @api\n   */\n  Polygon.prototype.getLinearRings = function getLinearRings () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var linearRings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  Polygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingIsOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.getType = function getType () {\n    return GeometryType.POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Polygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  Polygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return Polygon;\n}(SimpleGeometry));\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {module:ol/coordinate~Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {module:ol/geom/Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  var n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n  for (var i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {module:ol/extent~Extent} extent The extent.\n * @return {module:ol/geom/Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  var minX = extent[0];\n  var minY = extent[1];\n  var maxX = extent[2];\n  var maxY = extent[3];\n  var flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {module:ol/geom/Circle} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {module:ol/geom/Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  var sides = opt_sides ? opt_sides : 32;\n  var stride = circle.getStride();\n  var layout = circle.getLayout();\n  var center = circle.getCenter();\n  var arrayLength = stride * (sides + 1);\n  var flatCoordinates = new Array(arrayLength);\n  for (var i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (var j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  var ends = [flatCoordinates.length];\n  var polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n * @param {module:ol/coordinate~Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  var flatCoordinates = polygon.getFlatCoordinates();\n  var stride = polygon.getStride();\n  var sides = flatCoordinates.length / stride - 1;\n  var startAngle = opt_angle ? opt_angle : 0;\n  for (var i = 0; i <= sides; ++i) {\n    var offset = i * stride;\n    var angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n\n//# sourceMappingURL=Polygon.js.map","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineString} from '../geom/flat/intersectsextent.js';\nimport {lineStringLength} from '../geom/flat/length.js';\nimport {forEach as forEachSegment} from '../geom/flat/segments.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nvar LineString = (function (SimpleGeometry) {\n  function LineString(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LineString.__proto__ = SimpleGeometry;\n  LineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LineString.prototype.constructor = LineString;\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @api\n   */\n  LineString.prototype.appendCoordinate = function appendCoordinate (coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LineString} Clone.\n   * @override\n   * @api\n   */\n  LineString.prototype.clone = function clone () {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n   *     called for each segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  LineString.prototype.forEachSegment = function forEachSegment$1 (callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  LineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  };\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {module:ol/coordinate~Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {module:ol/coordinate~Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  LineString.prototype.getCoordinateAt = function getCoordinateAt (fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  };\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  LineString.prototype.getLength = function getLength () {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  LineString.prototype.getFlatMidpoint = function getFlatMidpoint () {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.getType = function getType () {\n    return GeometryType.LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  };\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LineString;\n}(SimpleGeometry));\n\n\nexport default LineString;\n\n//# sourceMappingURL=LineString.js.map","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinate} from '../geom/flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nvar Point = (function (SimpleGeometry) {\n  function Point(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  if ( SimpleGeometry ) Point.__proto__ = SimpleGeometry;\n  Point.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  Point.prototype.constructor = Point;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/Point} Clone.\n   * @override\n   * @api\n   */\n  Point.prototype.clone = function clone () {\n    var point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    var flatCoordinates = this.flatCoordinates;\n    var squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      var stride = this.stride;\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  };\n\n  /**\n   * Return the coordinate of the point.\n   * @return {module:ol/coordinate~Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  Point.prototype.getCoordinates = function getCoordinates () {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Point.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.getType = function getType () {\n    return GeometryType.POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Point.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return Point;\n}(SimpleGeometry));\n\n\nexport default Point;\n\n//# sourceMappingURL=Point.js.map","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nvar Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<module:ol/proj/Units, number>}\n * @api\n */\nexport var METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n\n//# sourceMappingURL=Units.js.map","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var x = flatCoordinates[j];\n    var y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var anchorX = anchor[0];\n  var anchorY = anchor[1];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    var deltaX = flatCoordinates[j] - anchorX;\n    var deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  var dest = opt_dest ? opt_dest : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (var k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n//# sourceMappingURL=transform.js.map","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport var CollectionEvent = (function (Event) {\n  function CollectionEvent(type, opt_element) {\n    Event.call(this, type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n  }\n\n  if ( Event ) CollectionEvent.__proto__ = Event;\n  CollectionEvent.prototype = Object.create( Event && Event.prototype );\n  CollectionEvent.prototype.constructor = CollectionEvent;\n\n  return CollectionEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @template T\n * @api\n */\nvar Collection = (function (BaseObject) {\n  function Collection(opt_array, opt_options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n        this$1.assertUnique_(this$1.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  if ( BaseObject ) Collection.__proto__ = BaseObject;\n  Collection.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Collection.prototype.constructor = Collection;\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  Collection.prototype.clear = function clear () {\n    var this$1 = this;\n\n    while (this.getLength() > 0) {\n      this$1.pop();\n    }\n  };\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {module:ol/Collection<T>} This collection.\n   * @api\n   */\n  Collection.prototype.extend = function extend (arr) {\n    var this$1 = this;\n\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      this$1.push(arr[i]);\n    }\n    return this;\n  };\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  Collection.prototype.forEach = function forEach (f) {\n    var array = this.array_;\n    for (var i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  };\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  Collection.prototype.getArray = function getArray () {\n    return this.array_;\n  };\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  Collection.prototype.item = function item (index) {\n    return this.array_[index];\n  };\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  Collection.prototype.getLength = function getLength () {\n    return /** @type {number} */ (this.get(Property.LENGTH));\n  };\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.insertAt = function insertAt (index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem));\n  };\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  Collection.prototype.pop = function pop () {\n    return this.removeAt(this.getLength() - 1);\n  };\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  Collection.prototype.push = function push (elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    var n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  };\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  Collection.prototype.remove = function remove (elem) {\n    var this$1 = this;\n\n    var arr = this.array_;\n    for (var i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this$1.removeAt(i);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  Collection.prototype.removeAt = function removeAt (index) {\n    var prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev));\n    return prev;\n  };\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  Collection.prototype.setAt = function setAt (index, elem) {\n    var this$1 = this;\n\n    var n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      var prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem));\n    } else {\n      for (var j = n; j < index; ++j) {\n        this$1.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  };\n\n  /**\n   * @private\n   */\n  Collection.prototype.updateLength_ = function updateLength_ () {\n    this.set(Property.LENGTH, this.array_.length);\n  };\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  Collection.prototype.assertUnique_ = function assertUnique_ (elem, opt_except) {\n    var this$1 = this;\n\n    for (var i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this$1.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  };\n\n  return Collection;\n}(BaseObject));\n\n\nexport default Collection;\n\n//# sourceMappingURL=Collection.js.map","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nvar Event = function Event(type) {\n\n  /**\n   * @type {boolean}\n   */\n  this.propagationStopped;\n\n  /**\n   * The event type.\n   * @type {string}\n   * @api\n   */\n  this.type = type;\n\n  /**\n   * The event target.\n   * @type {Object}\n   * @api\n   */\n  this.target = null;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.preventDefault = function preventDefault () {\n  this.propagationStopped = true;\n};\n\n/**\n * Stop event propagation.\n * @function\n * @api\n */\nEvent.prototype.stopPropagation = function stopPropagation () {\n  this.propagationStopped = true;\n};\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|module:ol/events/Event} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default Event;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlisten, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport Geometry from './geom/Geometry.js';\nimport Style from './style/Style.js';\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n */\nvar Feature = (function (BaseObject) {\n  function Feature(opt_geometryOrProperties) {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Style~StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n\n    if (opt_geometryOrProperties !== undefined) {\n      if (opt_geometryOrProperties instanceof Geometry ||\n          !opt_geometryOrProperties) {\n        var geometry = opt_geometryOrProperties;\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        var properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  if ( BaseObject ) Feature.__proto__ = BaseObject;\n  Feature.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Feature.prototype.constructor = Feature;\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {module:ol/Feature} The clone.\n   * @api\n   */\n  Feature.prototype.clone = function clone () {\n    var clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    var geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    var style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  };\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {module:ol/geom/Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  Feature.prototype.getGeometry = function getGeometry () {\n    return (\n      /** @type {module:ol/geom/Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  };\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Feature.prototype.getId = function getId () {\n    return this.id_;\n  };\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  Feature.prototype.getGeometryName = function getGeometryName () {\n    return this.geometryName_;\n  };\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} The feature style.\n   * @api\n   */\n  Feature.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n   * Get the feature's style function.\n   * @return {module:ol/style/Style~StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  Feature.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChange_ = function handleGeometryChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Feature.prototype.handleGeometryChanged_ = function handleGeometryChanged_ () {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    var geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {module:ol/geom/Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  Feature.prototype.setGeometry = function setGeometry (geometry) {\n    this.set(this.geometryName_, geometry);\n  };\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setStyle = function setStyle (style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  };\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~Event#event:change\n   */\n  Feature.prototype.setId = function setId (id) {\n    this.id_ = id;\n    this.changed();\n  };\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  Feature.prototype.setGeometryName = function setGeometryName (name) {\n    unlisten(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.geometryName_ = name;\n    listen(\n      this, getChangeEventType(this.geometryName_),\n      this.handleGeometryChanged_, this);\n    this.handleGeometryChanged_();\n  };\n\n  return Feature;\n}(BaseObject));\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of module:ol/style/Style or single style objects wrapped\n * in a new feature style function.\n * @param {module:ol/style/Style~StyleFunction|!Array<module:ol/style/Style>|!module:ol/style/Style} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/LayerType\n */\n\n/**\n * A layer type used when creating layer renderers.\n * @enum {string}\n */\nexport default {\n  IMAGE: 'IMAGE',\n  TILE: 'TILE',\n  VECTOR_TILE: 'VECTOR_TILE',\n  VECTOR: 'VECTOR'\n};\n\n//# sourceMappingURL=LayerType.js.map","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n  /**\n   * @event module:ol/render/Event~RenderEvent#render\n   * @api\n   */\n  RENDER: 'render',\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n\n//# sourceMappingURL=easing.js.map","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {FALSE} from '../functions.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from '../geom/flat/transform.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nvar SimpleGeometry = (function (Geometry) {\n  function SimpleGeometry() {\n\n    Geometry.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  if ( Geometry ) SimpleGeometry.__proto__ = Geometry;\n  SimpleGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n  SimpleGeometry.prototype.constructor = SimpleGeometry;\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.computeExtent = function computeExtent (extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  };\n\n  /**\n   * @abstract\n   * @return {Array} Coordinates.\n   */\n  SimpleGeometry.prototype.getCoordinates = function getCoordinates () {};\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} First coordinate.\n   * @api\n   */\n  SimpleGeometry.prototype.getFirstCoordinate = function getFirstCoordinate () {\n    return this.flatCoordinates.slice(0, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  SimpleGeometry.prototype.getFlatCoordinates = function getFlatCoordinates () {\n    return this.flatCoordinates;\n  };\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {module:ol/coordinate~Coordinate} Last point.\n   * @api\n   */\n  SimpleGeometry.prototype.getLastCoordinate = function getLastCoordinate () {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  };\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout~GeometryLayout layout} of the geometry.\n   * @return {module:ol/geom/GeometryLayout} Layout.\n   * @api\n   */\n  SimpleGeometry.prototype.getLayout = function getLayout () {\n    return this.layout;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometry =\n          this.getSimplifiedGeometryInternal(squaredTolerance);\n      var simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n      if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n        this.simplifiedGeometryCache[key] = simplifiedGeometry;\n        return simplifiedGeometry;\n      } else {\n        // Simplification did not actually remove any coordinates.  We now know\n        // that any calls to getSimplifiedGeometry with a squaredTolerance less\n        // than or equal to the current squaredTolerance will also not have any\n        // effect.  This allows us to short circuit simplification (saving CPU\n        // cycles) and prevents the cache of simplified geometries from filling\n        // up with useless identical copies of this geometry (saving memory).\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  SimpleGeometry.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    return this;\n  };\n\n  /**\n   * @return {number} Stride.\n   */\n  SimpleGeometry.prototype.getStride = function getStride () {\n    return this.stride;\n  };\n\n  /**\n   * @param {module:ol/geom/GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n    */\n  SimpleGeometry.prototype.setFlatCoordinates = function setFlatCoordinates (layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  };\n\n  /**\n   * @abstract\n   * @param {!Array} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   */\n  SimpleGeometry.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {};\n\n  /**\n   * @param {module:ol/geom/GeometryLayout|undefined} layout Layout.\n   * @param {Array} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  SimpleGeometry.prototype.setLayout = function setLayout (layout, coordinates, nesting) {\n    var this$1 = this;\n\n    /** @type {number} */\n    var stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (var i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this$1.layout = GeometryLayout.XY;\n          this$1.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.applyTransform = function applyTransform (transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.rotate = function rotate$1 (angle, anchor) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.scale = function scale$1 (sx, opt_sy, opt_anchor) {\n    var sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  SimpleGeometry.prototype.translate = function translate$1 (deltaX, deltaY) {\n    var flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      var stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  };\n\n  return SimpleGeometry;\n}(Geometry));\n\n\n/**\n * @param {number} stride Stride.\n * @return {module:ol/geom/GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  var layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {module:ol/geom/GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {module:ol/geom/GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  var stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @inheritDoc\n */\nSimpleGeometry.prototype.containsXY = FALSE;\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} simpleGeometry Simple geometry.\n * @param {module:ol/transform~Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  var flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    var stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n\n//# sourceMappingURL=SimpleGeometry.js.map","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  SOURCE: 'source'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nvar HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nvar NAMED_COLOR_RE_ = /^([a-z]*)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {module:ol/color~Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  var el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    var rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {module:ol/color~Color} Color.\n */\nexport var fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    var MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, module:ol/color~Color>}\n     */\n    var cache = {};\n\n    /**\n     * @type {number}\n     */\n    var cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {module:ol/color~Color} Color.\n       */\n      function(s) {\n        var color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            var i = 0;\n            for (var key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {module:ol/color~Color|string} color Color.\n * @return {module:ol/color~Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(/** @type {string} */ (color));\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {module:ol/color~Color} Color.\n */\nfunction fromStringInternal_(s) {\n  var r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    var n = s.length - 1; // number of hex digits\n    var d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    var hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return (\n    /** @type {module:ol/color~Color} */ (color)\n  );\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/color~Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {module:ol/color~Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  var r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  var g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  var b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  var a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n//# sourceMappingURL=color.js.map","/**\n * @module ol/render/replay\n */\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * @const\n * @type {Array<module:ol/render/ReplayType>}\n */\nexport var ORDER = [\n  ReplayType.POLYGON,\n  ReplayType.CIRCLE,\n  ReplayType.LINE_STRING,\n  ReplayType.IMAGE,\n  ReplayType.TEXT,\n  ReplayType.DEFAULT\n];\n\n/**\n * @const\n * @enum {number}\n */\nexport var TEXT_ALIGN = {};\nTEXT_ALIGN['left'] = 0;\nTEXT_ALIGN['end'] = 0;\nTEXT_ALIGN['center'] = 0.5;\nTEXT_ALIGN['right'] = 1;\nTEXT_ALIGN['start'] = 1;\nTEXT_ALIGN['top'] = 0;\nTEXT_ALIGN['middle'] = 0.5;\nTEXT_ALIGN['hanging'] = 0.2;\nTEXT_ALIGN['alphabetic'] = 0.8;\nTEXT_ALIGN['ideographic'] = 0.8;\nTEXT_ALIGN['bottom'] = 1;\n\n//# sourceMappingURL=replay.js.map","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=IconOrigin.js.map","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation'\n};\n\n//# sourceMappingURL=ViewProperty.js.map","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from '../layer/Base.js';\nimport LayerProperty from '../layer/Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/source/Source} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/layer/Layer} layer\n * @property {number} opacity\n * @property {module:ol/source/Source~State} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {module:ol/extent~Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * @fires module:ol/render/Event~RenderEvent\n */\nvar Layer = (function (BaseLayer) {\n  function Layer(options) {\n\n    var baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    listen(this,\n      getChangeEventType(LayerProperty.SOURCE),\n      this.handleSourcePropertyChange_, this);\n\n    var source = options.source ? options.source : null;\n    this.setSource(source);\n  }\n\n  if ( BaseLayer ) Layer.__proto__ = BaseLayer;\n  Layer.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  Layer.prototype.constructor = Layer;\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Layer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  };\n\n  /**\n   * Get the layer source.\n   * @return {module:ol/source/Source} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  Layer.prototype.getSource = function getSource () {\n    var source = this.get(LayerProperty.SOURCE);\n    return (\n      /** @type {module:ol/source/Source} */ (source) || null\n    );\n  };\n\n  /**\n    * @inheritDoc\n    */\n  Layer.prototype.getSourceState = function getSourceState () {\n    var source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourceChange_ = function handleSourceChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  Layer.prototype.handleSourcePropertyChange_ = function handleSourcePropertyChange_ () {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    var source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Layer.prototype.setMap = function setMap (map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        var layerState = this.getLayerState();\n        layerState.managed = false;\n        if (this.getZIndex() === undefined) {\n          layerState.zIndex = Infinity;\n        }\n        evt.frameState.layerStatesArray.push(layerState);\n        evt.frameState.layerStates[getUid(this)] = layerState;\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the layer source.\n   * @param {module:ol/source/Source} source The layer source.\n   * @observable\n   * @api\n   */\n  Layer.prototype.setSource = function setSource (source) {\n    this.set(LayerProperty.SOURCE, source);\n  };\n\n  return Layer;\n}(BaseLayer));\n\n\n/**\n * Return `true` if the layer is visible, and if the passed resolution is\n * between the layer's minResolution and maxResolution. The comparison is\n * inclusive for `minResolution` and exclusive for `maxResolution`.\n * @param {module:ol/layer/Layer~State} layerState Layer state.\n * @param {number} resolution Resolution.\n * @return {boolean} The layer is visible at the given resolution.\n */\nexport function visibleAtResolution(layerState, resolution) {\n  return layerState.visible && resolution >= layerState.minResolution &&\n      resolution < layerState.maxResolution;\n}\n\n\nexport default Layer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport var ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport var ENABLE_RASTER_REPROJECTION = true;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n\n//# sourceMappingURL=Relationship.js.map","/**\n * @module ol/control/Control\n */\nimport {VOID} from '../functions.js';\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {removeNode} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * var myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nvar Control = (function (BaseObject) {\n  function Control(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = options.element ? options.element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/events~EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    /**\n     * @type {function(module:ol/MapEvent)}\n     */\n    this.render = options.render ? options.render : VOID;\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n\n  }\n\n  if ( BaseObject ) Control.__proto__ = BaseObject;\n  Control.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Control.prototype.constructor = Control;\n\n  /**\n   * @inheritDoc\n   */\n  Control.prototype.disposeInternal = function disposeInternal () {\n    removeNode(this.element);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the map associated with this control.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Control.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   * @api\n   */\n  Control.prototype.setMap = function setMap (map) {\n    var this$1 = this;\n\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (var i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this$1.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (this.map_) {\n      var target = this.target_ ?\n        this.target_ : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(listen(map,\n          MapEventType.POSTRENDER, this.render, this));\n      }\n      map.render();\n    }\n  };\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  Control.prototype.setTarget = function setTarget (target) {\n    this.target_ = typeof target === 'string' ?\n      document.getElementById(target) :\n      target;\n  };\n\n  return Control;\n}(BaseObject));\n\n\nexport default Control;\n\n//# sourceMappingURL=Control.js.map","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<module:ol/coordinate~Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  var coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  var i = 0;\n  for (var j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  var coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  var i = 0;\n  for (var j = 0, jj = ends.length; j < jj; ++j) {\n    var end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  var coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  var i = 0;\n  for (var j = 0, jj = endss.length; j < jj; ++j) {\n    var ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n\n//# sourceMappingURL=inflate.js.map","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @return {module:ol/coordinate~Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += delta[0];\n  coordinate[1] += delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {module:ol/geom/Circle} circle The circle.\n * @return {module:ol/coordinate~Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  var r = circle.getRadius();\n  var center = circle.getCenter();\n  var x0 = center[0];\n  var y0 = center[1];\n  var x1 = coordinate[0];\n  var y1 = coordinate[1];\n\n  var dx = x1 - x0;\n  var dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  var d = Math.sqrt(dx * dx + dy * dy);\n\n  var x = x0 + r * dx / d;\n  var y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate The coordinate.\n * @param {Array<module:ol/coordinate~Coordinate>} segment The two coordinates\n * of the segment.\n * @return {module:ol/coordinate~Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  var x0 = coordinate[0];\n  var y0 = coordinate[1];\n  var start = segment[0];\n  var end = segment[1];\n  var x1 = start[0];\n  var y1 = start[1];\n  var x2 = end[0];\n  var y2 = end[1];\n  var dx = x2 - x1;\n  var dy = y2 - y1;\n  var along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  var x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {module:ol/coordinate~Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {module:ol/coordinate~CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  var normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  var x = Math.abs(3600 * normalizedDegrees);\n  var dflPrecision = opt_fractionDigits || 0;\n  var precision = Math.pow(10, dflPrecision);\n\n  var deg = Math.floor(x / 3600);\n  var min = Math.floor((x - deg * 3600) / 60);\n  var sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  var equals = true;\n  for (var i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  var cosAngle = Math.cos(angle);\n  var sinAngle = Math.sin(angle);\n  var x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  var y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  var dx = coord1[0] - coord2[0];\n  var dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coord1 First coordinate.\n * @param {module:ol/coordinate~Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate of the point.\n * @param {Array<module:ol/coordinate~Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n\n//# sourceMappingURL=coordinate.js.map","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (var i = 0; i < stride; ++i) {\n      var tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n\n//# sourceMappingURL=reverse.js.map","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from '../flat/reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  var edge = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingIsOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    if (!linearRingIsOriented(\n      flatCoordinates, offset, endss[i], stride, opt_right)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  var right = opt_right !== undefined ? opt_right : false;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    var isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    var reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n\n//# sourceMappingURL=orient.js.map","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection~CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection~CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n\n//# sourceMappingURL=CollectionEventType.js.map","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport ReplayType from '../render/ReplayType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nvar SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType,\n *                function(module:ol/render/ReplayGroup, module:ol/geom/Geometry,\n *                         module:ol/style/Style, Object)>}\n */\nvar GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature1 Feature 1.\n * @param {module:ol/Feature|module:ol/render/Feature} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return getUid(feature1) - getUid(feature2);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  var tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Circle} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderCircleGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var circleReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, thisArg) {\n  var loading = false;\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    var imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener, thisArg);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener, thisArg);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance);\n\n  return loading;\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance) {\n  var geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n  var renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    var geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  var replay = replayGroup.getReplay(style.getZIndex(), ReplayType.DEFAULT);\n  replay.drawCustom(/** @type {module:ol/geom/SimpleGeometry} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  var geometries = geometry.getGeometriesArray();\n  var i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    var geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiLineStringGeometry(replayGroup, geometry, style, feature) {\n  var strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    var lineStringReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature} feature Feature.\n */\nfunction renderMultiPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderMultiPointGeometry(replayGroup, geometry, style, feature) {\n  var imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    var imageReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, replayGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/style/Style} style Style.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nfunction renderPolygonGeometry(replayGroup, geometry, style, feature) {\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    var polygonReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  var textStyle = style.getText();\n  if (textStyle) {\n    var textReplay = replayGroup.getReplay(style.getZIndex(), ReplayType.TEXT);\n    textReplay.setTextStyle(textStyle, replayGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n//# sourceMappingURL=vector.js.map","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view'\n};\n\n//# sourceMappingURL=MapProperty.js.map","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @return {module:ol/colorlike~ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (isColorLike(color)) {\n    return /** @type {string|CanvasPattern|CanvasGradient} */ (color);\n  } else {\n    return toString(/** @type {module:ol/color~Color} */ (color));\n  }\n}\n\n\n/**\n * @param {?} color The value that is potentially an {@link ol/colorlike~ColorLike}.\n * @return {boolean} The color is an {@link ol/colorlike~ColorLike}.\n */\nexport function isColorLike(color) {\n  return (\n    typeof color === 'string' ||\n    color instanceof CanvasPattern ||\n    color instanceof CanvasGradient\n  );\n}\n\n//# sourceMappingURL=colorlike.js.map","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n\n//# sourceMappingURL=IconAnchorUnits.js.map","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (var i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    var coordinate = coordinates[i];\n    for (var j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  var ends = opt_ends ? opt_ends : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatess.length; j < jj; ++j) {\n    var end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  var endss = opt_endss ? opt_endss : [];\n  var i = 0;\n  for (var j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    var ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n\n//# sourceMappingURL=deflate.js.map","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z`, `x`, and `y`. `z` is the zoom level.\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Tile coordinate.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {module:ol/tilecoord~TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {module:ol/tilecoord~TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coord.\n * @return {string} Quad key.\n */\nexport function quadKey(tileCoord) {\n  var z = tileCoord[0];\n  var digits = new Array(z);\n  var mask = 1 << (z - 1);\n  var i, charCode;\n  for (i = 0; i < z; ++i) {\n    // 48 is charCode for 0 - '0'.charCodeAt(0)\n    charCode = 48;\n    if (tileCoord[1] & mask) {\n      charCode += 1;\n    }\n    if (tileCoord[2] & mask) {\n      charCode += 2;\n    }\n    digits[i] = String.fromCharCode(charCode);\n    mask >>= 1;\n  }\n  return digits.join('');\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {!module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  var z = tileCoord[0];\n  var x = tileCoord[1];\n  var y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  var extent = tileGrid.getExtent();\n  var tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n\n//# sourceMappingURL=tilecoord.js.map","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n\n//# sourceMappingURL=EventType.js.map","/**\n * @module ol/OverlayPositioning\n */\n\n/**\n * Overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, `'top-right'`\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_CENTER: 'bottom-center',\n  BOTTOM_RIGHT: 'bottom-right',\n  CENTER_LEFT: 'center-left',\n  CENTER_CENTER: 'center-center',\n  CENTER_RIGHT: 'center-right',\n  TOP_LEFT: 'top-left',\n  TOP_CENTER: 'top-center',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=OverlayPositioning.js.map","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {FALSE} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nvar Geometry = (function (BaseObject) {\n  function Geometry() {\n\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {Object<string, module:ol/geom/Geometry>}\n     */\n    this.simplifiedGeometryCache = {};\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n  }\n\n  if ( BaseObject ) Geometry.__proto__ = BaseObject;\n  Geometry.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geometry.prototype.constructor = Geometry;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!module:ol/geom/Geometry} Clone.\n   */\n  Geometry.prototype.clone = function clone () {};\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {module:ol/coordinate~Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  Geometry.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {};\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {module:ol/coordinate~Coordinate} point Point.\n   * @param {module:ol/coordinate~Coordinate=} opt_closestPoint Closest point.\n   * @return {module:ol/coordinate~Coordinate} Closest point.\n   * @api\n   */\n  Geometry.prototype.getClosestPoint = function getClosestPoint (point, opt_closestPoint) {\n    var closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  };\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  Geometry.prototype.intersectsCoordinate = function intersectsCoordinate (coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @protected\n   * @return {module:ol/extent~Extent} extent Extent.\n   */\n  Geometry.prototype.computeExtent = function computeExtent (extent) {};\n\n  /**\n   * Get the extent of the geometry.\n   * @param {module:ol/extent~Extent=} opt_extent Extent.\n   * @return {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  Geometry.prototype.getExtent = function getExtent (opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  };\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {module:ol/coordinate~Coordinate} anchor The rotation center.\n   * @api\n   */\n  Geometry.prototype.rotate = function rotate (angle, anchor) {};\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  Geometry.prototype.scale = function scale (sx, opt_sy, opt_anchor) {};\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the the {@link\n   * https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm\n   * Douglas Peucker} algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @function\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {module:ol/geom/Geometry} A new, simplified version of the original\n   *     geometry.\n   * @api\n   */\n  Geometry.prototype.simplify = function simplify (tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  };\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {module:ol/geom/Geometry} Simplified geometry.\n   */\n  Geometry.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {};\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {module:ol/geom/GeometryType} Geometry type.\n   */\n  Geometry.prototype.getType = function getType () {};\n\n  /**\n   * Apply a transform function to each coordinate of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {module:ol/proj~TransformFunction} transformFn Transform.\n   */\n  Geometry.prototype.applyTransform = function applyTransform (transformFn) {};\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  Geometry.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  Geometry.prototype.translate = function translate (deltaX, deltaY) {};\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {module:ol/proj~ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {module:ol/proj~ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {module:ol/geom/Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  Geometry.prototype.transform = function transform (source, destination) {\n    source = getProjection(source);\n    var transformFn = source.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        var pixelExtent = source.getExtent();\n        var projectedExtent = source.getWorldExtent();\n        var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(source, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(source, destination);\n    this.applyTransform(transformFn);\n    return this;\n  };\n\n  return Geometry;\n}(BaseObject));\n\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nGeometry.prototype.containsXY = FALSE;\n\n\nexport default Geometry;\n\n//# sourceMappingURL=Geometry.js.map","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {module:ol/size~Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {module:ol/size~Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {module:ol/size~Size} size Size.\n * @param {number} ratio Ratio.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `module:ol/size~Size` array for the passed in number (meaning: square) or\n * `module:ol/size~Size` array.\n * (meaning: non-square),\n * @param {number|module:ol/size~Size} size Width and height.\n * @param {module:ol/size~Size=} opt_size Optional reusable size array.\n * @return {module:ol/size~Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = opt_size[1] = /** @type {number} */ (size);\n    }\n    return opt_size;\n  }\n}\n\n//# sourceMappingURL=size.js.map","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  var x1 = flatCoordinates[offset1];\n  var y1 = flatCoordinates[offset1 + 1];\n  var dx = flatCoordinates[offset2] - x1;\n  var dy = flatCoordinates[offset2 + 1] - y1;\n  var offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    var t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (var i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (var i$1 = 0; i$1 < stride; ++i$1) {\n    closestPoint[i$1] = flatCoordinates[offset + i$1];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    var squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  var i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  var index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  var tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n\n//# sourceMappingURL=closest.js.map","/**\n * @module ol/style/Stroke\n */\nimport {getUid} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {string} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {string} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nvar Stroke = function Stroke(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineCap_ = options.lineCap;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.lineDashOffset_ = options.lineDashOffset;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.lineJoin_ = options.lineJoin;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.miterLimit_ = options.miterLimit;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.width_ = options.width;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Stroke} The cloned style.\n * @api\n */\nStroke.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Stroke({\n    color: (color && color.slice) ? color.slice() : color || undefined,\n    lineCap: this.getLineCap(),\n    lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n    lineDashOffset: this.getLineDashOffset(),\n    lineJoin: this.getLineJoin(),\n    miterLimit: this.getMiterLimit(),\n    width: this.getWidth()\n  });\n};\n\n/**\n * Get the stroke color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nStroke.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Get the line cap type for the stroke.\n * @return {string|undefined} Line cap.\n * @api\n */\nStroke.prototype.getLineCap = function getLineCap () {\n  return this.lineCap_;\n};\n\n/**\n * Get the line dash style for the stroke.\n * @return {Array<number>} Line dash.\n * @api\n */\nStroke.prototype.getLineDash = function getLineDash () {\n  return this.lineDash_;\n};\n\n/**\n * Get the line dash offset for the stroke.\n * @return {number|undefined} Line dash offset.\n * @api\n */\nStroke.prototype.getLineDashOffset = function getLineDashOffset () {\n  return this.lineDashOffset_;\n};\n\n/**\n * Get the line join type for the stroke.\n * @return {string|undefined} Line join.\n * @api\n */\nStroke.prototype.getLineJoin = function getLineJoin () {\n  return this.lineJoin_;\n};\n\n/**\n * Get the miter limit for the stroke.\n * @return {number|undefined} Miter limit.\n * @api\n */\nStroke.prototype.getMiterLimit = function getMiterLimit () {\n  return this.miterLimit_;\n};\n\n/**\n * Get the stroke width.\n * @return {number|undefined} Width.\n * @api\n */\nStroke.prototype.getWidth = function getWidth () {\n  return this.width_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nStroke.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line cap.\n *\n * @param {string|undefined} lineCap Line cap.\n * @api\n */\nStroke.prototype.setLineCap = function setLineCap (lineCap) {\n  this.lineCap_ = lineCap;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash.\n *\n * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n * property will have no visual effect in these browsers.\n *\n * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n *\n * @param {Array<number>} lineDash Line dash.\n * @api\n */\nStroke.prototype.setLineDash = function setLineDash (lineDash) {\n  this.lineDash_ = lineDash;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line dash offset.\n *\n * @param {number|undefined} lineDashOffset Line dash offset.\n * @api\n */\nStroke.prototype.setLineDashOffset = function setLineDashOffset (lineDashOffset) {\n  this.lineDashOffset_ = lineDashOffset;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the line join.\n *\n * @param {string|undefined} lineJoin Line join.\n * @api\n */\nStroke.prototype.setLineJoin = function setLineJoin (lineJoin) {\n  this.lineJoin_ = lineJoin;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the miter limit.\n *\n * @param {number|undefined} miterLimit Miter limit.\n * @api\n */\nStroke.prototype.setMiterLimit = function setMiterLimit (miterLimit) {\n  this.miterLimit_ = miterLimit;\n  this.checksum_ = undefined;\n};\n\n/**\n * Set the width.\n *\n * @param {number|undefined} width Width.\n * @api\n */\nStroke.prototype.setWidth = function setWidth (width) {\n  this.width_ = width;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nStroke.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    this.checksum_ = 's';\n    if (this.color_) {\n      if (typeof this.color_ === 'string') {\n        this.checksum_ += this.color_;\n      } else {\n        this.checksum_ += getUid(this.color_).toString();\n      }\n    } else {\n      this.checksum_ += '-';\n    }\n    this.checksum_ += ',' +\n        (this.lineCap_ !== undefined ?\n          this.lineCap_.toString() : '-') + ',' +\n        (this.lineDash_ ?\n          this.lineDash_.toString() : '-') + ',' +\n        (this.lineDashOffset_ !== undefined ?\n          this.lineDashOffset_ : '-') + ',' +\n        (this.lineJoin_ !== undefined ?\n          this.lineJoin_ : '-') + ',' +\n        (this.miterLimit_ !== undefined ?\n          this.miterLimit_.toString() : '-') + ',' +\n        (this.width_ !== undefined ?\n          this.width_.toString() : '-');\n  }\n\n  return this.checksum_;\n};\n\nexport default Stroke;\n\n//# sourceMappingURL=Stroke.js.map","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {unlistenAll} from '../events.js';\nimport {VOID} from '../functions.js';\nimport Event from '../events/Event.js';\n\n\n/**\n * @typedef {EventTarget|module:ol/events/Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nvar Target = (function (Disposable) {\n  function Target() {\n\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<module:ol/events~ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  if ( Disposable ) Target.__proto__ = Disposable;\n  Target.prototype = Object.create( Disposable && Disposable.prototype );\n  Target.prototype.constructor = Target;\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  Target.prototype.addEventListener = function addEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = this.listeners_[type] = [];\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  };\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (module:ol/events/Target~EventTargetLike|undefined)}|\n   *     module:ol/events/Event|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @function\n   * @api\n   */\n  Target.prototype.dispatchEvent = function dispatchEvent (event) {\n    var this$1 = this;\n\n    var evt = typeof event === 'string' ? new Event(event) : event;\n    var type = evt.type;\n    evt.target = this;\n    var listeners = this.listeners_[type];\n    var propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (var i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this$1, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        var pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this$1.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Target.prototype.disposeInternal = function disposeInternal () {\n    unlistenAll(this);\n  };\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<module:ol/events~ListenerFunction>} Listeners.\n   */\n  Target.prototype.getListeners = function getListeners (type) {\n    return this.listeners_[type];\n  };\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  Target.prototype.hasListener = function hasListener (opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  };\n\n  /**\n   * @param {string} type Type.\n   * @param {module:ol/events~ListenerFunction} listener Listener.\n   */\n  Target.prototype.removeEventListener = function removeEventListener (type, listener) {\n    var listeners = this.listeners_[type];\n    if (listeners) {\n      var index = listeners.indexOf(listener);\n      if (type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  };\n\n  return Target;\n}(Disposable));\n\n\nexport default Target;\n\n//# sourceMappingURL=Target.js.map","/**\n * @module ol/source/State\n */\n\n/**\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n * @enum {string}\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n\n//# sourceMappingURL=State.js.map","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n\n//# sourceMappingURL=FormatType.js.map","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  var outside = forEachCorner(extent,\n    /**\n     * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  var wn = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=contains.js.map","/**\n * @module ol/style/Fill\n */\nimport {getUid} from '../util.js';\nimport {asString} from '../color.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/color~Color|module:ol/colorlike~ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nvar Fill = function Fill(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {module:ol/color~Color|module:ol/colorlike~ColorLike}\n   */\n  this.color_ = options.color !== undefined ? options.color : null;\n\n  /**\n   * @private\n   * @type {string|undefined}\n   */\n  this.checksum_ = undefined;\n};\n\n/**\n * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n * @return {module:ol/style/Fill} The cloned style.\n * @api\n */\nFill.prototype.clone = function clone () {\n  var color = this.getColor();\n  return new Fill({\n    color: (color && color.slice) ? color.slice() : color || undefined\n  });\n};\n\n/**\n * Get the fill color.\n * @return {module:ol/color~Color|module:ol/colorlike~ColorLike} Color.\n * @api\n */\nFill.prototype.getColor = function getColor () {\n  return this.color_;\n};\n\n/**\n * Set the color.\n *\n * @param {module:ol/color~Color|module:ol/colorlike~ColorLike} color Color.\n * @api\n */\nFill.prototype.setColor = function setColor (color) {\n  this.color_ = color;\n  this.checksum_ = undefined;\n};\n\n/**\n * @return {string} The checksum.\n */\nFill.prototype.getChecksum = function getChecksum () {\n  if (this.checksum_ === undefined) {\n    if (\n      this.color_ instanceof CanvasPattern ||\n        this.color_ instanceof CanvasGradient\n    ) {\n      this.checksum_ = getUid(this.color_).toString();\n    } else {\n      this.checksum_ = 'f' + (this.color_ ? asString(this.color_) : '-');\n    }\n  }\n\n  return this.checksum_;\n};\n\nexport default Fill;\n\n//# sourceMappingURL=Fill.js.map","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  var simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  var n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  var markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  var stack = [offset, end - stride];\n  var index = 0;\n  while (stack.length > 0) {\n    var last = stack.pop();\n    var first = stack.pop();\n    var maxSquaredDistance = 0;\n    var x1 = flatCoordinates[first];\n    var y1 = flatCoordinates[first + 1];\n    var x2 = flatCoordinates[last];\n    var y2 = flatCoordinates[last + 1];\n    for (var i = first + stride; i < last; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      var squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (var i$1 = 0; i$1 < n; ++i$1) {\n    if (markers[i$1]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i$1 * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  var x2 = x1;\n  var y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  var x1 = snap(flatCoordinates[offset], tolerance);\n  var y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  var x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    var x3 = snap(flatCoordinates[offset], tolerance);\n    var y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    var dx1 = x2 - x1;\n    var dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    var dx2 = x3 - x1;\n    var dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    var simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n//# sourceMappingURL=simplify.js.map","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object~ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n\n//# sourceMappingURL=ObjectEventType.js.map","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nvar MapBrowserPointerEvent = (function (MapBrowserEvent) {\n  function MapBrowserPointerEvent(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    MapBrowserEvent.call(this, type, map, pointerEvent.originalEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {module:ol/pointer/PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n  if ( MapBrowserEvent ) MapBrowserPointerEvent.__proto__ = MapBrowserEvent;\n  MapBrowserPointerEvent.prototype = Object.create( MapBrowserEvent && MapBrowserEvent.prototype );\n  MapBrowserPointerEvent.prototype.constructor = MapBrowserPointerEvent;\n\n  return MapBrowserPointerEvent;\n}(MapBrowserEvent));\n\nexport default MapBrowserPointerEvent;\n\n//# sourceMappingURL=MapBrowserPointerEvent.js.map","/**\n * @module ol/layer/VectorTileRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorTileRenderType.js.map","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nvar TileRange = function TileRange(minX, maxX, minY, maxY) {\n\n  /**\n   * @type {number}\n   */\n  this.minX = minX;\n\n  /**\n   * @type {number}\n   */\n  this.maxX = maxX;\n\n  /**\n   * @type {number}\n   */\n  this.minY = minY;\n\n  /**\n   * @type {number}\n   */\n  this.maxY = maxY;\n\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {boolean} Contains tile coordinate.\n */\nTileRange.prototype.contains = function contains (tileCoord) {\n  return this.containsXY(tileCoord[1], tileCoord[2]);\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Contains.\n */\nTileRange.prototype.containsTileRange = function containsTileRange (tileRange) {\n  return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n     this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n};\n\n/**\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @return {boolean} Contains coordinate.\n */\nTileRange.prototype.containsXY = function containsXY (x, y) {\n  return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n * @return {boolean} Equals.\n */\nTileRange.prototype.equals = function equals (tileRange) {\n  return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n     this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n};\n\n/**\n * @param {module:ol/TileRange} tileRange Tile range.\n */\nTileRange.prototype.extend = function extend (tileRange) {\n  if (tileRange.minX < this.minX) {\n    this.minX = tileRange.minX;\n  }\n  if (tileRange.maxX > this.maxX) {\n    this.maxX = tileRange.maxX;\n  }\n  if (tileRange.minY < this.minY) {\n    this.minY = tileRange.minY;\n  }\n  if (tileRange.maxY > this.maxY) {\n    this.maxY = tileRange.maxY;\n  }\n};\n\n/**\n* @return {number} Height.\n*/\nTileRange.prototype.getHeight = function getHeight () {\n  return this.maxY - this.minY + 1;\n};\n\n/**\n* @return {module:ol/size~Size} Size.\n*/\nTileRange.prototype.getSize = function getSize () {\n  return [this.getWidth(), this.getHeight()];\n};\n\n/**\n* @return {number} Width.\n*/\nTileRange.prototype.getWidth = function getWidth () {\n  return this.maxX - this.minX + 1;\n};\n\n/**\n* @param {module:ol/TileRange} tileRange Tile range.\n* @return {boolean} Intersects.\n*/\nTileRange.prototype.intersects = function intersects (tileRange) {\n  return this.minX <= tileRange.maxX &&\n     this.maxX >= tileRange.minX &&\n     this.minY <= tileRange.maxY &&\n     this.maxY >= tileRange.minY;\n};\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {module:ol/TileRange=} tileRange TileRange.\n * @return {module:ol/TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n\n//# sourceMappingURL=TileRange.js.map","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend'\n\n};\n\n//# sourceMappingURL=MapEventType.js.map","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from '../style/RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this circle.\n * When using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given,\n * the circle is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nvar CircleStyle = (function (RegularShape) {\n  function CircleStyle(opt_options) {\n\n    var options = opt_options || {};\n\n    RegularShape.call(this, {\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      atlasManager: options.atlasManager\n    });\n\n  }\n\n  if ( RegularShape ) CircleStyle.__proto__ = RegularShape;\n  CircleStyle.prototype = Object.create( RegularShape && RegularShape.prototype );\n  CircleStyle.prototype.constructor = CircleStyle;\n\n  /**\n  * Clones the style.  If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n  * @return {module:ol/style/Circle} The cloned style.\n  * @override\n  * @api\n  */\n  CircleStyle.prototype.clone = function clone () {\n    var style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n  * Set the circle radius.\n  *\n  * @param {number} radius Circle radius.\n  * @api\n  */\n  CircleStyle.prototype.setRadius = function setRadius (radius) {\n    this.radius_ = radius;\n    this.render_(this.atlasManager_);\n  };\n\n  return CircleStyle;\n}(RegularShape));\n\n\nexport default CircleStyle;\n\n//# sourceMappingURL=Circle.js.map","/**\n * @module ol/style/RegularShape\n */\n\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {CANVAS_LINE_DASH} from '../has.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {module:ol/style/AtlasManager} [atlasManager] The atlas manager to use for this symbol. When\n * using WebGL it is recommended to use an atlas manager to avoid texture switching. If an atlas manager is given, the\n * symbol is added to an atlas. By default no atlas manager is used.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {module:ol/colorlike~ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {string} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {string} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nvar RegularShape = (function (ImageStyle) {\n  function RegularShape(options) {\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.checksums_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = /** @type {number} */ (options.radius !== undefined ?\n      options.radius : options.radius1);\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/style/AtlasManager|undefined}\n     */\n    this.atlasManager_ = options.atlasManager;\n\n    this.render_(this.atlasManager_);\n\n  }\n\n  if ( ImageStyle ) RegularShape.__proto__ = ImageStyle;\n  RegularShape.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  RegularShape.prototype.constructor = RegularShape;\n\n  /**\n   * Clones the style. If an atlasmanager was provided to the original style it will be used in the cloned style, too.\n   * @return {module:ol/style/RegularShape} The cloned style.\n   * @api\n   */\n  RegularShape.prototype.clone = function clone () {\n    var style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      atlasManager: this.atlasManager_\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getAnchor = function getAnchor () {\n    return this.anchor_;\n  };\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  RegularShape.prototype.getAngle = function getAngle () {\n    return this.angle_;\n  };\n\n  /**\n   * Get the fill style for the shape.\n   * @return {module:ol/style/Fill} Fill style.\n   * @api\n   */\n  RegularShape.prototype.getFill = function getFill () {\n    return this.fill_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.hitDetectionCanvas_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageSize = function getImageSize () {\n    return this.imageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.hitDetectionImageSize_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.getImageState = function getImageState () {\n    return ImageState.LOADED;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getOrigin = function getOrigin () {\n    return this.origin_;\n  };\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  RegularShape.prototype.getPoints = function getPoints () {\n    return this.points_;\n  };\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  RegularShape.prototype.getRadius = function getRadius () {\n    return this.radius_;\n  };\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  RegularShape.prototype.getRadius2 = function getRadius2 () {\n    return this.radius2_;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  RegularShape.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {module:ol/style/Stroke} Stroke style.\n   * @api\n   */\n  RegularShape.prototype.getStroke = function getStroke () {\n    return this.stroke_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.load = function load () {};\n\n  /**\n   * @inheritDoc\n   */\n  RegularShape.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\n  /**\n   * @protected\n   * @param {module:ol/style/AtlasManager|undefined} atlasManager An atlas manager.\n   */\n  RegularShape.prototype.render_ = function render_ (atlasManager) {\n    var imageSize;\n    var lineCap = '';\n    var lineJoin = '';\n    var miterLimit = 0;\n    var lineDash = null;\n    var lineDashOffset = 0;\n    var strokeStyle;\n    var strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      if (!CANVAS_LINE_DASH) {\n        lineDash = null;\n        lineDashOffset = 0;\n      }\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    var size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    /** @type {module:ol/style/RegularShape~RenderOptions} */\n    var renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    if (atlasManager === undefined) {\n      // no atlas manager is used, create a new canvas\n      var context = createCanvasContext2D(size, size);\n      this.canvas_ = context.canvas;\n\n      // canvas.width and height are rounded to the closest integer\n      size = this.canvas_.width;\n      imageSize = size;\n\n      this.draw_(renderOptions, context, 0, 0);\n\n      this.createHitDetectionCanvas_(renderOptions);\n    } else {\n      // an atlas manager is used, add the symbol to an atlas\n      size = Math.round(size);\n\n      var hasCustomHitDetectionImage = !this.fill_;\n      var renderHitDetectionCallback;\n      if (hasCustomHitDetectionImage) {\n        // render the hit-detection image into a separate atlas image\n        renderHitDetectionCallback =\n            this.drawHitDetectionCanvas_.bind(this, renderOptions);\n      }\n\n      var id = this.getChecksum();\n      var info = atlasManager.add(\n        id, size, size, this.draw_.bind(this, renderOptions),\n        renderHitDetectionCallback);\n\n      this.canvas_ = info.image;\n      this.origin_ = [info.offsetX, info.offsetY];\n      imageSize = info.image.width;\n\n      if (hasCustomHitDetectionImage) {\n        this.hitDetectionCanvas_ = info.hitImage;\n        this.hitDetectionImageSize_ =\n            [info.hitImage.width, info.hitImage.height];\n      } else {\n        this.hitDetectionCanvas_ = this.canvas_;\n        this.hitDetectionImageSize_ = [imageSize, imageSize];\n      }\n    }\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.draw_ = function draw_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    var i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      var color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   */\n  RegularShape.prototype.createHitDetectionCanvas_ = function createHitDetectionCanvas_ (renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    if (this.fill_) {\n      this.hitDetectionCanvas_ = this.canvas_;\n      return;\n    }\n\n    // if no fill style is set, create an extra hit-detection image with a\n    // default fill style\n    var context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n    this.hitDetectionCanvas_ = context.canvas;\n\n    this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/style/RegularShape~RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  RegularShape.prototype.drawHitDetectionCanvas_ = function drawHitDetectionCanvas_ (renderOptions, context, x, y) {\n    var this$1 = this;\n\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    var points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      var radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      var i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this$1.angle_;\n        radiusC = i % 2 === 0 ? this$1.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  };\n\n  /**\n   * @return {string} The checksum.\n   */\n  RegularShape.prototype.getChecksum = function getChecksum () {\n    var strokeChecksum = this.stroke_ ?\n      this.stroke_.getChecksum() : '-';\n    var fillChecksum = this.fill_ ?\n      this.fill_.getChecksum() : '-';\n\n    var recalculate = !this.checksums_ ||\n        (strokeChecksum != this.checksums_[1] ||\n        fillChecksum != this.checksums_[2] ||\n        this.radius_ != this.checksums_[3] ||\n        this.radius2_ != this.checksums_[4] ||\n        this.angle_ != this.checksums_[5] ||\n        this.points_ != this.checksums_[6]);\n\n    if (recalculate) {\n      var checksum = 'r' + strokeChecksum + fillChecksum +\n          (this.radius_ !== undefined ? this.radius_.toString() : '-') +\n          (this.radius2_ !== undefined ? this.radius2_.toString() : '-') +\n          (this.angle_ !== undefined ? this.angle_.toString() : '-') +\n          (this.points_ !== undefined ? this.points_.toString() : '-');\n      this.checksums_ = [checksum, strokeChecksum, fillChecksum,\n        this.radius_, this.radius2_, this.angle_, this.points_];\n    }\n\n    return this.checksums_[0];\n  };\n\n  return RegularShape;\n}(ImageStyle));\n\n\nexport default RegularShape;\n\n//# sourceMappingURL=RegularShape.js.map","/**\n * @module ol/style/Style\n */\n\n/**\n * Feature styles.\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n */\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from '../style/Circle.js';\nimport Fill from '../style/Fill.js';\nimport Stroke from '../style/Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), number):\n *     (module:ol/style/Style|Array<module:ol/style/Style>)} StyleFunction\n */\n\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function((module:ol/Feature|module:ol/render/Feature)):\n *     (module:ol/geom/Geometry|module:ol/render/Feature|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>),module:ol/render~State)}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {module:ol/style/Fill} [fill] Fill style.\n * @property {module:ol/style/Image} [image] Image style.\n * @property {module:ol/style/Style~RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Text} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n * @api\n */\nvar Style = function Style(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * @private\n   * @type {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n   */\n  this.geometry_ = null;\n\n  /**\n   * @private\n   * @type {!module:ol/style/Style~GeometryFunction}\n   */\n  this.geometryFunction_ = defaultGeometryFunction;\n\n  if (options.geometry !== undefined) {\n    this.setGeometry(options.geometry);\n  }\n\n  /**\n   * @private\n   * @type {module:ol/style/Fill}\n   */\n  this.fill_ = options.fill !== undefined ? options.fill : null;\n\n  /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n  this.image_ = options.image !== undefined ? options.image : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Style~RenderFunction|null}\n   */\n  this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Stroke}\n   */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n   * @private\n   * @type {module:ol/style/Text}\n   */\n  this.text_ = options.text !== undefined ? options.text : null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zIndex_ = options.zIndex;\n\n};\n\n/**\n * Clones the style.\n * @return {module:ol/style/Style} The cloned style.\n * @api\n */\nStyle.prototype.clone = function clone () {\n  var geometry = this.getGeometry();\n  if (geometry && geometry.clone) {\n    geometry = geometry.clone();\n  }\n  return new Style({\n    geometry: geometry,\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    image: this.getImage() ? this.getImage().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    text: this.getText() ? this.getText().clone() : undefined,\n    zIndex: this.getZIndex()\n  });\n};\n\n/**\n * Get the custom renderer function that was configured with\n * {@link #setRenderer} or the `renderer` constructor option.\n * @return {module:ol/style/Style~RenderFunction|null} Custom renderer function.\n * @api\n */\nStyle.prototype.getRenderer = function getRenderer () {\n  return this.renderer_;\n};\n\n/**\n * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n * and `image` options of the style will be ignored.\n * @param {module:ol/style/Style~RenderFunction|null} renderer Custom renderer function.\n * @api\n */\nStyle.prototype.setRenderer = function setRenderer (renderer) {\n  this.renderer_ = renderer;\n};\n\n/**\n * Get the geometry to be rendered.\n * @return {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction}\n * Feature property or geometry or function that returns the geometry that will\n * be rendered with this style.\n * @api\n */\nStyle.prototype.getGeometry = function getGeometry () {\n  return this.geometry_;\n};\n\n/**\n * Get the function used to generate a geometry for rendering.\n * @return {!module:ol/style/Style~GeometryFunction} Function that is called with a feature\n * and returns the geometry to render instead of the feature's geometry.\n * @api\n */\nStyle.prototype.getGeometryFunction = function getGeometryFunction () {\n  return this.geometryFunction_;\n};\n\n/**\n * Get the fill style.\n * @return {module:ol/style/Fill} Fill style.\n * @api\n */\nStyle.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n * Set the fill style.\n * @param {module:ol/style/Fill} fill Fill style.\n * @api\n */\nStyle.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n * Get the image style.\n * @return {module:ol/style/Image} Image style.\n * @api\n */\nStyle.prototype.getImage = function getImage () {\n  return this.image_;\n};\n\n/**\n * Set the image style.\n * @param {module:ol/style/Image} image Image style.\n * @api\n */\nStyle.prototype.setImage = function setImage (image) {\n  this.image_ = image;\n};\n\n/**\n * Get the stroke style.\n * @return {module:ol/style/Stroke} Stroke style.\n * @api\n */\nStyle.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n * Set the stroke style.\n * @param {module:ol/style/Stroke} stroke Stroke style.\n * @api\n */\nStyle.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n * Get the text style.\n * @return {module:ol/style/Text} Text style.\n * @api\n */\nStyle.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n * Set the text style.\n * @param {module:ol/style/Text} text Text style.\n * @api\n */\nStyle.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n * Get the z-index for the style.\n * @return {number|undefined} ZIndex.\n * @api\n */\nStyle.prototype.getZIndex = function getZIndex () {\n  return this.zIndex_;\n};\n\n/**\n * Set a geometry that is rendered instead of the feature's geometry.\n *\n * @param {string|module:ol/geom/Geometry|module:ol/style/Style~GeometryFunction} geometry\n *   Feature property or geometry or function returning a geometry to render\n *   for this style.\n * @api\n */\nStyle.prototype.setGeometry = function setGeometry (geometry) {\n  if (typeof geometry === 'function') {\n    this.geometryFunction_ = geometry;\n  } else if (typeof geometry === 'string') {\n    this.geometryFunction_ = function(feature) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (feature.get(geometry))\n      );\n    };\n  } else if (!geometry) {\n    this.geometryFunction_ = defaultGeometryFunction;\n  } else if (geometry !== undefined) {\n    this.geometryFunction_ = function() {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (geometry)\n      );\n    };\n  }\n  this.geometry_ = geometry;\n};\n\n/**\n * Set the z-index.\n *\n * @param {number|undefined} zIndex ZIndex.\n * @api\n */\nStyle.prototype.setZIndex = function setZIndex (zIndex) {\n  this.zIndex_ = zIndex;\n};\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of module:ol/style/Style or single style objects wrapped in a\n * new style function.\n * @param {module:ol/style/Style~StyleFunction|Array<module:ol/style/Style>|module:ol/style/Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {module:ol/style/Style~StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  var styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<module:ol/style/Style>}\n     */\n    var styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(obj instanceof Style,\n        41); // Expected an `module:ol/style/Style~Style` or an array of `module:ol/style/Style~Style`\n      styles = [obj];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nvar defaultStyles = null;\n\n\n/**\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/style/Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (module:ol/style/Circle~CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    var fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    var stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<module:ol/geom/GeometryType, Array<module:ol/style/Style>>} */\n  var styles = {};\n  var white = [255, 255, 255, 1];\n  var blue = [0, 153, 255, 1];\n  var width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature to get the geometry for.\n * @return {module:ol/geom/Geometry|module:ol/render/Feature|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n\n//# sourceMappingURL=Style.js.map","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  var numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  var decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  var s1 = ('' + v1).split('.');\n  var s2 = ('' + v2).split('.');\n\n  for (var i = 0; i < Math.max(s1.length, s2.length); i++) {\n    var n1 = parseInt(s1[i] || '0', 10);\n    var n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\n//# sourceMappingURL=string.js.map","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nvar Disposable = function Disposable() {\n  /**\n   * The object has already been disposed.\n   * @type {boolean}\n   * @private\n   */\n  this.disposed_ = false;\n};\n\n/**\n * Clean up.\n */\nDisposable.prototype.dispose = function dispose () {\n  if (!this.disposed_) {\n    this.disposed_ = true;\n    this.disposeInternal();\n  }\n};\n\n/**\n * Extension point for disposable objects.\n * @protected\n */\nDisposable.prototype.disposeInternal = function disposeInternal () {};\n\nexport default Disposable;\n\n//# sourceMappingURL=Disposable.js.map","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(module:ol/Tile, string)} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(module:ol/tilecoord~TileCoord, number,\n *           module:ol/proj/Projection): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nvar Tile = (function (EventTarget) {\n  function Tile(tileCoord, state, opt_options) {\n    EventTarget.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {module:ol/TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {module:ol/Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<number, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  if ( EventTarget ) Tile.__proto__ = EventTarget;\n  Tile.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Tile.prototype.constructor = Tile;\n\n  /**\n   * @protected\n   */\n  Tile.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {string} Key.\n   */\n  Tile.prototype.getKey = function getKey () {\n    return this.key + '/' + this.tileCoord;\n  };\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!module:ol/Tile} Best tile for rendering.\n   */\n  Tile.prototype.getInterimTile = function getInterimTile () {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    var tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  };\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  Tile.prototype.refreshInterimChain = function refreshInterimChain () {\n    if (!this.interimTile) {\n      return;\n    }\n\n    var tile = this.interimTile;\n    var prev = this;\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  };\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {module:ol/tilecoord~TileCoord} The tile coordinate.\n   * @api\n   */\n  Tile.prototype.getTileCoord = function getTileCoord () {\n    return this.tileCoord;\n  };\n\n  /**\n   * @return {module:ol/TileState} State.\n   */\n  Tile.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {module:ol/TileState} state State.\n   * @api\n   */\n  Tile.prototype.setState = function setState (state) {\n    this.state = state;\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  Tile.prototype.load = function load () {};\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {number} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  Tile.prototype.getAlpha = function getAlpha (id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    var start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    var delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  };\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {number} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  Tile.prototype.inTransition = function inTransition (id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  };\n\n  /**\n   * Mark a transition as complete.\n   * @param {number} id An id for the renderer.\n   */\n  Tile.prototype.endTransition = function endTransition (id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  };\n\n  return Tile;\n}(EventTarget));\n\n\nexport default Tile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation, delta) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @param {number} delta Delta.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation, delta) {\n  if (rotation !== undefined) {\n    return rotation + delta;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  var theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        rotation = Math.floor((rotation + delta) / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  var tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {number} delta Delta.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, delta) {\n      if (rotation !== undefined) {\n        if (Math.abs(rotation + delta) <= tolerance) {\n          return 0;\n        } else {\n          return rotation + delta;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=rotationconstraint.js.map","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n\n//# sourceMappingURL=TileProperty.js.map","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from '../proj/Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {module:ol/proj/Units|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {module:ol/extent~Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {module:ol/extent~Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, module:ol/coordinate~Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{module:ol/coordinate~Coordinate}` as arguments, and returns\n * the `{number}` resolution at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nvar Projection = function Projection(options) {\n  /**\n   * @private\n   * @type {string}\n   */\n  this.code_ = options.code;\n\n  /**\n   * Units of projected coordinates. When set to `TILE_PIXELS`, a\n   * `this.extent_` and `this.worldExtent_` must be configured properly for each\n   * tile.\n   * @private\n   * @type {module:ol/proj/Units}\n   */\n  this.units_ = /** @type {module:ol/proj/Units} */ (options.units);\n\n  /**\n   * Validity extent of the projection in projected coordinates. For projections\n   * with `TILE_PIXELS` units, this is the extent of the tile in\n   * tile pixel space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = options.extent !== undefined ? options.extent : null;\n\n  /**\n   * Extent of the world in EPSG:4326. For projections with\n   * `TILE_PIXELS` units, this is the extent of the tile in\n   * projected coordinate space.\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.worldExtent_ = options.worldExtent !== undefined ?\n    options.worldExtent : null;\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.axisOrientation_ = options.axisOrientation !== undefined ?\n    options.axisOrientation : 'enu';\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.global_ = options.global !== undefined ? options.global : false;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.canWrapX_ = !!(this.global_ && this.extent_);\n\n  /**\n   * @private\n   * @type {function(number, module:ol/coordinate~Coordinate):number|undefined}\n   */\n  this.getPointResolutionFunc_ = options.getPointResolution;\n\n  /**\n   * @private\n   * @type {module:ol/tilegrid/TileGrid}\n   */\n  this.defaultTileGrid_ = null;\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.metersPerUnit_ = options.metersPerUnit;\n};\n\n/**\n * @return {boolean} The projection is suitable for wrapping the x-axis\n */\nProjection.prototype.canWrapX = function canWrapX () {\n  return this.canWrapX_;\n};\n\n/**\n * Get the code for this projection, e.g. 'EPSG:4326'.\n * @return {string} Code.\n * @api\n */\nProjection.prototype.getCode = function getCode () {\n  return this.code_;\n};\n\n/**\n * Get the validity extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the units of this projection.\n * @return {module:ol/proj/Units} Units.\n * @api\n */\nProjection.prototype.getUnits = function getUnits () {\n  return this.units_;\n};\n\n/**\n * Get the amount of meters per unit of this projection.If the projection is\n * not configured with `metersPerUnit` or a units identifier, the return is\n * `undefined`.\n * @return {number|undefined} Meters.\n * @api\n */\nProjection.prototype.getMetersPerUnit = function getMetersPerUnit () {\n  return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n};\n\n/**\n * Get the world extent for this projection.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nProjection.prototype.getWorldExtent = function getWorldExtent () {\n  return this.worldExtent_;\n};\n\n/**\n * Get the axis orientation of this projection.\n * Example values are:\n * enu - the default easting, northing, elevation.\n * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n *   or south orientated transverse mercator.\n * wnu - westing, northing, up - some planetary coordinate systems have\n *   \"west positive\" coordinate systems\n * @return {string} Axis orientation.\n * @api\n */\nProjection.prototype.getAxisOrientation = function getAxisOrientation () {\n  return this.axisOrientation_;\n};\n\n/**\n * Is this projection a global projection which spans the whole world?\n * @return {boolean} Whether the projection is global.\n * @api\n */\nProjection.prototype.isGlobal = function isGlobal () {\n  return this.global_;\n};\n\n/**\n * Set if the projection is a global projection which spans the whole world\n * @param {boolean} global Whether the projection is global.\n * @api\n */\nProjection.prototype.setGlobal = function setGlobal (global) {\n  this.global_ = global;\n  this.canWrapX_ = !!(global && this.extent_);\n};\n\n/**\n * @return {module:ol/tilegrid/TileGrid} The default tile grid.\n */\nProjection.prototype.getDefaultTileGrid = function getDefaultTileGrid () {\n  return this.defaultTileGrid_;\n};\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid The default tile grid.\n */\nProjection.prototype.setDefaultTileGrid = function setDefaultTileGrid (tileGrid) {\n  this.defaultTileGrid_ = tileGrid;\n};\n\n/**\n * Set the validity extent for this projection.\n * @param {module:ol/extent~Extent} extent Extent.\n * @api\n */\nProjection.prototype.setExtent = function setExtent (extent) {\n  this.extent_ = extent;\n  this.canWrapX_ = !!(this.global_ && extent);\n};\n\n/**\n * Set the world extent for this projection.\n * @param {module:ol/extent~Extent} worldExtent World extent\n *   [minlon, minlat, maxlon, maxlat].\n * @api\n */\nProjection.prototype.setWorldExtent = function setWorldExtent (worldExtent) {\n  this.worldExtent_ = worldExtent;\n};\n\n/**\n * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n * for this projection.\n * @param {function(number, module:ol/coordinate~Coordinate):number} func Function\n * @api\n */\nProjection.prototype.setGetPointResolution = function setGetPointResolution (func) {\n  this.getPointResolutionFunc_ = func;\n};\n\n/**\n * Get the custom point resolution function for this projection (if set).\n * @return {function(number, module:ol/coordinate~Coordinate):number|undefined} The custom point\n * resolution function (if set).\n */\nProjection.prototype.getPointResolutionFunc = function getPointResolutionFunc () {\n  return this.getPointResolutionFunc_;\n};\n\nexport default Projection;\n\n//# sourceMappingURL=Projection.js.map","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  var pointX = NaN;\n  var pointY = NaN;\n  var n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    var x1 = flatCoordinates[offset];\n    var y1 = flatCoordinates[offset + 1];\n    var length = 0;\n    var cumulativeLengths = [0];\n    for (var i = offset + stride; i < end; i += stride) {\n      var x2 = flatCoordinates[i];\n      var y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    var target = fraction * length;\n    var index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      var t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      var o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  var coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  var lo = offset / stride;\n  var hi = end / stride;\n  while (lo < hi) {\n    var mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  var m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  var m1 = flatCoordinates[(lo + 1) * stride - 1];\n  var t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (var i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {module:ol/coordinate~Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  var coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n\n//# sourceMappingURL=interpolate.js.map","/**\n * @module ol/ImageBase\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nvar ImageBase = (function (EventTarget) {\n  function ImageBase(extent, resolution, pixelRatio, state) {\n\n    EventTarget.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = state;\n\n  }\n\n  if ( EventTarget ) ImageBase.__proto__ = EventTarget;\n  ImageBase.prototype = Object.create( EventTarget && EventTarget.prototype );\n  ImageBase.prototype.constructor = ImageBase;\n\n  /**\n   * @protected\n   */\n  ImageBase.prototype.changed = function changed () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @return {module:ol/extent~Extent} Extent.\n   */\n  ImageBase.prototype.getExtent = function getExtent () {\n    return this.extent;\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  ImageBase.prototype.getImage = function getImage () {};\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  ImageBase.prototype.getPixelRatio = function getPixelRatio () {\n    return this.pixelRatio_;\n  };\n\n  /**\n   * @return {number} Resolution.\n   */\n  ImageBase.prototype.getResolution = function getResolution () {\n    return /** @type {number} */ (this.resolution);\n  };\n\n  /**\n   * @return {module:ol/ImageState} State.\n   */\n  ImageBase.prototype.getState = function getState () {\n    return this.state;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  ImageBase.prototype.load = function load () {};\n\n  return ImageBase;\n}(EventTarget));\n\n\nexport default ImageBase;\n\n//# sourceMappingURL=ImageBase.js.map","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  var twiceArea = 0;\n  var x1 = flatCoordinates[end - stride];\n  var y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    var x2 = flatCoordinates[offset];\n    var y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  var area = 0;\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    var end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var area = 0;\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n\n//# sourceMappingURL=area.js.map","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from '../flat/contains.js';\nimport {forEach as forEachSegment} from '../flat/segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  var coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {module:ol/coordinate~Coordinate} point1 Start point.\n     * @param {module:ol/coordinate~Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (var i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (var i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=intersectsextent.js.map","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nvar MapEvent = (function (Event) {\n  function MapEvent(type, map, opt_frameState) {\n\n    Event.call(this, type);\n\n    /**\n     * The map where the event occurred.\n     * @type {module:ol/PluggableMap}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?module:ol/PluggableMap~FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n  if ( Event ) MapEvent.__proto__ = Event;\n  MapEvent.prototype = Object.create( Event && Event.prototype );\n  MapEvent.prototype.constructor = MapEvent;\n\n  return MapEvent;\n}(Event));\n\nexport default MapEvent;\n\n//# sourceMappingURL=MapEvent.js.map","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nvar VectorContext = function VectorContext () {};\n\nVectorContext.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {};\n\n/**\n * Render a geometry.\n *\n * @param {module:ol/geom/Geometry} geometry The geometry to render.\n */\nVectorContext.prototype.drawGeometry = function drawGeometry (geometry) {};\n\n/**\n * Set the rendering style.\n *\n * @param {module:ol/style/Style} style The rendering style.\n */\nVectorContext.prototype.setStyle = function setStyle (style) {};\n\n/**\n * @param {module:ol/geom/Circle} circleGeometry Circle geometry.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawCircle = function drawCircle (circleGeometry, feature) {};\n\n/**\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/style/Style} style Style.\n */\nVectorContext.prototype.drawFeature = function drawFeature (feature, style) {};\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometryCollectionGeometry Geometry collection.\n * @param {module:ol/Feature} feature Feature.\n */\nVectorContext.prototype.drawGeometryCollection = function drawGeometryCollection (geometryCollectionGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/LineString|module:ol/render/Feature} lineStringGeometry Line string geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} multiLineStringGeometry MultiLineString geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} multiPointGeometry MultiPoint geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/MultiPolygon} multiPolygonGeometry MultiPolygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Point|module:ol/render/Feature} pointGeometry Point geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPoint = function drawPoint (pointGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Polygon|module:ol/render/Feature} polygonGeometry Polygon geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {};\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n */\nVectorContext.prototype.drawText = function drawText (geometry, feature) {};\n\n/**\n * @param {module:ol/style/Fill} fillStyle Fill style.\n * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n */\nVectorContext.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {};\n\n/**\n * @param {module:ol/style/Image} imageStyle Image style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setImageStyle = function setImageStyle (imageStyle, opt_declutterGroup) {};\n\n/**\n * @param {module:ol/style/Text} textStyle Text style.\n * @param {module:ol/render/canvas~DeclutterGroup=} opt_declutterGroup Declutter.\n */\nVectorContext.prototype.setTextStyle = function setTextStyle (textStyle, opt_declutterGroup) {};\n\nexport default VectorContext;\n\n//# sourceMappingURL=VectorContext.js.map","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nvar RenderEvent = (function (Event) {\n  function RenderEvent(type, opt_vectorContext, opt_frameState, opt_context, opt_glContext) {\n\n    Event.call(this, type);\n\n    /**\n     * For canvas, this is an instance of {@link module:ol/render/canvas/Immediate}.\n     * @type {module:ol/render/VectorContext|undefined}\n     * @api\n     */\n    this.vectorContext = opt_vectorContext;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {module:ol/PluggableMap~FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Only available when a Canvas renderer is used, null\n     * otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n    /**\n     * WebGL context. Only available when a WebGL renderer is used, null\n     * otherwise.\n     * @type {module:ol/webgl/Context|null|undefined}\n     * @api\n     */\n    this.glContext = opt_glContext;\n\n  }\n\n  if ( Event ) RenderEvent.__proto__ = Event;\n  RenderEvent.prototype = Object.create( Event && Event.prototype );\n  RenderEvent.prototype.constructor = RenderEvent;\n\n  return RenderEvent;\n}(Event));\n\nexport default RenderEvent;\n\n//# sourceMappingURL=Event.js.map","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {module:ol/proj/Projection} sourceProj Source projection.\n * @param {module:ol/proj/Projection} targetProj Target projection.\n * @param {module:ol/coordinate~Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  var sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  var sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  var targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  var sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  var sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    var compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {module:ol/coordinate~Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  var dX = x - centroidX;\n  var dY = y - centroidY;\n  var distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {module:ol/extent~Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {module:ol/extent~Extent} targetExtent Target extent.\n * @param {module:ol/reproj/Triangulation} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: module:ol/extent~Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  var context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  var sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  var canvasWidthInUnits = getWidth(sourceDataExtent);\n  var canvasHeightInUnits = getHeight(sourceDataExtent);\n  var stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  var stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    var xPos = src.extent[0] - sourceDataExtent[0];\n    var yPos = -(src.extent[3] - sourceDataExtent[3]);\n    var srcWidth = getWidth(src.extent);\n    var srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  var targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    var source = triangle.source;\n    var target = triangle.target;\n    var x0 = source[0][0], y0 = source[0][1];\n    var x1 = source[1][0], y1 = source[1][1];\n    var x2 = source[2][0], y2 = source[2][1];\n    var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    var sourceNumericalShiftX = x0;\n    var sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    var augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    var affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    var centroidX = (u0 + u1 + u2) / 3;\n    var centroidY = (v0 + v1 + v2) / 3;\n    var p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    var p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    var p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      var target = triangle.target;\n      var u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      var v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      var u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      var v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      var u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      var v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n\n//# sourceMappingURL=reproj.js.map","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRing as linearRingArea} from '../geom/flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {douglasPeucker} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nvar LinearRing = (function (SimpleGeometry) {\n  function LinearRing(coordinates, opt_layout) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) LinearRing.__proto__ = SimpleGeometry;\n  LinearRing.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  LinearRing.prototype.constructor = LinearRing;\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/LinearRing} Clone.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.clone = function clone () {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  LinearRing.prototype.getArea = function getArea () {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  LinearRing.prototype.getType = function getType () {\n    return GeometryType.LINEAR_RING;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LinearRing.prototype.intersectsExtent = function intersectsExtent (extent) {};\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  LinearRing.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return LinearRing;\n}(SimpleGeometry));\n\n\nexport default LinearRing;\n\n//# sourceMappingURL=LinearRing.js.map","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport var DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport var DEFAULT_TILE_SIZE = 256;\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from '../flat/contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  var i, ii, x, x1, x2, y1, y2;\n  var y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  var intersections = [];\n  // Calculate intersections with the horizontal line\n  for (var r = 0, rr = ends.length; r < rr; ++r) {\n    var end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  var pointX = NaN;\n  var maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    var segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  var interiorPoints = [];\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n\n//# sourceMappingURL=interiorpoint.js.map","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @type {number}\n */\nexport var DROP = Infinity;\n\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See http://closure-library.googlecode.com/svn/docs/closure_goog_structs_heap.js.source.html\n * and http://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nvar PriorityQueue = function PriorityQueue(priorityFunction, keyFunction) {\n\n  /**\n   * @type {function(T): number}\n   * @private\n   */\n  this.priorityFunction_ = priorityFunction;\n\n  /**\n   * @type {function(T): string}\n   * @private\n   */\n  this.keyFunction_ = keyFunction;\n\n  /**\n   * @type {Array<T>}\n   * @private\n   */\n  this.elements_ = [];\n\n  /**\n   * @type {Array<number>}\n   * @private\n   */\n  this.priorities_ = [];\n\n  /**\n   * @type {!Object<string, boolean>}\n   * @private\n   */\n  this.queuedElements_ = {};\n\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.clear = function clear$1 () {\n  this.elements_.length = 0;\n  this.priorities_.length = 0;\n  clear(this.queuedElements_);\n};\n\n\n/**\n * Remove and return the highest-priority element. O(log N).\n * @return {T} Element.\n */\nPriorityQueue.prototype.dequeue = function dequeue () {\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[0];\n  if (elements.length == 1) {\n    elements.length = 0;\n    priorities.length = 0;\n  } else {\n    elements[0] = elements.pop();\n    priorities[0] = priorities.pop();\n    this.siftUp_(0);\n  }\n  var elementKey = this.keyFunction_(element);\n  delete this.queuedElements_[elementKey];\n  return element;\n};\n\n\n/**\n * Enqueue an element. O(log N).\n * @param {T} element Element.\n * @return {boolean} The element was added to the queue.\n */\nPriorityQueue.prototype.enqueue = function enqueue (element) {\n  assert(!(this.keyFunction_(element) in this.queuedElements_),\n    31); // Tried to enqueue an `element` that was already added to the queue\n  var priority = this.priorityFunction_(element);\n  if (priority != DROP) {\n    this.elements_.push(element);\n    this.priorities_.push(priority);\n    this.queuedElements_[this.keyFunction_(element)] = true;\n    this.siftDown_(0, this.elements_.length - 1);\n    return true;\n  }\n  return false;\n};\n\n\n/**\n * @return {number} Count.\n */\nPriorityQueue.prototype.getCount = function getCount () {\n  return this.elements_.length;\n};\n\n\n/**\n * Gets the index of the left child of the node at the given index.\n * @param {number} index The index of the node to get the left child for.\n * @return {number} The index of the left child.\n * @private\n */\nPriorityQueue.prototype.getLeftChildIndex_ = function getLeftChildIndex_ (index) {\n  return index * 2 + 1;\n};\n\n\n/**\n * Gets the index of the right child of the node at the given index.\n * @param {number} index The index of the node to get the right child for.\n * @return {number} The index of the right child.\n * @private\n */\nPriorityQueue.prototype.getRightChildIndex_ = function getRightChildIndex_ (index) {\n  return index * 2 + 2;\n};\n\n\n/**\n * Gets the index of the parent of the node at the given index.\n * @param {number} index The index of the node to get the parent for.\n * @return {number} The index of the parent.\n * @private\n */\nPriorityQueue.prototype.getParentIndex_ = function getParentIndex_ (index) {\n  return (index - 1) >> 1;\n};\n\n\n/**\n * Make this a heap. O(N).\n * @private\n */\nPriorityQueue.prototype.heapify_ = function heapify_ () {\n    var this$1 = this;\n\n  var i;\n  for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n    this$1.siftUp_(i);\n  }\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nPriorityQueue.prototype.isEmpty = function isEmpty () {\n  return this.elements_.length === 0;\n};\n\n\n/**\n * @param {string} key Key.\n * @return {boolean} Is key queued.\n */\nPriorityQueue.prototype.isKeyQueued = function isKeyQueued (key) {\n  return key in this.queuedElements_;\n};\n\n\n/**\n * @param {T} element Element.\n * @return {boolean} Is queued.\n */\nPriorityQueue.prototype.isQueued = function isQueued (element) {\n  return this.isKeyQueued(this.keyFunction_(element));\n};\n\n\n/**\n * @param {number} index The index of the node to move down.\n * @private\n */\nPriorityQueue.prototype.siftUp_ = function siftUp_ (index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var count = elements.length;\n  var element = elements[index];\n  var priority = priorities[index];\n  var startIndex = index;\n\n  while (index < (count >> 1)) {\n    var lIndex = this$1.getLeftChildIndex_(index);\n    var rIndex = this$1.getRightChildIndex_(index);\n\n    var smallerChildIndex = rIndex < count &&\n        priorities[rIndex] < priorities[lIndex] ?\n      rIndex : lIndex;\n\n    elements[index] = elements[smallerChildIndex];\n    priorities[index] = priorities[smallerChildIndex];\n    index = smallerChildIndex;\n  }\n\n  elements[index] = element;\n  priorities[index] = priority;\n  this.siftDown_(startIndex, index);\n};\n\n\n/**\n * @param {number} startIndex The index of the root.\n * @param {number} index The index of the node to move up.\n * @private\n */\nPriorityQueue.prototype.siftDown_ = function siftDown_ (startIndex, index) {\n    var this$1 = this;\n\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var element = elements[index];\n  var priority = priorities[index];\n\n  while (index > startIndex) {\n    var parentIndex = this$1.getParentIndex_(index);\n    if (priorities[parentIndex] > priority) {\n      elements[index] = elements[parentIndex];\n      priorities[index] = priorities[parentIndex];\n      index = parentIndex;\n    } else {\n      break;\n    }\n  }\n  elements[index] = element;\n  priorities[index] = priority;\n};\n\n\n/**\n * FIXME empty description for jsdoc\n */\nPriorityQueue.prototype.reprioritize = function reprioritize () {\n    var this$1 = this;\n\n  var priorityFunction = this.priorityFunction_;\n  var elements = this.elements_;\n  var priorities = this.priorities_;\n  var index = 0;\n  var n = elements.length;\n  var element, i, priority;\n  for (i = 0; i < n; ++i) {\n    element = elements[i];\n    priority = priorityFunction(element);\n    if (priority == DROP) {\n      delete this$1.queuedElements_[this$1.keyFunction_(element)];\n    } else {\n      priorities[index] = priority;\n      elements[index++] = element;\n    }\n  }\n  elements.length = index;\n  priorities.length = index;\n  this.heapify_();\n};\n\n\nexport default PriorityQueue;\n\n//# sourceMappingURL=PriorityQueue.js.map","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n\n//# sourceMappingURL=Corner.js.map","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport rbush from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nvar RBush = function RBush(opt_maxEntries) {\n\n  /**\n   * @private\n   */\n  this.rbush_ = rbush(opt_maxEntries, undefined);\n\n  /**\n   * A mapping between the objects added to this rbush wrapper\n   * and the objects that are actually added to the internal rbush.\n   * @private\n   * @type {Object<number, module:ol/structs/RBush~Entry>}\n   */\n  this.items_ = {};\n\n};\n\n/**\n * Insert a value into the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.insert = function insert (extent, value) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var item = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3],\n    value: value\n  };\n\n  this.rbush_.insert(item);\n  this.items_[getUid(value)] = item;\n};\n\n\n/**\n * Bulk-insert values into the RBush.\n * @param {Array<module:ol/extent~Extent>} extents Extents.\n * @param {Array<T>} values Values.\n */\nRBush.prototype.load = function load (extents, values) {\n    var this$1 = this;\n\n  var items = new Array(values.length);\n  for (var i = 0, l = values.length; i < l; i++) {\n    var extent = extents[i];\n    var value = values[i];\n\n    /** @type {module:ol/structs/RBush~Entry} */\n    var item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n    items[i] = item;\n    this$1.items_[getUid(value)] = item;\n  }\n  this.rbush_.load(items);\n};\n\n\n/**\n * Remove a value from the RBush.\n * @param {T} value Value.\n * @return {boolean} Removed.\n */\nRBush.prototype.remove = function remove (value) {\n  var uid = getUid(value);\n\n  // get the object in which the value was wrapped when adding to the\n  // internal rbush. then use that object to do the removal.\n  var item = this.items_[uid];\n  delete this.items_[uid];\n  return this.rbush_.remove(item) !== null;\n};\n\n\n/**\n * Update the extent of a value in the RBush.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {T} value Value.\n */\nRBush.prototype.update = function update (extent, value) {\n  var item = this.items_[getUid(value)];\n  var bbox = [item.minX, item.minY, item.maxX, item.maxY];\n  if (!equals(bbox, extent)) {\n    this.remove(value);\n    this.insert(extent, value);\n  }\n};\n\n\n/**\n * Return all values in the RBush.\n * @return {Array<T>} All.\n */\nRBush.prototype.getAll = function getAll () {\n  var items = this.rbush_.all();\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Return all values in the given extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {Array<T>} All in extent.\n */\nRBush.prototype.getInExtent = function getInExtent (extent) {\n  /** @type {module:ol/structs/RBush~Entry} */\n  var bbox = {\n    minX: extent[0],\n    minY: extent[1],\n    maxX: extent[2],\n    maxY: extent[3]\n  };\n  var items = this.rbush_.search(bbox);\n  return items.map(function(item) {\n    return item.value;\n  });\n};\n\n\n/**\n * Calls a callback function with each value in the tree.\n * If the callback returns a truthy value, this value is returned without\n * checking the rest of the tree.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach = function forEach (callback, opt_this) {\n  return this.forEach_(this.getAll(), callback, opt_this);\n};\n\n\n/**\n * Calls a callback function with each value in the provided extent.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEachInExtent = function forEachInExtent (extent, callback, opt_this) {\n  return this.forEach_(this.getInExtent(extent), callback, opt_this);\n};\n\n\n/**\n * @param {Array<T>} values Values.\n * @param {function(this: S, T): *} callback Callback.\n * @param {S=} opt_this The object to use as `this` in `callback`.\n * @private\n * @return {*} Callback return value.\n * @template S\n */\nRBush.prototype.forEach_ = function forEach_ (values, callback, opt_this) {\n  var result;\n  for (var i = 0, l = values.length; i < l; i++) {\n    result = callback.call(opt_this, values[i]);\n    if (result) {\n      return result;\n    }\n  }\n  return result;\n};\n\n\n/**\n * @return {boolean} Is empty.\n */\nRBush.prototype.isEmpty = function isEmpty$1 () {\n  return isEmpty(this.items_);\n};\n\n\n/**\n * Remove all values from the RBush.\n */\nRBush.prototype.clear = function clear () {\n  this.rbush_.clear();\n  this.items_ = {};\n};\n\n\n/**\n * @param {module:ol/extent~Extent=} opt_extent Extent.\n * @return {module:ol/extent~Extent} Extent.\n */\nRBush.prototype.getExtent = function getExtent (opt_extent) {\n  // FIXME add getExtent() to rbush\n  var data = this.rbush_.data;\n  return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n};\n\n\n/**\n * @param {module:ol/structs/RBush} rbush R-Tree.\n */\nRBush.prototype.concat = function concat (rbush) {\n    var this$1 = this;\n\n  this.rbush_.load(rbush.rbush_.all());\n  for (var i in rbush.items_) {\n    this$1.items_[i | 0] = rbush.items_[i | 0];\n  }\n};\n\n\nexport default RBush;\n\n//# sourceMappingURL=RBush.js.map","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nvar AssertionError = (function (Error) {\n  function AssertionError(code) {\n    var path = VERSION.split('-')[0];\n    var message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    Error.call(this, message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n  if ( Error ) AssertionError.__proto__ = Error;\n  AssertionError.prototype = Object.create( Error && Error.prototype );\n  AssertionError.prototype.constructor = AssertionError;\n\n  return AssertionError;\n}(Error));\n\nexport default AssertionError;\n\n//# sourceMappingURL=AssertionError.js.map","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, unlisten, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires module:ol/events/Event~Event\n * @api\n */\nvar Observable = (function (EventTarget) {\n  function Observable() {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  if ( EventTarget ) Observable.__proto__ = EventTarget;\n  Observable.prototype = Object.create( EventTarget && EventTarget.prototype );\n  Observable.prototype.constructor = Observable;\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  Observable.prototype.changed = function changed () {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  Observable.prototype.getRevision = function getRevision () {\n    return this.revision_;\n  };\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.on = function on (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listen(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  Observable.prototype.once = function once (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      var len = type.length;\n      var keys = new Array(len);\n      for (var i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this$1, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  Observable.prototype.un = function un (type, listener) {\n    var this$1 = this;\n\n    if (Array.isArray(type)) {\n      for (var i = 0, ii = type.length; i < ii; ++i) {\n        unlisten(this$1, type[i], listener);\n      }\n      return;\n    } else {\n      unlisten(this, /** @type {string} */ (type), listener);\n    }\n  };\n\n  return Observable;\n}(EventTarget));\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (var i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {module:ol/events~EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n\n//# sourceMappingURL=Observable.js.map","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nvar TileCache = (function (LRUCache) {\n  function TileCache(opt_highWaterMark) {\n\n    LRUCache.call(this, opt_highWaterMark);\n\n  }\n\n  if ( LRUCache ) TileCache.__proto__ = LRUCache;\n  TileCache.prototype = Object.create( LRUCache && LRUCache.prototype );\n  TileCache.prototype.constructor = TileCache;\n\n  /**\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileCache.prototype.expireCache = function expireCache (usedTiles) {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      var tile = this$1.peekLast();\n      var zKey = tile.tileCoord[0].toString();\n      if (zKey in usedTiles && usedTiles[zKey].contains(tile.tileCoord)) {\n        break;\n      } else {\n        this$1.pop().dispose();\n      }\n    }\n  };\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  TileCache.prototype.pruneExceptNewestZ = function pruneExceptNewestZ () {\n    if (this.getCount() === 0) {\n      return;\n    }\n    var key = this.peekFirstKey();\n    var tileCoord = fromKey(key);\n    var z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }, this);\n  };\n\n  return TileCache;\n}(LRUCache));\n\n\nexport default TileCache;\n\n//# sourceMappingURL=TileCache.js.map","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nvar MapBrowserEvent = (function (MapEvent) {\n  function MapBrowserEvent(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    MapEvent.call(this, type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {module:ol/pixel~Pixel}\n     * @api\n     */\n    this.pixel = map.getEventPixel(browserEvent);\n\n    /**\n     * The coordinate in view projection corresponding to the original browser event.\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = map.getCoordinateFromPixel(this.pixel);\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  if ( MapEvent ) MapBrowserEvent.__proto__ = MapEvent;\n  MapBrowserEvent.prototype = Object.create( MapEvent && MapEvent.prototype );\n  MapBrowserEvent.prototype.constructor = MapBrowserEvent;\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.preventDefault = function preventDefault () {\n    MapEvent.prototype.preventDefault.call(this);\n    this.originalEvent.preventDefault();\n  };\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  MapBrowserEvent.prototype.stopPropagation = function stopPropagation () {\n    MapEvent.prototype.stopPropagation.call(this);\n    this.originalEvent.stopPropagation();\n  };\n\n  return MapBrowserEvent;\n}(MapEvent));\n\n\nexport default MapBrowserEvent;\n\n//# sourceMappingURL=MapBrowserEvent.js.map","/**\n * @module ol/PluggableMap\n */\nimport {getUid} from './util.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport RenderEventType from './render/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {assert} from './asserts.js';\nimport {removeNode} from './dom.js';\nimport {listen, unlistenByKey, unlisten} from './events.js';\nimport {stopPropagation} from './events/Event.js';\nimport EventType from './events/EventType.js';\nimport {createEmpty, clone, createOrUpdateEmpty, equals, getForViewAndSize, isEmpty} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, TOUCH} from './has.js';\nimport LayerGroup from './layer/Group.js';\nimport {hasArea} from './size.js';\nimport {DROP} from './structs/PriorityQueue.js';\nimport {create as createTransform, apply as applyTransform} from './transform.js';\n\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {module:ol/View~State} viewState The state of the current view.\n * @property {boolean} animate\n * @property {module:ol/transform~Transform} coordinateToPixelTransform\n * @property {null|module:ol/extent~Extent} extent\n * @property {module:ol/coordinate~Coordinate} focus\n * @property {number} index\n * @property {Object<number, module:ol/layer/Layer~State>} layerStates\n * @property {Array<module:ol/layer/Layer~State>} layerStatesArray\n * @property {module:ol/transform~Transform} pixelToCoordinateTransform\n * @property {Array<module:ol/PluggableMap~PostRenderFunction>} postRenderFunctions\n * @property {module:ol/size~Size} size\n * @property {!Object<string, boolean>} skippedFeatureUids\n * @property {module:ol/TileQueue} tileQueue\n * @property {Object<string, Object<string, module:ol/TileRange>>} usedTiles\n * @property {Array<number>} viewHints\n * @property {!Object<string, Object<string, boolean>>} wantedTiles\n */\n\n\n/**\n * @typedef {function(module:ol/PluggableMap, ?module:ol/PluggableMap~FrameState): boolean} PostRenderFunction\n */\n\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(module:ol/layer/Layer): boolean} layerFilter Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in pixels. Pixels\n * inside the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {module:ol/Collection<module:ol/control/Control>} [controls]\n * @property {module:ol/Collection<module:ol/interaction/Interaction>} [interactions]\n * @property {HTMLElement|Document} keyboardEventTarget\n * @property {module:ol/Collection<module:ol/Overlay>} overlays\n * @property {Object<string, *>} values\n */\n\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {module:ol/Collection<module:ol/control/Control>|Array<module:ol/control/Control>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/util~defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {module:ol/Collection<module:ol/interaction/Interaction>|Array<module:ol/interaction/Interaction>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction~defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {boolean} [loadTilesWhileAnimating=false] When set to `true`, tiles\n * will be loaded during animations. This may improve the user experience, but\n * can also make animations stutter on devices with slow memory.\n * @property {boolean} [loadTilesWhileInteracting=false] When set to `true`,\n * tiles will be loaded while interacting with the map. This may improve the\n * user experience, but can also make map panning and zooming choppy on devices\n * with slow memory.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {module:ol/Collection<module:ol/Overlay>|Array<module:ol/Overlay>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered.\n * @property {module:ol/View} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n\n/**\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @fires module:ol/render/Event~RenderEvent#rendercomplete\n * @api\n */\nvar PluggableMap = (function (BaseObject) {\n  function PluggableMap(options) {\n    var this$1 = this;\n\n\n    BaseObject.call(this);\n\n    var optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ = options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileAnimating_ =\n        options.loadTilesWhileAnimating !== undefined ?\n          options.loadTilesWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.loadTilesWhileInteracting_ =\n        options.loadTilesWhileInteracting !== undefined ?\n          options.loadTilesWhileInteracting : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = options.pixelRatio !== undefined ?\n      options.pixelRatio : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = function() {\n      this.animationDelayKey_ = undefined;\n      this.renderFrame_.call(this, Date.now());\n    }.bind(this);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/PluggableMap~FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className = 'ol-viewport' + (TOUCH ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n    // prevent page zoom on IE >= 10 browsers\n    this.viewport_.style.msTouchAction = 'none';\n    this.viewport_.style.touchAction = 'none';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    var overlayEvents = [\n      EventType.CLICK,\n      EventType.DBLCLICK,\n      EventType.MOUSEDOWN,\n      EventType.TOUCHSTART,\n      EventType.MSPOINTERDOWN,\n      MapBrowserEventType.POINTERDOWN,\n      EventType.MOUSEWHEEL,\n      EventType.WHEEL\n    ];\n    for (var i = 0, ii = overlayEvents.length; i < ii; ++i) {\n      listen(this$1.overlayContainerStopEvent_, overlayEvents[i], stopPropagation);\n    }\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {module:ol/MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = new MapBrowserEventHandler(this, options.moveTolerance);\n    for (var key in MapBrowserEventType) {\n      listen(this$1.mapBrowserEventHandler_, MapBrowserEventType[key],\n        this$1.handleMapBrowserEvent, this$1);\n    }\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.keyHandlerKeys_ = null;\n\n    listen(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    listen(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n\n    /**\n     * @type {module:ol/Collection<module:ol/control/Control>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/interaction/Interaction>}\n     * @protected\n     */\n    this.interactions = optionsInternal.interactions || new Collection();\n\n    /**\n     * @type {module:ol/Collection<module:ol/Overlay>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, module:ol/Overlay>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {module:ol/renderer/Map}\n     * @private\n     */\n    this.renderer_ = this.createRenderer();\n\n    /**\n     * @type {function(Event)|undefined}\n     * @private\n     */\n    this.handleResize_;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/PluggableMap~PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this));\n\n    /**\n     * Uids of features to skip at rendering time.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.skippedFeatureUids_ = {};\n\n    listen(\n      this, getChangeEventType(MapProperty.LAYERGROUP),\n      this.handleLayerGroupChanged_, this);\n    listen(this, getChangeEventType(MapProperty.VIEW),\n      this.handleViewChanged_, this);\n    listen(this, getChangeEventType(MapProperty.SIZE),\n      this.handleSizeChanged_, this);\n    listen(this, getChangeEventType(MapProperty.TARGET),\n      this.handleTargetChanged_, this);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    this.controls.forEach(\n      /**\n       * @param {module:ol/control/Control} control Control.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(control) {\n        control.setMap(this);\n      }).bind(this));\n\n    listen(this.controls, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.controls, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.interactions.forEach(\n      /**\n       * @param {module:ol/interaction/Interaction} interaction Interaction.\n       * @this {module:ol/PluggableMap}\n       */\n      (function(interaction) {\n        interaction.setMap(this);\n      }).bind(this));\n\n    listen(this.interactions, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(this);\n      }, this);\n\n    listen(this.interactions, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        event.element.setMap(null);\n      }, this);\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n\n    listen(this.overlays_, CollectionEventType.ADD,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        this.addOverlayInternal_(/** @type {module:ol/Overlay} */ (event.element));\n      }, this);\n\n    listen(this.overlays_, CollectionEventType.REMOVE,\n      /**\n       * @param {module:ol/Collection~CollectionEvent} event CollectionEvent.\n       */\n      function(event) {\n        var overlay = /** @type {module:ol/Overlay} */ (event.element);\n        var id = overlay.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      }, this);\n\n  }\n\n  if ( BaseObject ) PluggableMap.__proto__ = BaseObject;\n  PluggableMap.prototype = Object.create( BaseObject && BaseObject.prototype );\n  PluggableMap.prototype.constructor = PluggableMap;\n\n  PluggableMap.prototype.createRenderer = function createRenderer () {\n    throw new Error('Use a map type that has a createRenderer method');\n  };\n\n  /**\n   * Add the given control to the map.\n   * @param {module:ol/control/Control} control Control.\n   * @api\n   */\n  PluggableMap.prototype.addControl = function addControl (control) {\n    this.getControls().push(control);\n  };\n\n  /**\n   * Add the given interaction to the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to add.\n   * @api\n   */\n  PluggableMap.prototype.addInteraction = function addInteraction (interaction) {\n    this.getInteractions().push(interaction);\n  };\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @api\n   */\n  PluggableMap.prototype.addLayer = function addLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  };\n\n  /**\n   * Add the given overlay to the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @api\n   */\n  PluggableMap.prototype.addOverlay = function addOverlay (overlay) {\n    this.getOverlays().push(overlay);\n  };\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @private\n   */\n  PluggableMap.prototype.addOverlayInternal_ = function addOverlayInternal_ (overlay) {\n    var id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  };\n\n  /**\n   *\n   * @inheritDoc\n   */\n  PluggableMap.prototype.disposeInternal = function disposeInternal () {\n    this.mapBrowserEventHandler_.dispose();\n    unlisten(this.viewport_, EventType.CONTEXTMENU, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.WHEEL, this.handleBrowserEvent, this);\n    unlisten(this.viewport_, EventType.MOUSEWHEEL, this.handleBrowserEvent, this);\n    if (this.handleResize_ !== undefined) {\n      removeEventListener(EventType.RESIZE, this.handleResize_, false);\n      this.handleResize_ = undefined;\n    }\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n      this.animationDelayKey_ = undefined;\n    }\n    this.setTarget(null);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `opt_options`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature feature} or\n   *     {@link module:ol/render/Feature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachFeatureAtPixel = function forEachFeatureAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = opt_options.layerFilter !== undefined ?\n      opt_options.layerFilter : TRUE;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, callback, null,\n      layerFilter, null);\n  };\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {Array<module:ol/Feature|module:ol/render/Feature>} The detected features or\n   * `null` if none were found.\n   * @api\n   */\n  PluggableMap.prototype.getFeaturesAtPixel = function getFeaturesAtPixel (pixel, opt_options) {\n    var features = null;\n    this.forEachFeatureAtPixel(pixel, function(feature) {\n      if (!features) {\n        features = [];\n      }\n      features.push(feature);\n    }, opt_options);\n    return features;\n  };\n\n  /**\n   * Detect layers that have a color value at a pixel on the viewport, and\n   * execute a callback with each matching layer. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback\n   *     Layer callback. This callback will receive two arguments: first is the\n   *     {@link module:ol/layer/Layer layer}, second argument is an array representing\n   *     [R, G, B, A] pixel values (0 - 255) and will be `null` for layer types\n   *     that do not currently support this argument. To stop detection, callback\n   *     functions can return a truthy value.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Configuration options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template S,T\n   * @api\n   */\n  PluggableMap.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, callback, opt_options) {\n    if (!this.frameState_) {\n      return;\n    }\n    var options = opt_options || {};\n    var hitTolerance = options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    var layerFilter = options.layerFilter || TRUE;\n    return this.renderer_.forEachLayerAtPixel(\n      pixel, this.frameState_, hitTolerance, callback, null, layerFilter, null);\n  };\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through `opt_layerFilter`.\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~AtPixelOptions=} opt_options Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @template U\n   * @api\n   */\n  PluggableMap.prototype.hasFeatureAtPixel = function hasFeatureAtPixel (pixel, opt_options) {\n    if (!this.frameState_) {\n      return false;\n    }\n    var coordinate = this.getCoordinateFromPixel(pixel);\n    opt_options = opt_options !== undefined ? opt_options : {};\n    var layerFilter = opt_options.layerFilter !== undefined ? opt_options.layerFilter : TRUE;\n    var hitTolerance = opt_options.hitTolerance !== undefined ?\n      opt_options.hitTolerance * this.frameState_.pixelRatio : 0;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate, this.frameState_, hitTolerance, layerFilter, null);\n  };\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {Event} event Event.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  PluggableMap.prototype.getEventCoordinate = function getEventCoordinate (event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  };\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {Event} event Event.\n   * @return {module:ol/pixel~Pixel} Pixel.\n   * @api\n   */\n  PluggableMap.prototype.getEventPixel = function getEventPixel (event) {\n    var viewportPosition = this.viewport_.getBoundingClientRect();\n    var eventPosition = event.changedTouches ? event.changedTouches[0] : event;\n    return [\n      eventPosition.clientX - viewportPosition.left,\n      eventPosition.clientY - viewportPosition.top\n    ];\n  };\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getTarget = function getTarget () {\n    return /** @type {HTMLElement|string|undefined} */ (this.get(MapProperty.TARGET));\n  };\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  PluggableMap.prototype.getTargetElement = function getTargetElement () {\n    var target = this.getTarget();\n    if (target !== undefined) {\n      return typeof target === 'string' ? document.getElementById(target) : target;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {module:ol/pixel~Pixel} pixel Pixel position in the map viewport.\n   * @return {module:ol/coordinate~Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  PluggableMap.prototype.getCoordinateFromPixel = function getCoordinateFromPixel (pixel) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n    }\n  };\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/control/Control>} Controls.\n   * @api\n   */\n  PluggableMap.prototype.getControls = function getControls () {\n    return this.controls;\n  };\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {module:ol/Collection<module:ol/Overlay>} Overlays.\n   * @api\n   */\n  PluggableMap.prototype.getOverlays = function getOverlays () {\n    return this.overlays_;\n  };\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {module:ol/Overlay} Overlay.\n   * @api\n   */\n  PluggableMap.prototype.getOverlayById = function getOverlayById (id) {\n    var overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  };\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {module:ol/Collection<module:ol/interaction/Interaction>} Interactions.\n   * @api\n   */\n  PluggableMap.prototype.getInteractions = function getInteractions () {\n    return this.interactions;\n  };\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {module:ol/layer/Group} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getLayerGroup = function getLayerGroup () {\n    return (\n      /** @type {module:ol/layer/Group} */ (this.get(MapProperty.LAYERGROUP))\n    );\n  };\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Layers.\n   * @api\n   */\n  PluggableMap.prototype.getLayers = function getLayers () {\n    var layers = this.getLayerGroup().getLayers();\n    return layers;\n  };\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {module:ol/coordinate~Coordinate} coordinate A map coordinate.\n   * @return {module:ol/pixel~Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.getPixelFromCoordinate = function getPixelFromCoordinate (coordinate) {\n    var frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    } else {\n      return applyTransform(frameState.coordinateToPixelTransform, coordinate.slice(0, 2));\n    }\n  };\n\n  /**\n   * Get the map renderer.\n   * @return {module:ol/renderer/Map} Renderer\n   */\n  PluggableMap.prototype.getRenderer = function getRenderer () {\n    return this.renderer_;\n  };\n\n  /**\n   * Get the size of this map.\n   * @return {module:ol/size~Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getSize = function getSize () {\n    return (\n      /** @type {module:ol/size~Size|undefined} */ (this.get(MapProperty.SIZE))\n    );\n  };\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {module:ol/View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.getView = function getView () {\n    return (\n      /** @type {module:ol/View} */ (this.get(MapProperty.VIEW))\n    );\n  };\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  PluggableMap.prototype.getViewport = function getViewport () {\n    return this.viewport_;\n  };\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  PluggableMap.prototype.getOverlayContainer = function getOverlayContainer () {\n    return this.overlayContainer_;\n  };\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  PluggableMap.prototype.getOverlayContainerStopEvent = function getOverlayContainerStopEvent () {\n    return this.overlayContainerStopEvent_;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {module:ol/coordinate~Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  PluggableMap.prototype.getTilePriority = function getTilePriority (tile, tileSourceKey, tileCenter, tileResolution) {\n    // Filter out tiles at higher zoom levels than the current zoom level, or that\n    // are outside the visible extent.\n    var frameState = this.frameState_;\n    if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n      return DROP;\n    }\n    if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n      return DROP;\n    }\n    // Prioritize the highest zoom level tiles closest to the focus.\n    // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n    // Within a zoom level, tiles are prioritized by the distance in pixels\n    // between the center of the tile and the focus.  The factor of 65536 means\n    // that the prioritization should behave as desired for tiles up to\n    // 65536 * Math.log(2) = 45426 pixels from the focus.\n    var deltaX = tileCenter[0] - frameState.focus[0];\n    var deltaY = tileCenter[1] - frameState.focus[1];\n    return 65536 * Math.log(tileResolution) +\n        Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n  };\n\n  /**\n   * @param {Event} browserEvent Browser event.\n   * @param {string=} opt_type Type.\n   */\n  PluggableMap.prototype.handleBrowserEvent = function handleBrowserEvent (browserEvent, opt_type) {\n    var type = opt_type || browserEvent.type;\n    var mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  };\n\n  /**\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  PluggableMap.prototype.handleMapBrowserEvent = function handleMapBrowserEvent (mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    this.focus_ = mapBrowserEvent.coordinate;\n    mapBrowserEvent.frameState = this.frameState_;\n    var interactionsArray = this.getInteractions().getArray();\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      for (var i = interactionsArray.length - 1; i >= 0; i--) {\n        var interaction = interactionsArray[i];\n        if (!interaction.getActive()) {\n          continue;\n        }\n        var cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont) {\n          break;\n        }\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  PluggableMap.prototype.handlePostRender = function handlePostRender () {\n    var this$1 = this;\n\n\n    var frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    var tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      var maxTotalLoading = this.maxTilesLoading_;\n      var maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        var hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING]) {\n          maxTotalLoading = this.loadTilesWhileAnimating_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n        if (hints[ViewHint.INTERACTING]) {\n          maxTotalLoading = this.loadTilesWhileInteracting_ ? 8 : 0;\n          maxNewLoads = 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n    if (frameState && this.hasListener(MapEventType.RENDERCOMPLETE) && !frameState.animate &&\n        !this.tileQueue_.getTilesLoading() && !getLoading(this.getLayers().getArray())) {\n      this.renderer_.dispatchRenderEvent(RenderEventType.RENDERCOMPLETE, frameState);\n    }\n\n    var postRenderFunctions = this.postRenderFunctions_;\n    for (var i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this$1, frameState);\n    }\n    postRenderFunctions.length = 0;\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleSizeChanged_ = function handleSizeChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTargetChanged_ = function handleTargetChanged_ () {\n    var this$1 = this;\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    var targetElement;\n    if (this.getTarget()) {\n      targetElement = this.getTargetElement();\n    }\n\n    if (this.keyHandlerKeys_) {\n      for (var i = 0, ii = this.keyHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this$1.keyHandlerKeys_[i]);\n      }\n      this.keyHandlerKeys_ = null;\n    }\n\n    if (!targetElement) {\n      this.renderer_.removeLayerRenderers();\n      removeNode(this.viewport_);\n      if (this.handleResize_ !== undefined) {\n        removeEventListener(EventType.RESIZE, this.handleResize_, false);\n        this.handleResize_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n\n      var keyboardEventTarget = !this.keyboardEventTarget_ ?\n        targetElement : this.keyboardEventTarget_;\n      this.keyHandlerKeys_ = [\n        listen(keyboardEventTarget, EventType.KEYDOWN, this.handleBrowserEvent, this),\n        listen(keyboardEventTarget, EventType.KEYPRESS, this.handleBrowserEvent, this)\n      ];\n\n      if (!this.handleResize_) {\n        this.handleResize_ = this.updateSize.bind(this);\n        addEventListener(EventType.RESIZE, this.handleResize_, false);\n      }\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleTileChange_ = function handleTileChange_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewPropertyChanged_ = function handleViewPropertyChanged_ () {\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleViewChanged_ = function handleViewChanged_ () {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    var view = this.getView();\n    if (view) {\n      this.viewport_.setAttribute('data-view', getUid(view));\n      this.viewPropertyListenerKey_ = listen(\n        view, ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_, this);\n      this.viewChangeListenerKey_ = listen(\n        view, EventType.CHANGE,\n        this.handleViewPropertyChanged_, this);\n    }\n    this.render();\n  };\n\n  /**\n   * @private\n   */\n  PluggableMap.prototype.handleLayerGroupChanged_ = function handleLayerGroupChanged_ () {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    var layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(\n          layerGroup, ObjectEventType.PROPERTYCHANGE,\n          this.render, this),\n        listen(\n          layerGroup, EventType.CHANGE,\n          this.render, this)\n      ];\n    }\n    this.render();\n  };\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  PluggableMap.prototype.isRendered = function isRendered () {\n    return !!this.frameState_;\n  };\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  PluggableMap.prototype.renderSync = function renderSync () {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  };\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  PluggableMap.prototype.render = function render () {\n    if (this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  };\n\n  /**\n   * Remove the given control from the map.\n   * @param {module:ol/control/Control} control Control.\n   * @return {module:ol/control/Control|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeControl = function removeControl (control) {\n    return this.getControls().remove(control);\n  };\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {module:ol/interaction/Interaction} interaction Interaction to remove.\n   * @return {module:ol/interaction/Interaction|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeInteraction = function removeInteraction (interaction) {\n    return this.getInteractions().remove(interaction);\n  };\n\n  /**\n   * Removes the given layer from the map.\n   * @param {module:ol/layer/Base} layer Layer.\n   * @return {module:ol/layer/Base|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeLayer = function removeLayer (layer) {\n    var layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  };\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {module:ol/Overlay} overlay Overlay.\n   * @return {module:ol/Overlay|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  PluggableMap.prototype.removeOverlay = function removeOverlay (overlay) {\n    return this.getOverlays().remove(overlay);\n  };\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  PluggableMap.prototype.renderFrame_ = function renderFrame_ (time) {\n    var viewState;\n\n    var size = this.getSize();\n    var view = this.getView();\n    var extent = createEmpty();\n    var previousFrameState = this.frameState_;\n    /** @type {?module:ol/PluggableMap~FrameState} */\n    var frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      var viewHints = view.getHints(this.frameState_ ? this.frameState_.viewHints : undefined);\n      var layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n      var layerStates = {};\n      for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n        layerStates[getUid(layerStatesArray[i].layer)] = layerStatesArray[i];\n      }\n      viewState = view.getState(this.pixelRatio_);\n      frameState = /** @type {module:ol/PluggableMap~FrameState} */ ({\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        extent: extent,\n        focus: this.focus_ ? this.focus_ : viewState.center,\n        index: this.frameIndex_++,\n        layerStates: layerStates,\n        layerStatesArray: layerStatesArray,\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        skippedFeatureUids: this.skippedFeatureUids_,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {}\n      });\n    }\n\n    if (frameState) {\n      frameState.extent = getForViewAndSize(viewState.center,\n        viewState.resolution, viewState.rotation, frameState.size, extent);\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(this.postRenderFunctions_, frameState.postRenderFunctions);\n\n      if (previousFrameState) {\n        var moveStart = !this.previousExtent_ ||\n                    (!isEmpty(this.previousExtent_) &&\n                    !equals(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState));\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      var idle = this.previousExtent_ &&\n          !frameState.viewHints[ViewHint.ANIMATING] &&\n          !frameState.viewHints[ViewHint.INTERACTING] &&\n          !equals(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(new MapEvent(MapEventType.MOVEEND, this, frameState));\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    setTimeout(this.handlePostRender.bind(this), 0);\n\n  };\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {module:ol/layer/Group} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setLayerGroup = function setLayerGroup (layerGroup) {\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  };\n\n  /**\n   * Set the size of this map.\n   * @param {module:ol/size~Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setSize = function setSize (size) {\n    this.set(MapProperty.SIZE, size);\n  };\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string|undefined} target The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setTarget = function setTarget (target) {\n    this.set(MapProperty.TARGET, target);\n  };\n\n  /**\n   * Set the view for this map.\n   * @param {module:ol/View} view The view that controls this map.\n   * @observable\n   * @api\n   */\n  PluggableMap.prototype.setView = function setView (view) {\n    this.set(MapProperty.VIEW, view);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.skipFeature = function skipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    this.skippedFeatureUids_[featureUid] = true;\n    this.render();\n  };\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  PluggableMap.prototype.updateSize = function updateSize () {\n    var targetElement = this.getTargetElement();\n\n    if (!targetElement) {\n      this.setSize(undefined);\n    } else {\n      var computedStyle = getComputedStyle(targetElement);\n      this.setSize([\n        targetElement.offsetWidth -\n            parseFloat(computedStyle['borderLeftWidth']) -\n            parseFloat(computedStyle['paddingLeft']) -\n            parseFloat(computedStyle['paddingRight']) -\n            parseFloat(computedStyle['borderRightWidth']),\n        targetElement.offsetHeight -\n            parseFloat(computedStyle['borderTopWidth']) -\n            parseFloat(computedStyle['paddingTop']) -\n            parseFloat(computedStyle['paddingBottom']) -\n            parseFloat(computedStyle['borderBottomWidth'])\n      ]);\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   */\n  PluggableMap.prototype.unskipFeature = function unskipFeature (feature) {\n    var featureUid = getUid(feature).toString();\n    delete this.skippedFeatureUids_[featureUid];\n    this.render();\n  };\n\n  return PluggableMap;\n}(BaseObject));\n\n\n/**\n * @param {MapOptions} options Map options.\n * @return {module:ol/PluggableMap~MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n\n  /**\n   * @type {HTMLElement|Document}\n   */\n  var keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget = typeof options.keyboardEventTarget === 'string' ?\n      document.getElementById(options.keyboardEventTarget) :\n      options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  var values = {};\n\n  var layerGroup = (options.layers instanceof LayerGroup) ?\n    options.layers : new LayerGroup({layers: options.layers});\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] = options.view !== undefined ?\n    options.view : new View();\n\n  var controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(options.controls instanceof Collection,\n        47); // Expected `controls` to be an array or an `module:ol/Collection~Collection`\n      controls = options.controls;\n    }\n  }\n\n  var interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(options.interactions instanceof Collection,\n        48); // Expected `interactions` to be an array or an `module:ol/Collection~Collection`\n      interactions = options.interactions;\n    }\n  }\n\n  var overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(options.overlays instanceof Collection,\n        49); // Expected `overlays` to be an array or an `module:ol/Collection~Collection`\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values\n  };\n\n}\nexport default PluggableMap;\n\n/**\n * @param  {Array<module:ol/layer/Base>} layers Layers.\n * @return {boolean} Layers have sources that are still loading.\n */\nfunction getLoading(layers) {\n  for (var i = 0, ii = layers.length; i < ii; ++i) {\n    var layer = layers[i];\n    if (layer instanceof LayerGroup) {\n      return getLoading(layer.getLayers().getArray());\n    }\n    var source = layers[i].getSource();\n    if (source && source.loading) {\n      return true;\n    }\n  }\n  return false;\n}\n\n//# sourceMappingURL=PluggableMap.js.map","/**\n * @module ol/source/Source\n */\n\nimport {VOID} from '../functions.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(module:ol/PluggableMap~FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings (`{@link module:ol/source/Source~Attribution}`)\n *\n * @typedef {string|Array<string>|module:ol/source/Source~Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {module:ol/source/State} [state]\n * @property {boolean} [wrapX]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @api\n */\nvar Source = (function (BaseObject) {\n  function Source(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @private\n    * @type {module:ol/proj/Projection}\n    */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n    * @private\n    * @type {?module:ol/source/Source~Attribution}\n    */\n    this.attributions_ = this.adaptAttributions_(options.attributions);\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n    * @private\n    * @type {module:ol/source/State}\n    */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  if ( BaseObject ) Source.__proto__ = BaseObject;\n  Source.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Source.prototype.constructor = Source;\n\n  /**\n  * Turns the attributions option into an attributions function.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributionLike The attribution option.\n  * @return {?module:ol/source/Source~Attribution} An attribution function (or null).\n  */\n  Source.prototype.adaptAttributions_ = function adaptAttributions_ (attributionLike) {\n    if (!attributionLike) {\n      return null;\n    }\n    if (Array.isArray(attributionLike)) {\n      return function(frameState) {\n        return attributionLike;\n      };\n    }\n\n    if (typeof attributionLike === 'function') {\n      return attributionLike;\n    }\n\n    return function(frameState) {\n      return [attributionLike];\n    };\n  };\n\n  /**\n  * Get the attribution function for the source.\n  * @return {?module:ol/source/Source~Attribution} Attribution function.\n  */\n  Source.prototype.getAttributions = function getAttributions () {\n    return this.attributions_;\n  };\n\n  /**\n  * Get the projection of the source.\n  * @return {module:ol/proj/Projection} Projection.\n  * @api\n  */\n  Source.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n  * @abstract\n  * @return {Array<number>|undefined} Resolutions.\n  */\n  Source.prototype.getResolutions = function getResolutions () {};\n\n  /**\n  * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n  * @return {module:ol/source/State} State.\n  * @api\n  */\n  Source.prototype.getState = function getState () {\n    return this.state_;\n  };\n\n  /**\n  * @return {boolean|undefined} Wrap X.\n  */\n  Source.prototype.getWrapX = function getWrapX () {\n    return this.wrapX_;\n  };\n\n  /**\n  * Refreshes the source and finally dispatches a 'change' event.\n  * @api\n  */\n  Source.prototype.refresh = function refresh () {\n    this.changed();\n  };\n\n  /**\n  * Set the attributions of the source.\n  * @param {module:ol/source/Source~AttributionLike|undefined} attributions Attributions.\n  *     Can be passed as `string`, `Array<string>`, `{@link module:ol/source/Source~Attribution}`,\n  *     or `undefined`.\n  * @api\n  */\n  Source.prototype.setAttributions = function setAttributions (attributions) {\n    this.attributions_ = this.adaptAttributions_(attributions);\n    this.changed();\n  };\n\n  /**\n  * Set the state of the source.\n  * @param {module:ol/source/State} state State.\n  * @protected\n  */\n  Source.prototype.setState = function setState (state) {\n    this.state_ = state;\n    this.changed();\n  };\n\n  return Source;\n}(BaseObject));\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {Object<string, boolean>} skippedFeatureUids Skipped feature uids.\n * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n * @return {T|void} Callback result.\n * @template T\n */\nSource.prototype.forEachFeatureAtCoordinate = VOID;\n\n\nexport default Source;\n\n//# sourceMappingURL=Source.js.map","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires module:ol/events/Event~Event\n * @template T\n */\nvar LRUCache = (function (EventTarget) {\n  function LRUCache(opt_highWaterMark) {\n\n    EventTarget.call(this);\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/structs/LRUCache~Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/structs/LRUCache~Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n  if ( EventTarget ) LRUCache.__proto__ = EventTarget;\n  LRUCache.prototype = Object.create( EventTarget && EventTarget.prototype );\n  LRUCache.prototype.constructor = LRUCache;\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  LRUCache.prototype.canExpireCache = function canExpireCache () {\n    return this.getCount() > this.highWaterMark;\n  };\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  LRUCache.prototype.clear = function clear () {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  LRUCache.prototype.containsKey = function containsKey (key) {\n    return this.entries_.hasOwnProperty(key);\n  };\n\n\n  /**\n   * @param {function(this: S, T, string, module:ol/structs/LRUCache): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   * @param {S=} opt_this The object to use as `this` in `f`.\n   * @template S\n   */\n  LRUCache.prototype.forEach = function forEach (f, opt_this) {\n    var this$1 = this;\n\n    var entry = this.oldest_;\n    while (entry) {\n      f.call(opt_this, entry.value_, entry.key_, this$1);\n      entry = entry.newer;\n    }\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @return {T} Value.\n   */\n  LRUCache.prototype.get = function get (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  };\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  LRUCache.prototype.remove = function remove (key) {\n    var entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @return {number} Count.\n   */\n  LRUCache.prototype.getCount = function getCount () {\n    return this.count_;\n  };\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  LRUCache.prototype.getKeys = function getKeys () {\n    var keys = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  };\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  LRUCache.prototype.getValues = function getValues () {\n    var values = new Array(this.count_);\n    var i = 0;\n    var entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  };\n\n\n  /**\n   * @return {T} Last value.\n   */\n  LRUCache.prototype.peekLast = function peekLast () {\n    return this.oldest_.value_;\n  };\n\n\n  /**\n   * @return {string} Last key.\n   */\n  LRUCache.prototype.peekLastKey = function peekLastKey () {\n    return this.oldest_.key_;\n  };\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  LRUCache.prototype.peekFirstKey = function peekFirstKey () {\n    return this.newest_.key_;\n  };\n\n\n  /**\n   * @return {T} value Value.\n   */\n  LRUCache.prototype.pop = function pop () {\n    var entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {module:ol/structs/LRUCache~Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.replace = function replace (key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  };\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  LRUCache.prototype.set = function set (key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    var entry = /** @type {module:ol/structs/LRUCache~Entry} */ ({\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    });\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  };\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  LRUCache.prototype.setSize = function setSize (size) {\n    this.highWaterMark = size;\n  };\n\n\n  /**\n   * Prune the cache.\n   */\n  LRUCache.prototype.prune = function prune () {\n    var this$1 = this;\n\n    while (this.canExpireCache()) {\n      this$1.pop();\n    }\n  };\n\n  return LRUCache;\n}(EventTarget));\n\nexport default LRUCache;\n\n//# sourceMappingURL=LRUCache.js.map","/**\n * @module ol/layer/Group\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getIntersection} from '../extent.js';\nimport BaseLayer from '../layer/Base.js';\nimport {assign, clear} from '../obj.js';\nimport SourceState from '../source/State.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<module:ol/layer/Base>|module:ol/Collection<module:ol/layer/Base>} [layers] Child layers.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  LAYERS: 'layers'\n};\n\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nvar LayerGroup = (function (BaseLayer) {\n  function LayerGroup(opt_options) {\n\n    var options = opt_options || {};\n    var baseOptions = /** @type {module:ol/layer/Group~Options} */ (assign({}, options));\n    delete baseOptions.layers;\n\n    var layers = options.layers;\n\n    BaseLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    listen(this,\n      getChangeEventType(Property.LAYERS),\n      this.handleLayersChanged_, this);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(layers instanceof Collection,\n          43); // Expected `layers` to be an array or a `Collection`\n        layers = layers;\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n\n  }\n\n  if ( BaseLayer ) LayerGroup.__proto__ = BaseLayer;\n  LayerGroup.prototype = Object.create( BaseLayer && BaseLayer.prototype );\n  LayerGroup.prototype.constructor = LayerGroup;\n\n  /**\n   * @private\n   */\n  LayerGroup.prototype.handleLayerChange_ = function handleLayerChange_ () {\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersChanged_ = function handleLayersChanged_ () {\n    var this$1 = this;\n\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    var layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(layers, CollectionEventType.REMOVE, this.handleLayersRemove_, this)\n    );\n\n    for (var id in this$1.listenerKeys_) {\n      this$1.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    var layersArray = layers.getArray();\n    for (var i = 0, ii = layersArray.length; i < ii; i++) {\n      var layer = layersArray[i];\n      this$1.listenerKeys_[getUid(layer).toString()] = [\n        listen(layer, ObjectEventType.PROPERTYCHANGE, this$1.handleLayerChange_, this$1),\n        listen(layer, EventType.CHANGE, this$1.handleLayerChange_, this$1)\n      ];\n    }\n\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersAdd_ = function handleLayersAdd_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key] = [\n      listen(layer, ObjectEventType.PROPERTYCHANGE, this.handleLayerChange_, this),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this)\n    ];\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} collectionEvent CollectionEvent.\n   * @private\n   */\n  LayerGroup.prototype.handleLayersRemove_ = function handleLayersRemove_ (collectionEvent) {\n    var layer = /** @type {module:ol/layer/Base} */ (collectionEvent.element);\n    var key = getUid(layer).toString();\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.changed();\n  };\n\n  /**\n   * Returns the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!module:ol/Collection<module:ol/layer/Base>} Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.getLayers = function getLayers () {\n    return (\n      /** @type {!module:ol/Collection<module:ol/layer/Base>} */ (this.get(Property.LAYERS))\n    );\n  };\n\n  /**\n   * Set the {@link module:ol/Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!module:ol/Collection<module:ol/layer/Base>} layers Collection of\n   *   {@link module:ol/layer/Base layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  LayerGroup.prototype.setLayers = function setLayers (layers) {\n    this.set(Property.LAYERS, layers);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayersArray = function getLayersArray (opt_array) {\n    var array = opt_array !== undefined ? opt_array : [];\n    this.getLayers().forEach(function(layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {\n    var states = opt_states !== undefined ? opt_states : [];\n\n    var pos = states.length;\n\n    this.getLayers().forEach(function(layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    var ownLayerState = this.getLayerState();\n    for (var i = pos, ii = states.length; i < ii; i++) {\n      var layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution, ownLayerState.maxResolution);\n      layerState.minResolution = Math.max(\n        layerState.minResolution, ownLayerState.minResolution);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(layerState.extent, ownLayerState.extent);\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n    }\n\n    return states;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  LayerGroup.prototype.getSourceState = function getSourceState () {\n    return SourceState.READY;\n  };\n\n  return LayerGroup;\n}(BaseLayer));\n\n\nexport default LayerGroup;\n\n//# sourceMappingURL=Group.js.map","'use strict';\n\nmodule.exports = rbush;\nmodule.exports.default = rbush;\n\nvar quickselect = require('quickselect');\n\nfunction rbush(maxEntries, format) {\n    if (!(this instanceof rbush)) return new rbush(maxEntries, format);\n\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n\n    if (format) {\n        this._initFormat(format);\n    }\n\n    this.clear();\n}\n\nrbush.prototype = {\n\n    all: function () {\n        return this._all(this.data, []);\n    },\n\n    search: function (bbox) {\n\n        var node = this.data,\n            result = [],\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return result;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    },\n\n    collides: function (bbox) {\n\n        var node = this.data,\n            toBBox = this.toBBox;\n\n        if (!intersects(bbox, node)) return false;\n\n        var nodesToSearch = [],\n            i, len, child, childBBox;\n\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    },\n\n    load: function (data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    },\n\n    insert: function (item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    },\n\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n\n    remove: function (item, equalsFn) {\n        if (!item) return this;\n\n        var node = this.data,\n            bbox = this.toBBox(item),\n            path = [],\n            indexes = [],\n            i, parent, index, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    },\n\n    toBBox: function (item) { return item; },\n\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n\n    toJSON: function () { return this.data; },\n\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push.apply(result, node.children);\n            else nodesToSearch.push.apply(nodesToSearch, node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n\n    _build: function (items, left, right, height) {\n\n        var N = right - left + 1,\n            M = this._maxEntries,\n            node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        var N2 = Math.ceil(N / M),\n            N1 = N2 * Math.ceil(Math.sqrt(M)),\n            i, j, right2, right3;\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (i = left; i <= right; i += N1) {\n\n            right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (j = i; j <= right2; j += N2) {\n\n                right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    },\n\n    _chooseSubtree: function (bbox, node, level, path) {\n\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            minArea = minEnlargement = Infinity;\n\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    },\n\n    _insert: function (item, level, isNode) {\n\n        var toBBox = this.toBBox,\n            bbox = isNode ? item : toBBox(item),\n            insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n\n        var node = insertPath[level],\n            M = node.children.length,\n            m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    },\n\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n\n    _chooseSplitIndex: function (node, m, M) {\n\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n\n        minOverlap = minArea = Infinity;\n\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index;\n    },\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX,\n            compareMinY = node.leaf ? this.compareMinY : compareNodeMinY,\n            xMargin = this._allDistMargin(node, m, M, compareMinX),\n            yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    },\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n\n        node.children.sort(compare);\n\n        var toBBox = this.toBBox,\n            leftBBox = distBBox(node, 0, m, toBBox),\n            rightBBox = distBBox(node, M - m, M, toBBox),\n            margin = bboxMargin(leftBBox) + bboxMargin(rightBBox),\n            i, child;\n\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    },\n\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    },\n\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n\n        var compareArr = ['return a', ' - b', ';'];\n\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n\n        this.toBBox = new Function('a',\n            'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX),\n        minY = Math.max(a.minY, b.minY),\n        maxX = Math.min(a.maxX, b.maxX),\n        maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right],\n        mid;\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/style/Text\n */\nimport Fill from '../style/Fill.js';\nimport TextPlacement from '../style/TextPlacement.js';\n\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nvar DEFAULT_FILL_COLOR = '#333';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS 'font' value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is '10px sans-serif'\n * @property {number} [maxAngle] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {module:ol/style/TextPlacement|string} [placement] Text placement.\n * @property {number} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string} [text] Text content.\n * @property {string} [textAlign] Text alignment. Possible values: 'left', 'right', 'center', 'end' or 'start'.\n * Default is 'center' for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {string} [textBaseline='middle'] Text base line. Possible values: 'bottom', 'top', 'middle', 'alphabetic',\n * 'hanging', 'ideographic'.\n * @property {module:ol/style/Fill} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333).\n * @property {module:ol/style/Stroke} [stroke] Stroke style.\n * @property {module:ol/style/Fill} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {module:ol/style/Stroke} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n */\n\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nvar Text = function Text(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.font_ = options.font;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.rotation_ = options.rotation;\n\n  /**\n  * @private\n  * @type {boolean|undefined}\n  */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n  * @private\n  * @type {number|undefined}\n  */\n  this.scale_ = options.scale;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.text_ = options.text;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textAlign_ = options.textAlign;\n\n  /**\n  * @private\n  * @type {string|undefined}\n  */\n  this.textBaseline_ = options.textBaseline;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.fill_ = options.fill !== undefined ? options.fill :\n    new Fill({color: DEFAULT_FILL_COLOR});\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.maxAngle_ = options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n  /**\n  * @private\n  * @type {module:ol/style/TextPlacement|string}\n  */\n  this.placement_ = options.placement !== undefined ? options.placement : TextPlacement.POINT;\n\n  /**\n  * @private\n  * @type {boolean}\n  */\n  this.overflow_ = !!options.overflow;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n  /**\n  * @private\n  * @type {number}\n  */\n  this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n  /**\n  * @private\n  * @type {module:ol/style/Fill}\n  */\n  this.backgroundFill_ = options.backgroundFill ? options.backgroundFill : null;\n\n  /**\n  * @private\n  * @type {module:ol/style/Stroke}\n  */\n  this.backgroundStroke_ = options.backgroundStroke ? options.backgroundStroke : null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.padding_ = options.padding === undefined ? null : options.padding;\n};\n\n/**\n* Clones the style.\n* @return {module:ol/style/Text} The cloned style.\n* @api\n*/\nText.prototype.clone = function clone () {\n  return new Text({\n    font: this.getFont(),\n    placement: this.getPlacement(),\n    maxAngle: this.getMaxAngle(),\n    overflow: this.getOverflow(),\n    rotation: this.getRotation(),\n    rotateWithView: this.getRotateWithView(),\n    scale: this.getScale(),\n    text: this.getText(),\n    textAlign: this.getTextAlign(),\n    textBaseline: this.getTextBaseline(),\n    fill: this.getFill() ? this.getFill().clone() : undefined,\n    stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n    offsetX: this.getOffsetX(),\n    offsetY: this.getOffsetY(),\n    backgroundFill: this.getBackgroundFill() ? this.getBackgroundFill().clone() : undefined,\n    backgroundStroke: this.getBackgroundStroke() ? this.getBackgroundStroke().clone() : undefined\n  });\n};\n\n/**\n* Get the `overflow` configuration.\n* @return {boolean} Let text overflow the length of the path they follow.\n* @api\n*/\nText.prototype.getOverflow = function getOverflow () {\n  return this.overflow_;\n};\n\n/**\n* Get the font name.\n* @return {string|undefined} Font.\n* @api\n*/\nText.prototype.getFont = function getFont () {\n  return this.font_;\n};\n\n/**\n* Get the maximum angle between adjacent characters.\n* @return {number} Angle in radians.\n* @api\n*/\nText.prototype.getMaxAngle = function getMaxAngle () {\n  return this.maxAngle_;\n};\n\n/**\n* Get the label placement.\n* @return {module:ol/style/TextPlacement|string} Text placement.\n* @api\n*/\nText.prototype.getPlacement = function getPlacement () {\n  return this.placement_;\n};\n\n/**\n* Get the x-offset for the text.\n* @return {number} Horizontal text offset.\n* @api\n*/\nText.prototype.getOffsetX = function getOffsetX () {\n  return this.offsetX_;\n};\n\n/**\n* Get the y-offset for the text.\n* @return {number} Vertical text offset.\n* @api\n*/\nText.prototype.getOffsetY = function getOffsetY () {\n  return this.offsetY_;\n};\n\n/**\n* Get the fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getFill = function getFill () {\n  return this.fill_;\n};\n\n/**\n* Determine whether the text rotates with the map.\n* @return {boolean|undefined} Rotate with map.\n* @api\n*/\nText.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n* Get the text rotation.\n* @return {number|undefined} Rotation.\n* @api\n*/\nText.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n* Get the text scale.\n* @return {number|undefined} Scale.\n* @api\n*/\nText.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n* Get the stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getStroke = function getStroke () {\n  return this.stroke_;\n};\n\n/**\n* Get the text to be rendered.\n* @return {string|undefined} Text.\n* @api\n*/\nText.prototype.getText = function getText () {\n  return this.text_;\n};\n\n/**\n* Get the text alignment.\n* @return {string|undefined} Text align.\n* @api\n*/\nText.prototype.getTextAlign = function getTextAlign () {\n  return this.textAlign_;\n};\n\n/**\n* Get the text baseline.\n* @return {string|undefined} Text baseline.\n* @api\n*/\nText.prototype.getTextBaseline = function getTextBaseline () {\n  return this.textBaseline_;\n};\n\n/**\n* Get the background fill style for the text.\n* @return {module:ol/style/Fill} Fill style.\n* @api\n*/\nText.prototype.getBackgroundFill = function getBackgroundFill () {\n  return this.backgroundFill_;\n};\n\n/**\n* Get the background stroke style for the text.\n* @return {module:ol/style/Stroke} Stroke style.\n* @api\n*/\nText.prototype.getBackgroundStroke = function getBackgroundStroke () {\n  return this.backgroundStroke_;\n};\n\n/**\n* Get the padding for the text.\n* @return {Array<number>} Padding.\n* @api\n*/\nText.prototype.getPadding = function getPadding () {\n  return this.padding_;\n};\n\n/**\n* Set the `overflow` property.\n*\n* @param {boolean} overflow Let text overflow the path that it follows.\n* @api\n*/\nText.prototype.setOverflow = function setOverflow (overflow) {\n  this.overflow_ = overflow;\n};\n\n/**\n* Set the font.\n*\n* @param {string|undefined} font Font.\n* @api\n*/\nText.prototype.setFont = function setFont (font) {\n  this.font_ = font;\n};\n\n/**\n* Set the maximum angle between adjacent characters.\n*\n* @param {number} maxAngle Angle in radians.\n* @api\n*/\nText.prototype.setMaxAngle = function setMaxAngle (maxAngle) {\n  this.maxAngle_ = maxAngle;\n};\n\n/**\n* Set the x offset.\n*\n* @param {number} offsetX Horizontal text offset.\n* @api\n*/\nText.prototype.setOffsetX = function setOffsetX (offsetX) {\n  this.offsetX_ = offsetX;\n};\n\n/**\n* Set the y offset.\n*\n* @param {number} offsetY Vertical text offset.\n* @api\n*/\nText.prototype.setOffsetY = function setOffsetY (offsetY) {\n  this.offsetY_ = offsetY;\n};\n\n/**\n* Set the text placement.\n*\n* @param {module:ol/style/TextPlacement|string} placement Placement.\n* @api\n*/\nText.prototype.setPlacement = function setPlacement (placement) {\n  this.placement_ = placement;\n};\n\n/**\n* Set the fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setFill = function setFill (fill) {\n  this.fill_ = fill;\n};\n\n/**\n* Set the rotation.\n*\n* @param {number|undefined} rotation Rotation.\n* @api\n*/\nText.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n\n/**\n* Set the scale.\n*\n* @param {number|undefined} scale Scale.\n* @api\n*/\nText.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n* Set the stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setStroke = function setStroke (stroke) {\n  this.stroke_ = stroke;\n};\n\n/**\n* Set the text.\n*\n* @param {string|undefined} text Text.\n* @api\n*/\nText.prototype.setText = function setText (text) {\n  this.text_ = text;\n};\n\n/**\n* Set the text alignment.\n*\n* @param {string|undefined} textAlign Text align.\n* @api\n*/\nText.prototype.setTextAlign = function setTextAlign (textAlign) {\n  this.textAlign_ = textAlign;\n};\n\n/**\n* Set the text baseline.\n*\n* @param {string|undefined} textBaseline Text baseline.\n* @api\n*/\nText.prototype.setTextBaseline = function setTextBaseline (textBaseline) {\n  this.textBaseline_ = textBaseline;\n};\n\n/**\n* Set the background fill.\n*\n* @param {module:ol/style/Fill} fill Fill style.\n* @api\n*/\nText.prototype.setBackgroundFill = function setBackgroundFill (fill) {\n  this.backgroundFill_ = fill;\n};\n\n/**\n* Set the background stroke.\n*\n* @param {module:ol/style/Stroke} stroke Stroke style.\n* @api\n*/\nText.prototype.setBackgroundStroke = function setBackgroundStroke (stroke) {\n  this.backgroundStroke_ = stroke;\n};\n\n/**\n* Set the padding (`[top, right, bottom, left]`).\n*\n* @param {!Array<number>} padding Padding.\n* @api\n*/\nText.prototype.setPadding = function setPadding (padding) {\n  this.padding_ = padding;\n};\n\nexport default Text;\n\n//# sourceMappingURL=Text.js.map","/**\n * @module ol/renderer/Map\n */\nimport {getUid} from '../util.js';\nimport Disposable from '../Disposable.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, invert as invertTransform, setFromArray as transformSetFromArray} from '../transform.js';\n\n\nvar MapRenderer = (function (Disposable) {\n  function MapRenderer(map) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = map;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/renderer/Layer>}\n     */\n    this.layerRenderers_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/events~EventsKey>}\n     */\n    this.layerRendererListeners_ = {};\n\n    /**\n     * @private\n     * @type {Array<module:ol/renderer/Layer>}\n     */\n    this.layerRendererConstructors_ = [];\n\n  }\n\n  if ( Disposable ) MapRenderer.__proto__ = Disposable;\n  MapRenderer.prototype = Object.create( Disposable && Disposable.prototype );\n  MapRenderer.prototype.constructor = MapRenderer;\n\n  /**\n   * Register layer renderer constructors.\n   * @param {Array<module:ol/renderer/Layer>} constructors Layer renderers.\n   */\n  MapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    this.layerRendererConstructors_.push.apply(this.layerRendererConstructors_, constructors);\n  };\n\n  /**\n   * Get the registered layer renderer constructors.\n   * @return {Array<module:ol/renderer/Layer>} Registered layer renderers.\n   */\n  MapRenderer.prototype.getLayerRendererConstructors = function getLayerRendererConstructors () {\n    return this.layerRendererConstructors_;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @protected\n   */\n  MapRenderer.prototype.calculateMatrices2D = function calculateMatrices2D (frameState) {\n    var viewState = frameState.viewState;\n    var coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    var pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(coordinateToPixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / viewState.resolution, -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0], -viewState.center[1]);\n\n    invertTransform(\n      transformSetFromArray(pixelToCoordinateTransform, coordinateToPixelTransform));\n  };\n\n  /**\n   * Removes all layer renderers.\n   */\n  MapRenderer.prototype.removeLayerRenderers = function removeLayerRenderers () {\n    var this$1 = this;\n\n    for (var key in this$1.layerRenderers_) {\n      this$1.removeLayerRendererByKey_(key).dispose();\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature),\n   *     module:ol/layer/Layer): T} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @param {module:ol/layer/Layer} layer Layer.\n     * @return {?} Callback result.\n     */\n    function forEachFeatureAtCoordinate(feature, layer) {\n      var key = getUid(feature).toString();\n      var managed = frameState.layerStates[getUid(layer)].managed;\n      if (!(key in frameState.skippedFeatureUids && !managed)) {\n        return callback.call(thisArg, feature, managed ? layer : null);\n      }\n    }\n\n    var projection = viewState.projection;\n\n    var translatedCoordinate = coordinate;\n    if (projection.canWrapX()) {\n      var projectionExtent = projection.getExtent();\n      var worldWidth = getWidth(projectionExtent);\n      var x = coordinate[0];\n      if (x < projectionExtent[0] || x > projectionExtent[2]) {\n        var worldsAway = Math.ceil((projectionExtent[0] - x) / worldWidth);\n        translatedCoordinate = [x + worldWidth * worldsAway, coordinate[1]];\n      }\n    }\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        if (layer.getSource()) {\n          result = layerRenderer.forEachFeatureAtCoordinate(\n            layer.getSource().getWrapX() ? translatedCoordinate : coordinate,\n            frameState, hitTolerance, forEachFeatureAtCoordinate, thisArg);\n        }\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  MapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {};\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: U, module:ol/layer/Layer): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  MapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate, frameState, hitTolerance, TRUE, this, layerFilter, thisArg);\n\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRenderer = function getLayerRenderer (layer) {\n    var this$1 = this;\n\n    var layerKey = getUid(layer).toString();\n    if (layerKey in this.layerRenderers_) {\n      return this.layerRenderers_[layerKey];\n    } else {\n      var renderer;\n      for (var i = 0, ii = this.layerRendererConstructors_.length; i < ii; ++i) {\n        var candidate = this$1.layerRendererConstructors_[i];\n        if (candidate['handles'](layer)) {\n          renderer = candidate['create'](this$1, layer);\n          break;\n        }\n      }\n      if (renderer) {\n        this.layerRenderers_[layerKey] = renderer;\n        this.layerRendererListeners_[layerKey] = listen(renderer,\n          EventType.CHANGE, this.handleLayerRendererChange_, this);\n      } else {\n        throw new Error('Unable to create renderer for layer: ' + layer.getType());\n      }\n      return renderer;\n    }\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @protected\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   */\n  MapRenderer.prototype.getLayerRendererByKey = function getLayerRendererByKey (layerKey) {\n    return this.layerRenderers_[layerKey];\n  };\n\n  /**\n   * @protected\n   * @return {Object<string, module:ol/renderer/Layer>} Layer renderers.\n   */\n  MapRenderer.prototype.getLayerRenderers = function getLayerRenderers () {\n    return this.layerRenderers_;\n  };\n\n  /**\n   * @return {module:ol/PluggableMap} Map.\n   */\n  MapRenderer.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Handle changes in a layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.handleLayerRendererChange_ = function handleLayerRendererChange_ () {\n    this.map_.render();\n  };\n\n  /**\n   * @param {string} layerKey Layer key.\n   * @return {module:ol/renderer/Layer} Layer renderer.\n   * @private\n   */\n  MapRenderer.prototype.removeLayerRendererByKey_ = function removeLayerRendererByKey_ (layerKey) {\n    var layerRenderer = this.layerRenderers_[layerKey];\n    delete this.layerRenderers_[layerKey];\n\n    unlistenByKey(this.layerRendererListeners_[layerKey]);\n    delete this.layerRendererListeners_[layerKey];\n\n    return layerRenderer;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  MapRenderer.prototype.removeUnusedLayerRenderers_ = function removeUnusedLayerRenderers_ (map, frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!frameState || !(layerKey in frameState.layerStates)) {\n        this$1.removeLayerRendererByKey_(layerKey).dispose();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleExpireIconCache = function scheduleExpireIconCache (frameState) {\n    frameState.postRenderFunctions.push(/** @type {module:ol/PluggableMap~PostRenderFunction} */ (expireIconCache));\n  };\n\n  /**\n   * @param {!module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   */\n  MapRenderer.prototype.scheduleRemoveUnusedLayerRenderers = function scheduleRemoveUnusedLayerRenderers (frameState) {\n    var this$1 = this;\n\n    for (var layerKey in this$1.layerRenderers_) {\n      if (!(layerKey in frameState.layerStates)) {\n        frameState.postRenderFunctions.push(\n          /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this$1.removeUnusedLayerRenderers_.bind(this$1))\n        );\n        return;\n      }\n    }\n  };\n\n  return MapRenderer;\n}(Disposable));\n\n\n/**\n * @param {module:ol/PluggableMap} map Map.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\n\n/**\n * Render.\n * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.renderFrame = VOID;\n\n\n/**\n * @param {module:ol/render/EventType} type Event type.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n */\nMapRenderer.prototype.dispatchRenderEvent = VOID;\n\n\n/**\n * @param {module:ol/layer/Layer~State} state1 First layer state.\n * @param {module:ol/layer/Layer~State} state2 Second layer state.\n * @return {number} The zIndex difference.\n */\nexport function sortByZIndex(state1, state2) {\n  return state1.zIndex - state2.zIndex;\n}\nexport default MapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport {listenOnce, unlistenByKey} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\n\nvar IconImage = (function (EventTarget) {\n  function IconImage(image, src, size, crossOrigin, imageState, color) {\n\n    EventTarget.call(this);\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ?\n      /** @type {HTMLCanvasElement} */ (document.createElement('canvas')) :\n      null;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/ImageState}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.tainting_ = false;\n    if (this.imageState_ == ImageState.LOADED) {\n      this.determineTainting_();\n    }\n\n  }\n\n  if ( EventTarget ) IconImage.__proto__ = EventTarget;\n  IconImage.prototype = Object.create( EventTarget && EventTarget.prototype );\n  IconImage.prototype.constructor = IconImage;\n\n  /**\n   * @private\n   */\n  IconImage.prototype.determineTainting_ = function determineTainting_ () {\n    var context = createCanvasContext2D(1, 1);\n    try {\n      context.drawImage(this.image_, 0, 0);\n      context.getImageData(0, 0, 1, 1);\n    } catch (e) {\n      this.tainting_ = true;\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.dispatchChangeEvent_ = function dispatchChangeEvent_ () {\n    this.dispatchEvent(EventType.CHANGE);\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageError_ = function handleImageError_ () {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.determineTainting_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  IconImage.prototype.getImage = function getImage (pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  };\n\n  /**\n   * @return {module:ol/ImageState} Image state.\n   */\n  IconImage.prototype.getImageState = function getImageState () {\n    return this.imageState_;\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  IconImage.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.tainting_) {\n        var width = this.size_[0];\n        var height = this.size_[1];\n        var context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  };\n\n  /**\n   * @return {module:ol/size~Size} Image size.\n   */\n  IconImage.prototype.getSize = function getSize () {\n    return this.size_;\n  };\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  IconImage.prototype.getSrc = function getSrc () {\n    return this.src_;\n  };\n\n  /**\n   * Load not yet loaded URI.\n   */\n  IconImage.prototype.load = function load () {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      try {\n        this.image_.src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  IconImage.prototype.replaceColor_ = function replaceColor_ () {\n    if (this.tainting_ || this.color_ === null) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    var ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    var imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    var data = imgData.data;\n    var r = this.color_[0] / 255.0;\n    var g = this.color_[1] / 255.0;\n    var b = this.color_[2] / 255.0;\n\n    for (var i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  IconImage.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return IconImage;\n}(EventTarget));\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {module:ol/size~Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/ImageState} imageState Image state.\n * @param {module:ol/color~Color} color Color.\n * @return {module:ol/style/IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  var iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n\n//# sourceMappingURL=IconImage.js.map","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport {get as getIconImage} from '../style/IconImage.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport ImageStyle from '../style/Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {module:ol/style/IconOrigin} [anchorOrigin] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {module:ol/style/IconAnchorUnits} [anchorXUnits] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels. Default is `'fraction'`.\n * @property {module:ol/style/IconAnchorUnits} [anchorYUnits] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels. Default is `'fraction'`.\n * @property {module:ol/color~Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you are using the WebGL renderer or if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {module:ol/style/IconOrigin} [offsetOrigin] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`. Default is `top-left`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {module:ol/size~Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {module:ol/size~Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nvar Icon = (function (ImageStyle) {\n  function Icon(opt_options) {\n    var options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    var opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    var rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    var scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    var rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    ImageStyle.call(this, {\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconAnchorUnits}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    var image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {module:ol/size~Size}\n     */\n    var imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    var src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = image.src || getUid(image).toString();\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {module:ol/ImageState}\n     */\n    var imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {module:ol/color~Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {module:ol/style/IconImage}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {module:ol/style/IconOrigin}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  if ( ImageStyle ) Icon.__proto__ = ImageStyle;\n  Icon.prototype = Object.create( ImageStyle && ImageStyle.prototype );\n  Icon.prototype.constructor = Icon;\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {module:ol/style/Icon} The cloned style.\n   * @api\n   */\n  Icon.prototype.clone = function clone () {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getAnchor = function getAnchor () {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    var anchor = this.anchor_;\n    var size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  };\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  Icon.prototype.setAnchor = function setAnchor (anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  };\n\n  /**\n   * Get the icon color.\n   * @return {module:ol/color~Color} Color.\n   * @api\n   */\n  Icon.prototype.getColor = function getColor () {\n    return this.color_;\n  };\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  Icon.prototype.getImage = function getImage (pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageSize = function getImageSize () {\n    return this.iconImage_.getSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {\n    return this.getImageSize();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getImageState = function getImageState () {\n    return this.iconImage_.getImageState();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getOrigin = function getOrigin () {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    var offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      var size = this.getSize();\n      var iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  };\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  Icon.prototype.getSrc = function getSrc () {\n    return this.iconImage_.getSrc();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  Icon.prototype.getSize = function getSize () {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.listenImageChange = function listenImageChange (listener, thisArg) {\n    return listen(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  Icon.prototype.load = function load () {\n    this.iconImage_.load();\n  };\n\n  /**\n   * @override\n   */\n  Icon.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {\n    unlisten(this.iconImage_, EventType.CHANGE,\n      listener, thisArg);\n  };\n\n  return Icon;\n}(ImageStyle));\n\n\nexport default Icon;\n\n//# sourceMappingURL=Icon.js.map","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the radius of the\n * earth is used (Clarke 1866 Authalic Sphere).\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport var DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lat2 = toRadians(c2[1]);\n  var deltaLatBy2 = (lat2 - lat1) / 2;\n  var deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  var a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  var length = 0;\n  for (var i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var length = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  var area = 0;\n  var len = coordinates.length;\n  var x1 = coordinates[len - 1][0];\n  var y1 = coordinates[len - 1][1];\n  for (var i = 0; i < len; i++) {\n    var x2 = coordinates[i][0];\n    var y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {module:ol/geom/Geometry} geometry A geometry.\n * @param {module:ol/sphere~SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  var options = opt_options || {};\n  var radius = options.radius || DEFAULT_RADIUS;\n  var projection = options.projection || 'EPSG:3857';\n  var type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  var area = 0;\n  var coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {module:ol/geom/SimpleGeometry} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      var geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {module:ol/coordinate~Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {module:ol/coordinate~Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  var radius = opt_radius || DEFAULT_RADIUS;\n  var lat1 = toRadians(c1[1]);\n  var lon1 = toRadians(c1[0]);\n  var dByR = distance / radius;\n  var lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  var lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n\n//# sourceMappingURL=sphere.js.map","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nvar IconImageCache = function IconImageCache() {\n\n  /**\n  * @type {!Object<string, module:ol/style/IconImage>}\n  * @private\n  */\n  this.cache_ = {};\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.cacheSize_ = 0;\n\n  /**\n  * @type {number}\n  * @private\n  */\n  this.maxCacheSize_ = 32;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.clear = function clear () {\n  this.cache_ = {};\n  this.cacheSize_ = 0;\n};\n\n/**\n* FIXME empty description for jsdoc\n*/\nIconImageCache.prototype.expire = function expire () {\n    var this$1 = this;\n\n  if (this.cacheSize_ > this.maxCacheSize_) {\n    var i = 0;\n    for (var key in this$1.cache_) {\n      var iconImage = this$1.cache_[key];\n      if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n        delete this$1.cache_[key];\n        --this$1.cacheSize_;\n      }\n    }\n  }\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @return {module:ol/style/IconImage} Icon image.\n*/\nIconImageCache.prototype.get = function get (src, crossOrigin, color) {\n  var key = getKey(src, crossOrigin, color);\n  return key in this.cache_ ? this.cache_[key] : null;\n};\n\n/**\n* @param {string} src Src.\n* @param {?string} crossOrigin Cross origin.\n* @param {module:ol/color~Color} color Color.\n* @param {module:ol/style/IconImage} iconImage Icon image.\n*/\nIconImageCache.prototype.set = function set (src, crossOrigin, color, iconImage) {\n  var key = getKey(src, crossOrigin, color);\n  this.cache_[key] = iconImage;\n  ++this.cacheSize_;\n};\n\n/**\n* Set the cache size of the icon cache. Default is `32`. Change this value when\n* your map uses more than 32 different icon images and you are not caching icon\n* styles on the application level.\n* @param {number} maxCacheSize Cache max size.\n* @api\n*/\nIconImageCache.prototype.setSize = function setSize (maxCacheSize) {\n  this.maxCacheSize_ = maxCacheSize;\n  this.expire();\n};\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {module:ol/color~Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  var colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport var shared = new IconImageCache();\n\n//# sourceMappingURL=IconImageCache.js.map","/**\n * @module ol/pointer/EventSource\n */\n\nvar EventSource = function EventSource(dispatcher, mapping) {\n\n  /**\n   * @type {module:ol/pointer/PointerEventHandler}\n   */\n  this.dispatcher = dispatcher;\n\n  /**\n   * @private\n   * @const\n   * @type {!Object<string, function(Event)>}\n   */\n  this.mapping_ = mapping;\n};\n\n/**\n * List of events supported by this source.\n * @return {Array<string>} Event names\n */\nEventSource.prototype.getEvents = function getEvents () {\n  return Object.keys(this.mapping_);\n};\n\n/**\n * Returns the handler that should handle a given event type.\n * @param {string} eventType The event type.\n * @return {function(Event)} Handler\n */\nEventSource.prototype.getHandlerForEvent = function getHandlerForEvent (eventType) {\n  return this.mapping_[eventType];\n};\n\nexport default EventSource;\n\n//# sourceMappingURL=EventSource.js.map","/**\n * @module ol/pointer/MouseSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @type {number}\n */\nexport var POINTER_ID = 1;\n\n\n/**\n * @type {string}\n */\nexport var POINTER_TYPE = 'mouse';\n\n\n/**\n * Radius around touchend that swallows mouse events.\n *\n * @type {number}\n */\nvar DEDUP_DIST = 25;\n\n/**\n * Handler for `mousedown`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousedown(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    // TODO(dfreedman) workaround for some elements not sending mouseup\n    // http://crbug/149091\n    if (POINTER_ID.toString() in this.pointerMap) {\n      this.cancel(inEvent);\n    }\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.pointerMap[POINTER_ID.toString()] = inEvent;\n    this.dispatcher.down(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mousemove`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mousemove(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.move(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseup`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseup(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var p = this.pointerMap[POINTER_ID.toString()];\n\n    if (p && p.button === inEvent.button) {\n      var e = prepareEvent(inEvent, this.dispatcher);\n      this.dispatcher.up(e, inEvent);\n      this.cleanupMouse();\n    }\n  }\n}\n\n/**\n * Handler for `mouseover`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseover(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.enterOver(e, inEvent);\n  }\n}\n\n/**\n * Handler for `mouseout`.\n *\n * @this {module:ol/pointer/MouseSource}\n * @param {MouseEvent} inEvent The in event.\n */\nfunction mouseout(inEvent) {\n  if (!this.isEventSimulatedFromTouch_(inEvent)) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.leaveOut(e, inEvent);\n  }\n}\n\n\nvar MouseSource = (function (EventSource) {\n  function MouseSource(dispatcher) {\n    var mapping = {\n      'mousedown': mousedown,\n      'mousemove': mousemove,\n      'mouseup': mouseup,\n      'mouseover': mouseover,\n      'mouseout': mouseout\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {Array<module:ol/pixel~Pixel>}\n     */\n    this.lastTouches = [];\n  }\n\n  if ( EventSource ) MouseSource.__proto__ = EventSource;\n  MouseSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MouseSource.prototype.constructor = MouseSource;\n\n  /**\n   * Detect if a mouse event was simulated from a touch by\n   * checking if previously there was a touch event at the\n   * same position.\n   *\n   * FIXME - Known problem with the native Android browser on\n   * Samsung GT-I9100 (Android 4.1.2):\n   * In case the page is scrolled, this function does not work\n   * correctly when a canvas is used (WebGL or canvas renderer).\n   * Mouse listeners on canvas elements (for this browser), create\n   * two mouse events: One 'good' and one 'bad' one (on other browsers or\n   * when a div is used, there is only one event). For the 'bad' one,\n   * clientX/clientY and also pageX/pageY are wrong when the page\n   * is scrolled. Because of that, this function can not detect if\n   * the events were simulated from a touch event. As result, a\n   * pointer event at a wrong position is dispatched, which confuses\n   * the map interactions.\n   * It is unclear, how one can get the correct position for the event\n   * or detect that the positions are invalid.\n   *\n   * @private\n   * @param {MouseEvent} inEvent The in event.\n   * @return {boolean} True, if the event was generated by a touch.\n   */\n  MouseSource.prototype.isEventSimulatedFromTouch_ = function isEventSimulatedFromTouch_ (inEvent) {\n    var lts = this.lastTouches;\n    var x = inEvent.clientX;\n    var y = inEvent.clientY;\n    for (var i = 0, l = lts.length, t = (void 0); i < l && (t = lts[i]); i++) {\n      // simulated mouse events will be swallowed near a primary touchend\n      var dx = Math.abs(x - t[0]);\n      var dy = Math.abs(y - t[1]);\n      if (dx <= DEDUP_DIST && dy <= DEDUP_DIST) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Dispatches a `pointercancel` event.\n   *\n   * @param {Event} inEvent The in event.\n   */\n  MouseSource.prototype.cancel = function cancel (inEvent) {\n    var e = prepareEvent(inEvent, this.dispatcher);\n    this.dispatcher.cancel(e, inEvent);\n    this.cleanupMouse();\n  };\n\n  /**\n   * Remove the mouse from the list of active pointers.\n   */\n  MouseSource.prototype.cleanupMouse = function cleanupMouse () {\n    delete this.pointerMap[POINTER_ID.toString()];\n  };\n\n  return MouseSource;\n}(EventSource));\n\n\n/**\n * Creates a copy of the original event that will be used\n * for the fake pointer event.\n *\n * @param {Event} inEvent The in event.\n * @param {module:ol/pointer/PointerEventHandler} dispatcher Event handler.\n * @return {Object} The copied event.\n */\nfunction prepareEvent(inEvent, dispatcher) {\n  var e = dispatcher.cloneEvent(inEvent, inEvent);\n\n  // forward mouse preventDefault\n  var pd = e.preventDefault;\n  e.preventDefault = function() {\n    inEvent.preventDefault();\n    pd();\n  };\n\n  e.pointerId = POINTER_ID;\n  e.isPrimary = true;\n  e.pointerType = POINTER_TYPE;\n\n  return e;\n}\n\n\nexport default MouseSource;\n\n//# sourceMappingURL=MouseSource.js.map","/**\n * @module ol/pointer/MsSource\n */\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar POINTER_TYPES = [\n  '',\n  'unavailable',\n  'touch',\n  'pen',\n  'mouse'\n];\n\n/**\n * Handler for `msPointerDown`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerDown(inEvent) {\n  this.pointerMap[inEvent.pointerId.toString()] = inEvent;\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.down(e, inEvent);\n}\n\n/**\n * Handler for `msPointerMove`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerMove(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.move(e, inEvent);\n}\n\n/**\n * Handler for `msPointerUp`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerUp(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.up(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msPointerOut`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOut(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.leaveOut(e, inEvent);\n}\n\n/**\n * Handler for `msPointerOver`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerOver(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.enterOver(e, inEvent);\n}\n\n/**\n * Handler for `msPointerCancel`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msPointerCancel(inEvent) {\n  var e = this.prepareEvent_(inEvent);\n  this.dispatcher.cancel(e, inEvent);\n  this.cleanup(inEvent.pointerId);\n}\n\n/**\n * Handler for `msLostPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msLostPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('lostpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\n/**\n * Handler for `msGotPointerCapture`.\n *\n * @this {module:ol/pointer/MsSource}\n * @param {MSPointerEvent} inEvent The in event.\n */\nfunction msGotPointerCapture(inEvent) {\n  var e = this.dispatcher.makeEvent('gotpointercapture', inEvent, inEvent);\n  this.dispatcher.dispatchEvent(e);\n}\n\nvar MsSource = (function (EventSource) {\n  function MsSource(dispatcher) {\n    var mapping = {\n      'MSPointerDown': msPointerDown,\n      'MSPointerMove': msPointerMove,\n      'MSPointerUp': msPointerUp,\n      'MSPointerOut': msPointerOut,\n      'MSPointerOver': msPointerOver,\n      'MSPointerCancel': msPointerCancel,\n      'MSGotPointerCapture': msGotPointerCapture,\n      'MSLostPointerCapture': msLostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, MSPointerEvent|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n  }\n\n  if ( EventSource ) MsSource.__proto__ = EventSource;\n  MsSource.prototype = Object.create( EventSource && EventSource.prototype );\n  MsSource.prototype.constructor = MsSource;\n\n  /**\n   * Creates a copy of the original event that will be used\n   * for the fake pointer event.\n   *\n   * @private\n   * @param {MSPointerEvent} inEvent The in event.\n   * @return {Object} The copied event.\n   */\n  MsSource.prototype.prepareEvent_ = function prepareEvent_ (inEvent) {\n    var e = inEvent;\n    if (typeof inEvent.pointerType === 'number') {\n      e = this.dispatcher.cloneEvent(inEvent, inEvent);\n      e.pointerType = POINTER_TYPES[inEvent.pointerType];\n    }\n\n    return e;\n  };\n\n  /**\n   * Remove this pointer from the list of active pointers.\n   * @param {number} pointerId Pointer identifier.\n   */\n  MsSource.prototype.cleanup = function cleanup (pointerId) {\n    delete this.pointerMap[pointerId.toString()];\n  };\n\n  return MsSource;\n}(EventSource));\n\nexport default MsSource;\n\n//# sourceMappingURL=MsSource.js.map","/**\n * @module ol/pointer/NativeSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport EventSource from '../pointer/EventSource.js';\n\n/**\n * Handler for `pointerdown`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerDown(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointermove`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerMove(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerup`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerUp(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerout`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOut(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointerover`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerOver(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `pointercancel`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction pointerCancel(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `lostpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction lostPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\n/**\n * Handler for `gotpointercapture`.\n *\n * @this {module:ol/pointer/NativeSource}\n * @param {Event} inEvent The in event.\n */\nfunction gotPointerCapture(inEvent) {\n  this.dispatcher.fireNativeEvent(inEvent);\n}\n\nvar NativeSource = (function (EventSource) {\n  function NativeSource(dispatcher) {\n    var mapping = {\n      'pointerdown': pointerDown,\n      'pointermove': pointerMove,\n      'pointerup': pointerUp,\n      'pointerout': pointerOut,\n      'pointerover': pointerOver,\n      'pointercancel': pointerCancel,\n      'gotpointercapture': gotPointerCapture,\n      'lostpointercapture': lostPointerCapture\n    };\n    EventSource.call(this, dispatcher, mapping);\n  }\n\n  if ( EventSource ) NativeSource.__proto__ = EventSource;\n  NativeSource.prototype = Object.create( EventSource && EventSource.prototype );\n  NativeSource.prototype.constructor = NativeSource;\n\n  return NativeSource;\n}(EventSource));\n\nexport default NativeSource;\n\n//# sourceMappingURL=NativeSource.js.map","/**\n * @module ol/pointer/PointerEvent\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport Event from '../events/Event.js';\n\n\n/**\n * Is the `buttons` property supported?\n * @type {boolean}\n */\nvar HAS_BUTTONS = false;\n\n\nvar PointerEvent = (function (Event) {\n  function PointerEvent(type, originalEvent, opt_eventDict) {\n    Event.call(this, type);\n\n    /**\n     * @const\n     * @type {Event}\n     */\n    this.originalEvent = originalEvent;\n\n    var eventDict = opt_eventDict ? opt_eventDict : {};\n\n    /**\n     * @type {number}\n     */\n    this.buttons = this.getButtons_(eventDict);\n\n    /**\n     * @type {number}\n     */\n    this.pressure = this.getPressure_(eventDict, this.buttons);\n\n    // MouseEvent related properties\n\n    /**\n     * @type {boolean}\n     */\n    this.bubbles = 'bubbles' in eventDict ? eventDict['bubbles'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.cancelable = 'cancelable' in eventDict ? eventDict['cancelable'] : false;\n\n    /**\n     * @type {Object}\n     */\n    this.view = 'view' in eventDict ? eventDict['view'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.detail = 'detail' in eventDict ? eventDict['detail'] : null;\n\n    /**\n     * @type {number}\n     */\n    this.screenX = 'screenX' in eventDict ? eventDict['screenX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.screenY = 'screenY' in eventDict ? eventDict['screenY'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientX = 'clientX' in eventDict ? eventDict['clientX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.clientY = 'clientY' in eventDict ? eventDict['clientY'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.ctrlKey = 'ctrlKey' in eventDict ? eventDict['ctrlKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.altKey = 'altKey' in eventDict ? eventDict['altKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.shiftKey = 'shiftKey' in eventDict ? eventDict['shiftKey'] : false;\n\n    /**\n     * @type {boolean}\n     */\n    this.metaKey = 'metaKey' in eventDict ? eventDict['metaKey'] : false;\n\n    /**\n     * @type {number}\n     */\n    this.button = 'button' in eventDict ? eventDict['button'] : 0;\n\n    /**\n     * @type {Node}\n     */\n    this.relatedTarget = 'relatedTarget' in eventDict ?\n      eventDict['relatedTarget'] : null;\n\n    // PointerEvent related properties\n\n    /**\n     * @const\n     * @type {number}\n     */\n    this.pointerId = 'pointerId' in eventDict ? eventDict['pointerId'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.width = 'width' in eventDict ? eventDict['width'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.height = 'height' in eventDict ? eventDict['height'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltX = 'tiltX' in eventDict ? eventDict['tiltX'] : 0;\n\n    /**\n     * @type {number}\n     */\n    this.tiltY = 'tiltY' in eventDict ? eventDict['tiltY'] : 0;\n\n    /**\n     * @type {string}\n     */\n    this.pointerType = 'pointerType' in eventDict ? eventDict['pointerType'] : '';\n\n    /**\n     * @type {number}\n     */\n    this.hwTimestamp = 'hwTimestamp' in eventDict ? eventDict['hwTimestamp'] : 0;\n\n    /**\n     * @type {boolean}\n     */\n    this.isPrimary = 'isPrimary' in eventDict ? eventDict['isPrimary'] : false;\n\n    // keep the semantics of preventDefault\n    if (originalEvent.preventDefault) {\n      this.preventDefault = function() {\n        originalEvent.preventDefault();\n      };\n    }\n  }\n\n  if ( Event ) PointerEvent.__proto__ = Event;\n  PointerEvent.prototype = Object.create( Event && Event.prototype );\n  PointerEvent.prototype.constructor = PointerEvent;\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @return {number} Button indicator.\n   */\n  PointerEvent.prototype.getButtons_ = function getButtons_ (eventDict) {\n    // According to the w3c spec,\n    // http://www.w3.org/TR/DOM-Level-3-Events/#events-MouseEvent-button\n    // MouseEvent.button == 0 can mean either no mouse button depressed, or the\n    // left mouse button depressed.\n    //\n    // As of now, the only way to distinguish between the two states of\n    // MouseEvent.button is by using the deprecated MouseEvent.which property, as\n    // this maps mouse buttons to positive integers > 0, and uses 0 to mean that\n    // no mouse button is held.\n    //\n    // MouseEvent.which is derived from MouseEvent.button at MouseEvent creation,\n    // but initMouseEvent does not expose an argument with which to set\n    // MouseEvent.which. Calling initMouseEvent with a buttonArg of 0 will set\n    // MouseEvent.button == 0 and MouseEvent.which == 1, breaking the expectations\n    // of app developers.\n    //\n    // The only way to propagate the correct state of MouseEvent.which and\n    // MouseEvent.button to a new MouseEvent.button == 0 and MouseEvent.which == 0\n    // is to call initMouseEvent with a buttonArg value of -1.\n    //\n    // This is fixed with DOM Level 4's use of buttons\n    var buttons;\n    if (eventDict.buttons || HAS_BUTTONS) {\n      buttons = eventDict.buttons;\n    } else {\n      switch (eventDict.which) {\n        case 1: buttons = 1; break;\n        case 2: buttons = 4; break;\n        case 3: buttons = 2; break;\n        default: buttons = 0;\n      }\n    }\n    return buttons;\n  };\n\n  /**\n   * @private\n   * @param {Object<string, ?>} eventDict The event dictionary.\n   * @param {number} buttons Button indicator.\n   * @return {number} The pressure.\n   */\n  PointerEvent.prototype.getPressure_ = function getPressure_ (eventDict, buttons) {\n    // Spec requires that pointers without pressure specified use 0.5 for down\n    // state and 0 for up state.\n    var pressure = 0;\n    if (eventDict.pressure) {\n      pressure = eventDict.pressure;\n    } else {\n      pressure = buttons ? 0.5 : 0;\n    }\n    return pressure;\n  };\n\n  return PointerEvent;\n}(Event));\n\n\n/**\n * Checks if the `buttons` property is supported.\n */\n(function() {\n  try {\n    var ev = new MouseEvent('click', {buttons: 1});\n    HAS_BUTTONS = ev.buttons === 1;\n  } catch (e) {\n    // pass\n  }\n})();\n\nexport default PointerEvent;\n\n//# sourceMappingURL=PointerEvent.js.map","/**\n * @module ol/pointer/TouchSource\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {remove} from '../array.js';\nimport EventSource from '../pointer/EventSource.js';\nimport {POINTER_ID} from '../pointer/MouseSource.js';\n\n\n/**\n * @type {number}\n */\nvar CLICK_COUNT_TIMEOUT = 200;\n\n/**\n * @type {string}\n */\nvar POINTER_TYPE = 'touch';\n\n/**\n * Handler for `touchstart`, triggers `pointerover`,\n * `pointerenter` and `pointerdown` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchstart(inEvent) {\n  this.vacuumTouches_(inEvent);\n  this.setPrimaryTouch_(inEvent.changedTouches[0]);\n  this.dedupSynthMouse_(inEvent);\n  this.clickCount_++;\n  this.processTouches_(inEvent, this.overDown_);\n}\n\n/**\n * Handler for `touchmove`.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchmove(inEvent) {\n  this.processTouches_(inEvent, this.moveOverOut_);\n}\n\n/**\n * Handler for `touchend`, triggers `pointerup`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The event.\n */\nfunction touchend(inEvent) {\n  this.dedupSynthMouse_(inEvent);\n  this.processTouches_(inEvent, this.upOut_);\n}\n\n/**\n * Handler for `touchcancel`, triggers `pointercancel`,\n * `pointerout` and `pointerleave` events.\n *\n * @this {module:ol/pointer/TouchSource}\n * @param {TouchEvent} inEvent The in event.\n */\nfunction touchcancel(inEvent) {\n  this.processTouches_(inEvent, this.cancelOut_);\n}\n\n\nvar TouchSource = (function (EventSource) {\n  function TouchSource(dispatcher, mouseSource) {\n    var mapping = {\n      'touchstart': touchstart,\n      'touchmove': touchmove,\n      'touchend': touchend,\n      'touchcancel': touchcancel\n    };\n    EventSource.call(this, dispatcher, mapping);\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = dispatcher.pointerMap;\n\n    /**\n     * @const\n     * @type {module:ol/pointer/MouseSource}\n     */\n    this.mouseSource = mouseSource;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.firstTouchId_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clickCount_ = 0;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.resetId_ = undefined;\n\n    /**\n     * Mouse event timeout: This should be long enough to\n     * ignore compat mouse events made by touch.\n     * @private\n     * @type {number}\n     */\n    this.dedupTimeout_ = 2500;\n  }\n\n  if ( EventSource ) TouchSource.__proto__ = EventSource;\n  TouchSource.prototype = Object.create( EventSource && EventSource.prototype );\n  TouchSource.prototype.constructor = TouchSource;\n\n  /**\n   * @private\n   * @param {Touch} inTouch The in touch.\n   * @return {boolean} True, if this is the primary touch.\n   */\n  TouchSource.prototype.isPrimaryTouch_ = function isPrimaryTouch_ (inTouch) {\n    return this.firstTouchId_ === inTouch.identifier;\n  };\n\n  /**\n   * Set primary touch if there are no pointers, or the only pointer is the mouse.\n   * @param {Touch} inTouch The in touch.\n   * @private\n   */\n  TouchSource.prototype.setPrimaryTouch_ = function setPrimaryTouch_ (inTouch) {\n    var count = Object.keys(this.pointerMap).length;\n    if (count === 0 || (count === 1 && POINTER_ID.toString() in this.pointerMap)) {\n      this.firstTouchId_ = inTouch.identifier;\n      this.cancelResetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.removePrimaryPointer_ = function removePrimaryPointer_ (inPointer) {\n    if (inPointer.isPrimary) {\n      this.firstTouchId_ = undefined;\n      this.resetClickCount_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCount_ = function resetClickCount_ () {\n    this.resetId_ = setTimeout(\n      this.resetClickCountHandler_.bind(this),\n      CLICK_COUNT_TIMEOUT);\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.resetClickCountHandler_ = function resetClickCountHandler_ () {\n    this.clickCount_ = 0;\n    this.resetId_ = undefined;\n  };\n\n  /**\n   * @private\n   */\n  TouchSource.prototype.cancelResetClickCount_ = function cancelResetClickCount_ () {\n    if (this.resetId_ !== undefined) {\n      clearTimeout(this.resetId_);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent Browser event\n   * @param {Touch} inTouch Touch event\n   * @return {PointerEvent} A pointer object.\n   */\n  TouchSource.prototype.touchToPointer_ = function touchToPointer_ (browserEvent, inTouch) {\n    var e = this.dispatcher.cloneEvent(browserEvent, inTouch);\n    // Spec specifies that pointerId 1 is reserved for Mouse.\n    // Touch identifiers can start at 0.\n    // Add 2 to the touch identifier for compatibility.\n    e.pointerId = inTouch.identifier + 2;\n    // TODO: check if this is necessary?\n    //e.target = findTarget(e);\n    e.bubbles = true;\n    e.cancelable = true;\n    e.detail = this.clickCount_;\n    e.button = 0;\n    e.buttons = 1;\n    e.width = inTouch.webkitRadiusX || inTouch.radiusX || 0;\n    e.height = inTouch.webkitRadiusY || inTouch.radiusY || 0;\n    e.pressure = inTouch.webkitForce || inTouch.force || 0.5;\n    e.isPrimary = this.isPrimaryTouch_(inTouch);\n    e.pointerType = POINTER_TYPE;\n\n    // make sure that the properties that are different for\n    // each `Touch` object are not copied from the BrowserEvent object\n    e.clientX = inTouch.clientX;\n    e.clientY = inTouch.clientY;\n    e.screenX = inTouch.screenX;\n    e.screenY = inTouch.screenY;\n\n    return e;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} inEvent Touch event\n   * @param {function(TouchEvent, PointerEvent)} inFunction In function.\n   */\n  TouchSource.prototype.processTouches_ = function processTouches_ (inEvent, inFunction) {\n    var this$1 = this;\n\n    var touches = Array.prototype.slice.call(inEvent.changedTouches);\n    var count = touches.length;\n    function preventDefault() {\n      inEvent.preventDefault();\n    }\n    for (var i = 0; i < count; ++i) {\n      var pointer = this$1.touchToPointer_(inEvent, touches[i]);\n      // forward touch preventDefaults\n      pointer.preventDefault = preventDefault;\n      inFunction.call(this$1, inEvent, pointer);\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchList} touchList The touch list.\n   * @param {number} searchId Search identifier.\n   * @return {boolean} True, if the `Touch` with the given id is in the list.\n   */\n  TouchSource.prototype.findTouch_ = function findTouch_ (touchList, searchId) {\n    var l = touchList.length;\n    for (var i = 0; i < l; i++) {\n      var touch = touchList[i];\n      if (touch.identifier === searchId) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * In some instances, a touchstart can happen without a touchend. This\n   * leaves the pointermap in a broken state.\n   * Therefore, on every touchstart, we remove the touches that did not fire a\n   * touchend event.\n   * To keep state globally consistent, we fire a pointercancel for\n   * this \"abandoned\" touch\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.vacuumTouches_ = function vacuumTouches_ (inEvent) {\n    var this$1 = this;\n\n    var touchList = inEvent.touches;\n    // pointerMap.getCount() should be < touchList.length here,\n    // as the touchstart has not been processed yet.\n    var keys = Object.keys(this.pointerMap);\n    var count = keys.length;\n    if (count >= touchList.length) {\n      var d = [];\n      for (var i = 0; i < count; ++i) {\n        var key = keys[i];\n        var value = this$1.pointerMap[key];\n        // Never remove pointerId == 1, which is mouse.\n        // Touch identifiers are 2 smaller than their pointerId, which is the\n        // index in pointermap.\n        if (key != POINTER_ID && !this$1.findTouch_(touchList, key - 2)) {\n          d.push(value.out);\n        }\n      }\n      for (var i$1 = 0; i$1 < d.length; ++i$1) {\n        this$1.cancelOut_(inEvent, d[i$1]);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer object.\n   */\n  TouchSource.prototype.overDown_ = function overDown_ (browserEvent, inPointer) {\n    this.pointerMap[inPointer.pointerId] = {\n      target: inPointer.target,\n      out: inPointer,\n      outTarget: inPointer.target\n    };\n    this.dispatcher.over(inPointer, browserEvent);\n    this.dispatcher.enter(inPointer, browserEvent);\n    this.dispatcher.down(inPointer, browserEvent);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.moveOverOut_ = function moveOverOut_ (browserEvent, inPointer) {\n    var event = inPointer;\n    var pointer = this.pointerMap[event.pointerId];\n    // a finger drifted off the screen, ignore it\n    if (!pointer) {\n      return;\n    }\n    var outEvent = pointer.out;\n    var outTarget = pointer.outTarget;\n    this.dispatcher.move(event, browserEvent);\n    if (outEvent && outTarget !== event.target) {\n      outEvent.relatedTarget = event.target;\n      event.relatedTarget = outTarget;\n      // recover from retargeting by shadow\n      outEvent.target = outTarget;\n      if (event.target) {\n        this.dispatcher.leaveOut(outEvent, browserEvent);\n        this.dispatcher.enterOver(event, browserEvent);\n      } else {\n        // clean up case when finger leaves the screen\n        event.target = outTarget;\n        event.relatedTarget = null;\n        this.cancelOut_(browserEvent, event);\n      }\n    }\n    pointer.out = event;\n    pointer.outTarget = event.target;\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent An event.\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.upOut_ = function upOut_ (browserEvent, inPointer) {\n    this.dispatcher.up(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {TouchEvent} browserEvent The event.\n   * @param {PointerEvent} inPointer The in pointer.\n   */\n  TouchSource.prototype.cancelOut_ = function cancelOut_ (browserEvent, inPointer) {\n    this.dispatcher.cancel(inPointer, browserEvent);\n    this.dispatcher.out(inPointer, browserEvent);\n    this.dispatcher.leave(inPointer, browserEvent);\n    this.cleanUpPointer_(inPointer);\n  };\n\n  /**\n   * @private\n   * @param {PointerEvent} inPointer The inPointer object.\n   */\n  TouchSource.prototype.cleanUpPointer_ = function cleanUpPointer_ (inPointer) {\n    delete this.pointerMap[inPointer.pointerId];\n    this.removePrimaryPointer_(inPointer);\n  };\n\n  /**\n   * Prevent synth mouse events from creating pointer events.\n   *\n   * @private\n   * @param {TouchEvent} inEvent The in event.\n   */\n  TouchSource.prototype.dedupSynthMouse_ = function dedupSynthMouse_ (inEvent) {\n    var lts = this.mouseSource.lastTouches;\n    var t = inEvent.changedTouches[0];\n    // only the primary finger will synth mouse events\n    if (this.isPrimaryTouch_(t)) {\n      // remember x/y of last touch\n      var lt = [t.clientX, t.clientY];\n      lts.push(lt);\n\n      setTimeout(function() {\n        // remove touch after timeout\n        remove(lts, lt);\n      }, this.dedupTimeout_);\n    }\n  };\n\n  return TouchSource;\n}(EventSource));\n\nexport default TouchSource;\n\n//# sourceMappingURL=TouchSource.js.map","/**\n * @module ol/pointer/PointerEventHandler\n */\n\n// Based on https://github.com/Polymer/PointerEvents\n\n// Copyright (c) 2013 The Polymer Authors. All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are\n// met:\n//\n// * Redistributions of source code must retain the above copyright\n// notice, this list of conditions and the following disclaimer.\n// * Redistributions in binary form must reproduce the above\n// copyright notice, this list of conditions and the following disclaimer\n// in the documentation and/or other materials provided with the\n// distribution.\n// * Neither the name of Google Inc. nor the names of its\n// contributors may be used to endorse or promote products derived from\n// this software without specific prior written permission.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nimport {listen, unlisten} from '../events.js';\nimport EventTarget from '../events/Target.js';\nimport {POINTER, MSPOINTER, TOUCH} from '../has.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport MouseSource from '../pointer/MouseSource.js';\nimport MsSource from '../pointer/MsSource.js';\nimport NativeSource from '../pointer/NativeSource.js';\nimport PointerEvent from '../pointer/PointerEvent.js';\nimport TouchSource from '../pointer/TouchSource.js';\n\n\n/**\n * Properties to copy when cloning an event, with default values.\n * @type {Array<Array>}\n */\nvar CLONE_PROPS = [\n  // MouseEvent\n  ['bubbles', false],\n  ['cancelable', false],\n  ['view', null],\n  ['detail', null],\n  ['screenX', 0],\n  ['screenY', 0],\n  ['clientX', 0],\n  ['clientY', 0],\n  ['ctrlKey', false],\n  ['altKey', false],\n  ['shiftKey', false],\n  ['metaKey', false],\n  ['button', 0],\n  ['relatedTarget', null],\n  // DOM Level 3\n  ['buttons', 0],\n  // PointerEvent\n  ['pointerId', 0],\n  ['width', 0],\n  ['height', 0],\n  ['pressure', 0],\n  ['tiltX', 0],\n  ['tiltY', 0],\n  ['pointerType', ''],\n  ['hwTimestamp', 0],\n  ['isPrimary', false],\n  // event instance\n  ['type', ''],\n  ['target', null],\n  ['currentTarget', null],\n  ['which', 0]\n];\n\n\nvar PointerEventHandler = (function (EventTarget) {\n  function PointerEventHandler(element) {\n    EventTarget.call(this);\n\n    /**\n     * @const\n     * @private\n     * @type {Element|HTMLDocument}\n     */\n    this.element_ = element;\n\n    /**\n     * @const\n     * @type {!Object<string, Event|Object>}\n     */\n    this.pointerMap = {};\n\n    /**\n     * @type {Object<string, function(Event)>}\n     * @private\n     */\n    this.eventMap_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/EventSource>}\n     * @private\n     */\n    this.eventSourceList_ = [];\n\n    this.registerSources();\n  }\n\n  if ( EventTarget ) PointerEventHandler.__proto__ = EventTarget;\n  PointerEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  PointerEventHandler.prototype.constructor = PointerEventHandler;\n\n  /**\n   * Set up the event sources (mouse, touch and native pointers)\n   * that generate pointer events.\n   */\n  PointerEventHandler.prototype.registerSources = function registerSources () {\n    if (POINTER) {\n      this.registerSource('native', new NativeSource(this));\n    } else if (MSPOINTER) {\n      this.registerSource('ms', new MsSource(this));\n    } else {\n      var mouseSource = new MouseSource(this);\n      this.registerSource('mouse', mouseSource);\n\n      if (TOUCH) {\n        this.registerSource('touch', new TouchSource(this, mouseSource));\n      }\n    }\n\n    // register events on the viewport element\n    this.register_();\n  };\n\n  /**\n   * Add a new event source that will generate pointer events.\n   *\n   * @param {string} name A name for the event source\n   * @param {module:ol/pointer/EventSource} source The source event.\n   */\n  PointerEventHandler.prototype.registerSource = function registerSource (name, source) {\n    var s = source;\n    var newEvents = s.getEvents();\n\n    if (newEvents) {\n      newEvents.forEach(function(e) {\n        var handler = s.getHandlerForEvent(e);\n\n        if (handler) {\n          this.eventMap_[e] = handler.bind(s);\n        }\n      }.bind(this));\n      this.eventSourceList_.push(s);\n    }\n  };\n\n  /**\n   * Set up the events for all registered event sources.\n   * @private\n   */\n  PointerEventHandler.prototype.register_ = function register_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.addEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Remove all registered events.\n   * @private\n   */\n  PointerEventHandler.prototype.unregister_ = function unregister_ () {\n    var this$1 = this;\n\n    var l = this.eventSourceList_.length;\n    for (var i = 0; i < l; i++) {\n      var eventSource = this$1.eventSourceList_[i];\n      this$1.removeEvents_(eventSource.getEvents());\n    }\n  };\n\n  /**\n   * Calls the right handler for a new event.\n   * @private\n   * @param {Event} inEvent Browser event.\n   */\n  PointerEventHandler.prototype.eventHandler_ = function eventHandler_ (inEvent) {\n    var type = inEvent.type;\n    var handler = this.eventMap_[type];\n    if (handler) {\n      handler(inEvent);\n    }\n  };\n\n  /**\n   * Setup listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.addEvents_ = function addEvents_ (events) {\n    events.forEach(function(eventName) {\n      listen(this.element_, eventName, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Unregister listeners for the given events.\n   * @private\n   * @param {Array<string>} events List of events.\n   */\n  PointerEventHandler.prototype.removeEvents_ = function removeEvents_ (events) {\n    events.forEach(function(e) {\n      unlisten(this.element_, e, this.eventHandler_, this);\n    }.bind(this));\n  };\n\n  /**\n   * Returns a snapshot of inEvent, with writable properties.\n   *\n   * @param {Event} event Browser event.\n   * @param {Event|Touch} inEvent An event that contains\n   *    properties to copy.\n   * @return {Object} An object containing shallow copies of\n   *    `inEvent`'s properties.\n   */\n  PointerEventHandler.prototype.cloneEvent = function cloneEvent (event, inEvent) {\n    var eventCopy = {};\n    for (var i = 0, ii = CLONE_PROPS.length; i < ii; i++) {\n      var p = CLONE_PROPS[i][0];\n      eventCopy[p] = event[p] || inEvent[p] || CLONE_PROPS[i][1];\n    }\n\n    return eventCopy;\n  };\n\n  // EVENTS\n\n\n  /**\n   * Triggers a 'pointerdown' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.down = function down (data, event) {\n    this.fireEvent(PointerEventType.POINTERDOWN, data, event);\n  };\n\n  /**\n   * Triggers a 'pointermove' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.move = function move (data, event) {\n    this.fireEvent(PointerEventType.POINTERMOVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerup' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.up = function up (data, event) {\n    this.fireEvent(PointerEventType.POINTERUP, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerenter' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enter = function enter (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERENTER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerleave' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leave = function leave (data, event) {\n    data.bubbles = false;\n    this.fireEvent(PointerEventType.POINTERLEAVE, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerover' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.over = function over (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROVER, data, event);\n  };\n\n  /**\n   * Triggers a 'pointerout' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.out = function out (data, event) {\n    data.bubbles = true;\n    this.fireEvent(PointerEventType.POINTEROUT, data, event);\n  };\n\n  /**\n   * Triggers a 'pointercancel' event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.cancel = function cancel (data, event) {\n    this.fireEvent(PointerEventType.POINTERCANCEL, data, event);\n  };\n\n  /**\n   * Triggers a combination of 'pointerout' and 'pointerleave' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.leaveOut = function leaveOut (data, event) {\n    this.out(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.leave(data, event);\n    }\n  };\n\n  /**\n   * Triggers a combination of 'pointerover' and 'pointerevents' events.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.enterOver = function enterOver (data, event) {\n    this.over(data, event);\n    if (!this.contains_(data.target, data.relatedTarget)) {\n      this.enter(data, event);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Element} container The container element.\n   * @param {Element} contained The contained element.\n   * @return {boolean} Returns true if the container element\n   *   contains the other element.\n   */\n  PointerEventHandler.prototype.contains_ = function contains_ (container, contained) {\n    if (!container || !contained) {\n      return false;\n    }\n    return container.contains(contained);\n  };\n\n  // EVENT CREATION AND TRACKING\n  /**\n   * Creates a new Event of type `inType`, based on the information in\n   * `data`.\n   *\n   * @param {string} inType A string representing the type of event to create.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} A PointerEvent of type `inType`.\n   */\n  PointerEventHandler.prototype.makeEvent = function makeEvent (inType, data, event) {\n    return new PointerEvent(inType, event, data);\n  };\n\n  /**\n   * Make and dispatch an event in one call.\n   * @param {string} inType A string representing the type of event.\n   * @param {Object} data Pointer event data.\n   * @param {Event} event The event.\n   */\n  PointerEventHandler.prototype.fireEvent = function fireEvent (inType, data, event) {\n    var e = this.makeEvent(inType, data, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Creates a pointer event from a native pointer event\n   * and dispatches this event.\n   * @param {Event} event A platform event with a target.\n   */\n  PointerEventHandler.prototype.fireNativeEvent = function fireNativeEvent (event) {\n    var e = this.makeEvent(event.type, event, event);\n    this.dispatchEvent(e);\n  };\n\n  /**\n   * Wrap a native mouse event into a pointer event.\n   * This proxy method is required for the legacy IE support.\n   * @param {string} eventType The pointer event type.\n   * @param {Event} event The event.\n   * @return {module:ol/pointer/PointerEvent} The wrapped event.\n   */\n  PointerEventHandler.prototype.wrapMouseEvent = function wrapMouseEvent (eventType, event) {\n    var pointerEvent = this.makeEvent(\n      eventType, MouseSource.prepareEvent(event, this), event);\n    return pointerEvent;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  PointerEventHandler.prototype.disposeInternal = function disposeInternal () {\n    this.unregister_();\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return PointerEventHandler;\n}(EventTarget));\n\nexport default PointerEventHandler;\n\n//# sourceMappingURL=PointerEventHandler.js.map","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(module:ol/Image, string)} LoadFunction\n * @api\n */\n\n\nvar ImageWrapper = (function (ImageBase) {\n  function ImageWrapper(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    ImageBase.call(this, extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  if ( ImageBase ) ImageWrapper.__proto__ = ImageBase;\n  ImageWrapper.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageWrapper.prototype.constructor = ImageWrapper;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageWrapper.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  ImageWrapper.prototype.load = function load () {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.imageLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  ImageWrapper.prototype.setImage = function setImage (image) {\n    this.image_ = image;\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageWrapper.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageWrapper;\n}(ImageBase));\n\n\nexport default ImageWrapper;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @typedef {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar ImageTile = (function (Tile) {\n  function ImageTile(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.imageListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  if ( Tile ) ImageTile.__proto__ = Tile;\n  ImageTile.prototype = Object.create( Tile && Tile.prototype );\n  ImageTile.prototype.constructor = ImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  ImageTile.prototype.getImage = function getImage () {\n    return this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageTile.prototype.getKey = function getKey () {\n    return this.src_;\n  };\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageError_ = function handleImageError_ () {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  };\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  ImageTile.prototype.handleImageLoad_ = function handleImageLoad_ () {\n    if (this.image_.naturalWidth && this.image_.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  ImageTile.prototype.load = function load () {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.imageListenerKeys_ = [\n        listenOnce(this.image_, EventType.ERROR,\n          this.handleImageError_, this),\n        listenOnce(this.image_, EventType.LOAD,\n          this.handleImageLoad_, this)\n      ];\n      this.tileLoadFunction_(this, this.src_);\n    }\n  };\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  ImageTile.prototype.unlistenImage_ = function unlistenImage_ () {\n    this.imageListenerKeys_.forEach(unlistenByKey);\n    this.imageListenerKeys_ = null;\n  };\n\n  return ImageTile;\n}(Tile));\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  var ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n\n//# sourceMappingURL=ImageTile.js.map","/**\n * @module ol/ImageCanvas\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\n\n\n/**\n * A function that is called to trigger asynchronous canvas drawing.  It is\n * called with a \"done\" callback that should be called when drawing is done.\n * If any error occurs during drawing, the \"done\" callback should be called with\n * that error.\n *\n * @typedef {function(function(Error))} Loader\n */\n\n\nvar ImageCanvas = (function (ImageBase) {\n  function ImageCanvas(extent, resolution, pixelRatio, canvas, opt_loader) {\n\n    var state = opt_loader !== undefined ? ImageState.IDLE : ImageState.LOADED;\n\n    ImageBase.call(this, extent, resolution, pixelRatio, state);\n\n    /**\n     * Optional canvas loader function.\n     * @type {?module:ol/ImageCanvas~Loader}\n     * @private\n     */\n    this.loader_ = opt_loader !== undefined ? opt_loader : null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {Error}\n     */\n    this.error_ = null;\n\n  }\n\n  if ( ImageBase ) ImageCanvas.__proto__ = ImageBase;\n  ImageCanvas.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ImageCanvas.prototype.constructor = ImageCanvas;\n\n  /**\n   * Get any error associated with asynchronous rendering.\n   * @return {Error} Any error that occurred during rendering.\n   */\n  ImageCanvas.prototype.getError = function getError () {\n    return this.error_;\n  };\n\n  /**\n   * Handle async drawing complete.\n   * @param {Error} err Any error during drawing.\n   * @private\n   */\n  ImageCanvas.prototype.handleLoad_ = function handleLoad_ (err) {\n    if (err) {\n      this.error_ = err;\n      this.state = ImageState.ERROR;\n    } else {\n      this.state = ImageState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageCanvas.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.loader_(this.handleLoad_.bind(this));\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas element.\n   */\n  ImageCanvas.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  return ImageCanvas;\n}(ImageBase));\n\n\nexport default ImageCanvas;\n\n//# sourceMappingURL=ImageCanvas.js.map","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nvar Kinetic = function Kinetic(decay, minVelocity, delay) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.decay_ = decay;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.minVelocity_ = minVelocity;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.delay_ = delay;\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.points_ = [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.angle_ = 0;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.initialVelocity_ = 0;\n};\n\n/**\n * FIXME empty description for jsdoc\n */\nKinetic.prototype.begin = function begin () {\n  this.points_.length = 0;\n  this.angle_ = 0;\n  this.initialVelocity_ = 0;\n};\n\n/**\n * @param {number} x X.\n * @param {number} y Y.\n */\nKinetic.prototype.update = function update (x, y) {\n  this.points_.push(x, y, Date.now());\n};\n\n/**\n * @return {boolean} Whether we should do kinetic animation.\n */\nKinetic.prototype.end = function end () {\n  if (this.points_.length < 6) {\n    // at least 2 points are required (i.e. there must be at least 6 elements\n    // in the array)\n    return false;\n  }\n  var delay = Date.now() - this.delay_;\n  var lastIndex = this.points_.length - 3;\n  if (this.points_[lastIndex + 2] < delay) {\n    // the last tracked point is too old, which means that the user stopped\n    // panning before releasing the map\n    return false;\n  }\n\n  // get the first point which still falls into the delay time\n  var firstIndex = lastIndex - 3;\n  while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n    firstIndex -= 3;\n  }\n\n  var duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n  // we don't want a duration of 0 (divide by zero)\n  // we also make sure the user panned for a duration of at least one frame\n  // (1/60s) to compute sane displacement values\n  if (duration < 1000 / 60) {\n    return false;\n  }\n\n  var dx = this.points_[lastIndex] - this.points_[firstIndex];\n  var dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n  this.angle_ = Math.atan2(dy, dx);\n  this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n  return this.initialVelocity_ > this.minVelocity_;\n};\n\n/**\n * @return {number} Total distance travelled (pixels).\n */\nKinetic.prototype.getDistance = function getDistance () {\n  return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n};\n\n/**\n * @return {number} Angle of the kinetic panning animation (radians).\n */\nKinetic.prototype.getAngle = function getAngle () {\n  return this.angle_;\n};\n\nexport default Kinetic;\n\n//# sourceMappingURL=Kinetic.js.map","/**\n * @module ol/control/util\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {module:ol/control/Attribution~Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {module:ol/control/Rotate~Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {module:ol/control/Zoom~Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n * @api\n */\n\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {module:ol/control/util~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/control/Control>}\n * Controls.\n * @function module:ol/control.defaults\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var controls = new Collection();\n\n  var zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  var rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  var attributionControl = options.attribution !== undefined ?\n    options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n\n//# sourceMappingURL=util.js.map","/**\n * @module ol/control/Zoom\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='-'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nvar Zoom = (function (Control) {\n  function Zoom(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom';\n\n    var delta = options.delta !== undefined ? options.delta : 1;\n\n    var zoomInLabel = options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    var zoomOutLabel = options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2212';\n\n    var zoomInTipLabel = options.zoomInTipLabel !== undefined ?\n      options.zoomInTipLabel : 'Zoom in';\n    var zoomOutTipLabel = options.zoomOutTipLabel !== undefined ?\n      options.zoomOutTipLabel : 'Zoom out';\n\n    var inElement = document.createElement('button');\n    inElement.className = className + '-in';\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string' ? document.createTextNode(zoomInLabel) : zoomInLabel\n    );\n\n    listen(inElement, EventType.CLICK, this.handleClick_.bind(this, delta));\n\n    var outElement = document.createElement('button');\n    outElement.className = className + '-out';\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string' ? document.createTextNode(zoomOutLabel) : zoomOutLabel\n    );\n\n    listen(outElement, EventType.CLICK, this.handleClick_.bind(this, -delta));\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Control ) Zoom.__proto__ = Control;\n  Zoom.prototype = Object.create( Control && Control.prototype );\n  Zoom.prototype.constructor = Zoom;\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Zoom.prototype.handleClick_ = function handleClick_ (delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  };\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  Zoom.prototype.zoomByDelta_ = function zoomByDelta_ (delta) {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    var currentResolution = view.getResolution();\n    if (currentResolution) {\n      var newResolution = view.constrainResolution(currentResolution, delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          resolution: newResolution,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setResolution(newResolution);\n      }\n    }\n  };\n\n  return Zoom;\n}(Control));\n\n\nexport default Zoom;\n\n//# sourceMappingURL=Zoom.js.map","/**\n * @module ol/control/Rotate\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function()} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nvar Rotate = (function (Control) {\n  function Rotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    var className = options.className !== undefined ? options.className : 'ol-rotate';\n\n    var label = options.label !== undefined ? options.label : '\\u21E7';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = 'ol-compass';\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add('ol-compass');\n    }\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    var button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n\n  }\n\n  if ( Control ) Rotate.__proto__ = Control;\n  Rotate.prototype = Object.create( Control && Control.prototype );\n  Rotate.prototype.constructor = Rotate;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Rotate.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  };\n\n  /**\n   * @private\n   */\n  Rotate.prototype.resetNorth_ = function resetNorth_ () {\n    var map = this.getMap();\n    var view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    if (view.getRotation() !== undefined) {\n      if (this.duration_ > 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  };\n\n  return Rotate;\n}(Control));\n\n\n/**\n * Update the rotate control element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Rotate}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    return;\n  }\n  var rotation = frameState.viewState.rotation;\n  if (rotation != this.rotation_) {\n    var transform = 'rotate(' + rotation + 'rad)';\n    if (this.autoHide_) {\n      var contains = this.element.classList.contains(CLASS_HIDDEN);\n      if (!contains && rotation === 0) {\n        this.element.classList.add(CLASS_HIDDEN);\n      } else if (contains && rotation !== 0) {\n        this.element.classList.remove(CLASS_HIDDEN);\n      }\n    }\n    this.label_.style.msTransform = transform;\n    this.label_.style.webkitTransform = transform;\n    this.label_.style.transform = transform;\n  }\n  this.rotation_ = rotation;\n}\n\nexport default Rotate;\n\n//# sourceMappingURL=Rotate.js.map","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {visibleAtResolution} from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible=true] Specify if attributions can\n * be collapsed. If you use an OSM source, should be set to `false` — see\n * {@link https://www.openstreetmap.org/copyright OSM Copyright} —\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [collapseLabel='»'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {function(module:ol/MapEvent)} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nvar Attribution = (function (Control) {\n  function Attribution(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-attribution';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00BB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ulElement_);\n    element.appendChild(button);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n  }\n\n  if ( Control ) Attribution.__proto__ = Control;\n  Attribution.prototype = Object.create( Control && Control.prototype );\n  Attribution.prototype.constructor = Attribution;\n\n  /**\n   * Get a list of visible attributions.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  Attribution.prototype.getSourceAttributions_ = function getSourceAttributions_ (frameState) {\n    /**\n     * Used to determine if an attribution already exists.\n     * @type {!Object<string, boolean>}\n     */\n    var lookup = {};\n\n    /**\n     * A list of visible attributions.\n     * @type {Array<string>}\n     */\n    var visibleAttributions = [];\n\n    var layerStatesArray = frameState.layerStatesArray;\n    var resolution = frameState.viewState.resolution;\n    for (var i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      var layerState = layerStatesArray[i];\n      if (!visibleAtResolution(layerState, resolution)) {\n        continue;\n      }\n\n      var source = layerState.layer.getSource();\n      if (!source) {\n        continue;\n      }\n\n      var attributionGetter = source.getAttributions();\n      if (!attributionGetter) {\n        continue;\n      }\n\n      var attributions = attributionGetter(frameState);\n      if (!attributions) {\n        continue;\n      }\n\n      if (Array.isArray(attributions)) {\n        for (var j = 0, jj = attributions.length; j < jj; ++j) {\n          if (!(attributions[j] in lookup)) {\n            visibleAttributions.push(attributions[j]);\n            lookup[attributions[j]] = true;\n          }\n        }\n      } else {\n        if (!(attributions in lookup)) {\n          visibleAttributions.push(attributions);\n          lookup[attributions] = true;\n        }\n      }\n    }\n    return visibleAttributions;\n  };\n\n  /**\n   * @private\n   * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  Attribution.prototype.updateElement_ = function updateElement_ (frameState) {\n    var this$1 = this;\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var attributions = this.getSourceAttributions_(frameState);\n\n    var visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (var i = 0, ii = attributions.length; i < ii; ++i) {\n      var element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this$1.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  Attribution.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  Attribution.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n  };\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  Attribution.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  Attribution.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  return Attribution;\n}(Control));\n\n\n/**\n * Update the attribution element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/Attribution}\n * @api\n */\nexport function render(mapEvent) {\n  this.updateElement_(mapEvent.frameState);\n}\n\n\nexport default Attribution;\n\n//# sourceMappingURL=Attribution.js.map","/**\n * @module ol/MapBrowserEventHandler\n */\nimport {DEVICE_PIXEL_RATIO} from './has.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapBrowserPointerEvent from './MapBrowserPointerEvent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventTarget from './events/Target.js';\nimport PointerEventType from './pointer/EventType.js';\nimport PointerEventHandler from './pointer/PointerEventHandler.js';\n\nvar MapBrowserEventHandler = (function (EventTarget) {\n  function MapBrowserEventHandler(map, moveTolerance) {\n\n    EventTarget.call(this);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {module:ol/PluggableMap}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.clickTimeoutId_ = 0;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance ?\n      moveTolerance * DEVICE_PIXEL_RATIO : DEVICE_PIXEL_RATIO;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {module:ol/pointer/PointerEvent}\n     * @private\n     */\n    this.down_ = null;\n\n    var element = this.map_.getViewport();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.activePointers_ = 0;\n\n    /**\n     * @type {!Object<number, boolean>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * Event handler which generates pointer events for\n     * the viewport element.\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.pointerEventHandler_ = new PointerEventHandler(element);\n\n    /**\n     * Event handler which generates pointer events for\n     * the document (used when dragging).\n     *\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.documentPointerEventHandler_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_, this);\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(this.pointerEventHandler_,\n      PointerEventType.POINTERMOVE,\n      this.relayEvent_, this);\n\n  }\n\n  if ( EventTarget ) MapBrowserEventHandler.__proto__ = EventTarget;\n  MapBrowserEventHandler.prototype = Object.create( EventTarget && EventTarget.prototype );\n  MapBrowserEventHandler.prototype.constructor = MapBrowserEventHandler;\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.emulateClick_ = function emulateClick_ (pointerEvent) {\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.CLICK, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== 0) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = 0;\n      newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.DBLCLICK, this.map_, pointerEvent);\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(function() {\n        this.clickTimeoutId_ = 0;\n        var newEvent = new MapBrowserPointerEvent(\n          MapBrowserEventType.SINGLECLICK, this.map_, pointerEvent);\n        this.dispatchEvent(newEvent);\n      }.bind(this), 250);\n    }\n  };\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.updateActivePointers_ = function updateActivePointers_ (pointerEvent) {\n    var event = pointerEvent;\n\n    if (event.type == MapBrowserEventType.POINTERUP ||\n        event.type == MapBrowserEventType.POINTERCANCEL) {\n      delete this.trackedTouches_[event.pointerId];\n    } else if (event.type == MapBrowserEventType.POINTERDOWN) {\n      this.trackedTouches_[event.pointerId] = true;\n    }\n    this.activePointers_ = Object.keys(this.trackedTouches_).length;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerUp_ = function handlePointerUp_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERUP, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.stopPropagation() or event.preventDefault().\n    if (!newEvent.propagationStopped && !this.dragging_ && this.isMouseActionButton_(pointerEvent)) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_ === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMouseActionButton_ = function isMouseActionButton_ (pointerEvent) {\n    return pointerEvent.button === 0;\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerDown_ = function handlePointerDown_ (pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    var newEvent = new MapBrowserPointerEvent(\n      MapBrowserEventType.POINTERDOWN, this.map_, pointerEvent);\n    this.dispatchEvent(newEvent);\n\n    this.down_ = pointerEvent;\n\n    if (this.dragListenerKeys_.length === 0) {\n      /* Set up a pointer event handler on the `document`,\n       * which is required when the pointer is moved outside\n       * the viewport when dragging.\n       */\n      this.documentPointerEventHandler_ =\n          new PointerEventHandler(document);\n\n      this.dragListenerKeys_.push(\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_, this),\n        listen(this.documentPointerEventHandler_,\n          MapBrowserEventType.POINTERUP,\n          this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(this.pointerEventHandler_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_, this)\n      );\n    }\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.handlePointerMove_ = function handlePointerMove_ (pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.dragging_ = true;\n      var newEvent = new MapBrowserPointerEvent(\n        MapBrowserEventType.POINTERDRAG, this.map_, pointerEvent,\n        this.dragging_);\n      this.dispatchEvent(newEvent);\n    }\n\n    // Some native android browser triggers mousemove events during small period\n    // of time. See: https://code.google.com/p/android/issues/detail?id=5491 or\n    // https://code.google.com/p/android/issues/detail?id=19827\n    // ex: Galaxy Tab P3110 + Android 4.1.1\n    pointerEvent.preventDefault();\n  };\n\n  /**\n   * Wrap and relay a pointer event.  Note that this requires that the type\n   * string for the MapBrowserPointerEvent matches the PointerEvent type.\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.relayEvent_ = function relayEvent_ (pointerEvent) {\n    var dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(new MapBrowserPointerEvent(\n      pointerEvent.type, this.map_, pointerEvent, dragging));\n  };\n\n  /**\n   * @param {module:ol/pointer/PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  MapBrowserEventHandler.prototype.isMoving_ = function isMoving_ (pointerEvent) {\n    return this.dragging_ ||\n        Math.abs(pointerEvent.clientX - this.down_.clientX) > this.moveTolerance_ ||\n        Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MapBrowserEventHandler.prototype.disposeInternal = function disposeInternal () {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    if (this.documentPointerEventHandler_) {\n      this.documentPointerEventHandler_.dispose();\n      this.documentPointerEventHandler_ = null;\n    }\n    if (this.pointerEventHandler_) {\n      this.pointerEventHandler_.dispose();\n      this.pointerEventHandler_ = null;\n    }\n    EventTarget.prototype.disposeInternal.call(this);\n  };\n\n  return MapBrowserEventHandler;\n}(EventTarget));\n\n\nexport default MapBrowserEventHandler;\n\n//# sourceMappingURL=MapBrowserEventHandler.js.map","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport {listen, unlisten} from './events.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue from './structs/PriorityQueue.js';\n\n\n/**\n * @typedef {function(module:ol/Tile, string, module:ol/coordinate~Coordinate, number): number} PriorityFunction\n */\n\n\nvar TileQueue = (function (PriorityQueue) {\n  function TileQueue(tilePriorityFunction, tileChangeCallback) {\n\n    PriorityQueue.call(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      this, function(element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (/** @type {module:ol/Tile} */ (element[0]).getKey());\n      });\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n\n  }\n\n  if ( PriorityQueue ) TileQueue.__proto__ = PriorityQueue;\n  TileQueue.prototype = Object.create( PriorityQueue && PriorityQueue.prototype );\n  TileQueue.prototype.constructor = TileQueue;\n\n  /**\n   * @inheritDoc\n   */\n  TileQueue.prototype.enqueue = function enqueue (element) {\n    var added = PriorityQueue.prototype.enqueue.call(this, element);\n    if (added) {\n      var tile = element[0];\n      listen(tile, EventType.CHANGE, this.handleTileChange, this);\n    }\n    return added;\n  };\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  TileQueue.prototype.getTilesLoading = function getTilesLoading () {\n    return this.tilesLoading_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  TileQueue.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var state = tile.getState();\n    if (state === TileState.LOADED || state === TileState.ERROR ||\n        state === TileState.EMPTY || state === TileState.ABORT) {\n      unlisten(tile, EventType.CHANGE, this.handleTileChange, this);\n      var tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  };\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  TileQueue.prototype.loadMoreTiles = function loadMoreTiles (maxTotalLoading, maxNewLoads) {\n    var this$1 = this;\n\n    var newLoads = 0;\n    var abortedTiles = false;\n    var state, tile, tileKey;\n    while (this.tilesLoading_ < maxTotalLoading && newLoads < maxNewLoads &&\n           this.getCount() > 0) {\n      tile = /** @type {module:ol/Tile} */ (this$1.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.ABORT) {\n        abortedTiles = true;\n      } else if (state === TileState.IDLE && !(tileKey in this$1.tilesLoadingKeys_)) {\n        this$1.tilesLoadingKeys_[tileKey] = true;\n        ++this$1.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n    if (newLoads === 0 && abortedTiles) {\n      // Do not stop the render loop when all wanted tiles were aborted due to\n      // a small, saturated tile cache.\n      this.tileChangeCallback_();\n    }\n  };\n\n  return TileQueue;\n}(PriorityQueue));\n\n\nexport default TileQueue;\n\n//# sourceMappingURL=TileQueue.js.map","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport OverlayPositioning from './OverlayPositioning.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {removeNode, removeChildren, outerWidth, outerHeight} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {module:ol/coordinate~Coordinate} [position] The overlay position\n * in map projection.\n * @property {module:ol/OverlayPositioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {boolean} [autoPan=false] If set to `true` the map is panned when\n * calling `setPosition`, so that the overlay is entirely visible in the current\n * viewport.\n * @property {module:ol/Overlay~PanOptions} [autoPanAnimation] The\n * animation options used to pan the overlay into view. This animation is only\n * used when `autoPan` is enabled. A `duration` and `easing` may be provided to\n * customize the animation.\n * @property {number} [autoPanMargin=20] The margin (in pixels) between the\n * overlay and the borders of the map when autopanning.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing~inAndOut}.\n */\n\n\n/**\n * @enum {string}\n * @protected\n */\nvar Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning'\n};\n\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay';\n *\n *     var popup = new Overlay({\n *       element: document.getElementById('popup')\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nvar Overlay = (function (BaseObject) {\n  function Overlay(options) {\n\n    BaseObject.call(this);\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst = options.insertFirst !== undefined ?\n      options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className = options.className !== undefined ?\n      options.className : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.autoPan = options.autoPan !== undefined ? options.autoPan : false;\n\n    /**\n     * @protected\n     * @type {module:ol/Overlay~PanOptions}\n     */\n    this.autoPanAnimation = options.autoPanAnimation || /** @type {module:ol/Overlay~PanOptions} */ ({});\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.autoPanMargin = options.autoPanMargin !== undefined ?\n      options.autoPanMargin : 20;\n\n    /**\n     * @protected\n     * @type {{bottom_: string,\n     *         left_: string,\n     *         right_: string,\n     *         top_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      bottom_: '',\n      left_: '',\n      right_: '',\n      top_: '',\n      visible: true\n    };\n\n    /**\n     * @protected\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    listen(\n      this, getChangeEventType(Property.ELEMENT),\n      this.handleElementChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.MAP),\n      this.handleMapChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.OFFSET),\n      this.handleOffsetChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITION),\n      this.handlePositionChanged, this);\n\n    listen(\n      this, getChangeEventType(Property.POSITIONING),\n      this.handlePositioningChanged, this);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning !== undefined ?\n      /** @type {module:ol/OverlayPositioning} */ (options.positioning) :\n      OverlayPositioning.TOP_LEFT);\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n\n  }\n\n  if ( BaseObject ) Overlay.__proto__ = BaseObject;\n  Overlay.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Overlay.prototype.constructor = Overlay;\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getElement = function getElement () {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  };\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  Overlay.prototype.getId = function getId () {\n    return this.id;\n  };\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {module:ol/PluggableMap|undefined} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getMap = function getMap () {\n    return (\n      /** @type {module:ol/PluggableMap|undefined} */ (this.get(Property.MAP))\n    );\n  };\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getOffset = function getOffset () {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  };\n\n  /**\n   * Get the current position of this overlay.\n   * @return {module:ol/coordinate~Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(Property.POSITION))\n    );\n  };\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {module:ol/OverlayPositioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.getPositioning = function getPositioning () {\n    return (\n      /** @type {module:ol/OverlayPositioning} */ (this.get(Property.POSITIONING))\n    );\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleElementChanged = function handleElementChanged () {\n    removeChildren(this.element);\n    var element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleMapChanged = function handleMapChanged () {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    var map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(map,\n        MapEventType.POSTRENDER, this.render, this);\n      this.updatePixelPosition();\n      var container = this.stopEvent ?\n        map.getOverlayContainerStopEvent() : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.render = function render () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handleOffsetChanged = function handleOffsetChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositionChanged = function handlePositionChanged () {\n    this.updatePixelPosition();\n    if (this.get(Property.POSITION) && this.autoPan) {\n      this.panIntoView();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  Overlay.prototype.handlePositioningChanged = function handlePositioningChanged () {\n    this.updatePixelPosition();\n  };\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setElement = function setElement (element) {\n    this.set(Property.ELEMENT, element);\n  };\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {module:ol/PluggableMap|undefined} map The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setMap = function setMap (map) {\n    this.set(Property.MAP, map);\n  };\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setOffset = function setOffset (offset) {\n    this.set(Property.OFFSET, offset);\n  };\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {module:ol/coordinate~Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPosition = function setPosition (position) {\n    this.set(Property.POSITION, position);\n  };\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @protected\n   */\n  Overlay.prototype.panIntoView = function panIntoView () {\n    var map = this.getMap();\n\n    if (!map || !map.getTargetElement()) {\n      return;\n    }\n\n    var mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    var element = this.getElement();\n    var overlayRect = this.getRect(element, [outerWidth(element), outerHeight(element)]);\n\n    var margin = this.autoPanMargin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      var offsetLeft = overlayRect[0] - mapRect[0];\n      var offsetRight = mapRect[2] - overlayRect[2];\n      var offsetTop = overlayRect[1] - mapRect[1];\n      var offsetBottom = mapRect[3] - overlayRect[3];\n\n      var delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - margin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + margin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - margin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + margin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        var center = /** @type {module:ol/coordinate~Coordinate} */ (map.getView().getCenter());\n        var centerPx = map.getPixelFromCoordinate(center);\n        var newCenterPx = [\n          centerPx[0] + delta[0],\n          centerPx[1] + delta[1]\n        ];\n\n        map.getView().animate({\n          center: map.getCoordinateFromPixel(newCenterPx),\n          duration: this.autoPanAnimation.duration,\n          easing: this.autoPanAnimation.easing\n        });\n      }\n    }\n  };\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement|undefined} element The element.\n   * @param {module:ol/size~Size|undefined} size The size of the element.\n   * @return {module:ol/extent~Extent} The extent.\n   * @protected\n   */\n  Overlay.prototype.getRect = function getRect (element, size) {\n    var box = element.getBoundingClientRect();\n    var offsetX = box.left + window.pageXOffset;\n    var offsetY = box.top + window.pageYOffset;\n    return [\n      offsetX,\n      offsetY,\n      offsetX + size[0],\n      offsetY + size[1]\n    ];\n  };\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {module:ol/OverlayPositioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  Overlay.prototype.setPositioning = function setPositioning (positioning) {\n    this.set(Property.POSITIONING, positioning);\n  };\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  Overlay.prototype.setVisible = function setVisible (visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  };\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  Overlay.prototype.updatePixelPosition = function updatePixelPosition () {\n    var map = this.getMap();\n    var position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    var pixel = map.getPixelFromCoordinate(position);\n    var mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel The pixel location.\n   * @param {module:ol/size~Size|undefined} mapSize The map size.\n   * @protected\n   */\n  Overlay.prototype.updateRenderedPosition = function updateRenderedPosition (pixel, mapSize) {\n    var style = this.element.style;\n    var offset = this.getOffset();\n\n    var positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    var offsetX = offset[0];\n    var offsetY = offset[1];\n    if (positioning == OverlayPositioning.BOTTOM_RIGHT ||\n        positioning == OverlayPositioning.CENTER_RIGHT ||\n        positioning == OverlayPositioning.TOP_RIGHT) {\n      if (this.rendered.left_ !== '') {\n        this.rendered.left_ = style.left = '';\n      }\n      var right = Math.round(mapSize[0] - pixel[0] - offsetX) + 'px';\n      if (this.rendered.right_ != right) {\n        this.rendered.right_ = style.right = right;\n      }\n    } else {\n      if (this.rendered.right_ !== '') {\n        this.rendered.right_ = style.right = '';\n      }\n      if (positioning == OverlayPositioning.BOTTOM_CENTER ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.TOP_CENTER) {\n        offsetX -= this.element.offsetWidth / 2;\n      }\n      var left = Math.round(pixel[0] + offsetX) + 'px';\n      if (this.rendered.left_ != left) {\n        this.rendered.left_ = style.left = left;\n      }\n    }\n    if (positioning == OverlayPositioning.BOTTOM_LEFT ||\n        positioning == OverlayPositioning.BOTTOM_CENTER ||\n        positioning == OverlayPositioning.BOTTOM_RIGHT) {\n      if (this.rendered.top_ !== '') {\n        this.rendered.top_ = style.top = '';\n      }\n      var bottom = Math.round(mapSize[1] - pixel[1] - offsetY) + 'px';\n      if (this.rendered.bottom_ != bottom) {\n        this.rendered.bottom_ = style.bottom = bottom;\n      }\n    } else {\n      if (this.rendered.bottom_ !== '') {\n        this.rendered.bottom_ = style.bottom = '';\n      }\n      if (positioning == OverlayPositioning.CENTER_LEFT ||\n          positioning == OverlayPositioning.CENTER_CENTER ||\n          positioning == OverlayPositioning.CENTER_RIGHT) {\n        offsetY -= this.element.offsetHeight / 2;\n      }\n      var top = Math.round(pixel[1] + offsetY) + 'px';\n      if (this.rendered.top_ != top) {\n        this.rendered.top_ = style.top = top;\n      }\n    }\n  };\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {module:ol/Overlay~Options} overlay options\n   */\n  Overlay.prototype.getOptions = function getOptions () {\n    return this.options;\n  };\n\n  return Overlay;\n}(BaseObject));\n\n\nexport default Overlay;\n\n//# sourceMappingURL=Overlay.js.map","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nvar CanvasImmediateRenderer = (function (VectorContext) {\n  function CanvasImmediateRenderer(context, pixelRatio, extent, transform, viewRotation) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  if ( VectorContext ) CanvasImmediateRenderer.__proto__ = VectorContext;\n  CanvasImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasImmediateRenderer.prototype.constructor = CanvasImmediateRenderer;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawImages_ = function drawImages_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.image_) {\n      return;\n    }\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var localTransform = this.tmpLocalTransform_;\n    var alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    var rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (var i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      var x = pixelCoordinates[i] - this$1.imageAnchorX_;\n      var y = pixelCoordinates[i + 1] - this$1.imageAnchorY_;\n      if (rotation !== 0 || this$1.imageScale_ != 1) {\n        var centerX = x + this$1.imageAnchorX_;\n        var centerY = y + this$1.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this$1.imageScale_, this$1.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this$1.image_, this$1.imageOriginX_, this$1.imageOriginY_,\n        this$1.imageWidth_, this$1.imageHeight_, x, y,\n        this$1.imageWidth_, this$1.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    var context = this.context_;\n    var rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      var x = pixelCoordinates[offset] + this$1.textOffsetX_;\n      var y = pixelCoordinates[offset + 1] + this$1.textOffsetY_;\n      if (rotation !== 0 || this$1.textScale_ != 1) {\n        var localTransform = composeTransform(this$1.tmpLocalTransform_,\n          x, y,\n          this$1.textScale_, this$1.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this$1.textStrokeState_) {\n        context.strokeText(this$1.text_, x, y);\n      }\n      if (this$1.textFillState_) {\n        context.fillText(this$1.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  CanvasImmediateRenderer.prototype.moveToLineTo_ = function moveToLineTo_ (flatCoordinates, offset, end, stride, close) {\n    var context = this.context_;\n    var pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    var length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (var i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasImmediateRenderer.prototype.drawRings_ = function drawRings_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  };\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {module:ol/geom/Circle} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawCircle = function drawCircle (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      var dx = pixelCoordinates[2] - pixelCoordinates[0];\n      var dy = pixelCoordinates[3] - pixelCoordinates[1];\n      var radius = Math.sqrt(dx * dx + dy * dy);\n      var context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry));\n        break;\n      default:\n    }\n  };\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/style/Style} style Style.\n   * @override\n   * @api\n   */\n  CanvasImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry collection.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Point|module:ol/render/Feature} geometry Point geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPoint = function drawPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {module:ol/geom/MultiPoint|module:ol/render/Feature} geometry MultiPoint geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry) {\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/LineString|module:ol/render/Feature} geometry LineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawLineString = function drawLineString (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {module:ol/geom/MultiLineString|module:ol/render/Feature} geometry MultiLineString geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry) {\n    var this$1 = this;\n\n    var geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      var context = this.context_;\n      var flatCoordinates = geometry.getFlatCoordinates();\n      var offset = 0;\n      var ends = geometry.getEnds();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this$1.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      var flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  };\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {module:ol/geom/Polygon|module:ol/render/Feature} geometry Polygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, geometry.getEnds(), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  };\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry) {\n    var this$1 = this;\n\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      var context = this.context_;\n      var flatCoordinates = geometry.getOrientedFlatCoordinates();\n      var offset = 0;\n      var endss = geometry.getEndss();\n      var stride = geometry.getStride();\n      context.beginPath();\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var ends = endss[i];\n        offset = this$1.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      var flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillState} fillState Fill state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextFillState_ = function setContextFillState_ (fillState) {\n    var context = this.context_;\n    var contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = context.fillStyle = fillState.fillStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~StrokeState} strokeState Stroke state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextStrokeState_ = function setContextStrokeState_ (strokeState) {\n    var context = this.context_;\n    var contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (CANVAS_LINE_DASH) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = context.lineCap = strokeState.lineCap;\n      }\n      if (CANVAS_LINE_DASH) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = context.lineDashOffset =\n              strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = context.miterLimit =\n            strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = context.strokeStyle =\n            strokeState.strokeStyle;\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~TextState} textState Text state.\n   * @private\n   */\n  CanvasImmediateRenderer.prototype.setContextTextState_ = function setContextTextState_ (textState) {\n    var context = this.context_;\n    var contextTextState = this.contextTextState_;\n    var textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = context.textBaseline =\n            textState.textBaseline;\n      }\n    }\n  };\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {module:ol/style/Fill} fillStyle Fill style.\n   * @param {module:ol/style/Stroke} strokeStyle Stroke style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      var fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      var strokeStyleColor = strokeStyle.getColor();\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      var strokeStyleWidth = strokeStyle.getWidth();\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  };\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {module:ol/style/Image} imageStyle Image style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      var imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      var imageImage = imageStyle.getImage(1);\n      var imageOrigin = imageStyle.getOrigin();\n      var imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  };\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {module:ol/style/Text} textStyle Text style.\n   * @override\n   */\n  CanvasImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        var textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        var textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        var textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        var textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        var textStrokeStyleWidth = textStrokeStyle.getWidth();\n        var textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      var textFont = textStyle.getFont();\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      var textScale = textStyle.getScale();\n      var textText = textStyle.getText();\n      var textTextAlign = textStyle.getTextAlign();\n      var textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  };\n\n  return CanvasImmediateRenderer;\n}(VectorContext));\n\n\nexport default CanvasImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/canvas/Map\n */\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\nimport {includes, stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\n\n\n/**\n * @type {Array<module:ol/renderer/Layer>}\n */\nexport var layerRendererConstructors = [];\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nvar CanvasMapRenderer = (function (MapRenderer) {\n  function CanvasMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = this.context_.canvas;\n\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( MapRenderer ) CanvasMapRenderer.__proto__ = MapRenderer;\n  CanvasMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  CanvasMapRenderer.prototype.constructor = CanvasMapRenderer;\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  CanvasMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    var context = this.context_;\n    if (map.hasListener(type)) {\n      var extent = frameState.extent;\n      var pixelRatio = frameState.pixelRatio;\n      var viewState = frameState.viewState;\n      var rotation = viewState.rotation;\n\n      var transform = this.getTransform(frameState);\n\n      var vectorContext = new CanvasImmediateRenderer(context, pixelRatio,\n        extent, transform, rotation);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, context, null);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasMapRenderer.prototype.getTransform = function getTransform (frameState) {\n    var viewState = frameState.viewState;\n    var dx1 = this.canvas_.width / 2;\n    var dy1 = this.canvas_.height / 2;\n    var sx = frameState.pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0];\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var context = this.context_;\n    var pixelRatio = frameState.pixelRatio;\n    var width = Math.round(frameState.size[0] * pixelRatio);\n    var height = Math.round(frameState.size[1] * pixelRatio);\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    } else {\n      context.clearRect(0, 0, width, height);\n    }\n\n    var rotation = frameState.viewState.rotation;\n\n    this.calculateMatrices2D(frameState);\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    if (rotation) {\n      context.save();\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layer, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      layer = layerState.layer;\n      layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n      if (!visibleAtResolution(layerState, viewResolution) ||\n          layerState.sourceState != SourceState.READY) {\n        continue;\n      }\n      if (layerRenderer.prepareFrame(frameState, layerState)) {\n        layerRenderer.composeFrame(frameState, layerState, context);\n      }\n    }\n\n    if (rotation) {\n      context.restore();\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    var result;\n    var viewState = frameState.viewState;\n    var viewResolution = viewState.resolution;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewResolution) && layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/canvas/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasMapRenderer.prototype.registerLayerRenderers = function registerLayerRenderers (constructors) {\n    MapRenderer.prototype.registerLayerRenderers.call(this, constructors);\n    for (var i = 0, ii = constructors.length; i < ii; ++i) {\n      var ctor = constructors[i];\n      if (!includes(layerRendererConstructors, ctor)) {\n        layerRendererConstructors.push(ctor);\n      }\n    }\n  };\n\n  return CanvasMapRenderer;\n}(MapRenderer));\n\n\nexport default CanvasMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {TRUE} from '../../functions.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport CanvasImmediateRenderer from '../../render/canvas/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform} from '../../transform.js';\n\nvar CanvasLayerRenderer = (function (LayerRenderer) {\n  function CanvasLayerRenderer(layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.transform_ = createTransform();\n\n  }\n\n  if ( LayerRenderer ) CanvasLayerRenderer.__proto__ = LayerRenderer;\n  CanvasLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  CanvasLayerRenderer.prototype.constructor = CanvasLayerRenderer;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/extent~Extent} extent Clip extent.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.clip = function clip (context, frameState, extent) {\n    var pixelRatio = frameState.pixelRatio;\n    var width = frameState.size[0] * pixelRatio;\n    var height = frameState.size[1] * pixelRatio;\n    var rotation = frameState.viewState.rotation;\n    var topLeft = getTopLeft(/** @type {module:ol/extent~Extent} */ (extent));\n    var topRight = getTopRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomRight = getBottomRight(/** @type {module:ol/extent~Extent} */ (extent));\n    var bottomLeft = getBottomLeft(/** @type {module:ol/extent~Extent} */ (extent));\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, width / 2, height / 2);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, width / 2, height / 2);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @private\n   */\n  CanvasLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState, opt_transform) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var width = frameState.size[0] * frameState.pixelRatio;\n      var height = frameState.size[1] * frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      rotateAtOffset(context, -rotation, width / 2, height / 2);\n      var transform = opt_transform !== undefined ?\n        opt_transform : this.getTransform(frameState, 0);\n      var render = new CanvasImmediateRenderer(\n        context, frameState.pixelRatio, frameState.extent, transform,\n        frameState.viewState.rotation);\n      var composeEvent = new RenderEvent(type, render, frameState,\n        context, null);\n      layer.dispatchEvent(composeEvent);\n      rotateAtOffset(context, rotation, width / 2, height / 2);\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  CanvasLayerRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, TRUE, this);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.preCompose = function preCompose (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/transform~Transform=} opt_transform Transform.\n   * @protected\n   */\n  CanvasLayerRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (context, frameState, opt_transform) {\n    this.dispatchComposeEvent_(RenderEventType.RENDER, context, frameState, opt_transform);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!module:ol/transform~Transform} Transform.\n   */\n  CanvasLayerRenderer.prototype.getTransform = function getTransform (frameState, offsetX) {\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var dx1 = pixelRatio * frameState.size[0] / 2;\n    var dy1 = pixelRatio * frameState.size[1] / 2;\n    var sx = pixelRatio / viewState.resolution;\n    var sy = -sx;\n    var angle = -viewState.rotation;\n    var dx2 = -viewState.center[0] + offsetX;\n    var dy2 = -viewState.center[1];\n    return composeTransform(this.transform_, dx1, dy1, sx, sy, angle, dx2, dy2);\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  CanvasLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {};\n\n  return CanvasLayerRenderer;\n}(LayerRenderer));\n\nexport default CanvasLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/canvas/IntermediateCanvas\n */\nimport {scale as scaleCoordinate} from '../../coordinate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {VOID} from '../../functions.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {create as createTransform, apply as applyTransform} from '../../transform.js';\n\nvar IntermediateCanvasRenderer = (function (CanvasLayerRenderer) {\n  function IntermediateCanvasRenderer(layer) {\n\n    CanvasLayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.coordinateToCanvasPixelTransform = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n  }\n\n  if ( CanvasLayerRenderer ) IntermediateCanvasRenderer.__proto__ = CanvasLayerRenderer;\n  IntermediateCanvasRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  IntermediateCanvasRenderer.prototype.constructor = IntermediateCanvasRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.preCompose(context, frameState);\n\n    var image = this.getImage();\n    if (image) {\n\n      // clipped rendering if layer extent is set\n      var extent = layerState.extent;\n      var clipped = extent !== undefined &&\n          !containsExtent(extent, frameState.extent) &&\n          intersects(extent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (extent));\n      }\n\n      var imageTransform = this.getImageTransform();\n      // for performance reasons, context.save / context.restore is not used\n      // to save and restore the transformation matrix and the opacity.\n      // see http://jsperf.com/context-save-restore-versus-variable\n      var alpha = context.globalAlpha;\n      context.globalAlpha = layerState.opacity;\n\n      // for performance reasons, context.setTransform is only used\n      // when the view is rotated. see http://jsperf.com/canvas-transform\n      var dx = imageTransform[4];\n      var dy = imageTransform[5];\n      var dw = image.width * imageTransform[0];\n      var dh = image.height * imageTransform[3];\n      context.drawImage(image, 0, 0, +image.width, +image.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      context.globalAlpha = alpha;\n\n      if (clipped) {\n        context.restore();\n      }\n    }\n\n    this.postCompose(context, frameState, layerState);\n  };\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Canvas.\n   */\n  IntermediateCanvasRenderer.prototype.getImage = function getImage () {};\n\n  /**\n   * @abstract\n   * @return {!module:ol/transform~Transform} Image transform.\n   */\n  IntermediateCanvasRenderer.prototype.getImageTransform = function getImageTransform () {};\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IntermediateCanvasRenderer.prototype.forEachLayerAtCoordinate = function forEachLayerAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== VOID) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      return CanvasLayerRenderer.prototype.forEachLayerAtCoordinate.call(this, arguments);\n    } else {\n      var pixel = applyTransform(this.coordinateToCanvasPixelTransform, coordinate.slice());\n      scaleCoordinate(pixel, frameState.viewState.resolution / this.renderedResolution);\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.getImage(), pixel[0], pixel[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  return IntermediateCanvasRenderer;\n}(CanvasLayerRenderer));\n\n\nexport default IntermediateCanvasRenderer;\n\n//# sourceMappingURL=IntermediateCanvas.js.map","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ImageCanvas from '../../ImageCanvas.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {getHeight, getIntersection, getWidth, isEmpty} from '../../extent.js';\nimport VectorRenderType from '../../layer/VectorRenderType.js';\nimport {assign} from '../../obj.js';\nimport {layerRendererConstructors} from './Map.js';\nimport IntermediateCanvasRenderer from './IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nvar CanvasImageLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasImageLayerRenderer(imageLayer) {\n    var this$1 = this;\n\n\n    IntermediateCanvasRenderer.call(this, imageLayer);\n\n    /**\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @type {!Array<string>}\n     */\n    this.skippedFeatures_ = [];\n\n    /**\n     * @private\n     * @type {module:ol/renderer/canvas/VectorLayer}\n     */\n    this.vectorRenderer_ = null;\n\n    if (imageLayer.getType() === LayerType.VECTOR) {\n      for (var i = 0, ii = layerRendererConstructors.length; i < ii; ++i) {\n        var ctor = layerRendererConstructors[i];\n        if (ctor !== CanvasImageLayerRenderer && ctor['handles'](imageLayer)) {\n          this$1.vectorRenderer_ = new ctor(imageLayer);\n          break;\n        }\n      }\n    }\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasImageLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasImageLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasImageLayerRenderer.prototype.constructor = CanvasImageLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    if (this.vectorRenderer_) {\n      this.vectorRenderer_.dispose();\n    }\n    IntermediateCanvasRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImage = function getImage () {\n    return !this.image_ ? null : this.image_.getImage();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n\n    var image;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var vectorRenderer = this.vectorRenderer_;\n    var renderedExtent = frameState.extent;\n    if (!vectorRenderer && layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var skippedFeatures = this.skippedFeatures_;\n      if (vectorRenderer) {\n        var context = vectorRenderer.context;\n        var imageFrameState = /** @type {module:ol/PluggableMap~FrameState} */ (assign({}, frameState, {\n          size: [\n            getWidth(renderedExtent) / viewResolution,\n            getHeight(renderedExtent) / viewResolution\n          ],\n          viewState: /** @type {module:ol/View~State} */ (assign({}, frameState.viewState, {\n            rotation: 0\n          }))\n        }));\n        var newSkippedFeatures = Object.keys(imageFrameState.skippedFeatureUids).sort();\n        image = new ImageCanvas(renderedExtent, viewResolution, pixelRatio, context.canvas, function(callback) {\n          if (vectorRenderer.prepareFrame(imageFrameState, layerState) &&\n              (vectorRenderer.replayGroupChanged ||\n              !equals(skippedFeatures, newSkippedFeatures))) {\n            context.canvas.width = imageFrameState.size[0] * pixelRatio;\n            context.canvas.height = imageFrameState.size[1] * pixelRatio;\n            vectorRenderer.compose(context, imageFrameState, layerState);\n            skippedFeatures = newSkippedFeatures;\n            callback();\n          }\n        });\n      } else {\n        image = imageSource.getImage(\n          renderedExtent, viewResolution, pixelRatio, projection);\n      }\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n        this.skippedFeatures_ = skippedFeatures;\n      }\n    }\n\n    if (this.image_) {\n      image = this.image_;\n      var imageExtent = image.getExtent();\n      var imageResolution = image.getResolution();\n      var imagePixelRatio = image.getPixelRatio();\n      var scale = pixelRatio * imageResolution /\n          (viewResolution * imagePixelRatio);\n      var transform = composeTransform(this.imageTransform_,\n        pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n        scale, scale,\n        0,\n        imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n        imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n      composeTransform(this.coordinateToCanvasPixelTransform,\n        pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n        pixelRatio / viewResolution, -pixelRatio / viewResolution,\n        0,\n        -viewCenter[0], -viewCenter[1]);\n\n      this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n    }\n\n    return !!this.image_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (this.vectorRenderer_) {\n      return this.vectorRenderer_.forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg);\n    } else {\n      return IntermediateCanvasRenderer.prototype.forEachFeatureAtCoordinate.call(this, coordinate, frameState, hitTolerance, callback, thisArg);\n    }\n  };\n\n  return CanvasImageLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE ||\n    layer.getType() === LayerType.VECTOR &&\n    /** @type {module:ol/layer/Vector} */ (layer).getRenderMode() === VectorRenderType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/ImageLayer} The layer renderer.\n */\nCanvasImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasImageLayerRenderer(/** @type {module:ol/layer/Image} */ (layer));\n};\n\n\nexport default CanvasImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {containsExtent, createEmpty, equals, getIntersection, isEmpty} from '../../extent.js';\nimport IntermediateCanvasRenderer from '../canvas/IntermediateCanvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nvar CanvasTileLayerRenderer = (function (IntermediateCanvasRenderer) {\n  function CanvasTileLayerRenderer(tileLayer, opt_noContext) {\n\n    IntermediateCanvasRenderer.call(this, tileLayer);\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = opt_noContext ? null : createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.oversampling_;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {module:ol/extent~Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.imageTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.zDirection = 0;\n\n  }\n\n  if ( IntermediateCanvasRenderer ) CanvasTileLayerRenderer.__proto__ = IntermediateCanvasRenderer;\n  CanvasTileLayerRenderer.prototype = Object.create( IntermediateCanvasRenderer && IntermediateCanvasRenderer.prototype );\n  CanvasTileLayerRenderer.prototype.constructor = CanvasTileLayerRenderer;\n\n  /**\n   * @private\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  CanvasTileLayerRenderer.prototype.isDrawableTile_ = function isDrawableTile_ (tile) {\n    var tileState = tile.getState();\n    var useInterimTilesOnError = this.getLayer().getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  CanvasTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/Tile} */ (layer.getSource());\n    var tile = source.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!layer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (layer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile_(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var this$1 = this;\n\n\n    var pixelRatio = frameState.pixelRatio;\n    var size = frameState.size;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var viewResolution = viewState.resolution;\n    var viewCenter = viewState.center;\n\n    var tileLayer = this.getLayer();\n    var tileSource = /** @type {module:ol/source/Tile} */ (tileLayer.getSource());\n    var sourceRevision = tileSource.getRevision();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewResolution, this.zDirection);\n    var tileResolution = tileGrid.getResolution(z);\n    var oversampling = Math.round(viewResolution / tileResolution) || 1;\n    var extent = frameState.extent;\n\n    if (layerState.extent !== undefined) {\n      extent = getIntersection(extent, layerState.extent);\n    }\n    if (isEmpty(extent)) {\n      // Return false to prevent the rendering of the layer.\n      return false;\n    }\n\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n    var imageExtent = tileGrid.getTileRangeExtent(z, tileRange);\n\n    var tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    /**\n     * @type {Object<number, Object<string, module:ol/Tile>>}\n     */\n    var tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    var findLoadedTiles = this.createLoadedTileFinder(\n      tileSource, projection, tilesToDrawByZ);\n\n    var hints = frameState.viewHints;\n    var animatingOrInteracting = hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING];\n\n    var tmpExtent = this.tmpExtent;\n    var tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    var tile, x, y;\n    for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (Date.now() - frameState.time > 16 && animatingOrInteracting) {\n          continue;\n        }\n        tile = this$1.getTile(z, x, y, pixelRatio, projection);\n        if (this$1.isDrawableTile_(tile)) {\n          var uid = getUid(this$1);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            var inTransition = tile.inTransition(uid);\n            if (!this$1.newTiles_ && (inTransition || this$1.renderedTiles.indexOf(tile) === -1)) {\n              this$1.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        var childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord, tmpTileRange, tmpExtent);\n        var covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n    var renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n    if (!(this.renderedResolution && Date.now() - frameState.time > 16 && animatingOrInteracting) && (\n      this.newTiles_ ||\n          !(this.renderedExtent_ && containsExtent(this.renderedExtent_, extent)) ||\n          this.renderedRevision != sourceRevision ||\n          oversampling != this.oversampling_ ||\n          !animatingOrInteracting && renderedResolution != this.renderedResolution\n    )) {\n\n      var context = this.context;\n      if (context) {\n        var tilePixelSize = tileSource.getTilePixelSize(z, pixelRatio, projection);\n        var width = Math.round(tileRange.getWidth() * tilePixelSize[0] / oversampling);\n        var height = Math.round(tileRange.getHeight() * tilePixelSize[1] / oversampling);\n        var canvas = context.canvas;\n        if (canvas.width != width || canvas.height != height) {\n          this.oversampling_ = oversampling;\n          canvas.width = width;\n          canvas.height = height;\n        } else {\n          if (this.renderedExtent_ && !equals(imageExtent, this.renderedExtent_)) {\n            context.clearRect(0, 0, width, height);\n          }\n          oversampling = this.oversampling_;\n        }\n      }\n\n      this.renderedTiles.length = 0;\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(function(a, b) {\n        if (a === z) {\n          return 1;\n        } else if (b === z) {\n          return -1;\n        } else {\n          return a > b ? 1 : a < b ? -1 : 0;\n        }\n      });\n      var currentResolution, currentScale, currentTilePixelSize, currentZ, i, ii;\n      var tileExtent, tileGutter, tilesToDraw, w, h;\n      for (i = 0, ii = zs.length; i < ii; ++i) {\n        currentZ = zs[i];\n        currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n        currentResolution = tileGrid.getResolution(currentZ);\n        currentScale = currentResolution / tileResolution;\n        tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n        tilesToDraw = tilesToDrawByZ[currentZ];\n        for (var tileCoordKey in tilesToDraw) {\n          tile = tilesToDraw[tileCoordKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.getTileCoord(), tmpExtent);\n          x = (tileExtent[0] - imageExtent[0]) / tileResolution * tilePixelRatio / oversampling;\n          y = (imageExtent[3] - tileExtent[3]) / tileResolution * tilePixelRatio / oversampling;\n          w = currentTilePixelSize[0] * currentScale / oversampling;\n          h = currentTilePixelSize[1] * currentScale / oversampling;\n          this$1.drawTileImage(tile, frameState, layerState, x, y, w, h, tileGutter, z === currentZ);\n          this$1.renderedTiles.push(tile);\n        }\n      }\n\n      this.renderedRevision = sourceRevision;\n      this.renderedResolution = tileResolution * pixelRatio / tilePixelRatio * oversampling;\n      this.renderedExtent_ = imageExtent;\n    }\n\n    var scale = this.renderedResolution / viewResolution;\n    var transform = composeTransform(this.imageTransform_,\n      pixelRatio * size[0] / 2, pixelRatio * size[1] / 2,\n      scale, scale,\n      0,\n      (this.renderedExtent_[0] - viewCenter[0]) / this.renderedResolution * pixelRatio,\n      (viewCenter[1] - this.renderedExtent_[3]) / this.renderedResolution * pixelRatio);\n    composeTransform(this.coordinateToCanvasPixelTransform,\n      pixelRatio * size[0] / 2 - transform[4], pixelRatio * size[1] / 2 - transform[5],\n      pixelRatio / viewResolution, -pixelRatio / viewResolution,\n      0,\n      -viewCenter[0], -viewCenter[1]);\n\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.scheduleExpireCache(frameState, tileSource);\n\n    return this.renderedTiles.length > 0;\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  CanvasTileLayerRenderer.prototype.drawTileImage = function drawTileImage (tile, frameState, layerState, x, y, w, h, gutter, transition) {\n    var image = tile.getImage(this.getLayer());\n    if (!image) {\n      return;\n    }\n    var uid = getUid(this);\n    var alpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    if (alpha === 1 && !this.getLayer().getSource().getOpaque(frameState.viewState.projection)) {\n      this.context.clearRect(x, y, w, h);\n    }\n    var alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (alpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImage = function getImage () {\n    var context = this.context;\n    return context ? context.canvas : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTileLayerRenderer.prototype.getImageTransform = function getImageTransform () {\n    return this.imageTransform_;\n  };\n\n  return CanvasTileLayerRenderer;\n}(IntermediateCanvasRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/TileLayer} The layer renderer.\n */\nCanvasTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasTileLayerRenderer(/** @type {module:ol/layer/Tile} */ (layer));\n};\n\n\n/**\n * @function\n * @return {module:ol/layer/Tile|module:ol/layer/VectorTile}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {function(string):number} measure Measure function returning the\n * width of the character passed as 1st argument.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @return {Array<Array<*>>} The result array of null if `maxAngle` was\n * exceeded. Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, measure, startM, maxAngle) {\n  var result = [];\n\n  // Keep text upright\n  var reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  var numChars = text.length;\n\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  var x2 = flatCoordinates[offset];\n  var y2 = flatCoordinates[offset + 1];\n  var segmentM = 0;\n  var segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n\n  var chunk = '';\n  var chunkLength = 0;\n  var data, index, previousAngle;\n  for (var i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    var char = text.charAt(index);\n    chunk = reverse ? char + chunk : chunk + char;\n    var charLength = measure(chunk) - chunkLength;\n    chunkLength += charLength;\n    var charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    var segmentPos = charM - segmentM;\n    var angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      var delta = angle - previousAngle;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    var interpolate = segmentPos / segmentLength;\n    var x = lerp(x1, x2, interpolate);\n    var y = lerp(y1, y2, interpolate);\n    if (previousAngle == angle) {\n      if (reverse) {\n        data[0] = x;\n        data[1] = y;\n        data[2] = charLength / 2;\n      }\n      data[4] = chunk;\n    } else {\n      chunk = char;\n      chunkLength = charLength;\n      data = [x, y, charLength / 2, angle, chunk];\n      if (reverse) {\n        result.unshift(data);\n      } else {\n        result.push(data);\n      }\n      previousAngle = angle;\n    }\n    startM += charLength;\n  }\n  return result;\n}\n\n//# sourceMappingURL=textpath.js.map","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport var closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n\n//# sourceMappingURL=Instruction.js.map","/**\n * @module ol/render/canvas/Replay\n */\nimport {getUid} from '../../util.js';\nimport {VOID} from '../../functions.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship, createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, extendCoordinate, intersects} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {isEmpty} from '../../obj.js';\nimport VectorContext from '../VectorContext.js';\nimport {drawImage, resetTransform, defaultPadding, defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\n\n\n/**\n * @type {module:ol/extent~Extent}\n */\nvar tmpExtent = createEmpty();\n\n\n/**\n * @type {!module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\nvar CanvasReplay = (function (VectorContext) {\n  function CanvasReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    VectorContext.call(this);\n\n    /**\n     * @type {?}\n     */\n    this.declutterTree = declutterTree;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {!Object<number,module:ol/coordinate~Coordinate|Array<module:ol/coordinate~Coordinate>|Array<Array<module:ol/coordinate~Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!module:ol/transform~Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @protected\n     * @type {module:ol/render/canvas~FillStrokeState}\n     */\n    this.state = /** @type {module:ol/render/canvas~FillStrokeState} */ ({});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n  }\n\n  if ( VectorContext ) CanvasReplay.__proto__ = VectorContext;\n  CanvasReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  CanvasReplay.prototype.constructor = CanvasReplay;\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/coordinate~Coordinate} p1 1st point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p2 2nd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p3 3rd point of the background box.\n   * @param {module:ol/coordinate~Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayTextBackground_ = function replayTextBackground_ (context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  CanvasReplay.prototype.replayImage_ = function replayImage_ (\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    var fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    var w = (width + originX > image.width) ? image.width - originX : width;\n    var h = (height + originY > image.height) ? image.height - originY : height;\n    var boxW = padding[3] + w * scale + padding[1];\n    var boxH = padding[0] + h * scale + padding[2];\n    var boxX = x - padding[3];\n    var boxY = y - padding[0];\n\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p1;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p2;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p3;\n    /** @type {module:ol/coordinate~Coordinate} */\n    var p4;\n    if (fillStroke || rotation !== 0) {\n      p1 = [boxX, boxY];\n      p2 = [boxX + boxW, boxY];\n      p3 = [boxX + boxW, boxY + boxH];\n      p4 = [boxX, boxY + boxH];\n    }\n\n    var transform = null;\n    if (rotation !== 0) {\n      var centerX = x + anchorX;\n      var centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      createOrUpdateEmpty(tmpExtent);\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p1));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p2));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p3));\n      extendCoordinate(tmpExtent, applyTransform(tmpTransform, p4));\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    var canvas = context.canvas;\n    var strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    var intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      var declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs && fillStroke) {\n        declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n      }\n      declutterGroup.push(declutterArgs);\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  CanvasReplay.prototype.applyPixelRatio = function applyPixelRatio (dashArray) {\n    var pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  CanvasReplay.prototype.appendFlatCoordinates = function appendFlatCoordinates (flatCoordinates, offset, end, stride, closed, skipFirst) {\n    var this$1 = this;\n\n\n    var myEnd = this.coordinates.length;\n    var extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    var lastCoord = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n    var nextCoord = [NaN, NaN];\n    var skipped = true;\n\n    var i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this$1.coordinates[myEnd++] = lastCoord[0];\n          this$1.coordinates[myEnd++] = lastCoord[1];\n        }\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this$1.coordinates[myEnd++] = nextCoord[0];\n        this$1.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastCoord[0] = nextCoord[0];\n      lastCoord[1] = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastCoord[0];\n      this.coordinates[myEnd++] = lastCoord[1];\n    }\n    return myEnd;\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} replayEnds Replay ends.\n   * @return {number} Offset.\n   */\n  CanvasReplay.prototype.drawCustomCoordinates_ = function drawCustomCoordinates_ (flatCoordinates, offset, ends, stride, replayEnds) {\n    var this$1 = this;\n\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var replayEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      replayEnds.push(replayEnd);\n      offset = end;\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasReplay.prototype.drawCustom = function drawCustom (geometry, feature, renderer) {\n    var this$1 = this;\n\n    this.beginGeometry(geometry, feature);\n    var type = geometry.getType();\n    var stride = geometry.getStride();\n    var replayBegin = this.coordinates.length;\n    var flatCoordinates, replayEnd, replayEnds, replayEndss;\n    var offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {module:ol/geom/MultiPolygon} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      replayEndss = [];\n      var endss = geometry.getEndss();\n      offset = 0;\n      for (var i = 0, ii = endss.length; i < ii; ++i) {\n        var myEnds = [];\n        offset = this$1.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        replayEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      replayEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {module:ol/geom/Polygon} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {module:ol/geom/Polygon|module:ol/geom/MultiLineString} */ (geometry).getEnds(),\n        stride, replayEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      replayEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      replayEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        replayBegin, replayEnd, geometry, renderer]);\n    }\n    this.endGeometry(geometry, feature);\n  };\n\n  /**\n   * @protected\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.beginGeometry = function beginGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  CanvasReplay.prototype.fill_ = function fill_ (context) {\n    if (this.alignFill_) {\n      var origin = applyTransform(this.renderedTransform_, [0, 0]);\n      var repeatSize = 512 * this.pixelRatio;\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.setTransform.apply(context, resetTransform);\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  CanvasReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (context, instruction) {\n    context.strokeStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {string} */ (instruction[3]);\n    context.lineJoin = /** @type {string} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (CANVAS_LINE_DASH) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.renderDeclutter_ = function renderDeclutter_ (declutterGroup, feature) {\n    var this$1 = this;\n\n    if (declutterGroup && declutterGroup.length > 5) {\n      var groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {module:ol/structs/RBush~Entry} */\n        var box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!this.declutterTree.collides(box)) {\n          this.declutterTree.insert(box);\n          for (var j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            var declutterData = /** @type {Array} */ (declutterGroup[j]);\n            if (declutterData) {\n              if (declutterData.length > 11) {\n                this$1.replayTextBackground_(declutterData[0],\n                  declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                  declutterData[11], declutterData[12]);\n              }\n              drawImage.apply(undefined, declutterData);\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replay_ = function replay_ (\n    context,\n    transform,\n    skippedFeaturesHash,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    var skipFeatures = !isEmpty(skippedFeaturesHash);\n    var i = 0; // instruction index\n    var ii = instructions.length; // end of instructions\n    var d = 0; // data index\n    var dd; // end of per-instruction data\n    var anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, image;\n    var pendingFill = 0;\n    var pendingStroke = 0;\n    var lastFillInstruction = null;\n    var lastStrokeInstruction = null;\n    var coordinateCache = this.coordinateCache_;\n    var viewRotation = this.viewRotation_;\n\n    var state = /** @type {module:ol/render~State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    var batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    var /** @type {module:ol/Feature|module:ol/render/Feature} */ feature;\n    var x, y;\n    while (i < ii) {\n      var instruction = instructions[i];\n      var type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n          if ((skipFeatures &&\n              skippedFeaturesHash[getUid(feature).toString()]) ||\n              !feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(\n            opt_hitExtent, feature.getGeometry().getExtent())) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this$1.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          var x1 = pixelCoordinates[d];\n          var y1 = pixelCoordinates[d + 1];\n          var x2 = pixelCoordinates[d + 2];\n          var y2 = pixelCoordinates[d + 3];\n          var dx = x2 - x1;\n          var dy = y2 - y1;\n          var r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          var geometry = /** @type {module:ol/geom/SimpleGeometry} */ (instruction[3]);\n          var renderer = instruction[4];\n          var fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          var coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */\n              (instruction[3]);\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[6]);\n          var height = /** @type {number} */ (instruction[7]);\n          var opacity = /** @type {number} */ (instruction[8]);\n          var originX = /** @type {number} */ (instruction[9]);\n          var originY = /** @type {number} */ (instruction[10]);\n          var rotateWithView = /** @type {boolean} */ (instruction[11]);\n          var rotation = /** @type {number} */ (instruction[12]);\n          var scale = /** @type {number} */ (instruction[13]);\n          var width = /** @type {number} */ (instruction[14]);\n\n          var padding = (void 0), backgroundFill = (void 0), backgroundStroke = (void 0);\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = backgroundStroke = false;\n          }\n\n          if (rotateWithView) {\n            rotation += viewRotation;\n          }\n          for (; d < dd; d += 2) {\n            this$1.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          var begin = /** @type {number} */ (instruction[1]);\n          var end = /** @type {number} */ (instruction[2]);\n          var baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : /** @type {module:ol/render/canvas~DeclutterGroup} */ (instruction[4]);\n          var overflow = /** @type {number} */ (instruction[5]);\n          var fillKey = /** @type {string} */ (instruction[6]);\n          var maxAngle = /** @type {number} */ (instruction[7]);\n          var measure = /** @type {function(string):number} */ (instruction[8]);\n          var offsetY = /** @type {number} */ (instruction[9]);\n          var strokeKey = /** @type {string} */ (instruction[10]);\n          var strokeWidth = /** @type {number} */ (instruction[11]);\n          var text = /** @type {string} */ (instruction[12]);\n          var textKey = /** @type {string} */ (instruction[13]);\n          var textScale = /** @type {number} */ (instruction[14]);\n\n          var pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          var textLength = measure(text);\n          if (overflow || textLength <= pathLength) {\n            var textAlign = /** @type {module:ol~render} */ (this$1).textStates[textKey].textAlign;\n            var startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            var parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, measure, startM, maxAngle);\n            if (parts) {\n              var c = (void 0), cc = (void 0), chars = (void 0), label = (void 0), part = (void 0);\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = /** @type {module:ol~render} */ (this$1).getImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this$1.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), textScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this$1.renderDeclutter_(declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {module:ol/Feature|module:ol/render/Feature} */ (instruction[1]);\n            var result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this$1.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this$1.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this$1.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {module:ol/colorlike~ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this$1.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  CanvasReplay.prototype.replay = function replay (context, transform, viewRotation, skippedFeaturesHash, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.replay_(context, transform,\n      skippedFeaturesHash, this.instructions, snapToPixel, undefined, undefined);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *     to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplay.prototype.replayHitDetection = function replayHitDetection (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.replay_(context, transform, skippedFeaturesHash,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  };\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  CanvasReplay.prototype.reverseHitDetectionInstructions = function reverseHitDetectionInstructions () {\n    var this$1 = this;\n\n    var hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    var i;\n    var n = hitDetectionInstructions.length;\n    var instruction;\n    var type;\n    var begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {module:ol/render/canvas/Instruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this$1.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var state = this.state;\n    if (fillStyle) {\n      var fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      var strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      var strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      var strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      var strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @return {Array<*>} Fill instruction.\n   */\n  CanvasReplay.prototype.createFill = function createFill (state, geometry) {\n    var fillStyle = state.fillStyle;\n    var fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   */\n  CanvasReplay.prototype.applyStroke = function applyStroke (state) {\n    this.instructions.push(this.createStroke(state));\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  CanvasReplay.prototype.createStroke = function createStroke (state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState, (module:ol/geom/Geometry|module:ol/render/Feature)):Array<*>} createFill Create fill.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasReplay.prototype.updateFillStyle = function updateFillStyle (state, createFill, geometry) {\n    var fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state, geometry));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  };\n\n  /**\n   * @param {module:ol/render/canvas~FillStrokeState} state State.\n   * @param {function(this:module:ol/render/canvas/Replay, module:ol/render/canvas~FillStrokeState)} applyStroke Apply stroke.\n   */\n  CanvasReplay.prototype.updateStrokeStyle = function updateStrokeStyle (state, applyStroke) {\n    var strokeStyle = state.strokeStyle;\n    var lineCap = state.lineCap;\n    var lineDash = state.lineDash;\n    var lineDashOffset = state.lineDashOffset;\n    var lineJoin = state.lineJoin;\n    var lineWidth = state.lineWidth;\n    var miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   */\n  CanvasReplay.prototype.endGeometry = function endGeometry (geometry, feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    var endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  };\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {module:ol/extent~Extent} The buffered rendering extent.\n   * @protected\n   */\n  CanvasReplay.prototype.getBufferedMaxExtent = function getBufferedMaxExtent () {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        var width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  };\n\n  return CanvasReplay;\n}(VectorContext));\n\n\n/**\n * FIXME empty description for jsdoc\n */\nCanvasReplay.prototype.finish = VOID;\n\n\nexport default CanvasReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/canvas/ImageReplay\n */\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasImageReplay = (function (CanvasReplay) {\n  function CanvasImageReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  if ( CanvasReplay ) CanvasImageReplay.__proto__ = CanvasReplay;\n  CanvasImageReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasImageReplay.prototype.constructor = CanvasImageReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  CanvasImageReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(pointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    var myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroup_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(multiPointGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle, declutterGroup) {\n    var anchor = imageStyle.getAnchor();\n    var size = imageStyle.getSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var image = imageStyle.getImage(1);\n    var origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  };\n\n  return CanvasImageReplay;\n}(CanvasReplay));\n\n\nexport default CanvasImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/render/canvas/LineStringReplay\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\nvar CanvasLineStringReplay = (function (CanvasReplay) {\n  function CanvasLineStringReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasLineStringReplay.__proto__ = CanvasReplay;\n  CanvasLineStringReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasLineStringReplay.prototype.constructor = CanvasLineStringReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  CanvasLineStringReplay.prototype.drawFlatCoordinates_ = function drawFlatCoordinates_ (flatCoordinates, offset, end, stride) {\n    var myBegin = this.coordinates.length;\n    var myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(lineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var strokeStyle = state.strokeStyle;\n    var lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    var ends = multiLineStringGeometry.getEnds();\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(multiLineStringGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasLineStringReplay.prototype.finish = function finish () {\n    var state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n  };\n\n  /**\n   * @inheritDoc.\n   */\n  CanvasLineStringReplay.prototype.applyStroke = function applyStroke (state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    CanvasReplay.prototype.applyStroke.call(this, state);\n    this.instructions.push(beginPathInstruction);\n  };\n\n  return CanvasLineStringReplay;\n}(CanvasReplay));\n\n\nexport default CanvasLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/canvas/PolygonReplay\n */\nimport {asString} from '../../color.js';\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\n\n\nvar CanvasPolygonReplay = (function (CanvasReplay) {\n  function CanvasPolygonReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n  }\n\n  if ( CanvasReplay ) CanvasPolygonReplay.__proto__ = CanvasReplay;\n  CanvasPolygonReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasPolygonReplay.prototype.constructor = CanvasPolygonReplay;\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  CanvasPolygonReplay.prototype.drawFlatCoordinatess_ = function drawFlatCoordinatess_ (flatCoordinates, offset, ends, stride) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fill = state.fillStyle !== undefined;\n    var stroke = state.strokeStyle != undefined;\n    var numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (var i = 0; i < numEnds; ++i) {\n      var end = ends[i];\n      var myBegin = this$1.coordinates.length;\n      var myEnd = this$1.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      var moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this$1.instructions.push(moveToLineToInstruction);\n      this$1.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this$1.instructions.push(closePathInstruction);\n        this$1.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(circleGeometry);\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var flatCoordinates = circleGeometry.getFlatCoordinates();\n    var stride = circleGeometry.getStride();\n    var myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    var circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(fillInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(circleGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(polygonGeometry);\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var ends = polygonGeometry.getEnds();\n    var flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    var stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(polygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    var strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_(multiPolygonGeometry);\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        asString(defaultFillStyle)\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    var endss = multiPolygonGeometry.getEndss();\n    var flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    var stride = multiPolygonGeometry.getStride();\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this$1.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(multiPolygonGeometry, feature);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasPolygonReplay.prototype.finish = function finish () {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    var tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      var coordinates = this.coordinates;\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   */\n  CanvasPolygonReplay.prototype.setFillStrokeStyles_ = function setFillStrokeStyles_ (geometry) {\n    var state = this.state;\n    var fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill, geometry);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  };\n\n  return CanvasPolygonReplay;\n}(CanvasReplay));\n\n\nexport default CanvasPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  var chunkStart = offset;\n  var chunkEnd = offset;\n  var chunkM = 0;\n  var m = 0;\n  var start = offset;\n  var acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n\n//# sourceMappingURL=straightchunk.js.map","/**\n * @module ol/render/canvas/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {labelCache, measureTextWidth, defaultTextAlign, measureTextHeight, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from '../canvas/Instruction.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n\nvar CanvasTextReplay = (function (CanvasReplay) {\n  function CanvasTextReplay(tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree) {\n    CanvasReplay.call(this, tolerance, maxExtent, resolution, pixelRatio, overlaps, declutterTree);\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     */\n    this.declutterGroup_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?module:ol/render/canvas~StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas~TextState}\n     */\n    this.textState_ = /** @type {module:ol/render/canvas~TextState} */ ({});\n\n    /**\n     * @type {!Object<string, module:ol/render/canvas~TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    labelCache.prune();\n\n  }\n\n  if ( CanvasReplay ) CanvasTextReplay.__proto__ = CanvasReplay;\n  CanvasTextReplay.prototype = Object.create( CanvasReplay && CanvasReplay.prototype );\n  CanvasTextReplay.prototype.constructor = CanvasTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    var fillState = this.textFillState_;\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    var begin = this.coordinates.length;\n\n    var geometryType = geometry.getType();\n    var flatCoordinates = null;\n    var end = 2;\n    var stride = 2;\n    var i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      var ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        var endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      var textAlign = textState.textAlign;\n      var flatOffset = 0;\n      var flatEnd;\n      for (var o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          var range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this$1.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this$1.coordinates.length;\n        flatOffset = ends[o];\n        this$1.drawChars_(begin, end, this$1.declutterGroup_);\n        begin = end;\n      }\n      this.endGeometry(geometry, feature);\n\n    } else {\n      var label = this.getImage(this.text_, this.textKey_, this.fillKey_, this.strokeKey_);\n      var width = label.width / this.pixelRatio;\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow && flatCoordinates[2] / this.resolution < width) {\n            return;\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          var interiorPoints = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (textState.overflow || interiorPoints[i + 2] / this$1.resolution >= width) {\n              flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n            }\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill, geometry);\n          this.hitDetectionInstructions.push(this.createFill(this.state, geometry));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      this.drawTextImage_(label, begin, end);\n      this.endGeometry(geometry, feature);\n    }\n  };\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  CanvasTextReplay.prototype.getImage = function getImage (text, textKey, fillKey, strokeKey) {\n    var label;\n    var key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      var strokeState = strokeKey ? this.strokeStates[strokeKey] || this.textStrokeState_ : null;\n      var fillState = fillKey ? this.fillStates[fillKey] || this.textFillState_ : null;\n      var textState = this.textStates[textKey] || this.textState_;\n      var pixelRatio = this.pixelRatio;\n      var scale = textState.scale * pixelRatio;\n      var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      var strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      var lines = text.split('\\n');\n      var numLines = lines.length;\n      var widths = [];\n      var width = measureTextWidths(textState.font, lines, widths);\n      var lineHeight = measureTextHeight(textState.font);\n      var height = lineHeight * numLines;\n      var renderWidth = (width + strokeWidth);\n      var context = createCanvasContext2D(\n        Math.ceil(renderWidth * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (CANVAS_LINE_DASH && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      var leftRight = (0.5 - align);\n      var x = align * label.width / scale + leftRight * strokeWidth;\n      var i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key);\n  };\n\n  /**\n   * @private\n   * @param {HTMLCanvasElement} label Label.\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  CanvasTextReplay.prototype.drawTextImage_ = function drawTextImage_ (label, begin, end) {\n    var textState = this.textState_;\n    var strokeState = this.textStrokeState_;\n    var pixelRatio = this.pixelRatio;\n    var align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n    var strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    var anchorX = align * label.width / pixelRatio + 2 * (0.5 - align) * strokeWidth;\n    var anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n    this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1, label.width,\n      textState.padding == defaultPadding ?\n        defaultPadding : textState.padding.map(function(p) {\n          return p * pixelRatio;\n        }),\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n      label, (anchorX - this.textOffsetX_) * pixelRatio, (anchorY - this.textOffsetY_) * pixelRatio,\n      this.declutterGroup_, label.height, 1, 0, 0, this.textRotateWithView_, this.textRotation_,\n      1 / pixelRatio, label.width, textState.padding,\n      !!textState.backgroundFill, !!textState.backgroundStroke\n    ]);\n  };\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {module:ol/render/canvas~DeclutterGroup} declutterGroup Declutter group.\n   */\n  CanvasTextReplay.prototype.drawChars_ = function drawChars_ (begin, end, declutterGroup) {\n    var strokeState = this.textStrokeState_;\n    var textState = this.textState_;\n    var fillState = this.textFillState_;\n\n    var strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = /** @type {module:ol/render/canvas~StrokeState} */ ({\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        });\n      }\n    }\n    var textKey = this.textKey_;\n    if (!(this.textKey_ in this.textStates)) {\n      this.textStates[this.textKey_] = /** @type {module:ol/render/canvas~TextState} */ ({\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        scale: textState.scale\n      });\n    }\n    var fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = /** @type {module:ol/render/canvas~FillState} */ ({\n          fillStyle: fillState.fillStyle\n        });\n      }\n    }\n\n    var pixelRatio = this.pixelRatio;\n    var baseline = TEXT_ALIGN[textState.textBaseline];\n\n    var offsetY = this.textOffsetY_ * pixelRatio;\n    var text = this.text_;\n    var font = textState.font;\n    var textScale = textState.scale;\n    var strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n    var widths = this.widths_[font];\n    if (!widths) {\n      this.widths_[font] = widths = {};\n    }\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale * pixelRatio;\n      },\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      function(text) {\n        var width = widths[text];\n        if (!width) {\n          width = widths[text] = measureTextWidth(font, text);\n        }\n        return width * textScale;\n      },\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasTextReplay.prototype.setTextStyle = function setTextStyle (textStyle, declutterGroup) {\n    var textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroup_ = /** @type {module:ol/render/canvas~DeclutterGroup} */ (declutterGroup);\n\n      var textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = this.textFillState_ = null;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = this.textFillState_ = /** @type {module:ol/render/canvas~FillState} */ ({});\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      var textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = this.textStrokeState_ = null;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = this.textStrokeState_ = /** @type {module:ol/render/canvas~StrokeState} */ ({});\n        }\n        var lineDash = textStrokeStyle.getLineDash();\n        var lineDashOffset = textStrokeStyle.getLineDashOffset();\n        var lineWidth = textStrokeStyle.getWidth();\n        var miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      var font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      var textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      var textOffsetX = textStyle.getOffsetX();\n      var textOffsetY = textStyle.getOffsetY();\n      var textRotateWithView = textStyle.getRotateWithView();\n      var textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  };\n\n  return CanvasTextReplay;\n}(CanvasReplay));\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  var numLines = lines.length;\n  var width = 0;\n  for (var i = 0; i < numLines; ++i) {\n    var currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\nexport default CanvasTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/canvas/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport ReplayType from '../ReplayType.js';\nimport CanvasReplay from '../canvas/Replay.js';\nimport CanvasImageReplay from '../canvas/ImageReplay.js';\nimport CanvasLineStringReplay from '../canvas/LineStringReplay.js';\nimport CanvasPolygonReplay from '../canvas/PolygonReplay.js';\nimport CanvasTextReplay from '../canvas/TextReplay.js';\nimport {ORDER} from '../replay.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @type {Object<module:ol/render/ReplayType,\n *                function(new: module:ol/render/canvas/Replay, number, module:ol/extent~Extent,\n *                number, number, boolean, Array<module:ol/render/canvas~DeclutterGroup>)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': CanvasPolygonReplay,\n  'Default': CanvasReplay,\n  'Image': CanvasImageReplay,\n  'LineString': CanvasLineStringReplay,\n  'Polygon': CanvasPolygonReplay,\n  'Text': CanvasTextReplay\n};\n\n\nvar CanvasReplayGroup = (function (ReplayGroup) {\n  function CanvasReplayGroup(\n    tolerance,\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    declutterTree,\n    opt_renderBuffer\n  ) {\n    ReplayGroup.call(this);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = declutterTree;\n\n    /**\n     * @type {module:ol/render/canvas~DeclutterGroup}\n     * @private\n     */\n    this.declutterGroup_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = createCanvasContext2D(1, 1);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n  }\n\n  if ( ReplayGroup ) CanvasReplayGroup.__proto__ = ReplayGroup;\n  CanvasReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  CanvasReplayGroup.prototype.constructor = CanvasReplayGroup;\n\n  /**\n   * @param {boolean} group Group with previous replay.\n   * @return {module:ol/render/canvas~DeclutterGroup} Declutter instruction group.\n   */\n  CanvasReplayGroup.prototype.addDeclutter = function addDeclutter (group) {\n    var declutter = null;\n    if (this.declutterTree_) {\n      if (group) {\n        declutter = this.declutterGroup_;\n        /** @type {number} */ (declutter[4])++;\n      } else {\n        declutter = this.declutterGroup_ = createEmpty();\n        declutter.push(1);\n      }\n    }\n    return declutter;\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   */\n  CanvasReplayGroup.prototype.clip = function clip (context, transform) {\n    var flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  };\n\n  /**\n   * @param {Array<module:ol/render/ReplayType>} replays Replays.\n   * @return {boolean} Has replays of the provided types.\n   */\n  CanvasReplayGroup.prototype.hasReplays = function hasReplays (replays) {\n    var this$1 = this;\n\n    for (var zIndex in this$1.replaysByZIndex_) {\n      var candidates = this$1.replaysByZIndex_[zIndex];\n      for (var i = 0, ii = replays.length; i < ii; ++i) {\n        if (replays[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  CanvasReplayGroup.prototype.finish = function finish () {\n    var this$1 = this;\n\n    for (var zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish();\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T} callback Feature callback.\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>} declutterReplays Declutter replays.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  CanvasReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    skippedFeaturesHash,\n    callback,\n    declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    hitTolerance = Math.round(hitTolerance);\n    var contextSize = hitTolerance * 2 + 1;\n    var transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n    var context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    var mask = getCircleArray(hitTolerance);\n    var declutteredFeatures;\n    if (this.declutterTree_) {\n      declutteredFeatures = this.declutterTree_.all().map(function(entry) {\n        return entry.value;\n      });\n    }\n\n    var replayType;\n\n    /**\n     * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      var imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (var i = 0; i < contextSize; i++) {\n        for (var j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              var result = (void 0);\n              if (!(declutteredFeatures && (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, j, replays, replay, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replayType = ORDER[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = declutterReplays[zIndexKey];\n            if (!declutter) {\n              declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            result = replay.replayHitDetection(context, transform, rotation,\n              skippedFeaturesHash, featureCallback, hitExtent);\n            if (result) {\n              return result;\n            }\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  CanvasReplayGroup.prototype.getClipCoords = function getClipCoords (transform) {\n    var maxExtent = this.maxExtent_;\n    var minX = maxExtent[0];\n    var minY = maxExtent[1];\n    var maxX = maxExtent[2];\n    var maxY = maxExtent[3];\n    var flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_, this.overlaps_, this.declutterTree_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @return {Object<string, Object<module:ol/render/ReplayType, module:ol/render/canvas/Replay>>} Replays.\n   */\n  CanvasReplayGroup.prototype.getReplays = function getReplays () {\n    return this.replaysByZIndex_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/transform~Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<module:ol/render/ReplayType>=} opt_replayTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, module:ol/render/canvas~DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  CanvasReplayGroup.prototype.replay = function replay (\n    context,\n    transform,\n    viewRotation,\n    skippedFeaturesHash,\n    snapToPixel,\n    opt_replayTypes,\n    opt_declutterReplays\n  ) {\n    var this$1 = this;\n\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    context.save();\n    this.clip(context, transform);\n\n    var replayTypes = opt_replayTypes ? opt_replayTypes : ORDER;\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      var zIndexKey = zs[i].toString();\n      replays = this$1.replaysByZIndex_[zIndexKey];\n      for (j = 0, jj = replayTypes.length; j < jj; ++j) {\n        var replayType = replayTypes[j];\n        replay = replays[replayType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (replayType == ReplayType.IMAGE || replayType == ReplayType.TEXT)) {\n            var declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.replay(context, transform, viewRotation, skippedFeaturesHash, snapToPixel);\n          }\n        }\n      }\n    }\n\n    context.restore();\n  };\n\n  return CanvasReplayGroup;\n}(ReplayGroup));\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nvar circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  var i;\n  var radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  var arraySize = radius * 2 + 1;\n  var arr = new Array(arraySize);\n  for (var i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  var x = radius;\n  var y = 0;\n  var error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, snapToPixel) {\n  var zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  var skippedFeatureUids = {};\n  for (var z = 0, zz = zs.length; z < zz; ++z) {\n    var replayData = declutterReplays[zs[z].toString()];\n    for (var i = 0, ii = replayData.length; i < ii;) {\n      var replay = replayData[i++];\n      var transform = replayData[i++];\n      replay.replay(context, transform, rotation, skippedFeatureUids, snapToPixel);\n    }\n  }\n}\n\n\nexport default CanvasReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, createEmpty, containsExtent, getWidth} from '../../extent.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup from '../../render/canvas/ReplayGroup.js';\nimport CanvasLayerRenderer from '../canvas/Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nvar CanvasVectorLayerRenderer = (function (CanvasLayerRenderer) {\n  function CanvasVectorLayerRenderer(vectorLayer) {\n\n    CanvasLayerRenderer.call(this, vectorLayer);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = vectorLayer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/canvas/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = createCanvasContext2D();\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasLayerRenderer ) CanvasVectorLayerRenderer.__proto__ = CanvasLayerRenderer;\n  CanvasVectorLayerRenderer.prototype = Object.create( CanvasLayerRenderer && CanvasLayerRenderer.prototype );\n  CanvasVectorLayerRenderer.prototype.constructor = CanvasVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   */\n  CanvasVectorLayerRenderer.prototype.compose = function compose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var extent = frameState.extent;\n    var pixelRatio = frameState.pixelRatio;\n    var skippedFeatureUids = layerState.managed ?\n      frameState.skippedFeatureUids : {};\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var rotation = viewState.rotation;\n    var projectionExtent = projection.getExtent();\n    var vectorSource = /** @type {module:ol/source/Vector} */ (this.getLayer().getSource());\n\n    var transform = this.getTransform(frameState, 0);\n\n    // clipped rendering if layer extent is set\n    var clipExtent = layerState.extent;\n    var clipped = clipExtent !== undefined;\n    if (clipped) {\n      this.clip(context, frameState, /** @type {module:ol/extent~Extent} */ (clipExtent));\n    }\n    var replayGroup = this.replayGroup_;\n    if (replayGroup && !replayGroup.isEmpty()) {\n      if (this.declutterTree_) {\n        this.declutterTree_.clear();\n      }\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      var drawOffsetX = 0;\n      var drawOffsetY = 0;\n      var replayContext;\n      var transparentLayer = layerState.opacity !== 1;\n      var hasRenderListeners = layer.hasListener(RenderEventType.RENDER);\n      if (transparentLayer || hasRenderListeners) {\n        var drawWidth = context.canvas.width;\n        var drawHeight = context.canvas.height;\n        if (rotation) {\n          var drawSize = Math.round(Math.sqrt(drawWidth * drawWidth + drawHeight * drawHeight));\n          drawOffsetX = (drawSize - drawWidth) / 2;\n          drawOffsetY = (drawSize - drawHeight) / 2;\n          drawWidth = drawHeight = drawSize;\n        }\n        // resize and clear\n        this.context.canvas.width = drawWidth;\n        this.context.canvas.height = drawHeight;\n        replayContext = this.context;\n      } else {\n        replayContext = context;\n      }\n\n      var alpha = replayContext.globalAlpha;\n      if (!transparentLayer) {\n        // for performance reasons, context.save / context.restore is not used\n        // to save and restore the transformation matrix and the opacity.\n        // see http://jsperf.com/context-save-restore-versus-variable\n        replayContext.globalAlpha = layerState.opacity;\n      }\n\n      if (replayContext != context) {\n        replayContext.translate(drawOffsetX, drawOffsetY);\n      }\n\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var width = frameState.size[0] * pixelRatio;\n      var height = frameState.size[1] * pixelRatio;\n      rotateAtOffset(replayContext, -rotation,\n        width / 2, height / 2);\n      replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n      if (vectorSource.getWrapX() && projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)) {\n        var startX = extent[0];\n        var worldWidth = getWidth(projectionExtent);\n        var world = 0;\n        var offsetX;\n        while (startX < projectionExtent[0]) {\n          --world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX += worldWidth;\n        }\n        world = 0;\n        startX = extent[2];\n        while (startX > projectionExtent[2]) {\n          ++world;\n          offsetX = worldWidth * world;\n          transform = this$1.getTransform(frameState, offsetX);\n          replayGroup.replay(replayContext, transform, rotation, skippedFeatureUids, snapToPixel);\n          startX -= worldWidth;\n        }\n      }\n      rotateAtOffset(replayContext, rotation,\n        width / 2, height / 2);\n\n      if (hasRenderListeners) {\n        this.dispatchRenderEvent(replayContext, frameState, transform);\n      }\n      if (replayContext != context) {\n        if (transparentLayer) {\n          var mainContextAlpha = context.globalAlpha;\n          context.globalAlpha = layerState.opacity;\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n          context.globalAlpha = mainContextAlpha;\n        } else {\n          context.drawImage(replayContext.canvas, -drawOffsetX, -drawOffsetY);\n        }\n        replayContext.translate(-drawOffsetX, -drawOffsetY);\n      }\n\n      if (!transparentLayer) {\n        replayContext.globalAlpha = alpha;\n      }\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    var transform = this.getTransform(frameState, 0);\n    this.preCompose(context, frameState, transform);\n    this.compose(context, frameState, layerState);\n    this.postCompose(context, frameState, layerState, transform);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      var resolution = frameState.viewState.resolution;\n      var rotation = frameState.viewState.rotation;\n      var layer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      var result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        }, null);\n      return result;\n    }\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    var projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      var worldWidth = getWidth(projectionExtent);\n      var gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    var replayGroup = new CanvasReplayGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(), this.declutterTree_, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/canvas/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        render(features[i]);\n      }\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish();\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    this.replayGroupChanged = true;\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  return CanvasVectorLayerRenderer;\n}(CanvasLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorLayer} The layer renderer.\n */\nCanvasVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorLayerRenderer(/** @type {module:ol/layer/Vector} */ (layer));\n};\n\n\nexport default CanvasVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/renderer/canvas/VectorTileLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport TileState from '../../TileState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen, unlisten} from '../../events.js';\nimport EventType from '../../events/EventType.js';\nimport rbush from 'rbush';\nimport {buffer, containsCoordinate, equals, getIntersection, getTopLeft, intersects} from '../../extent.js';\nimport VectorTileRenderType from '../../layer/VectorTileRenderType.js';\nimport {equivalent as equivalentProjection} from '../../proj.js';\nimport Units from '../../proj/Units.js';\nimport ReplayType from '../../render/ReplayType.js';\nimport {labelCache, rotateAtOffset} from '../../render/canvas.js';\nimport CanvasReplayGroup, {replayDeclutter} from '../../render/canvas/ReplayGroup.js';\nimport {ORDER} from '../../render/replay.js';\nimport CanvasTileLayerRenderer from '../canvas/TileLayer.js';\nimport {getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  reset as resetTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nvar IMAGE_REPLAYS = {\n  'image': [ReplayType.POLYGON, ReplayType.CIRCLE,\n    ReplayType.LINE_STRING, ReplayType.IMAGE, ReplayType.TEXT],\n  'hybrid': [ReplayType.POLYGON, ReplayType.LINE_STRING]\n};\n\n\n/**\n * @type {!Object<string, Array<module:ol/render/ReplayType>>}\n */\nvar VECTOR_REPLAYS = {\n  'image': [ReplayType.DEFAULT],\n  'hybrid': [ReplayType.IMAGE, ReplayType.TEXT, ReplayType.DEFAULT],\n  'vector': ORDER\n};\n\n\n/**\n * @classdesc\n * Canvas renderer for vector tile layers.\n * @api\n */\nvar CanvasVectorTileLayerRenderer = (function (CanvasTileLayerRenderer) {\n  function CanvasVectorTileLayerRenderer(layer) {\n\n    CanvasTileLayerRenderer.call(this, layer, true);\n\n    /**\n     * Declutter tree.\n     * @private\n     */\n    this.declutterTree_ = layer.getDeclutter() ? rbush(9, undefined) : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedLayerRevision_;\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.tmpTransform_ = createTransform();\n\n    // Use lower resolution for pure vector rendering. Closest resolution otherwise.\n    this.zDirection = layer.getRenderMode() == VectorTileRenderType.VECTOR ? 1 : 0;\n\n    listen(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n\n  }\n\n  if ( CanvasTileLayerRenderer ) CanvasVectorTileLayerRenderer.__proto__ = CanvasTileLayerRenderer;\n  CanvasVectorTileLayerRenderer.prototype = Object.create( CanvasTileLayerRenderer && CanvasTileLayerRenderer.prototype );\n  CanvasVectorTileLayerRenderer.prototype.constructor = CanvasVectorTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    unlisten(labelCache, EventType.CLEAR, this.handleFontsChanged_, this);\n    CanvasTileLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var tile = CanvasTileLayerRenderer.prototype.getTile.call(this, z, x, y, pixelRatio, projection);\n    if (tile.getState() === TileState.LOADED) {\n      this.createReplayGroup_(tile, pixelRatio, projection);\n      if (this.context) {\n        this.renderTileImage_(tile, pixelRatio, projection);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState) {\n    var layer = this.getLayer();\n    var layerRevision = layer.getRevision();\n    if (this.renderedLayerRevision_ != layerRevision) {\n      this.renderedTiles.length = 0;\n      var renderMode = layer.getRenderMode();\n      if (!this.context && renderMode != VectorTileRenderType.VECTOR) {\n        this.context = createCanvasContext2D();\n      }\n      if (this.context && renderMode == VectorTileRenderType.VECTOR) {\n        this.context = null;\n      }\n    }\n    this.renderedLayerRevision_ = layerRevision;\n    return CanvasTileLayerRenderer.prototype.prepareFrame.call(this, frameState, layerState);\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.createReplayGroup_ = function createReplayGroup_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var revision = layer.getRevision();\n    var renderOrder = /** @type {module:ol/render~OrderFunction} */ (layer.getRenderOrder()) || null;\n\n    var replayState = tile.getReplayState(layer);\n    if (!replayState.dirty && replayState.renderedRevision == revision &&\n        replayState.renderedRenderOrder == renderOrder) {\n      return;\n    }\n\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var sourceTileGrid = source.getTileGrid();\n    var tileGrid = source.getTileGridForProjection(projection);\n    var resolution = tileGrid.getResolution(tile.tileCoord[0]);\n    var tileExtent = tile.extent;\n\n    var zIndexKeys = {};\n    var loop = function ( t, tt ) {\n      var sourceTile = tile.getTile(tile.tileKeys[t]);\n      if (sourceTile.getState() != TileState.LOADED) {\n        return;\n      }\n\n      var sourceTileCoord = sourceTile.tileCoord;\n      var sourceTileExtent = sourceTileGrid.getTileCoordExtent(sourceTileCoord);\n      var sharedExtent = getIntersection(tileExtent, sourceTileExtent);\n      var bufferedExtent = equals(sourceTileExtent, sharedExtent) ? null :\n        buffer(sharedExtent, layer.getRenderBuffer() * resolution, this$1.tmpExtent);\n      var tileProjection = sourceTile.getProjection();\n      var reproject = false;\n      if (!equivalentProjection(projection, tileProjection)) {\n        reproject = true;\n        sourceTile.setProjection(projection);\n      }\n      replayState.dirty = false;\n      var replayGroup = new CanvasReplayGroup(0, sharedExtent, resolution,\n        pixelRatio, source.getOverlaps(), this$1.declutterTree_, layer.getRenderBuffer());\n      var squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @this {module:ol/renderer/canvas/VectorTileLayer}\n       */\n      var render = function(feature) {\n        var styles;\n        var styleFunction = feature.getStyleFunction() || layer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          var dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup);\n          this.dirty_ = this.dirty_ || dirty;\n          replayState.dirty = replayState.dirty || dirty;\n        }\n      };\n\n      var features = sourceTile.getFeatures();\n      if (renderOrder && renderOrder !== replayState.renderedRenderOrder) {\n        features.sort(renderOrder);\n      }\n      for (var i = 0, ii = features.length; i < ii; ++i) {\n        var feature = features[i];\n        if (reproject) {\n          if (tileProjection.getUnits() == Units.TILE_PIXELS) {\n            // projected tile extent\n            tileProjection.setWorldExtent(sourceTileExtent);\n            // tile extent in tile pixel space\n            tileProjection.setExtent(sourceTile.getExtent());\n          }\n          feature.getGeometry().transform(tileProjection, projection);\n        }\n        if (!bufferedExtent || intersects(bufferedExtent, feature.getGeometry().getExtent())) {\n          render.call(this$1, feature);\n        }\n      }\n      replayGroup.finish();\n      for (var r in replayGroup.getReplays()) {\n        zIndexKeys[r] = true;\n      }\n      sourceTile.setReplayGroup(layer, tile.tileCoord.toString(), replayGroup);\n    };\n\n    for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) loop( t, tt );\n    replayState.renderedRevision = revision;\n    replayState.renderedRenderOrder = renderOrder;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    hitTolerance = hitTolerance == undefined ? 0 : hitTolerance;\n    var layer = this.getLayer();\n    /** @type {!Object<string, boolean>} */\n    var features = {};\n\n    /** @type {Array<module:ol/VectorImageTile>} */\n    var renderedTiles = this.renderedTiles;\n\n    var bufferedExtent, found;\n    var i, ii, replayGroup;\n    for (i = 0, ii = renderedTiles.length; i < ii; ++i) {\n      var tile = renderedTiles[i];\n      bufferedExtent = buffer(tile.extent, hitTolerance * resolution, bufferedExtent);\n      if (!containsCoordinate(bufferedExtent, coordinate)) {\n        continue;\n      }\n      for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n        var sourceTile = tile.getTile(tile.tileKeys[t]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        found = found || replayGroup.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance, {},\n          /**\n           * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n           * @return {?} Callback result.\n           */\n          function(feature) {\n            var key = getUid(feature).toString();\n            if (!(key in features)) {\n              features[key] = true;\n              return callback.call(thisArg, feature, layer);\n            }\n          }, null);\n      }\n    }\n    return found;\n  };\n\n  /**\n   * @param {module:ol/VectorTile} tile Tile.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @return {module:ol/transform~Transform} transform Transform.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.getReplayTransform_ = function getReplayTransform_ (tile, frameState) {\n    var layer = this.getLayer();\n    var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n    var tileGrid = source.getTileGrid();\n    var tileCoord = tile.tileCoord;\n    var tileResolution = tileGrid.getResolution(tileCoord[0]);\n    var viewState = frameState.viewState;\n    var pixelRatio = frameState.pixelRatio;\n    var renderResolution = viewState.resolution / pixelRatio;\n    var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n    var center = viewState.center;\n    var origin = getTopLeft(tileExtent);\n    var size = frameState.size;\n    var offsetX = Math.round(pixelRatio * size[0] / 2);\n    var offsetY = Math.round(pixelRatio * size[1] / 2);\n    return composeTransform(this.tmpTransform_,\n      offsetX, offsetY,\n      tileResolution / renderResolution, tileResolution / renderResolution,\n      viewState.rotation,\n      (origin[0] - center[0]) / tileResolution,\n      (center[1] - origin[1]) / tileResolution);\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleFontsChanged_ = function handleFontsChanged_ (event) {\n    var layer = this.getLayer();\n    if (layer.getVisible() && this.renderedLayerRevision_ !== undefined) {\n      layer.changed();\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  CanvasVectorTileLayerRenderer.prototype.postCompose = function postCompose (context, frameState, layerState) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var renderMode = layer.getRenderMode();\n    if (renderMode != VectorTileRenderType.IMAGE) {\n      var declutterReplays = layer.getDeclutter() ? {} : null;\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var replayTypes = VECTOR_REPLAYS[renderMode];\n      var pixelRatio = frameState.pixelRatio;\n      var rotation = frameState.viewState.rotation;\n      var size = frameState.size;\n      var offsetX, offsetY;\n      if (rotation) {\n        offsetX = Math.round(pixelRatio * size[0] / 2);\n        offsetY = Math.round(pixelRatio * size[1] / 2);\n        rotateAtOffset(context, -rotation, offsetX, offsetY);\n      }\n      if (declutterReplays) {\n        this.declutterTree_.clear();\n      }\n      var viewHints = frameState.viewHints;\n      var snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      var tiles = this.renderedTiles;\n      var tileGrid = source.getTileGridForProjection(frameState.viewState.projection);\n      var clips = [];\n      var zs = [];\n      for (var i = tiles.length - 1; i >= 0; --i) {\n        var tile = /** @type {module:ol/VectorImageTile} */ (tiles[i]);\n        if (tile.getState() == TileState.ABORT) {\n          continue;\n        }\n        var tileCoord = tile.tileCoord;\n        var worldOffset = tileGrid.getTileCoordExtent(tileCoord, this$1.tmpExtent)[0] - tile.extent[0];\n        var transform = undefined;\n        for (var t = 0, tt = tile.tileKeys.length; t < tt; ++t) {\n          var sourceTile = tile.getTile(tile.tileKeys[t]);\n          if (sourceTile.getState() != TileState.LOADED) {\n            continue;\n          }\n          var replayGroup = sourceTile.getReplayGroup(layer, tileCoord.toString());\n          if (!replayGroup || !replayGroup.hasReplays(replayTypes)) {\n            // sourceTile was not yet loaded when this.createReplayGroup_() was\n            // called, or it has no replays of the types we want to render\n            continue;\n          }\n          if (!transform) {\n            transform = this$1.getTransform(frameState, worldOffset);\n          }\n          var currentZ = sourceTile.tileCoord[0];\n          var currentClip = replayGroup.getClipCoords(transform);\n          context.save();\n          context.globalAlpha = layerState.opacity;\n          // Create a clip mask for regions in this low resolution tile that are\n          // already filled by a higher resolution tile\n          for (var j = 0, jj = clips.length; j < jj; ++j) {\n            var clip = clips[j];\n            if (currentZ < zs[j]) {\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher resolution tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n          replayGroup.replay(context, transform, rotation, {}, snapToPixel, replayTypes, declutterReplays);\n          context.restore();\n          clips.push(currentClip);\n          zs.push(currentZ);\n        }\n      }\n      if (declutterReplays) {\n        replayDeclutter(declutterReplays, context, rotation, snapToPixel);\n      }\n      if (rotation) {\n        rotateAtOffset(context, rotation,\n          /** @type {number} */ (offsetX), /** @type {number} */ (offsetY));\n      }\n    }\n    CanvasTileLayerRenderer.prototype.postCompose.call(this, context, frameState, layerState);\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of styles.\n   * @param {module:ol/render/canvas/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, squaredTolerance, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i], squaredTolerance,\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles, squaredTolerance,\n        this.handleStyleImageChange_, this);\n    }\n    return loading;\n  };\n\n  /**\n   * @param {module:ol/VectorImageTile} tile Tile.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @private\n   */\n  CanvasVectorTileLayerRenderer.prototype.renderTileImage_ = function renderTileImage_ (tile, pixelRatio, projection) {\n    var this$1 = this;\n\n    var layer = this.getLayer();\n    var replayState = tile.getReplayState(layer);\n    var revision = layer.getRevision();\n    var replays = IMAGE_REPLAYS[layer.getRenderMode()];\n    if (replays && replayState.renderedTileRevision !== revision) {\n      replayState.renderedTileRevision = revision;\n      var tileCoord = tile.wrappedTileCoord;\n      var z = tileCoord[0];\n      var source = /** @type {module:ol/source/VectorTile} */ (layer.getSource());\n      var tileGrid = source.getTileGridForProjection(projection);\n      var resolution = tileGrid.getResolution(z);\n      var context = tile.getContext(layer);\n      var size = source.getTilePixelSize(z, pixelRatio, projection);\n      context.canvas.width = size[0];\n      context.canvas.height = size[1];\n      var tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent);\n      for (var i = 0, ii = tile.tileKeys.length; i < ii; ++i) {\n        var sourceTile = tile.getTile(tile.tileKeys[i]);\n        if (sourceTile.getState() != TileState.LOADED) {\n          continue;\n        }\n        var pixelScale = pixelRatio / resolution;\n        var transform = resetTransform(this$1.tmpTransform_);\n        scaleTransform(transform, pixelScale, -pixelScale);\n        translateTransform(transform, -tileExtent[0], -tileExtent[3]);\n        var replayGroup = sourceTile.getReplayGroup(layer, tile.tileCoord.toString());\n        replayGroup.replay(context, transform, 0, {}, true, replays);\n      }\n    }\n  };\n\n  return CanvasVectorTileLayerRenderer;\n}(CanvasTileLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nCanvasVectorTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR_TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/canvas/VectorTileLayer} The layer renderer.\n */\nCanvasVectorTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new CanvasVectorTileLayerRenderer(/** @type {module:ol/layer/VectorTile} */ (layer));\n};\n\n\nexport default CanvasVectorTileLayerRenderer;\n\n//# sourceMappingURL=VectorTileLayer.js.map","/**\n * @module ol/Map\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control/util.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport CanvasImageLayerRenderer from './renderer/canvas/ImageLayer.js';\nimport CanvasMapRenderer from './renderer/canvas/Map.js';\nimport CanvasTileLayerRenderer from './renderer/canvas/TileLayer.js';\nimport CanvasVectorLayerRenderer from './renderer/canvas/VectorLayer.js';\nimport CanvasVectorTileLayerRenderer from './renderer/canvas/VectorTileLayer.js';\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map';\n *     import View from 'ol/View';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *\n *     var map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~Group}\n * is a subclass of {@link module:ol/layer/Base}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar Map = (function (PluggableMap) {\n  function Map(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) Map.__proto__ = PluggableMap;\n  Map.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  Map.prototype.constructor = Map;\n\n  Map.prototype.createRenderer = function createRenderer () {\n    var renderer = new CanvasMapRenderer(this);\n    renderer.registerLayerRenderers([\n      CanvasImageLayerRenderer,\n      CanvasTileLayerRenderer,\n      CanvasVectorLayerRenderer,\n      CanvasVectorTileLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return Map;\n}(PluggableMap));\n\n\nexport default Map;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((module:ol/coordinate~Coordinate|undefined)): (module:ol/coordinate~Coordinate|undefined)} Type\n */\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createExtent(extent) {\n  return (\n    /**\n     * @param {module:ol/coordinate~Coordinate=} center Center.\n     * @return {module:ol/coordinate~Coordinate|undefined} Center.\n     */\n    function(center) {\n      if (center) {\n        return [\n          clamp(center[0], extent[0], extent[2]),\n          clamp(center[1], extent[1], extent[3])\n        ];\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/coordinate~Coordinate=} center Center.\n * @return {module:ol/coordinate~Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n\n//# sourceMappingURL=centerconstraint.js.map","/**\n * @module ol/View\n */\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {getUid} from './util.js';\nimport {VOID} from './functions.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport BaseObject from './Object.js';\nimport {createSnapToResolutions, createSnapToPower} from './resolutionconstraint.js';\nimport {createSnapToZero, createSnapToN, none as rotationNone, disable} from './rotationconstraint.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {add as addCoordinate, rotate as rotateCoordinate, equals as coordinatesEqual} from './coordinate.js';\nimport {inAndOut} from './easing.js';\nimport {getForViewAndSize, getCenter, getHeight, getWidth, isEmpty} from './extent.js';\nimport GeometryType from './geom/GeometryType.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport SimpleGeometry from './geom/SimpleGeometry.js';\nimport {clamp, modulo} from './math.js';\nimport {assign} from './obj.js';\nimport {createProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\n\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {module:ol/coordinate~Coordinate} [sourceCenter]\n * @property {module:ol/coordinate~Coordinate} [targetCenter]\n * @property {number} [sourceResolution]\n * @property {number} [targetResolution]\n * @property {number} [sourceRotation]\n * @property {number} [targetRotation]\n * @property {module:ol/coordinate~Coordinate} [anchor]\n * @property {number} start\n * @property {number} duration\n * @property {boolean} complete\n * @property {function(number):number} easing\n * @property {function(boolean)} callback\n */\n\n\n/**\n * @typedef {Object} Constraints\n * @property {module:ol/centerconstraint~Type} center\n * @property {module:ol/resolutionconstraint~Type} resolution\n * @property {module:ol/rotationconstraint~Type} rotation\n */\n\n\n/**\n * @typedef {Object} FitOptions\n * @property {module:ol/size~Size} [size] The size in pixels of the box to fit\n * the extent into. Default is the current size of the first map in the DOM that\n * uses this view, or `[100, 100]` if no such map is found.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [constrainResolution=true] Constrain the resolution.\n * @property {boolean} [nearest=false] If `constrainResolution` is `true`, get\n * the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean)} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n\n/**\n * @typedef {Object} ViewOptions\n * @property {module:ol/coordinate~Coordinate} [center] The initial center for\n * the view. The coordinate system for the center is specified with the\n * `projection` option. Layer sources will not be fetched if this is not set,\n * but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {module:ol/extent~Extent} [extent] The extent that constrains the\n * center, in other words, center cannot be set outside this extent.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions to determine the\n * resolution constraint. If set the `maxResolution`, `minResolution`,\n * `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view. The initial\n * resolution is determined using the {@link #constrainResolution} method.\n * @property {number} [zoomFactor=2] The zoom factor used to determine the\n * resolution constraint.\n */\n\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {module:ol/coordinate~Coordinate|undefined} center The center of the view at the end of\n * the animation.\n * @property {number|undefined} zoom The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number|undefined} resolution The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number|undefined} rotation The rotation of the view at the end of\n * the animation.\n * @property {module:ol/coordinate~Coordinate|undefined} anchor Optional anchor to remained fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing~inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {module:ol/coordinate~Coordinate} center\n * @property {module:ol/proj/Projection} projection\n * @property {number} resolution\n * @property {number} rotation\n * @property {number} zoom\n */\n\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nvar DEFAULT_MIN_ZOOM = 0;\n\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * ### The view states\n *\n * An View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * An View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Spherical Mercator (EPSG:3857).\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view. Any value can be passed to the setters. And the value\n * that is passed to a setter will effectively be the value set in the view,\n * and returned by the corresponding getter.\n *\n * But a View object also has a *resolution constraint*, a\n * *rotation constraint* and a *center constraint*.\n *\n * As said above, no constraints are applied when the setters are used to set\n * new states for the view. Applying constraints is done explicitly through\n * the use of the `constrain*` functions (`constrainResolution` and\n * `constrainRotation` and `constrainCenter`).\n *\n * The main users of the constraints are the interactions and the\n * controls. For example, double-clicking on the map changes the view to\n * the \"next\" resolution. And releasing the fingers after pinch-zooming\n * snaps to the closest resolution (with an animation).\n *\n * The *resolution constraint* snaps to specific resolutions. It is\n * determined by the following options: `resolutions`, `maxResolution`,\n * `maxZoom`, and `zoomFactor`. If `resolutions` is set, the other three\n * options are ignored. See documentation for each option for more\n * information.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default the rotation value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the center is not constrained at all.\n *\n  * @api\n */\nvar View = (function (BaseObject) {\n  function View(opt_options) {\n    BaseObject.call(this);\n\n    var options = assign({}, opt_options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/View~Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    this.updateAnimations_ = this.updateAnimations_.bind(this);\n\n    /**\n     * @private\n     * @const\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    this.applyOptions_(options);\n  }\n\n  if ( BaseObject ) View.__proto__ = BaseObject;\n  View.prototype = Object.create( BaseObject && BaseObject.prototype );\n  View.prototype.constructor = View;\n\n  /**\n   * Set up the view with the given options.\n   * @param {module:ol/View~ViewOptions} options View options.\n   */\n  View.prototype.applyOptions_ = function applyOptions_ (options) {\n\n    /**\n     * @type {Object<string, *>}\n     */\n    var properties = {};\n    properties[ViewProperty.CENTER] = options.center !== undefined ?\n      options.center : null;\n\n    var resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    var centerConstraint = createCenterConstraint(options);\n    var resolutionConstraint = resolutionConstraintInfo.constraint;\n    var rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {module:ol/View~Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint\n    };\n\n    if (options.resolution !== undefined) {\n      properties[ViewProperty.RESOLUTION] = options.resolution;\n    } else if (options.zoom !== undefined) {\n      properties[ViewProperty.RESOLUTION] = this.constrainResolution(\n        this.maxResolution_, options.zoom - this.minZoom_);\n\n      if (this.resolutions_) { // in case map zoom is out of min/max zoom range\n        properties[ViewProperty.RESOLUTION] = clamp(\n          Number(this.getResolution() || properties[ViewProperty.RESOLUTION]),\n          this.minResolution_, this.maxResolution_);\n      }\n    }\n    properties[ViewProperty.ROTATION] = options.rotation !== undefined ? options.rotation : 0;\n    this.setProperties(properties);\n\n    /**\n     * @private\n     * @type {module:ol/View~ViewOptions}\n     */\n    this.options_ = options;\n\n  };\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {module:ol/View~ViewOptions} newOptions New options to be applied.\n   * @return {module:ol/View~ViewOptions} New options updated with the current view state.\n   */\n  View.prototype.getUpdatedOptions_ = function getUpdatedOptions_ (newOptions) {\n    var options = assign({}, this.options_);\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenter();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return assign({}, options, newOptions);\n  };\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(module:ol/View~AnimationOptions|function(boolean))} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  View.prototype.animate = function animate (var_args) {\n    var arguments$1 = arguments;\n    var this$1 = this;\n\n    var animationCount = arguments.length;\n    var callback;\n    if (animationCount > 1 && typeof arguments[animationCount - 1] === 'function') {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n    if (!this.isDef()) {\n      // if view properties are not yet set, shortcut to the final state\n      var state = arguments[animationCount - 1];\n      if (state.center) {\n        this.setCenter(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n    var start = Date.now();\n    var center = this.getCenter().slice();\n    var resolution = this.getResolution();\n    var rotation = this.getRotation();\n    var series = [];\n    for (var i = 0; i < animationCount; ++i) {\n      var options = /** @type {module:ol/View~AnimationOptions} */ (arguments$1[i]);\n\n      var animation = /** @type {module:ol/View~Animation} */ ({\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut\n      });\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center;\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this$1.constrainResolution(\n          this$1.maxResolution_, options.zoom - this$1.minZoom_, 0);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        var delta = modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      animation.callback = callback;\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  };\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  View.prototype.getAnimating = function getAnimating () {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  };\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  View.prototype.getInteracting = function getInteracting () {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  };\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  View.prototype.cancelAnimations = function cancelAnimations () {\n    var this$1 = this;\n\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    for (var i = 0, ii = this.animations_.length; i < ii; ++i) {\n      var series = this$1.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n    }\n    this.animations_.length = 0;\n  };\n\n  /**\n   * Update all animations.\n   */\n  View.prototype.updateAnimations_ = function updateAnimations_ () {\n    var this$1 = this;\n\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    var now = Date.now();\n    var more = false;\n    for (var i = this.animations_.length - 1; i >= 0; --i) {\n      var series = this$1.animations_[i];\n      var seriesComplete = true;\n      for (var j = 0, jj = series.length; j < jj; ++j) {\n        var animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        var elapsed = now - animation.start;\n        var fraction = animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        var progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          var x0 = animation.sourceCenter[0];\n          var y0 = animation.sourceCenter[1];\n          var x1 = animation.targetCenter[0];\n          var y1 = animation.targetCenter[1];\n          var x = x0 + progress * (x1 - x0);\n          var y = y0 + progress * (y1 - y0);\n          this$1.set(ViewProperty.CENTER, [x, y]);\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          var resolution = progress === 1 ?\n            animation.targetResolution :\n            animation.sourceResolution + progress * (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterZoom(resolution, animation.anchor));\n          }\n          this$1.set(ViewProperty.RESOLUTION, resolution);\n        }\n        if (animation.sourceRotation !== undefined && animation.targetRotation !== undefined) {\n          var rotation = progress === 1 ?\n            modulo(animation.targetRotation + Math.PI, 2 * Math.PI) - Math.PI :\n            animation.sourceRotation + progress * (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            this$1.set(ViewProperty.CENTER,\n              this$1.calculateCenterRotate(rotation, animation.anchor));\n          }\n          this$1.set(ViewProperty.ROTATION, rotation);\n        }\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this$1.animations_[i] = null;\n        this$1.setHint(ViewHint.ANIMATING, -1);\n        var callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(this.updateAnimations_);\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} anchor Rotation anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for rotation and anchor.\n   */\n  View.prototype.calculateCenterRotate = function calculateCenterRotate (rotation, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  };\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {module:ol/coordinate~Coordinate} anchor Zoom anchor.\n   * @return {module:ol/coordinate~Coordinate|undefined} Center for resolution and anchor.\n   */\n  View.prototype.calculateCenterZoom = function calculateCenterZoom (resolution, anchor) {\n    var center;\n    var currentCenter = this.getCenter();\n    var currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      var x = anchor[0] - resolution * (anchor[0] - currentCenter[0]) / currentResolution;\n      var y = anchor[1] - resolution * (anchor[1] - currentCenter[1]) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  };\n\n  /**\n   * @private\n   * @return {module:ol/size~Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  View.prototype.getSizeFromViewport_ = function getSizeFromViewport_ () {\n    var size = [100, 100];\n    var selector = '.ol-viewport[data-view=\"' + getUid(this) + '\"]';\n    var element = document.querySelector(selector);\n    if (element) {\n      var metrics = getComputedStyle(element);\n      size[0] = parseInt(metrics.width, 10);\n      size[1] = parseInt(metrics.height, 10);\n    }\n    return size;\n  };\n\n  /**\n   * Get the constrained center of this view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center Center.\n   * @return {module:ol/coordinate~Coordinate|undefined} Constrained center.\n   * @api\n   */\n  View.prototype.constrainCenter = function constrainCenter (center) {\n    return this.constraints_.center(center);\n  };\n\n  /**\n   * Get the constrained resolution of this view.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @param {number=} opt_direction Direction. Default is `0`.\n   * @return {number|undefined} Constrained resolution.\n   * @api\n   */\n  View.prototype.constrainResolution = function constrainResolution (resolution, opt_delta, opt_direction) {\n    var delta = opt_delta || 0;\n    var direction = opt_direction || 0;\n    return this.constraints_.resolution(resolution, delta, direction);\n  };\n\n  /**\n   * Get the constrained rotation of this view.\n   * @param {number|undefined} rotation Rotation.\n   * @param {number=} opt_delta Delta. Default is `0`.\n   * @return {number|undefined} Constrained rotation.\n   * @api\n   */\n  View.prototype.constrainRotation = function constrainRotation (rotation, opt_delta) {\n    var delta = opt_delta || 0;\n    return this.constraints_.rotation(rotation, delta);\n  };\n\n  /**\n   * Get the view center.\n   * @return {module:ol/coordinate~Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getCenter = function getCenter () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(ViewProperty.CENTER))\n    );\n  };\n\n  /**\n   * @return {module:ol/View~Constraints} Constraints.\n   */\n  View.prototype.getConstraints = function getConstraints () {\n    return this.constraints_;\n  };\n\n  /**\n   * @param {Array<number>=} opt_hints Destination array.\n   * @return {Array<number>} Hint.\n   */\n  View.prototype.getHints = function getHints (opt_hints) {\n    if (opt_hints !== undefined) {\n      opt_hints[0] = this.hints_[0];\n      opt_hints[1] = this.hints_[1];\n      return opt_hints;\n    } else {\n      return this.hints_.slice();\n    }\n  };\n\n  /**\n   * Calculate the extent for the current view state and the passed size.\n   * The size is the pixel dimensions of the box into which the calculated extent\n   * should fit. In most cases you want to get the extent of the entire map,\n   * that is `map.getSize()`.\n   * @param {module:ol/size~Size=} opt_size Box pixel size. If not provided, the size of the\n   * first map that uses this view will be used.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  View.prototype.calculateExtent = function calculateExtent (opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var center = /** @type {!module:ol/coordinate~Coordinate} */ (this.getCenter());\n    assert(center, 1); // The view center is not defined\n    var resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 2); // The view resolution is not defined\n    var rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 3); // The view rotation is not defined\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  };\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  View.prototype.getMaxResolution = function getMaxResolution () {\n    return this.maxResolution_;\n  };\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  View.prototype.getMinResolution = function getMinResolution () {\n    return this.minResolution_;\n  };\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  View.prototype.getMaxZoom = function getMaxZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.minResolution_));\n  };\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  View.prototype.setMaxZoom = function setMaxZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  };\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  View.prototype.getMinZoom = function getMinZoom () {\n    return /** @type {number} */ (this.getZoomForResolution(this.maxResolution_));\n  };\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  View.prototype.setMinZoom = function setMinZoom (zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  };\n\n  /**\n   * Get the view projection.\n   * @return {module:ol/proj/Projection} The projection of the view.\n   * @api\n   */\n  View.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.getResolution = function getResolution () {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  };\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  View.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size=} opt_size Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  View.prototype.getResolutionForExtent = function getResolutionForExtent (extent, opt_size) {\n    var size = opt_size || this.getSizeFromViewport_();\n    var xResolution = getWidth(extent) / size[0];\n    var yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  };\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  View.prototype.getResolutionForValueFunction = function getResolutionForValueFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function(value) {\n        var resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      });\n  };\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.getRotation = function getRotation () {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  };\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number=} opt_power Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  View.prototype.getValueForResolutionFunction = function getValueForResolutionFunction (opt_power) {\n    var power = opt_power || 2;\n    var maxResolution = this.maxResolution_;\n    var minResolution = this.minResolution_;\n    var max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function(resolution) {\n        var value = (Math.log(maxResolution / resolution) / Math.log(power)) / max;\n        return value;\n      });\n  };\n\n  /**\n   * @param {number} pixelRatio Pixel ratio for center rounding.\n   * @return {module:ol/View~State} View state.\n   */\n  View.prototype.getState = function getState (pixelRatio) {\n    var center = /** @type {module:ol/coordinate~Coordinate} */ (this.getCenter());\n    var projection = this.getProjection();\n    var resolution = /** @type {number} */ (this.getResolution());\n    var pixelResolution = resolution / pixelRatio;\n    var rotation = this.getRotation();\n    return (\n      /** @type {module:ol/View~State} */ ({\n        center: [\n          Math.round(center[0] / pixelResolution) * pixelResolution,\n          Math.round(center[1] / pixelResolution) * pixelResolution\n        ],\n        projection: projection !== undefined ? projection : null,\n        resolution: resolution,\n        rotation: rotation,\n        zoom: this.getZoom()\n      })\n    );\n  };\n\n  /**\n   * Get the current zoom level.  If you configured your view with a resolutions\n   * array (this is rare), this method may return non-integer zoom levels (so\n   * the zoom level is not safe to use as an index into a resolutions array).\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  View.prototype.getZoom = function getZoom () {\n    var zoom;\n    var resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  };\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  View.prototype.getZoomForResolution = function getZoomForResolution (resolution) {\n    var offset = this.minZoom_ || 0;\n    var max, zoomFactor;\n    if (this.resolutions_) {\n      var nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  };\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  View.prototype.getResolutionForZoom = function getResolutionForZoom (zoom) {\n    return /** @type {number} */ (this.constrainResolution(\n      this.maxResolution_, zoom - this.minZoom_, 0));\n  };\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {module:ol/geom/SimpleGeometry|module:ol/extent~Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {module:ol/View~FitOptions=} opt_options Options.\n   * @api\n   */\n  View.prototype.fit = function fit (geometryOrExtent, opt_options) {\n    var options = opt_options || {};\n    var size = options.size;\n    if (!size) {\n      size = this.getSizeFromViewport_();\n    }\n    /** @type {module:ol/geom/SimpleGeometry} */\n    var geometry;\n    if (!(geometryOrExtent instanceof SimpleGeometry)) {\n      assert(Array.isArray(geometryOrExtent),\n        24); // Invalid extent or geometry provided as `geometry`\n      assert(!isEmpty(geometryOrExtent),\n        25); // Cannot fit empty extent provided as `geometry`\n      geometry = polygonFromExtent(geometryOrExtent);\n    } else if (geometryOrExtent.getType() === GeometryType.CIRCLE) {\n      geometryOrExtent = geometryOrExtent.getExtent();\n      geometry = polygonFromExtent(geometryOrExtent);\n      geometry.rotate(this.getRotation(), getCenter(geometryOrExtent));\n    } else {\n      geometry = geometryOrExtent;\n    }\n\n    var padding = options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    var constrainResolution = options.constrainResolution !== undefined ?\n      options.constrainResolution : true;\n    var nearest = options.nearest !== undefined ? options.nearest : false;\n    var minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.constrainResolution(\n        this.maxResolution_, options.maxZoom - this.minZoom_, 0);\n    } else {\n      minResolution = 0;\n    }\n    var coords = geometry.getFlatCoordinates();\n\n    // calculate rotated extent\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var minRotX = +Infinity;\n    var minRotY = +Infinity;\n    var maxRotX = -Infinity;\n    var maxRotY = -Infinity;\n    var stride = geometry.getStride();\n    for (var i = 0, ii = coords.length; i < ii; i += stride) {\n      var rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      var rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n\n    // calculate resolution\n    var resolution = this.getResolutionForExtent(\n      [minRotX, minRotY, maxRotX, maxRotY],\n      [size[0] - padding[1] - padding[3], size[1] - padding[0] - padding[2]]);\n    resolution = isNaN(resolution) ? minResolution :\n      Math.max(resolution, minResolution);\n    if (constrainResolution) {\n      var constrainedResolution = this.constrainResolution(resolution, 0, 0);\n      if (!nearest && constrainedResolution < resolution) {\n        constrainedResolution = this.constrainResolution(\n          constrainedResolution, -1, 0);\n      }\n      resolution = constrainedResolution;\n    }\n\n    // calculate center\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerRotX = (minRotX + maxRotX) / 2;\n    var centerRotY = (minRotY + maxRotY) / 2;\n    centerRotX += (padding[1] - padding[3]) / 2 * resolution;\n    centerRotY += (padding[0] - padding[2]) / 2 * resolution;\n    var centerX = centerRotX * cosAngle - centerRotY * sinAngle;\n    var centerY = centerRotY * cosAngle + centerRotX * sinAngle;\n    var center = [centerX, centerY];\n    var callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animate({\n        resolution: resolution,\n        center: center,\n        duration: options.duration,\n        easing: options.easing\n      }, callback);\n    } else {\n      this.setResolution(resolution);\n      this.setCenter(center);\n      animationCallback(callback, true);\n    }\n  };\n\n  /**\n   * Center on coordinate and view position.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/size~Size} size Box pixel size.\n   * @param {module:ol/pixel~Pixel} position Position on the view to center on.\n   * @api\n   */\n  View.prototype.centerOn = function centerOn (coordinate, size, position) {\n    // calculate rotated position\n    var rotation = this.getRotation();\n    var cosAngle = Math.cos(-rotation);\n    var sinAngle = Math.sin(-rotation);\n    var rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n    var rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n    var resolution = this.getResolution();\n    rotX += (size[0] / 2 - position[0]) * resolution;\n    rotY += (position[1] - size[1] / 2) * resolution;\n\n    // go back to original angle\n    sinAngle = -sinAngle; // go back to original rotation\n    var centerX = rotX * cosAngle - rotY * sinAngle;\n    var centerY = rotY * cosAngle + rotX * sinAngle;\n\n    this.setCenter([centerX, centerY]);\n  };\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  View.prototype.isDef = function isDef () {\n    return !!this.getCenter() && this.getResolution() !== undefined;\n  };\n\n  /**\n   * Rotate the view around a given coordinate.\n   * @param {number} rotation New rotation value for the view.\n   * @param {module:ol/coordinate~Coordinate=} opt_anchor The rotation center.\n   * @api\n   */\n  View.prototype.rotate = function rotate (rotation, opt_anchor) {\n    if (opt_anchor !== undefined) {\n      var center = this.calculateCenterRotate(rotation, opt_anchor);\n      this.setCenter(center);\n    }\n    this.setRotation(rotation);\n  };\n\n  /**\n   * Set the center of the current view.\n   * @param {module:ol/coordinate~Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setCenter = function setCenter (center) {\n    this.set(ViewProperty.CENTER, center);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * @param {module:ol/ViewHint} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  View.prototype.setHint = function setHint (hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  };\n\n  /**\n   * Set the resolution for this view.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  View.prototype.setResolution = function setResolution (resolution) {\n    this.set(ViewProperty.RESOLUTION, resolution);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Set the rotation for this view.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  View.prototype.setRotation = function setRotation (rotation) {\n    this.set(ViewProperty.ROTATION, rotation);\n    if (this.getAnimating()) {\n      this.cancelAnimations();\n    }\n  };\n\n  /**\n   * Zoom to a specific zoom level.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  View.prototype.setZoom = function setZoom (zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  };\n\n  return View;\n}(BaseObject));\n\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function() {\n    callback(returnValue);\n  }, 0);\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/centerconstraint~Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    return createExtent(options.extent);\n  } else {\n    return centerNone;\n  }\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {{constraint: module:ol/resolutionconstraint~Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  var resolutionConstraint;\n  var maxResolution;\n  var minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  var defaultMaxZoom = 28;\n  var defaultZoomFactor = 2;\n\n  var minZoom = options.minZoom !== undefined ?\n    options.minZoom : DEFAULT_MIN_ZOOM;\n\n  var maxZoom = options.maxZoom !== undefined ?\n    options.maxZoom : defaultMaxZoom;\n\n  var zoomFactor = options.zoomFactor !== undefined ?\n    options.zoomFactor : defaultZoomFactor;\n\n  if (options.resolutions !== undefined) {\n    var resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution = resolutions[maxZoom] !== undefined ?\n      resolutions[maxZoom] : resolutions[resolutions.length - 1];\n    resolutionConstraint = createSnapToResolutions(\n      resolutions);\n  } else {\n    // calculate the default min and max resolution\n    var projection = createProjection(options.projection, 'EPSG:3857');\n    var extent = projection.getExtent();\n    var size = !extent ?\n      // use an extent that can fit the whole world if need be\n      360 * METERS_PER_UNIT[Units.DEGREES] /\n            projection.getMetersPerUnit() :\n      Math.max(getWidth(extent), getHeight(extent));\n\n    var defaultMaxResolution = size / DEFAULT_TILE_SIZE / Math.pow(\n      defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    var defaultMinResolution = defaultMaxResolution / Math.pow(\n      defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom = minZoom + Math.floor(\n      Math.log(maxResolution / minResolution) / Math.log(zoomFactor));\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    resolutionConstraint = createSnapToPower(\n      zoomFactor, maxResolution, maxZoom - minZoom);\n  }\n  return {constraint: resolutionConstraint, maxResolution: maxResolution,\n    minResolution: minResolution, minZoom: minZoom, zoomFactor: zoomFactor};\n}\n\n\n/**\n * @param {module:ol/View~ViewOptions} options View options.\n * @return {module:ol/rotationconstraint~Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  var enableRotation = options.enableRotation !== undefined ?\n    options.enableRotation : true;\n  if (enableRotation) {\n    var constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    } else if (constrainRotation === false) {\n      return rotationNone;\n    } else if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    } else {\n      return rotationNone;\n    }\n  } else {\n    return disable;\n  }\n}\n\n\n/**\n * Determine if an animation involves no view change.\n * @param {module:ol/View~Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\nexport default View;\n\n//# sourceMappingURL=View.js.map","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {clamp} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), number, number): (number|undefined)} Type\n */\n\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToResolutions(resolutions) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var z = linearFindNearest(resolutions, resolution, direction);\n        z = clamp(z + delta, 0, resolutions.length - 1);\n        var index = Math.floor(z);\n        if (z != index && index < resolutions.length - 1) {\n          var power = resolutions[index] / resolutions[index + 1];\n          return resolutions[index] / Math.pow(power, z - index);\n        } else {\n          return resolutions[index];\n        }\n      } else {\n        return undefined;\n      }\n    }\n  );\n}\n\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number=} opt_maxLevel Maximum level.\n * @return {module:ol/resolutionconstraint~Type} Zoom function.\n */\nexport function createSnapToPower(power, maxResolution, opt_maxLevel) {\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} delta Delta.\n     * @param {number} direction Direction.\n     * @return {number|undefined} Resolution.\n     */\n    function(resolution, delta, direction) {\n      if (resolution !== undefined) {\n        var offset = -direction / 2 + 0.5;\n        var oldLevel = Math.floor(\n          Math.log(maxResolution / resolution) / Math.log(power) + offset);\n        var newLevel = Math.max(oldLevel + delta, 0);\n        if (opt_maxLevel !== undefined) {\n          newLevel = Math.min(newLevel, opt_maxLevel);\n        }\n        return maxResolution / Math.pow(power, newLevel);\n      } else {\n        return undefined;\n      }\n    });\n}\n\n//# sourceMappingURL=resolutionconstraint.js.map","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<module:ol/coordinate~Coordinate>} source\n * @property {Array<module:ol/coordinate~Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nvar MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nvar MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nvar Triangulation = function Triangulation(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.sourceProj_ = sourceProj;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   * @private\n   */\n  this.targetProj_ = targetProj;\n\n  /** @type {!Object<string, module:ol/coordinate~Coordinate>} */\n  var transformInvCache = {};\n  var transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} c A coordinate.\n   * @return {module:ol/coordinate~Coordinate} Transformed coordinate.\n   * @private\n   */\n  this.transformInv_ = function(c) {\n    var key = c[0] + '/' + c[1];\n    if (!transformInvCache[key]) {\n      transformInvCache[key] = transformInv(c);\n    }\n    return transformInvCache[key];\n  };\n\n  /**\n   * @type {module:ol/extent~Extent}\n   * @private\n   */\n  this.maxSourceExtent_ = maxSourceExtent;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n  /**\n   * @type {Array<module:ol/reproj/Triangulation~Triangle>}\n   * @private\n   */\n  this.triangles_ = [];\n\n  /**\n   * Indicates that the triangulation crosses edge of the source projection.\n   * @type {boolean}\n   * @private\n   */\n  this.wrapsXInSource_ = false;\n\n  /**\n   * @type {boolean}\n   * @private\n   */\n  this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n    getWidth(this.sourceProj_.getExtent()) : null;\n\n  /**\n   * @type {?number}\n   * @private\n   */\n  this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n    getWidth(this.targetProj_.getExtent()) : null;\n\n  var destinationTopLeft = getTopLeft(targetExtent);\n  var destinationTopRight = getTopRight(targetExtent);\n  var destinationBottomRight = getBottomRight(targetExtent);\n  var destinationBottomLeft = getBottomLeft(targetExtent);\n  var sourceTopLeft = this.transformInv_(destinationTopLeft);\n  var sourceTopRight = this.transformInv_(destinationTopRight);\n  var sourceBottomRight = this.transformInv_(destinationBottomRight);\n  var sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n  this.addQuad_(\n    destinationTopLeft, destinationTopRight,\n    destinationBottomRight, destinationBottomLeft,\n    sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n    MAX_SUBDIVISION);\n\n  if (this.wrapsXInSource_) {\n    var leftBound = Infinity;\n    this.triangles_.forEach(function(triangle, i, arr) {\n      leftBound = Math.min(leftBound,\n        triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n    });\n\n    // Shift triangles to be as close to `leftBound` as possible\n    // (if the distance is more than `worldWidth / 2` it can be closer.\n    this.triangles_.forEach(function(triangle) {\n      if (Math.max(triangle.source[0][0], triangle.source[1][0],\n        triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n        var newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n          [triangle.source[1][0], triangle.source[1][1]],\n          [triangle.source[2][0], triangle.source[2][1]]];\n        if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[0][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[1][0] -= this.sourceWorldWidth_;\n        }\n        if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n          newTriangle[2][0] -= this.sourceWorldWidth_;\n        }\n\n        // Rarely (if the extent contains both the dateline and prime meridian)\n        // the shift can in turn break some triangles.\n        // Detect this here and don't shift in such cases.\n        var minX = Math.min(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        var maxX = Math.max(\n          newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n        if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n          triangle.source = newTriangle;\n        }\n      }\n    }.bind(this));\n  }\n\n  transformInvCache = {};\n};\n\n/**\n * Adds triangle to the triangulation.\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @private\n */\nTriangulation.prototype.addTriangle_ = function addTriangle_ (a, b, c, aSrc, bSrc, cSrc) {\n  this.triangles_.push({\n    source: [aSrc, bSrc, cSrc],\n    target: [a, b, c]\n  });\n};\n\n/**\n * Adds quad (points in clock-wise order) to the triangulation\n * (and reprojects the vertices) if valid.\n * Performs quad subdivision if needed to increase precision.\n *\n * @param {module:ol/coordinate~Coordinate} a The target a coordinate.\n * @param {module:ol/coordinate~Coordinate} b The target b coordinate.\n * @param {module:ol/coordinate~Coordinate} c The target c coordinate.\n * @param {module:ol/coordinate~Coordinate} d The target d coordinate.\n * @param {module:ol/coordinate~Coordinate} aSrc The source a coordinate.\n * @param {module:ol/coordinate~Coordinate} bSrc The source b coordinate.\n * @param {module:ol/coordinate~Coordinate} cSrc The source c coordinate.\n * @param {module:ol/coordinate~Coordinate} dSrc The source d coordinate.\n * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n * @private\n */\nTriangulation.prototype.addQuad_ = function addQuad_ (a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n  var sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n  var sourceCoverageX = this.sourceWorldWidth_ ?\n    getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n  var sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n  // when the quad is wrapped in the source projection\n  // it covers most of the projection extent, but not fully\n  var wrapsX = this.sourceProj_.canWrapX() &&\n               sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n  var needsSubdivision = false;\n\n  if (maxSubdivision > 0) {\n    if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n      var targetQuadExtent = boundingExtent([a, b, c, d]);\n      var targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n      needsSubdivision |=\n          targetCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n    if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n      needsSubdivision |=\n          sourceCoverageX > MAX_TRIANGLE_WIDTH;\n    }\n  }\n\n  if (!needsSubdivision && this.maxSourceExtent_) {\n    if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n      // whole quad outside source projection extent -> ignore\n      return;\n    }\n  }\n\n  if (!needsSubdivision) {\n    if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n      if (maxSubdivision > 0) {\n        needsSubdivision = true;\n      } else {\n        return;\n      }\n    }\n  }\n\n  if (maxSubdivision > 0) {\n    if (!needsSubdivision) {\n      var center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n      var centerSrc = this.transformInv_(center);\n\n      var dx;\n      if (wrapsX) {\n        var centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n             modulo(cSrc[0], sourceWorldWidth)) / 2;\n        dx = centerSrcEstimX -\n            modulo(centerSrc[0], sourceWorldWidth);\n      } else {\n        dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n      }\n      var dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n      var centerSrcErrorSquared = dx * dx + dy * dy;\n      needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n    }\n    if (needsSubdivision) {\n      if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n        // split horizontally (top & bottom)\n        var bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n        var bcSrc = this.transformInv_(bc);\n        var da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n        var daSrc = this.transformInv_(da);\n\n        this.addQuad_(\n          a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n        this.addQuad_(\n          da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n      } else {\n        // split vertically (left & right)\n        var ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n        var abSrc = this.transformInv_(ab);\n        var cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n        var cdSrc = this.transformInv_(cd);\n\n        this.addQuad_(\n          a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n        this.addQuad_(\n          ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n      }\n      return;\n    }\n  }\n\n  if (wrapsX) {\n    if (!this.canWrapXInSource_) {\n      return;\n    }\n    this.wrapsXInSource_ = true;\n  }\n\n  this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n  this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n};\n\n/**\n * Calculates extent of the 'source' coordinates from all the triangles.\n *\n * @return {module:ol/extent~Extent} Calculated extent.\n */\nTriangulation.prototype.calculateSourceExtent = function calculateSourceExtent () {\n  var extent = createEmpty();\n\n  this.triangles_.forEach(function(triangle, i, arr) {\n    var src = triangle.source;\n    extendCoordinate(extent, src[0]);\n    extendCoordinate(extent, src[1]);\n    extendCoordinate(extent, src[2]);\n  });\n\n  return extent;\n};\n\n/**\n * @return {Array<module:ol/reproj/Triangulation~Triangle>} Array of the calculated triangles.\n */\nTriangulation.prototype.getTriangles = function getTriangles () {\n  return this.triangles_;\n};\n\nexport default Triangulation;\n\n//# sourceMappingURL=Triangulation.js.map","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from '../layer/Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nvar BaseLayer = (function (BaseObject) {\n  function BaseLayer(options) {\n\n    BaseObject.call(this);\n\n    /**\n    * @type {Object<string, *>}\n    */\n    var properties = assign({}, options);\n    properties[LayerProperty.OPACITY] =\n       options.opacity !== undefined ? options.opacity : 1;\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n\n    this.setProperties(properties);\n\n    /**\n    * @type {module:ol/layer/Layer~State}\n    * @private\n    */\n    this.state_ = /** @type {module:ol/layer/Layer~State} */ ({\n      layer: /** @type {module:ol/layer/Layer} */ (this),\n      managed: true\n    });\n\n    /**\n    * The layer type.\n    * @type {module:ol/LayerType}\n    * @protected;\n    */\n    this.type;\n\n  }\n\n  if ( BaseObject ) BaseLayer.__proto__ = BaseObject;\n  BaseLayer.prototype = Object.create( BaseObject && BaseObject.prototype );\n  BaseLayer.prototype.constructor = BaseLayer;\n\n  /**\n  * Get the layer type (used when creating a layer renderer).\n  * @return {module:ol/LayerType} The layer type.\n  */\n  BaseLayer.prototype.getType = function getType () {\n    return this.type;\n  };\n\n  /**\n  * @return {module:ol/layer/Layer~State} Layer state.\n  */\n  BaseLayer.prototype.getLayerState = function getLayerState () {\n    this.state_.opacity = clamp(this.getOpacity(), 0, 1);\n    this.state_.sourceState = this.getSourceState();\n    this.state_.visible = this.getVisible();\n    this.state_.extent = this.getExtent();\n    this.state_.zIndex = this.getZIndex() || 0;\n    this.state_.maxResolution = this.getMaxResolution();\n    this.state_.minResolution = Math.max(this.getMinResolution(), 0);\n\n    return this.state_;\n  };\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer>=} opt_array Array of layers (to be\n  *     modified in place).\n  * @return {Array<module:ol/layer/Layer>} Array of layers.\n  */\n  BaseLayer.prototype.getLayersArray = function getLayersArray (opt_array) {};\n\n  /**\n  * @abstract\n  * @param {Array<module:ol/layer/Layer~State>=} opt_states Optional list of layer\n  *     states (to be modified in place).\n  * @return {Array<module:ol/layer/Layer~State>} List of layer states.\n  */\n  BaseLayer.prototype.getLayerStatesArray = function getLayerStatesArray (opt_states) {};\n\n  /**\n  * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n  * will be visible regardless of extent.\n  * @return {module:ol/extent~Extent|undefined} The layer extent.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getExtent = function getExtent () {\n    return (\n    /** @type {module:ol/extent~Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  };\n\n  /**\n  * Return the maximum resolution of the layer.\n  * @return {number} The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMaxResolution = function getMaxResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  };\n\n  /**\n  * Return the minimum resolution of the layer.\n  * @return {number} The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getMinResolution = function getMinResolution () {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  };\n\n  /**\n  * Return the opacity of the layer (between 0 and 1).\n  * @return {number} The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getOpacity = function getOpacity () {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  };\n\n  /**\n  * @abstract\n  * @return {module:ol/source/State} Source state.\n  */\n  BaseLayer.prototype.getSourceState = function getSourceState () {};\n\n  /**\n  * Return the visibility of the layer (`true` or `false`).\n  * @return {boolean} The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getVisible = function getVisible () {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  };\n\n  /**\n  * Return the Z-index of the layer, which is used to order layers before\n  * rendering. The default Z-index is 0.\n  * @return {number} The Z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.getZIndex = function getZIndex () {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  };\n\n  /**\n  * Set the extent at which the layer is visible.  If `undefined`, the layer\n  * will be visible at all extents.\n  * @param {module:ol/extent~Extent|undefined} extent The extent of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setExtent = function setExtent (extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  };\n\n  /**\n  * Set the maximum resolution at which the layer is visible.\n  * @param {number} maxResolution The maximum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMaxResolution = function setMaxResolution (maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  };\n\n  /**\n  * Set the minimum resolution at which the layer is visible.\n  * @param {number} minResolution The minimum resolution of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setMinResolution = function setMinResolution (minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  };\n\n  /**\n  * Set the opacity of the layer, allowed values range from 0 to 1.\n  * @param {number} opacity The opacity of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setOpacity = function setOpacity (opacity) {\n    this.set(LayerProperty.OPACITY, opacity);\n  };\n\n  /**\n  * Set the visibility of the layer (`true` or `false`).\n  * @param {boolean} visible The visibility of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setVisible = function setVisible (visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  };\n\n  /**\n  * Set Z-index of the layer, which is used to order layers before rendering.\n  * The default Z-index is 0.\n  * @param {number} zindex The z-index of the layer.\n  * @observable\n  * @api\n  */\n  BaseLayer.prototype.setZIndex = function setZIndex (zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  };\n\n  return BaseLayer;\n}(BaseObject));\n\n\nexport default BaseLayer;\n\n//# sourceMappingURL=Base.js.map","/**\n * @module ol/style/Image\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @api\n */\nvar ImageStyle = function ImageStyle(options) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.opacity_ = options.opacity;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.rotateWithView_ = options.rotateWithView;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.rotation_ = options.rotation;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.scale_ = options.scale;\n\n};\n\n/**\n * Get the symbolizer opacity.\n * @return {number} Opacity.\n * @api\n */\nImageStyle.prototype.getOpacity = function getOpacity () {\n  return this.opacity_;\n};\n\n/**\n * Determine whether the symbolizer rotates with the map.\n * @return {boolean} Rotate with map.\n * @api\n */\nImageStyle.prototype.getRotateWithView = function getRotateWithView () {\n  return this.rotateWithView_;\n};\n\n/**\n * Get the symoblizer rotation.\n * @return {number} Rotation.\n * @api\n */\nImageStyle.prototype.getRotation = function getRotation () {\n  return this.rotation_;\n};\n\n/**\n * Get the symbolizer scale.\n * @return {number} Scale.\n * @api\n */\nImageStyle.prototype.getScale = function getScale () {\n  return this.scale_;\n};\n\n/**\n * This method is deprecated and always returns false.\n * @return {boolean} false.\n * @deprecated\n * @api\n */\nImageStyle.prototype.getSnapToPixel = function getSnapToPixel () {\n  return false;\n};\n\n/**\n * Get the anchor point in pixels. The anchor determines the center point for the\n * symbolizer.\n * @abstract\n * @return {Array<number>} Anchor.\n */\nImageStyle.prototype.getAnchor = function getAnchor () {};\n\n/**\n * Get the image element for the symbolizer.\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getImage = function getImage (pixelRatio) {};\n\n/**\n * @abstract\n * @param {number} pixelRatio Pixel ratio.\n * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n */\nImageStyle.prototype.getHitDetectionImage = function getHitDetectionImage (pixelRatio) {};\n\n/**\n * @abstract\n * @return {module:ol/ImageState} Image state.\n */\nImageStyle.prototype.getImageState = function getImageState () {};\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Image size.\n */\nImageStyle.prototype.getImageSize = function getImageSize () {};\n\n/**\n * @abstract\n * @return {module:ol/size~Size} Size of the hit-detection image.\n */\nImageStyle.prototype.getHitDetectionImageSize = function getHitDetectionImageSize () {};\n\n/**\n * Get the origin of the symbolizer.\n * @abstract\n * @return {Array<number>} Origin.\n */\nImageStyle.prototype.getOrigin = function getOrigin () {};\n\n/**\n * Get the size of the symbolizer (in pixels).\n * @abstract\n * @return {module:ol/size~Size} Size.\n */\nImageStyle.prototype.getSize = function getSize () {};\n\n/**\n * Set the opacity.\n *\n * @param {number} opacity Opacity.\n * @api\n */\nImageStyle.prototype.setOpacity = function setOpacity (opacity) {\n  this.opacity_ = opacity;\n};\n\n/**\n * Set whether to rotate the style with the view.\n *\n * @param {boolean} rotateWithView Rotate with map.\n * @api\n */\nImageStyle.prototype.setRotateWithView = function setRotateWithView (rotateWithView) {\n  this.rotateWithView_ = rotateWithView;\n};\n\n/**\n * Set the rotation.\n *\n * @param {number} rotation Rotation.\n * @api\n */\nImageStyle.prototype.setRotation = function setRotation (rotation) {\n  this.rotation_ = rotation;\n};\n/**\n * Set the scale.\n *\n * @param {number} scale Scale.\n * @api\n */\nImageStyle.prototype.setScale = function setScale (scale) {\n  this.scale_ = scale;\n};\n\n/**\n * This method is deprecated and does nothing.\n * @param {boolean} snapToPixel Snap to pixel?\n * @deprecated\n * @api\n */\nImageStyle.prototype.setSnapToPixel = function setSnapToPixel (snapToPixel) {};\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @return {module:ol/events~EventsKey|undefined} Listener key.\n * @template T\n */\nImageStyle.prototype.listenImageChange = function listenImageChange (listener, thisArg) {};\n\n/**\n * Load not yet loaded URI.\n * @abstract\n */\nImageStyle.prototype.load = function load () {};\n\n/**\n * @abstract\n * @param {function(this: T, module:ol/events/Event)} listener Listener function.\n * @param {T} thisArg Value to use as `this` when executing `listener`.\n * @template T\n */\nImageStyle.prototype.unlistenImageChange = function unlistenImageChange (listener, thisArg) {};\n\nexport default ImageStyle;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/VectorRenderType\n */\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport default {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n//# sourceMappingURL=VectorRenderType.js.map","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:module:ol/source/Vector, module:ol/extent~Extent, number,\n *                    module:ol/proj/Projection)} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(module:ol/extent~Extent, number, module:ol/proj/Projection): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @param {function(this:module:ol/VectorTile, Array<module:ol/Feature>, module:ol/proj/Projection, module:ol/extent~Extent)|function(this:module:ol/source/Vector, Array<module:ol/Feature>)} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:module:ol/VectorTile)|function(this:module:ol/source/Vector)} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @this {module:ol/source/Vector|module:ol/VectorTile}\n     */\n    function(extent, resolution, projection) {\n      var xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          var type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          var source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source,\n              {featureProjection: projection}),\n            format.readProjection(source), format.getLastExtent());\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|module:ol/featureloader~FeatureUrlFunction} url Feature URL service.\n * @param {module:ol/format/Feature} format Feature format.\n * @return {module:ol/featureloader~FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<module:ol/Feature>} features The loaded features.\n     * @param {module:ol/proj/Projection} dataProjection Data\n     * projection.\n     * @this {module:ol/source/Vector}\n     */\n    function(features, dataProjection) {\n      this.addFeatures(features);\n    }, /* FIXME handle error */ VOID);\n}\n\n//# sourceMappingURL=featureloader.js.map","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(this: S, module:ol/coordinate~Coordinate, module:ol/coordinate~Coordinate): T} callback Function\n *     called for each segment.\n * @param {S=} opt_this The object to be used as the value of 'this'\n *     within callback.\n * @return {T|boolean} Value.\n * @template T,S\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback, opt_this) {\n  var point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  var point2 = [];\n  var ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback.call(opt_this, point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n\n//# sourceMappingURL=segments.js.map","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n\n//# sourceMappingURL=TextPlacement.js.map","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  var x1 = flatCoordinates[offset];\n  var y1 = flatCoordinates[offset + 1];\n  var length = 0;\n  for (var i = offset + stride; i < end; i += stride) {\n    var x2 = flatCoordinates[i];\n    var y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  var perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  var dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  var dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n\n//# sourceMappingURL=length.js.map","/**\n * @module ol/renderer/Layer\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {FALSE, VOID} from '../functions.js';\nimport SourceState from '../source/State.js';\n\nvar LayerRenderer = (function (Observable) {\n  function LayerRenderer(layer) {\n\n    Observable.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/layer/Layer}\n     */\n    this.layer_ = layer;\n\n  }\n\n  if ( Observable ) LayerRenderer.__proto__ = Observable;\n  LayerRenderer.prototype = Object.create( Observable && Observable.prototype );\n  LayerRenderer.prototype.constructor = LayerRenderer;\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {module:ol/source/Tile} source Tile source.\n   * @param {module:ol/proj/Projection} projection Projection of the tiles.\n   * @param {Object<number, Object<string, module:ol/Tile>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, module:ol/TileRange):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  LayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          if (!tiles[zoom]) {\n            tiles[zoom] = {};\n          }\n          tiles[zoom][tile.tileCoord.toString()] = tile;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @return {module:ol/layer/Layer} Layer.\n   */\n  LayerRenderer.prototype.getLayer = function getLayer () {\n    return this.layer_;\n  };\n\n  /**\n   * Handle changes in image state.\n   * @param {module:ol/events/Event} event Image change event.\n   * @private\n   */\n  LayerRenderer.prototype.handleImageChange_ = function handleImageChange_ (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  };\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {module:ol/ImageBase} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  LayerRenderer.prototype.loadImage = function loadImage (image) {\n    var imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      listen(image, EventType.CHANGE, this.handleImageChange_, this);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  };\n\n  /**\n   * @protected\n   */\n  LayerRenderer.prototype.renderIfReadyAndVisible = function renderIfReadyAndVisible () {\n    var layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @protected\n   */\n  LayerRenderer.prototype.scheduleExpireCache = function scheduleExpireCache (frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {module:ol/source/Tile} tileSource Tile source.\n       * @param {module:ol/PluggableMap} map Map.\n       * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n       */\n      var postRenderFunction = function(tileSource, map, frameState) {\n        var tileSourceKey = getUid(tileSource).toString();\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  };\n\n  /**\n   * @param {!Object<string, !Object<string, module:ol/TileRange>>} usedTiles Used tiles.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {number} z Z.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @protected\n   */\n  LayerRenderer.prototype.updateUsedTiles = function updateUsedTiles (usedTiles, tileSource, z, tileRange) {\n    // FIXME should we use tilesToDrawByZ instead?\n    var tileSourceKey = getUid(tileSource).toString();\n    var zKey = z.toString();\n    if (tileSourceKey in usedTiles) {\n      if (zKey in usedTiles[tileSourceKey]) {\n        usedTiles[tileSourceKey][zKey].extend(tileRange);\n      } else {\n        usedTiles[tileSourceKey][zKey] = tileRange;\n      }\n    } else {\n      usedTiles[tileSourceKey] = {};\n      usedTiles[tileSourceKey][zKey] = tileRange;\n    }\n  };\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/source/Tile} tileSource Tile source.\n   * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(this: T, module:ol/Tile)=} opt_tileCallback Tile callback.\n   * @param {T=} opt_this Object to use as `this` in `opt_tileCallback`.\n   * @protected\n   * @template T\n   */\n  LayerRenderer.prototype.manageTilePyramid = function manageTilePyramid (\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback,\n    opt_this\n  ) {\n    var tileSourceKey = getUid(tileSource).toString();\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    var wantedTiles = frameState.wantedTiles[tileSourceKey];\n    var tileQueue = frameState.tileQueue;\n    var minZoom = tileGrid.getMinZoom();\n    var tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback.call(opt_this, tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  };\n\n  return LayerRenderer;\n}(Observable));\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @param {number} hitTolerance Hit tolerance in pixels.\n * @param {function(this: S, (module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer): T} callback Feature callback.\n * @param {S} thisArg Value to use as `this` when executing `callback`.\n * @return {T|void} Callback result.\n * @template S,T\n */\nLayerRenderer.prototype.forEachFeatureAtCoordinate = VOID;\n\n\n/**\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n * @return {boolean} Is there a feature at the given coordinate?\n */\nLayerRenderer.prototype.hasFeatureAtCoordinate = FALSE;\n\n\nexport default LayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/render/ReplayGroup\n */\n/**\n * Base class for replay groups.\n */\nvar ReplayGroup = function ReplayGroup () {};\n\nReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {};\n\n/**\n * @abstract\n * @return {boolean} Is empty.\n */\nReplayGroup.prototype.isEmpty = function isEmpty () {};\n\nexport default ReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n\n//# sourceMappingURL=Property.js.map","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from '../interaction/Property.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(module:ol/MapBrowserEvent):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return).\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nvar Interaction = (function (BaseObject) {\n  function Interaction(options) {\n    BaseObject.call(this);\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n\n    /**\n     * @type {function(module:ol/MapBrowserEvent):boolean}\n     */\n    this.handleEvent = options.handleEvent;\n\n  }\n\n  if ( BaseObject ) Interaction.__proto__ = BaseObject;\n  Interaction.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Interaction.prototype.constructor = Interaction;\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.getActive = function getActive () {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  };\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {module:ol/PluggableMap} Map.\n   * @api\n   */\n  Interaction.prototype.getMap = function getMap () {\n    return this.map_;\n  };\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  Interaction.prototype.setActive = function setActive (active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  };\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  Interaction.prototype.setMap = function setMap (map) {\n    this.map_ = map;\n  };\n\n  return Interaction;\n}(BaseObject));\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {module:ol/coordinate~Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  var currentCenter = view.getCenter();\n  if (currentCenter) {\n    var center = view.constrainCenter(\n      [currentCenter[0] + delta[0], currentCenter[1] + delta[1]]);\n    if (opt_duration) {\n      view.animate({\n        duration: opt_duration,\n        easing: linear,\n        center: center\n      });\n    } else {\n      view.setCenter(center);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotate(view, rotation, opt_anchor, opt_duration) {\n  rotation = view.constrainRotation(rotation, 0);\n  rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} rotation Rotation.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function rotateWithoutConstraints(view, rotation, opt_anchor, opt_duration) {\n  if (rotation !== undefined) {\n    var currentRotation = view.getRotation();\n    var currentCenter = view.getCenter();\n    if (currentRotation !== undefined && currentCenter && opt_duration > 0) {\n      view.animate({\n        rotation: rotation,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      view.rotate(rotation, opt_anchor);\n    }\n  }\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n * @param {number=} opt_direction Zooming direction; > 0 indicates\n *     zooming out, in which case the constraints system will select\n *     the largest nearest resolution; < 0 indicates zooming in, in\n *     which case the constraints system will select the smallest\n *     nearest resolution; == 0 indicates that the zooming direction\n *     is unknown/not relevant, in which case the constraints system\n *     will select the nearest resolution. If not defined 0 is\n *     assumed.\n */\nexport function zoom(view, resolution, opt_anchor, opt_duration, opt_direction) {\n  resolution = view.constrainResolution(resolution, 0, opt_direction);\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  var currentResolution = view.getResolution();\n  var resolution = view.constrainResolution(currentResolution, delta, 0);\n\n  if (resolution !== undefined) {\n    var resolutions = view.getResolutions();\n    resolution = clamp(\n      resolution,\n      view.getMinResolution() || resolutions[resolutions.length - 1],\n      view.getMaxResolution() || resolutions[0]);\n  }\n\n  // If we have a constraint on center, we need to change the anchor so that the\n  // new center is within the extent. We first calculate the new center, apply\n  // the constraint to it, and then calculate back the anchor\n  if (opt_anchor && resolution !== undefined && resolution !== currentResolution) {\n    var currentCenter = view.getCenter();\n    var center = view.calculateCenterZoom(resolution, opt_anchor);\n    center = view.constrainCenter(center);\n\n    opt_anchor = [\n      (resolution * currentCenter[0] - currentResolution * center[0]) /\n          (resolution - currentResolution),\n      (resolution * currentCenter[1] - currentResolution * center[1]) /\n          (resolution - currentResolution)\n    ];\n  }\n\n  zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration);\n}\n\n\n/**\n * @param {module:ol/View} view View.\n * @param {number|undefined} resolution Resolution to go to.\n * @param {module:ol/coordinate~Coordinate=} opt_anchor Anchor coordinate.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomWithoutConstraints(view, resolution, opt_anchor, opt_duration) {\n  if (resolution) {\n    var currentResolution = view.getResolution();\n    var currentCenter = view.getCenter();\n    if (currentResolution !== undefined && currentCenter &&\n        resolution !== currentResolution && opt_duration) {\n      view.animate({\n        resolution: resolution,\n        anchor: opt_anchor,\n        duration: opt_duration,\n        easing: easeOut\n      });\n    } else {\n      if (opt_anchor) {\n        var center = view.calculateCenterZoom(resolution, opt_anchor);\n        view.setCenter(center);\n      }\n      view.setResolution(resolution);\n    }\n  }\n}\n\nexport default Interaction;\n\n//# sourceMappingURL=Interaction.js.map","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nvar DoubleClickZoom = (function (Interaction) {\n  function DoubleClickZoom(opt_options) {\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( Interaction ) DoubleClickZoom.__proto__ = Interaction;\n  DoubleClickZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  DoubleClickZoom.prototype.constructor = DoubleClickZoom;\n\n  return DoubleClickZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  var browserEvent = mapBrowserEvent.originalEvent;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    var map = mapBrowserEvent.map;\n    var anchor = mapBrowserEvent.coordinate;\n    var delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    var view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n\n//# sourceMappingURL=DoubleClickZoom.js.map","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, module:ol/MapBrowserEvent): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport var altKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport var altShiftKeysOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {module:ol/MapBrowserEvent} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport var focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @function\n * @api\n */\nexport var always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport var click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport var mouseActionButton = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @function\n * @api\n */\nexport var never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport var pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport var singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport var doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport var noModifierKeys = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport var platformModifierKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport var shiftKeyOnly = function(mapBrowserEvent) {\n  var originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport var targetNotEditable = function(mapBrowserEvent) {\n  var target = mapBrowserEvent.originalEvent.target;\n  var tagName = target.tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport var mouseOnly = function(mapBrowserEvent) {\n  assert(mapBrowserEvent.pointerEvent, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return (\n    /** @type {module:ol/MapBrowserEvent} */ (mapBrowserEvent).pointerEvent.pointerType == 'mouse'\n  );\n};\n\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport var primaryAction = function(mapBrowserEvent) {\n  var pointerEvent = mapBrowserEvent.pointerEvent;\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n\n//# sourceMappingURL=condition.js.map","/**\n * @module ol/interaction/Pointer\n */\nimport {FALSE, VOID} from '../functions.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport Interaction from '../interaction/Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDragEvent = VOID;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleUpEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Capture dragging.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleDownEvent = FALSE;\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/Pointer}\n */\nvar handleMoveEvent = VOID;\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(module:ol/MapBrowserEvent):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(module:ol/MapBrowserPointerEvent)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events,\n * also during a drag sequence (so during a drag sequence both the\n * `handleDragEvent` function and this function are called).\n * @property {function(module:ol/MapBrowserPointerEvent):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} stopDown\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nvar PointerInteraction = (function (Interaction) {\n  function PointerInteraction(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Interaction.call(this, {\n      handleEvent: options.handleEvent || handleEvent\n    });\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleDownEvent_ = options.handleDownEvent ?\n      options.handleDownEvent : handleDownEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleDragEvent_ = options.handleDragEvent ?\n      options.handleDragEvent : handleDragEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent)}\n     * @private\n     */\n    this.handleMoveEvent_ = options.handleMoveEvent ?\n      options.handleMoveEvent : handleMoveEvent;\n\n    /**\n     * @type {function(module:ol/MapBrowserPointerEvent):boolean}\n     * @private\n     */\n    this.handleUpEvent_ = options.handleUpEvent ?\n      options.handleUpEvent : handleUpEvent;\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * This function is used to determine if \"down\" events should be propagated\n     * to other interactions or should be stopped.\n     * @type {function(boolean):boolean}\n     * @protected\n     */\n    this.stopDown = options.stopDown ? options.stopDown : stopDown;\n\n    /**\n     * @type {!Object<string, module:ol/pointer/PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<module:ol/pointer/PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  if ( Interaction ) PointerInteraction.__proto__ = Interaction;\n  PointerInteraction.prototype = Object.create( Interaction && Interaction.prototype );\n  PointerInteraction.prototype.constructor = PointerInteraction;\n\n  /**\n   * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n   * @private\n   */\n  PointerInteraction.prototype.updateTrackedPointers_ = function updateTrackedPointers_ (mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      var event = mapBrowserEvent.pointerEvent;\n\n      var id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  };\n\n  return PointerInteraction;\n}(Interaction));\n\n\n/**\n * @param {Array<module:ol/pointer/PointerEvent>} pointerEvents List of events.\n * @return {module:ol/pixel~Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  var length = pointerEvents.length;\n  var clientX = 0;\n  var clientY = 0;\n  for (var i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  var type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n * detected.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Pointer}\n * @api\n */\nexport function handleEvent(mapBrowserEvent) {\n  if (!(mapBrowserEvent instanceof MapBrowserPointerEvent)) {\n    return true;\n  }\n\n  var stopEvent = false;\n  this.updateTrackedPointers_(mapBrowserEvent);\n  if (this.handlingDownUpSequence) {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n      this.handleDragEvent_(mapBrowserEvent);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n      var handledUp = this.handleUpEvent_(mapBrowserEvent);\n      this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n    }\n  } else {\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n      var handled = this.handleDownEvent_(mapBrowserEvent);\n      if (handled) {\n        mapBrowserEvent.preventDefault();\n      }\n      this.handlingDownUpSequence = handled;\n      stopEvent = this.stopDown(handled);\n    } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n      this.handleMoveEvent_(mapBrowserEvent);\n    }\n  }\n  return !stopEvent;\n}\n\n\nexport default PointerInteraction;\n\n/**\n * @param {boolean} handled Was the event handled by the interaction?\n * @return {boolean} Should the `down` event be stopped?\n */\nfunction stopDown(handled) {\n  return handled;\n}\n\n//# sourceMappingURL=Pointer.js.map","/**\n * @module ol/interaction/DragPan\n */\nimport ViewHint from '../ViewHint.js';\nimport {scale as scaleCoordinate, rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys}.\n * @property {module:ol/Kinetic} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nvar DragPan = (function (PointerInteraction) {\n  function DragPan(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/Kinetic|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  if ( PointerInteraction ) DragPan.__proto__ = PointerInteraction;\n  DragPan.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragPan.prototype.constructor = DragPan;\n\n  return DragPan;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!this.panning_) {\n    this.panning_ = true;\n    this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n  }\n  var targetPointers = this.targetPointers;\n  var centroid = centroidFromPointers(targetPointers);\n  if (targetPointers.length == this.lastPointersCount_) {\n    if (this.kinetic_) {\n      this.kinetic_.update(centroid[0], centroid[1]);\n    }\n    if (this.lastCentroid) {\n      var deltaX = this.lastCentroid[0] - centroid[0];\n      var deltaY = centroid[1] - this.lastCentroid[1];\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var center = [deltaX, deltaY];\n      scaleCoordinate(center, view.getResolution());\n      rotateCoordinate(center, view.getRotation());\n      addCoordinate(center, view.getCenter());\n      center = view.constrainCenter(center);\n      view.setCenter(center);\n    }\n  } else if (this.kinetic_) {\n    // reset so we don't overestimate the kinetic energy after\n    // after one finger down, tiny drag, second finger down\n    this.kinetic_.begin();\n  }\n  this.lastCentroid = centroid;\n  this.lastPointersCount_ = targetPointers.length;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (this.targetPointers.length === 0) {\n    if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n      var distance = this.kinetic_.getDistance();\n      var angle = this.kinetic_.getAngle();\n      var center = /** @type {!module:ol/coordinate~Coordinate} */ (view.getCenter());\n      var centerpx = map.getPixelFromCoordinate(center);\n      var dest = map.getCoordinateFromPixel([\n        centerpx[0] - distance * Math.cos(angle),\n        centerpx[1] - distance * Math.sin(angle)\n      ]);\n      view.animate({\n        center: view.constrainCenter(dest),\n        duration: 500,\n        easing: easeOut\n      });\n    }\n    if (this.panning_) {\n      this.panning_ = false;\n      view.setHint(ViewHint.INTERACTING, -1);\n    }\n    return false;\n  } else {\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragPan}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    this.lastCentroid = null;\n    // stop any current animation\n    if (view.getAnimating()) {\n      view.setCenter(mapBrowserEvent.frameState.viewState.center);\n    }\n    if (this.kinetic_) {\n      this.kinetic_.begin();\n    }\n    // No kinetic as soon as more than one pointer on the screen is\n    // detected. This is to prevent nasty pans after pinch.\n    this.noKinetic_ = this.targetPointers.length > 1;\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragPan;\n\n//# sourceMappingURL=DragPan.js.map","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport ViewHint from '../ViewHint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nvar DragRotate = (function (PointerInteraction) {\n  function DragRotate(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) DragRotate.__proto__ = PointerInteraction;\n  DragRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragRotate.prototype.constructor = DragRotate;\n\n  return DragRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n  var size = map.getSize();\n  var offset = mapBrowserEvent.pixel;\n  var theta =\n      Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n  if (this.lastAngle_ !== undefined) {\n    var delta = theta - this.lastAngle_;\n    var rotation = view.getRotation();\n    rotateWithoutConstraints(view, rotation - delta);\n  }\n  this.lastAngle_ = theta;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  view.setHint(ViewHint.INTERACTING, -1);\n  var rotation = view.getRotation();\n  rotate(view, rotation, undefined, this.duration_);\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n    var map = mapBrowserEvent.map;\n    map.getView().setHint(ViewHint.INTERACTING, 1);\n    this.lastAngle_ = undefined;\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default DragRotate;\n\n//# sourceMappingURL=DragRotate.js.map","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nvar RenderBox = (function (Disposable) {\n  function RenderBox(className) {\n    Disposable.call(this);\n\n    /**\n     * @type {module:ol/geom/Polygon}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = /** @type {HTMLDivElement} */ (document.createElement('div'));\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {module:ol/PluggableMap}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/pixel~Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  if ( Disposable ) RenderBox.__proto__ = Disposable;\n  RenderBox.prototype = Object.create( Disposable && Disposable.prototype );\n  RenderBox.prototype.constructor = RenderBox;\n\n  /**\n   * @inheritDoc\n   */\n  RenderBox.prototype.disposeInternal = function disposeInternal () {\n    this.setMap(null);\n  };\n\n  /**\n   * @private\n   */\n  RenderBox.prototype.render_ = function render_ () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var px = 'px';\n    var style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  RenderBox.prototype.setMap = function setMap (map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      var style = this.element_.style;\n      style.left = style.top = style.width = style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  };\n\n  /**\n   * @param {module:ol/pixel~Pixel} startPixel Start pixel.\n   * @param {module:ol/pixel~Pixel} endPixel End pixel.\n   */\n  RenderBox.prototype.setPixels = function setPixels (startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  };\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  RenderBox.prototype.createOrUpdateGeometry = function createOrUpdateGeometry () {\n    var startPixel = this.startPixel_;\n    var endPixel = this.endPixel_;\n    var pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    var coordinates = pixels.map(this.map_.getCoordinateFromPixel, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  };\n\n  /**\n   * @return {module:ol/geom/Polygon} Geometry.\n   */\n  RenderBox.prototype.getGeometry = function getGeometry () {\n    return this.geometry_;\n  };\n\n  return RenderBox;\n}(Disposable));\n\n\nexport default RenderBox;\n\n//# sourceMappingURL=Box.js.map","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from '../interaction/Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, module:ol/MapBrowserEvent, module:ol/pixel~Pixel, module:ol/pixel~Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {module:ol/events/condition~Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {module:ol/interaction/DragBox~EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)} onBoxEnd Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nvar DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event module:ol/interaction/DragBox~DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nvar DragBoxEvent = (function (Event) {\n  function DragBoxEvent(type, coordinate, mapBrowserEvent) {\n    Event.call(this, type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {module:ol/coordinate~Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n  if ( Event ) DragBoxEvent.__proto__ = Event;\n  DragBoxEvent.prototype = Object.create( Event && Event.prototype );\n  DragBoxEvent.prototype.constructor = DragBoxEvent;\n\n  return DragBoxEvent;\n}(Event));\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires module:ol/interaction/DragBox~DragBoxEvent\n * @api\n */\nvar DragBox = (function (PointerInteraction) {\n  function DragBox(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n    * @type {module:ol/render/Box}\n    * @private\n    */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:module:ol/interaction/DragBox, module:ol/MapBrowserEvent)}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n    * @type {module:ol/pixel~Pixel}\n    * @private\n    */\n    this.startPixel_ = null;\n\n    /**\n    * @private\n    * @type {module:ol/events/condition~Condition}\n    */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n    * @private\n    * @type {module:ol/interaction/DragBox~EndCondition}\n    */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : defaultBoxEndCondition;\n  }\n\n  if ( PointerInteraction ) DragBox.__proto__ = PointerInteraction;\n  DragBox.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  DragBox.prototype.constructor = DragBox;\n\n  /**\n  * Returns geometry of last drawn box.\n  * @return {module:ol/geom/Polygon} Geometry.\n  * @api\n  */\n  DragBox.prototype.getGeometry = function getGeometry () {\n    return this.box_.getGeometry();\n  };\n\n  return DragBox;\n}(PointerInteraction));\n\n\n/**\n * The default condition for determining whether the boxend event\n * should fire.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent The originating MapBrowserEvent\n *     leading to the box end.\n * @param {module:ol/pixel~Pixel} startPixel The starting pixel of the box.\n * @param {module:ol/pixel~Pixel} endPixel The end pixel of the box.\n * @return {boolean} Whether or not the boxend condition should be fired.\n * @this {module:ol/interaction/DragBox}\n */\nfunction defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n  var width = endPixel[0] - startPixel[0];\n  var height = endPixel[1] - startPixel[1];\n  return width * width + height * height >= this.minArea_;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return;\n  }\n\n  this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n  this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n    mapBrowserEvent.coordinate, mapBrowserEvent));\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return true;\n  }\n\n  this.box_.setMap(null);\n\n  if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n    this.onBoxEnd_(mapBrowserEvent);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n  return false;\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/DragBox}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (!mouseOnly(mapBrowserEvent)) {\n    return false;\n  }\n\n  if (mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)) {\n    this.startPixel_ = mapBrowserEvent.pixel;\n    this.box_.setMap(mapBrowserEvent.map);\n    this.box_.setPixels(this.startPixel_, this.startPixel_);\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n    return true;\n  } else {\n    return false;\n  }\n}\n\n\nexport default DragBox;\n\n//# sourceMappingURL=DragBox.js.map","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from '../interaction/DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nvar DragZoom = (function (DragBox) {\n  function DragZoom(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var condition = options.condition ? options.condition : shiftKeyOnly;\n\n    DragBox.call(this, {\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  if ( DragBox ) DragZoom.__proto__ = DragBox;\n  DragZoom.prototype = Object.create( DragBox && DragBox.prototype );\n  DragZoom.prototype.constructor = DragZoom;\n\n  return DragZoom;\n}(DragBox));\n\n\n/**\n * @this {module:ol/interaction/DragZoom}\n */\nfunction onBoxEnd() {\n  var map = this.getMap();\n  var view = /** @type {!module:ol/View} */ (map.getView());\n  var size = /** @type {!module:ol/size~Size} */ (map.getSize());\n  var extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    var mapExtent = view.calculateExtent(size);\n    var boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinate(getBottomLeft(extent)),\n      map.getPixelFromCoordinate(getTopRight(extent))]);\n    var factor = view.getResolutionForExtent(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  var resolution = view.constrainResolution(\n    view.getResolutionForExtent(extent, size));\n\n  var center = getCenter(extent);\n  center = view.constrainCenter(center);\n\n  view.animate({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n\n//# sourceMappingURL=DragZoom.js.map","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n\n//# sourceMappingURL=KeyCode.js.map","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nvar KeyboardPan = (function (Interaction) {\n  function KeyboardPan(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @param {module:ol/MapBrowserEvent} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n  if ( Interaction ) KeyboardPan.__proto__ = Interaction;\n  KeyboardPan.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardPan.prototype.constructor = KeyboardPan;\n\n  return KeyboardPan;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      var map = mapBrowserEvent.map;\n      var view = map.getView();\n      var mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      var deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      var delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n\n//# sourceMappingURL=KeyboardPan.js.map","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link moudle:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nvar KeyboardZoom = (function (Interaction) {\n  function KeyboardZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n  if ( Interaction ) KeyboardZoom.__proto__ = Interaction;\n  KeyboardZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  KeyboardZoom.prototype.constructor = KeyboardZoom;\n\n  return KeyboardZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  var stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    var keyEvent = mapBrowserEvent.originalEvent;\n    var charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      var map = mapBrowserEvent.map;\n      var delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      var view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n\n//# sourceMappingURL=KeyboardZoom.js.map","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {always} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX, SAFARI} from '../has.js';\nimport Interaction, {zoomByDelta} from '../interaction/Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * Maximum mouse wheel delta.\n * @type {number}\n */\nvar MAX_DELTA = 1;\n\n\n/**\n * @enum {string}\n */\nexport var Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [constrainResolution=false] When using a trackpad or\n * magic mouse, zoom to the closest integer zoom level after the scroll gesture\n * ends.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nvar MouseWheelZoom = (function (Interaction) {\n  function MouseWheelZoom(opt_options) {\n\n    Interaction.call(this, {\n      handleEvent: handleEvent\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?module:ol/coordinate~Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.timeoutId_ = undefined;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/MouseWheelZoom~Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {number|undefined}\n     */\n    this.trackpadTimeoutId_ = undefined;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n    /**\n     * The zoom factor by which scroll zooming is allowed to exceed the limits.\n     * @private\n     * @type {number}\n     */\n    this.trackpadZoomBuffer_ = 1.5;\n\n  }\n\n  if ( Interaction ) MouseWheelZoom.__proto__ = Interaction;\n  MouseWheelZoom.prototype = Object.create( Interaction && Interaction.prototype );\n  MouseWheelZoom.prototype.constructor = MouseWheelZoom;\n\n  /**\n   * @private\n   */\n  MouseWheelZoom.prototype.decrementInteractingHint_ = function decrementInteractingHint_ () {\n    this.trackpadTimeoutId_ = undefined;\n    var view = this.getMap().getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/PluggableMap} map Map.\n   */\n  MouseWheelZoom.prototype.handleWheelZoom_ = function handleWheelZoom_ (map) {\n    var view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    var maxDelta = MAX_DELTA;\n    var delta = clamp(this.delta_, -maxDelta, maxDelta);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.delta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  };\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  MouseWheelZoom.prototype.setMouseAnchor = function setMouseAnchor (useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  };\n\n  return MouseWheelZoom;\n}(Interaction));\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * mousewheel-event) and eventually zooms the map.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} Allow event propagation.\n * @this {module:ol/interaction/MouseWheelZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  var type = mapBrowserEvent.type;\n  if (type !== EventType.WHEEL && type !== EventType.MOUSEWHEEL) {\n    return true;\n  }\n\n  mapBrowserEvent.preventDefault();\n\n  var map = mapBrowserEvent.map;\n  var wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n  if (this.useAnchor_) {\n    this.lastAnchor_ = mapBrowserEvent.coordinate;\n  }\n\n  // Delta normalisation inspired by\n  // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n  var delta;\n  if (mapBrowserEvent.type == EventType.WHEEL) {\n    delta = wheelEvent.deltaY;\n    if (FIREFOX &&\n        wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n      delta /= DEVICE_PIXEL_RATIO;\n    }\n    if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n      delta *= 40;\n    }\n  } else if (mapBrowserEvent.type == EventType.MOUSEWHEEL) {\n    delta = -wheelEvent.wheelDeltaY;\n    if (SAFARI) {\n      delta /= 3;\n    }\n  }\n\n  if (delta === 0) {\n    return false;\n  }\n\n  var now = Date.now();\n\n  if (this.startTime_ === undefined) {\n    this.startTime_ = now;\n  }\n\n  if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n    this.mode_ = Math.abs(delta) < 4 ?\n      Mode.TRACKPAD :\n      Mode.WHEEL;\n  }\n\n  if (this.mode_ === Mode.TRACKPAD) {\n    var view = map.getView();\n    if (this.trackpadTimeoutId_) {\n      clearTimeout(this.trackpadTimeoutId_);\n    } else {\n      view.setHint(ViewHint.INTERACTING, 1);\n    }\n    this.trackpadTimeoutId_ = setTimeout(this.decrementInteractingHint_.bind(this), this.trackpadEventGap_);\n    var resolution = view.getResolution() * Math.pow(2, delta / this.trackpadDeltaPerZoom_);\n    var minResolution = view.getMinResolution();\n    var maxResolution = view.getMaxResolution();\n    var rebound = 0;\n    if (resolution < minResolution) {\n      resolution = Math.max(resolution, minResolution / this.trackpadZoomBuffer_);\n      rebound = 1;\n    } else if (resolution > maxResolution) {\n      resolution = Math.min(resolution, maxResolution * this.trackpadZoomBuffer_);\n      rebound = -1;\n    }\n    if (this.lastAnchor_) {\n      var center = view.calculateCenterZoom(resolution, this.lastAnchor_);\n      view.setCenter(view.constrainCenter(center));\n    }\n    view.setResolution(resolution);\n\n    if (rebound === 0 && this.constrainResolution_) {\n      view.animate({\n        resolution: view.constrainResolution(resolution, delta > 0 ? -1 : 1),\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: this.duration_\n      });\n    }\n\n    if (rebound > 0) {\n      view.animate({\n        resolution: minResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    } else if (rebound < 0) {\n      view.animate({\n        resolution: maxResolution,\n        easing: easeOut,\n        anchor: this.lastAnchor_,\n        duration: 500\n      });\n    }\n    this.startTime_ = now;\n    return false;\n  }\n\n  this.delta_ += delta;\n\n  var timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n  clearTimeout(this.timeoutId_);\n  this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n  return false;\n}\n\n\nexport default MouseWheelZoom;\n\n//# sourceMappingURL=MouseWheelZoom.js.map","/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchRotate = (function (PointerInteraction) {\n  function PinchRotate(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  if ( PointerInteraction ) PinchRotate.__proto__ = PointerInteraction;\n  PinchRotate.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchRotate.prototype.constructor = PinchRotate;\n\n  return PinchRotate;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var rotationDelta = 0.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n\n  // angle between touches\n  var angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    var delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    var rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      var rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n\n//# sourceMappingURL=PinchRotate.js.map","/**\n * @module ol/interaction/PinchZoom\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {zoom, zoomWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the pinch gesture ends.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nvar PinchZoom = (function (PointerInteraction) {\n  function PinchZoom(opt_options) {\n\n    PointerInteraction.call(this, {\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ = options.constrainResolution || false;\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  if ( PointerInteraction ) PinchZoom.__proto__ = PointerInteraction;\n  PinchZoom.prototype = Object.create( PointerInteraction && PointerInteraction.prototype );\n  PinchZoom.prototype.constructor = PinchZoom;\n\n  return PinchZoom;\n}(PointerInteraction));\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  var scaleDelta = 1.0;\n\n  var touch0 = this.targetPointers[0];\n  var touch1 = this.targetPointers[1];\n  var dx = touch0.clientX - touch1.clientX;\n  var dy = touch0.clientY - touch1.clientY;\n\n  // distance between touches\n  var distance = Math.sqrt(dx * dx + dy * dy);\n\n  if (this.lastDistance_ !== undefined) {\n    scaleDelta = this.lastDistance_ / distance;\n  }\n  this.lastDistance_ = distance;\n\n\n  var map = mapBrowserEvent.map;\n  var view = map.getView();\n  var resolution = view.getResolution();\n  var maxResolution = view.getMaxResolution();\n  var minResolution = view.getMinResolution();\n  var newResolution = resolution * scaleDelta;\n  if (newResolution > maxResolution) {\n    scaleDelta = maxResolution / resolution;\n    newResolution = maxResolution;\n  } else if (newResolution < minResolution) {\n    scaleDelta = minResolution / resolution;\n    newResolution = minResolution;\n  }\n\n  if (scaleDelta != 1.0) {\n    this.lastScaleDelta_ = scaleDelta;\n  }\n\n  // scale anchor point.\n  var viewportPosition = map.getViewport().getBoundingClientRect();\n  var centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // scale, bypass the resolution constraint\n  map.render();\n  zoomWithoutConstraints(view, newResolution, this.anchor_);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    var map = mapBrowserEvent.map;\n    var view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    var resolution = view.getResolution();\n    if (this.constrainResolution_ ||\n        resolution < view.getMinResolution() ||\n        resolution > view.getMaxResolution()) {\n      // Zoom to final resolution, with an animation, and provide a\n      // direction not to zoom out/in if user was pinching in/out.\n      // Direction is > 0 if pinching out, and < 0 if pinching in.\n      var direction = this.lastScaleDelta_ - 1;\n      zoom(view, resolution, this.anchor_, this.duration_, direction);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchZoom}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    var map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastDistance_ = undefined;\n    this.lastScaleDelta_ = 1;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchZoom;\n\n//# sourceMappingURL=PinchZoom.js.map","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [constrainResolution=false] Zoom to the closest integer\n * zoom level after the wheel/trackpad or pinch gesture ends.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or\n * mousewheel zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. The default set of\n * interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options\n * Defaults options.\n * @return {module:ol/Collection<module:ol/interaction/Interaction>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  var options = opt_options ? opt_options : {};\n\n  var interactions = new Collection();\n\n  var kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  var altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  var doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  var pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  var pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      constrainResolution: options.constrainResolution,\n      duration: options.zoomDuration\n    }));\n  }\n\n  var shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n\n//# sourceMappingURL=interaction.js.map","/**\n * @module ol/layer/Image\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {module:ol/source/Image} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar ImageLayer = (function (Layer) {\n  function ImageLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n    Layer.call(this, options);\n\n    /**\n     * The layer type.\n     * @protected\n     * @type {module:ol/LayerType}\n     */\n    this.type = LayerType.IMAGE;\n\n  }\n\n  if ( Layer ) ImageLayer.__proto__ = Layer;\n  ImageLayer.prototype = Object.create( Layer && Layer.prototype );\n  ImageLayer.prototype.constructor = ImageLayer;\n\n  return ImageLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Image source} of the image layer.\n * @function\n * @return {module:ol/source/Image} Source.\n * @api\n */\nImageLayer.prototype.getSource;\nexport default ImageLayer;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/layer/Tile\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/source/Tile} [source] Source for this layer.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar TileLayer = (function (Layer) {\n  function TileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    Layer.call(this, baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.TILE;\n\n  }\n\n  if ( Layer ) TileLayer.__proto__ = Layer;\n  TileLayer.prototype = Object.create( Layer && Layer.prototype );\n  TileLayer.prototype.constructor = TileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  TileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return TileLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Tile tilesource} of the layer.\n * @function\n * @return {module:ol/source/Tile} Source.\n * @api\n */\nTileLayer.prototype.getSource;\n\n\nexport default TileLayer;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : module:ol/Tile} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nvar ReprojTile = (function (Tile) {\n  function ReprojTile(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    var this$1 = this;\n\n    Tile.call(this, tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<module:ol/Tile>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    var targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    var maxTargetExtent = this.targetTileGrid_.getExtent();\n    var maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    var targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    var errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    var sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      var sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (var srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (var srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          var tile = getTileFunction(this$1.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this$1.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  if ( Tile ) ReprojTile.__proto__ = Tile;\n  ReprojTile.prototype = Object.create( Tile && Tile.prototype );\n  ReprojTile.prototype.constructor = ReprojTile;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  ReprojTile.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.reproject_ = function reproject_ () {\n    var sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      var z = this.wrappedTileCoord_[0];\n      var size = this.targetTileGrid_.getTileSize(z);\n      var width = typeof size === 'number' ? size : size[0];\n      var height = typeof size === 'number' ? size : size[1];\n      var targetResolution = this.targetTileGrid_.getResolution(z);\n      var sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      var targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      var leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          var sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              var state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        var state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojTile.prototype.unlistenSources_ = function unlistenSources_ () {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  };\n\n  return ReprojTile;\n}(Tile));\n\n\nexport default ReprojTile;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  var zRegEx = /\\{z\\}/g;\n  var xRegEx = /\\{x\\}/g;\n  var yRegEx = /\\{y\\}/g;\n  var dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, function() {\n            var y = -tileCoord[2] - 1;\n            return y.toString();\n          })\n          .replace(dashYRegEx, function() {\n            var z = tileCoord[0];\n            var range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            var y = range.getHeight() + tileCoord[2];\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  var len = templates.length;\n  var tileUrlFunctions = new Array(len);\n  for (var i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<module:ol/Tile~UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {module:ol/Tile~UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {module:ol/tilecoord~TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {module:ol/proj/Projection} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        var h = tileCoordHash(tileCoord);\n        var index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  var urls = [];\n  var match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    var startCharCode = match[1].charCodeAt(0);\n    var stopCharCode = match[2].charCodeAt(0);\n    var charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    var stop = parseInt(match[2], 10);\n    for (var i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n\n//# sourceMappingURL=tileurlfunction.js.map","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {module:ol/tilecoord~TileCoord}\n */\nvar tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {module:ol/coordinate~Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<module:ol/coordinate~Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<module:ol/size~Size>} [sizes] Sizes.\n * @property {number|module:ol/size~Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<module:ol/size~Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nvar TileGrid = function TileGrid(options) {\n  var this$1 = this;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n  /**\n   * @private\n   * @type {!Array<number>}\n   */\n  this.resolutions_ = options.resolutions;\n  assert(isSorted(this.resolutions_, function(a, b) {\n    return b - a;\n  }, true), 17); // `resolutions` must be sorted in descending order\n\n\n  // check if we've got a consistent zoom factor and origin\n  var zoomFactor;\n  if (!options.origins) {\n    for (var i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n      if (!zoomFactor) {\n        zoomFactor = this$1.resolutions_[i] / this$1.resolutions_[i + 1];\n      } else {\n        if (this$1.resolutions_[i] / this$1.resolutions_[i + 1] !== zoomFactor) {\n          zoomFactor = undefined;\n          break;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * @private\n   * @type {number|undefined}\n   */\n  this.zoomFactor_ = zoomFactor;\n\n\n  /**\n   * @protected\n   * @type {number}\n   */\n  this.maxZoom = this.resolutions_.length - 1;\n\n  /**\n   * @private\n   * @type {module:ol/coordinate~Coordinate}\n   */\n  this.origin_ = options.origin !== undefined ? options.origin : null;\n\n  /**\n   * @private\n   * @type {Array<module:ol/coordinate~Coordinate>}\n   */\n  this.origins_ = null;\n  if (options.origins !== undefined) {\n    this.origins_ = options.origins;\n    assert(this.origins_.length == this.resolutions_.length,\n      20); // Number of `origins` and `resolutions` must be equal\n  }\n\n  var extent = options.extent;\n\n  if (extent !== undefined &&\n      !this.origin_ && !this.origins_) {\n    this.origin_ = getTopLeft(extent);\n  }\n\n  assert(\n    (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n    18); // Either `origin` or `origins` must be configured, never both\n\n  /**\n   * @private\n   * @type {Array<number|module:ol/size~Size>}\n   */\n  this.tileSizes_ = null;\n  if (options.tileSizes !== undefined) {\n    this.tileSizes_ = options.tileSizes;\n    assert(this.tileSizes_.length == this.resolutions_.length,\n      19); // Number of `tileSizes` and `resolutions` must be equal\n  }\n\n  /**\n   * @private\n   * @type {number|module:ol/size~Size}\n   */\n  this.tileSize_ = options.tileSize !== undefined ?\n    options.tileSize :\n    !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n  assert(\n    (!this.tileSize_ && this.tileSizes_) ||\n      (this.tileSize_ && !this.tileSizes_),\n    22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n  /**\n   * @private\n   * @type {module:ol/extent~Extent}\n   */\n  this.extent_ = extent !== undefined ? extent : null;\n\n\n  /**\n   * @private\n   * @type {Array<module:ol/TileRange>}\n   */\n  this.fullTileRanges_ = null;\n\n  /**\n   * @private\n   * @type {module:ol/size~Size}\n   */\n  this.tmpSize_ = [0, 0];\n\n  if (options.sizes !== undefined) {\n    this.fullTileRanges_ = options.sizes.map(function(size, z) {\n      var tileRange = new TileRange(\n        Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n        Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n      return tileRange;\n    }, this);\n  } else if (extent) {\n    this.calculateTileRanges_(extent);\n  }\n\n};\n\n/**\n * Call a function with each tile coordinate for a given extent and zoom level.\n *\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} zoom Integer zoom level.\n * @param {function(module:ol/tilecoord~TileCoord)} callback Function called with each tile coordinate.\n * @api\n */\nTileGrid.prototype.forEachTileCoord = function forEachTileCoord (extent, zoom, callback) {\n  var tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n  for (var i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n    for (var j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n      callback([zoom, i, j]);\n    }\n  }\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {function(this: T, number, module:ol/TileRange): boolean} callback Callback.\n * @param {T=} opt_this The object to use as `this` in `callback`.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {boolean} Callback succeeded.\n * @template T\n */\nTileGrid.prototype.forEachTileCoordParentTileRange = function forEachTileCoordParentTileRange (tileCoord, callback, opt_this, opt_tileRange, opt_extent) {\n    var this$1 = this;\n\n  var tileRange, x, y;\n  var tileCoordExtent = null;\n  var z = tileCoord[0] - 1;\n  if (this.zoomFactor_ === 2) {\n    x = tileCoord[1];\n    y = tileCoord[2];\n  } else {\n    tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n  }\n  while (z >= this.minZoom) {\n    if (this$1.zoomFactor_ === 2) {\n      x = Math.floor(x / 2);\n      y = Math.floor(y / 2);\n      tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n    } else {\n      tileRange = this$1.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n    }\n    if (callback.call(opt_this, z, tileRange)) {\n      return true;\n    }\n    --z;\n  }\n  return false;\n};\n\n/**\n * Get the extent for this tile grid, if it was configured.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getExtent = function getExtent () {\n  return this.extent_;\n};\n\n/**\n * Get the maximum zoom level for the grid.\n * @return {number} Max zoom.\n * @api\n */\nTileGrid.prototype.getMaxZoom = function getMaxZoom () {\n  return this.maxZoom;\n};\n\n/**\n * Get the minimum zoom level for the grid.\n * @return {number} Min zoom.\n * @api\n */\nTileGrid.prototype.getMinZoom = function getMinZoom () {\n  return this.minZoom;\n};\n\n/**\n * Get the origin for the grid at the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {module:ol/coordinate~Coordinate} Origin.\n * @api\n */\nTileGrid.prototype.getOrigin = function getOrigin (z) {\n  if (this.origin_) {\n    return this.origin_;\n  } else {\n    return this.origins_[z];\n  }\n};\n\n/**\n * Get the resolution for the given zoom level.\n * @param {number} z Integer zoom level.\n * @return {number} Resolution.\n * @api\n */\nTileGrid.prototype.getResolution = function getResolution (z) {\n  return this.resolutions_[z];\n};\n\n/**\n * Get the list of resolutions for the tile grid.\n * @return {Array<number>} Resolutions.\n * @api\n */\nTileGrid.prototype.getResolutions = function getResolutions () {\n  return this.resolutions_;\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/TileRange=} opt_tileRange Temporary module:ol/TileRange object.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileCoordChildTileRange = function getTileCoordChildTileRange (tileCoord, opt_tileRange, opt_extent) {\n  if (tileCoord[0] < this.maxZoom) {\n    if (this.zoomFactor_ === 2) {\n      var minX = tileCoord[1] * 2;\n      var minY = tileCoord[2] * 2;\n      return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n    }\n    var tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    return this.getTileRangeForExtentAndZ(\n      tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n  }\n  return null;\n};\n\n/**\n * Get the extent for a tile range.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange} tileRange Tile range.\n * @param {module:ol/extent~Extent=} opt_extent Temporary module:ol/extent~Extent object.\n * @return {module:ol/extent~Extent} Extent.\n */\nTileGrid.prototype.getTileRangeExtent = function getTileRangeExtent (z, tileRange, opt_extent) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n  var minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n  var maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n  var minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n  var maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get a tile range for the given extent and integer zoom level.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} z Integer zoom level.\n * @param {module:ol/TileRange=} opt_tileRange Temporary tile range object.\n * @return {module:ol/TileRange} Tile range.\n */\nTileGrid.prototype.getTileRangeForExtentAndZ = function getTileRangeForExtentAndZ (extent, z, opt_tileRange) {\n  var tileCoord = tmpTileCoord;\n  this.getTileCoordForXYAndZ_(extent[0], extent[1], z, false, tileCoord);\n  var minX = tileCoord[1];\n  var minY = tileCoord[2];\n  this.getTileCoordForXYAndZ_(extent[2], extent[3], z, true, tileCoord);\n  return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {module:ol/coordinate~Coordinate} Tile center.\n */\nTileGrid.prototype.getTileCoordCenter = function getTileCoordCenter (tileCoord) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  return [\n    origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n    origin[1] + (tileCoord[2] + 0.5) * tileSize[1] * resolution\n  ];\n};\n\n/**\n * Get the extent of a tile coordinate.\n *\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/extent~Extent=} opt_extent Temporary extent object.\n * @return {module:ol/extent~Extent} Extent.\n * @api\n */\nTileGrid.prototype.getTileCoordExtent = function getTileCoordExtent (tileCoord, opt_extent) {\n  var origin = this.getOrigin(tileCoord[0]);\n  var resolution = this.getResolution(tileCoord[0]);\n  var tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n  var minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n  var minY = origin[1] + tileCoord[2] * tileSize[1] * resolution;\n  var maxX = minX + tileSize[0] * resolution;\n  var maxY = minY + tileSize[1] * resolution;\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n};\n\n/**\n * Get the tile coordinate for the given map coordinate and resolution.This\n * method considers that coordinates that intersect tile boundaries should be\n * assigned the higher tile coordinate.\n *\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndResolution = function getTileCoordForCoordAndResolution (coordinate, resolution, opt_tileCoord) {\n  return this.getTileCoordForXYAndResolution_(\n    coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n};\n\n/**\n * Note that this method should not be called for resolutions that correspond\n * to an integer zoom level.Instead call the `getTileCoordForXYAndZ_` method.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} resolution Resolution (for a non-integer zoom level).\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndResolution_ = function getTileCoordForXYAndResolution_ (x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n  var z = this.getZForResolution(resolution);\n  var scale = resolution / this.getResolution(z);\n  var origin = this.getOrigin(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = scale * xFromOrigin / tileSize[0];\n  var tileCoordY = scale * yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n * they should have separate implementations.This method is for integer zoom\n * levels.The other method should only be called for resolutions corresponding\n * to non-integer zoom levels.\n * @param {number} x Map x coordinate.\n * @param {number} y Map y coordinate.\n * @param {number} z Integer zoom level.\n * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n *   intersections go to the higher tile coordinate, let edge intersections\n *   go to the lower tile coordinate.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Temporary module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @private\n */\nTileGrid.prototype.getTileCoordForXYAndZ_ = function getTileCoordForXYAndZ_ (x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n  var origin = this.getOrigin(z);\n  var resolution = this.getResolution(z);\n  var tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n  var adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n  var adjustY = reverseIntersectionPolicy ? 0 : 0.5;\n  var xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n  var yFromOrigin = Math.floor((y - origin[1]) / resolution + adjustY);\n  var tileCoordX = xFromOrigin / tileSize[0];\n  var tileCoordY = yFromOrigin / tileSize[1];\n\n  if (reverseIntersectionPolicy) {\n    tileCoordX = Math.ceil(tileCoordX) - 1;\n    tileCoordY = Math.ceil(tileCoordY) - 1;\n  } else {\n    tileCoordX = Math.floor(tileCoordX);\n    tileCoordY = Math.floor(tileCoordY);\n  }\n\n  return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n};\n\n/**\n * Get a tile coordinate given a map coordinate and zoom level.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} z Zoom level.\n * @param {module:ol/tilecoord~TileCoord=} opt_tileCoord Destination module:ol/tilecoord~TileCoord object.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n * @api\n */\nTileGrid.prototype.getTileCoordForCoordAndZ = function getTileCoordForCoordAndZ (coordinate, z, opt_tileCoord) {\n  return this.getTileCoordForXYAndZ_(\n    coordinate[0], coordinate[1], z, false, opt_tileCoord);\n};\n\n/**\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @return {number} Tile resolution.\n */\nTileGrid.prototype.getTileCoordResolution = function getTileCoordResolution (tileCoord) {\n  return this.resolutions_[tileCoord[0]];\n};\n\n/**\n * Get the tile size for a zoom level. The type of the return value matches the\n * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n * get an `module:ol/size~Size`, run the result through `module:ol/size~Size.toSize()`.\n * @param {number} z Z.\n * @return {number|module:ol/size~Size} Tile size.\n * @api\n */\nTileGrid.prototype.getTileSize = function getTileSize (z) {\n  if (this.tileSize_) {\n    return this.tileSize_;\n  } else {\n    return this.tileSizes_[z];\n  }\n};\n\n/**\n * @param {number} z Zoom level.\n * @return {module:ol/TileRange} Extent tile range for the specified zoom level.\n */\nTileGrid.prototype.getFullTileRange = function getFullTileRange (z) {\n  if (!this.fullTileRanges_) {\n    return null;\n  } else {\n    return this.fullTileRanges_[z];\n  }\n};\n\n/**\n * @param {number} resolution Resolution.\n * @param {number=} opt_direction If 0, the nearest resolution will be used.\n *   If 1, the nearest lower resolution will be used. If -1, the nearest\n *   higher resolution will be used. Default is 0.\n * @return {number} Z.\n * @api\n */\nTileGrid.prototype.getZForResolution = function getZForResolution (resolution, opt_direction) {\n  var z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n  return clamp(z, this.minZoom, this.maxZoom);\n};\n\n/**\n * @param {!module:ol/extent~Extent} extent Extent for this tile grid.\n * @private\n */\nTileGrid.prototype.calculateTileRanges_ = function calculateTileRanges_ (extent) {\n    var this$1 = this;\n\n  var length = this.resolutions_.length;\n  var fullTileRanges = new Array(length);\n  for (var z = this.minZoom; z < length; ++z) {\n    fullTileRanges[z] = this$1.getTileRangeForExtentAndZ(extent, z);\n  }\n  this.fullTileRanges_ = fullTileRanges;\n};\n\n\nexport default TileGrid;\n\n//# sourceMappingURL=TileGrid.js.map","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {assign} from './obj.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {!module:ol/tilegrid/TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  var tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n * @param {module:ol/proj/Projection} projection Projection.\n * @return {module:ol/tilecoord~TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  var z = tileCoord[0];\n  var center = tileGrid.getTileCoordCenter(tileCoord);\n  var projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    var worldWidth = getWidth(projectionExtent);\n    var worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  var corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  var resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {module:ol/extent~Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {module:ol/tilegrid~XYZOptions=} opt_options Tile grid options.\n * @return {!module:ol/tilegrid/TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  var options = /** @type {module:ol/tilegrid/TileGrid~Options} */ ({});\n  assign(options, opt_options !== undefined ?\n    opt_options : /** @type {module:ol/tilegrid~XYZOptions} */ ({}));\n  if (options.extent === undefined) {\n    options.extent = getProjection('EPSG:3857').getExtent();\n  }\n  options.resolutions = resolutionsFromExtent(\n    options.extent, options.maxZoom, options.tileSize);\n  delete options.maxZoom;\n\n  return new TileGrid(options);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  var maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  var height = getHeight(extent);\n  var width = getWidth(extent);\n\n  var tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  var maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  var length = maxZoom + 1;\n  var resolutions = new Array(length);\n  for (var z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|module:ol/size~Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {module:ol/extent/Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!module:ol/tilegrid/TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  var extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {module:ol/proj~ProjectionLike} projection Projection.\n * @return {module:ol/extent~Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  var extent = projection.getExtent();\n  if (!extent) {\n    var half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n\n//# sourceMappingURL=tilegrid.js.map","/**\n * @module ol/source/Tile\n */\n\nimport {VOID} from '../functions.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from '../source/Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @api\n */\nvar TileSource = (function (Source) {\n  function TileSource(options) {\n\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {module:ol/tilegrid/TileGrid}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    /**\n     * @protected\n     * @type {module:ol/TileCache}\n     */\n    this.tileCache = new TileCache(options.cacheSize);\n\n    /**\n     * @protected\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = '';\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n  }\n\n  if ( Source ) TileSource.__proto__ = Source;\n  TileSource.prototype = Object.create( Source && Source.prototype );\n  TileSource.prototype.constructor = TileSource;\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  TileSource.prototype.canExpireCache = function canExpireCache () {\n    return this.tileCache.canExpireCache();\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {!Object<string, module:ol/TileRange>} usedTiles Used tiles.\n   */\n  TileSource.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {module:ol/TileRange} tileRange Tile range.\n   * @param {function(module:ol/Tile):(boolean|undefined)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  TileSource.prototype.forEachLoadedTile = function forEachLoadedTile (projection, z, tileRange, callback) {\n    var tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    var covered = true;\n    var tile, tileCoordKey, loaded;\n    for (var x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (var y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!module:ol/Tile} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {number} Gutter.\n   */\n  TileSource.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    return 0;\n  };\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  TileSource.prototype.getKey = function getKey () {\n    return this.key_;\n  };\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  TileSource.prototype.setKey = function setKey (key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  TileSource.prototype.getOpaque = function getOpaque (projection) {\n    return this.opaque_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.getResolutions = function getResolutions () {\n    return this.tileGrid.getResolutions();\n  };\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   */\n  TileSource.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {};\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {module:ol/tilegrid/TileGrid} Tile grid.\n   * @api\n   */\n  TileSource.prototype.getTileGrid = function getTileGrid () {\n    return this.tileGrid;\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/tilegrid/TileGrid} Tile grid.\n   */\n  TileSource.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  };\n\n  /**\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/TileCache} Tile cache.\n   * @protected\n   */\n  TileSource.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    var thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  };\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  TileSource.prototype.getTilePixelRatio = function getTilePixelRatio (pixelRatio) {\n    return this.tilePixelRatio_;\n  };\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/size~Size} Tile size.\n   */\n  TileSource.prototype.getTilePixelSize = function getTilePixelSize (z, pixelRatio, projection) {\n    var tileGrid = this.getTileGridForProjection(projection);\n    var tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    var tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  };\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/proj/Projection=} opt_projection Projection.\n   * @return {module:ol/tilecoord~TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  TileSource.prototype.getTileCoordForTileUrlFunction = function getTileCoordForTileUrlFunction (tileCoord, opt_projection) {\n    var projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    var tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileSource.prototype.refresh = function refresh () {\n    this.tileCache.clear();\n    this.changed();\n  };\n\n  return TileSource;\n}(Source));\n\n\n/**\n * Marks a tile coord as being used, without triggering a load.\n * @param {number} z Tile coordinate z.\n * @param {number} x Tile coordinate x.\n * @param {number} y Tile coordinate y.\n * @param {module:ol/proj/Projection} projection Projection.\n */\nTileSource.prototype.useTile = VOID;\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport var TileSourceEvent = (function (Event) {\n  function TileSourceEvent(type, tile) {\n\n    Event.call(this, type);\n\n    /**\n     * The tile related to the event.\n     * @type {module:ol/Tile}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n  if ( Event ) TileSourceEvent.__proto__ = Event;\n  TileSourceEvent.prototype = Object.create( Event && Event.prototype );\n  TileSourceEvent.prototype.constructor = TileSourceEvent;\n\n  return TileSourceEvent;\n}(Event));\n\nexport default TileSource;\n\n//# sourceMappingURL=Tile.js.map","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile~TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n\n//# sourceMappingURL=TileEventType.js.map","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from '../source/Tile.js';\nimport TileEventType from '../source/TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {number} [cacheSize]\n * @property {module:ol/extent~Extent} [extent]\n * @property {boolean} [opaque]\n * @property {module:ol/proj~ProjectionLike} [projection]\n * @property {module:ol/source/State} [state]\n * @property {module:ol/tilegrid/TileGrid} [tileGrid]\n * @property {module:ol/Tile~LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires module:ol/source/TileEvent\n */\nvar UrlTile = (function (TileSource) {\n  function UrlTile(options) {\n\n    TileSource.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction = this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n    if (options.tileUrlFunction) {\n      this.setTileUrlFunction(options.tileUrlFunction);\n    }\n\n    /**\n     * @private\n     * @type {!Object<number, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  if ( TileSource ) UrlTile.__proto__ = TileSource;\n  UrlTile.prototype = Object.create( TileSource && TileSource.prototype );\n  UrlTile.prototype.constructor = UrlTile;\n\n  /**\n   * Return the tile load function of the source.\n   * @return {module:ol/Tile~LoadFunction} TileLoadFunction\n   * @api\n   */\n  UrlTile.prototype.getTileLoadFunction = function getTileLoadFunction () {\n    return this.tileLoadFunction;\n  };\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {module:ol/Tile~UrlFunction} TileUrlFunction\n   * @api\n   */\n  UrlTile.prototype.getTileUrlFunction = function getTileUrlFunction () {\n    return this.tileUrlFunction;\n  };\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  UrlTile.prototype.getUrls = function getUrls () {\n    return this.urls;\n  };\n\n  /**\n   * Handle tile change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  UrlTile.prototype.handleTileChange = function handleTileChange (event) {\n    var tile = /** @type {module:ol/Tile} */ (event.target);\n    var uid = getUid(tile);\n    var tileState = tile.getState();\n    var type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  };\n\n  /**\n   * Set the tile load function of the source.\n   * @param {module:ol/Tile~LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  UrlTile.prototype.setTileLoadFunction = function setTileLoadFunction (tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {module:ol/Tile~UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} opt_key Optional new tile key for the source.\n   * @api\n   */\n  UrlTile.prototype.setTileUrlFunction = function setTileUrlFunction (tileUrlFunction, opt_key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof opt_key !== 'undefined') {\n      this.setKey(opt_key);\n    } else {\n      this.changed();\n    }\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  UrlTile.prototype.setUrl = function setUrl (url) {\n    var urls = this.urls = expandUrl(url);\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), url);\n  };\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  UrlTile.prototype.setUrls = function setUrls (urls) {\n    this.urls = urls;\n    var key = urls.join('\\n');\n    this.setTileUrlFunction(this.fixedTileUrlFunction ?\n      this.fixedTileUrlFunction.bind(this) :\n      createFromTemplates(urls, this.tileGrid), key);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  UrlTile.prototype.useTile = function useTile (z, x, y) {\n    var tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  };\n\n  return UrlTile;\n}(TileSource));\n\n\n/**\n * @type {module:ol/Tile~UrlFunction|undefined}\n * @protected\n */\nUrlTile.prototype.fixedTileUrlFunction;\n\nexport default UrlTile;\n\n//# sourceMappingURL=UrlTile.js.map","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from '../source/UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/source/State} [state] Source state.\n * @property {module:ol/ImageTile~TileClass} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires module:ol/source/Tile~TileSourceEvent\n * @api\n */\nvar TileImage = (function (UrlTile) {\n  function TileImage(options) {\n\n    UrlTile.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      extent: options.extent,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {function(new: module:ol/ImageTile, module:ol/tilecoord~TileCoord, module:ol/TileState, string,\n     *        ?string, module:ol/Tile~LoadFunction, module:ol/Tile~Options=)}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, module:ol/tilegrid/TileGrid>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  if ( UrlTile ) TileImage.__proto__ = UrlTile;\n  TileImage.prototype = Object.create( UrlTile && UrlTile.prototype );\n  TileImage.prototype.constructor = TileImage;\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.canExpireCache = function canExpireCache () {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.canExpireCache.call(this);\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (var key in this$1.tileCacheForProjection) {\n        if (this$1.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.expireCache = function expireCache (projection, usedTiles) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION) {\n      UrlTile.prototype.expireCache.call(this, projection, usedTiles);\n      return;\n    }\n    var usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (var id in this$1.tileCacheForProjection) {\n      var tileCache = this$1.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getGutterForProjection = function getGutterForProjection (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  };\n\n  /**\n   * @return {number} Gutter.\n   */\n  TileImage.prototype.getGutter = function getGutter () {\n    return 0;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getOpaque = function getOpaque (projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return UrlTile.prototype.getOpaque.call(this, projection);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileGridForProjection = function getTileGridForProjection$1 (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileGridForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!module:ol/tilegrid/TileGrid} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTileCacheForProjection = function getTileCacheForProjection (projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return UrlTile.prototype.getTileCacheForProjection.call(this, projection);\n    }\n    var thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      var projKey = getUid(projection).toString();\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!module:ol/Tile} Tile.\n   * @private\n   */\n  TileImage.prototype.createTile_ = function createTile_ (z, x, y, pixelRatio, projection, key) {\n    var tileCoord = [z, x, y];\n    var urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    var tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    var tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    listen(tile, EventType.CHANGE,\n      this.handleTileChange, this);\n    return tile;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TileImage.prototype.getTile = function getTile (z, x, y, pixelRatio, projection) {\n    var sourceProjection = /** @type {!module:ol/proj/Projection} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      var cache = this.getTileCacheForProjection(projection);\n      var tileCoord = [z, x, y];\n      var tile;\n      var tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!module:ol/Tile} */ (cache.get(tileCoordKey));\n      }\n      var key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        var sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        var targetTileGrid = this.getTileGridForProjection(projection);\n        var wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        var newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  };\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!module:ol/proj/Projection} projection Projection.\n   * @return {!module:ol/Tile} Tile.\n   * @protected\n   */\n  TileImage.prototype.getTileInternal = function getTileInternal (z, x, y, pixelRatio, projection) {\n    var tile = null;\n    var tileCoordKey = getKeyZXY(z, x, y);\n    var key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        var interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  };\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  TileImage.prototype.setRenderReprojectionEdges = function setRenderReprojectionEdges (render) {\n    var this$1 = this;\n\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (var id in this$1.tileCacheForProjection) {\n      this$1.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  };\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {module:ol/tilegrid/TileGrid} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  TileImage.prototype.setTileGridForProjection = function setTileGridForProjection (projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      var proj = getProjection(projection);\n      if (proj) {\n        var projKey = getUid(proj).toString();\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  };\n\n  return TileImage;\n}(UrlTile));\n\n\n/**\n * @param {module:ol/ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  imageTile.getImage().src = src;\n}\n\nexport default TileImage;\n\n//# sourceMappingURL=TileImage.js.map","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from '../source/TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {module:ol/proj~ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=18] Optional max zoom level.\n * @property {number} [minZoom=0] Optional min zoom level.\n * @property {module:ol/tilegrid/TileGrid} [tileGrid] Tile grid.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|module:ol/size~Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * @property {module:ol/Tile~UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if url or urls are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n */\n\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case,\n * {@link module:ol/source/TileImage} can be used with a `tileUrlFunction`\n * such as:\n *\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *        coordinate[1] + '/' + coordinate[2] + '.png';\n *    }\n *\n * @api\n */\nvar XYZ = (function (TileImage) {\n  function XYZ(opt_options) {\n    var options = opt_options || {};\n    var projection = options.projection !== undefined ?\n      options.projection : 'EPSG:3857';\n\n    var tileGrid = options.tileGrid !== undefined ? options.tileGrid :\n      createXYZ({\n        extent: extentFromProjection(projection),\n        maxZoom: options.maxZoom,\n        minZoom: options.minZoom,\n        tileSize: options.tileSize\n      });\n\n    TileImage.call(this, {\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition\n    });\n\n  }\n\n  if ( TileImage ) XYZ.__proto__ = TileImage;\n  XYZ.prototype = Object.create( TileImage && TileImage.prototype );\n  XYZ.prototype.constructor = XYZ;\n\n  return XYZ;\n}(TileImage));\n\nexport default XYZ;\n\n//# sourceMappingURL=XYZ.js.map","/**\n * @module ol/control/FullScreen\n */\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_UNSUPPORTED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @return {string} Change type.\n */\nvar getChangeType = (function() {\n  var changeType;\n  return function() {\n    if (!changeType) {\n      var body = document.body;\n      if (body.webkitRequestFullscreen) {\n        changeType = 'webkitfullscreenchange';\n      } else if (body.mozRequestFullScreen) {\n        changeType = 'mozfullscreenchange';\n      } else if (body.msRequestFullscreen) {\n        changeType = 'MSFullscreenChange';\n      } else if (body.requestFullscreen) {\n        changeType = 'fullscreenchange';\n      }\n    }\n    return changeType;\n  };\n})();\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-full-screen'] CSS class name.\n * @property {string|HTMLElement} [label='\\u2922'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [labelActive='\\u00d7'] Text label to use for the\n * button when full-screen is active.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Toggle full-screen'] Text label to use for the button tip.\n * @property {boolean} [keys=false] Full keyboard access.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {HTMLElement|string} [source] The element to be displayed\n * fullscreen. When not provided, the element containing the map viewport will\n * be displayed fullscreen.\n */\n\n\n/**\n * @classdesc\n * Provides a button that when clicked fills up the full screen with the map.\n * The full screen source element is by default the element containing the map viewport unless\n * overridden by providing the `source` option. In which case, the dom\n * element introduced using this parameter will be displayed in full screen.\n *\n * When in full screen mode, a close button is shown to exit full screen mode.\n * The [Fullscreen API](http://www.w3.org/TR/fullscreen/) is used to\n * toggle the map in full screen mode.\n *\n * @api\n */\nvar FullScreen = (function (Control) {\n  function FullScreen(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.cssClassName_ = options.className !== undefined ? options.className :\n      'ol-full-screen';\n\n    var label = options.label !== undefined ? options.label : '\\u2922';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelNode_ = typeof label === 'string' ?\n      document.createTextNode(label) : label;\n\n    var labelActive = options.labelActive !== undefined ? options.labelActive : '\\u00d7';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.labelActiveNode_ = typeof labelActive === 'string' ?\n      document.createTextNode(labelActive) : labelActive;\n\n    var tipLabel = options.tipLabel ? options.tipLabel : 'Toggle full-screen';\n    var button = document.createElement('button');\n    button.className = this.cssClassName_ + '-' + isFullScreen();\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.labelNode_);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    var cssClasses = this.cssClassName_ + ' ' + CLASS_UNSELECTABLE +\n        ' ' + CLASS_CONTROL + ' ' +\n        (!isFullScreenSupported() ? CLASS_UNSUPPORTED : '');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.keys_ = options.keys !== undefined ? options.keys : false;\n\n    /**\n     * @private\n     * @type {HTMLElement|string|undefined}\n     */\n    this.source_ = options.source;\n\n  }\n\n  if ( Control ) FullScreen.__proto__ = Control;\n  FullScreen.prototype = Object.create( Control && Control.prototype );\n  FullScreen.prototype.constructor = FullScreen;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  FullScreen.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleFullScreen_();\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreen_ = function handleFullScreen_ () {\n    if (!isFullScreenSupported()) {\n      return;\n    }\n    var map = this.getMap();\n    if (!map) {\n      return;\n    }\n    if (isFullScreen()) {\n      exitFullScreen();\n    } else {\n      var element;\n      if (this.source_) {\n        element = typeof this.source_ === 'string' ?\n          document.getElementById(this.source_) :\n          this.source_;\n      } else {\n        element = map.getTargetElement();\n      }\n      if (this.keys_) {\n        requestFullScreenWithKeys(element);\n\n      } else {\n        requestFullScreen(element);\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  FullScreen.prototype.handleFullScreenChange_ = function handleFullScreenChange_ () {\n    var button = this.element.firstElementChild;\n    var map = this.getMap();\n    if (isFullScreen()) {\n      button.className = this.cssClassName_ + '-true';\n      replaceNode(this.labelActiveNode_, this.labelNode_);\n    } else {\n      button.className = this.cssClassName_ + '-false';\n      replaceNode(this.labelNode_, this.labelActiveNode_);\n    }\n    if (map) {\n      map.updateSize();\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  FullScreen.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      this.listenerKeys.push(listen(document,\n        getChangeType(),\n        this.handleFullScreenChange_, this)\n      );\n    }\n  };\n\n  return FullScreen;\n}(Control));\n\n\n/**\n * @return {boolean} Fullscreen is supported by the current platform.\n */\nfunction isFullScreenSupported() {\n  var body = document.body;\n  return !!(\n    body.webkitRequestFullscreen ||\n    (body.mozRequestFullScreen && document.mozFullScreenEnabled) ||\n    (body.msRequestFullscreen && document.msFullscreenEnabled) ||\n    (body.requestFullscreen && document.fullscreenEnabled)\n  );\n}\n\n/**\n * @return {boolean} Element is currently in fullscreen.\n */\nfunction isFullScreen() {\n  return !!(\n    document.webkitIsFullScreen || document.mozFullScreen ||\n    document.msFullscreenElement || document.fullscreenElement\n  );\n}\n\n/**\n * Request to fullscreen an element.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  }\n}\n\n/**\n * Request to fullscreen an element with keyboard input.\n * @param {HTMLElement} element Element to request fullscreen\n */\nfunction requestFullScreenWithKeys(element) {\n  if (element.mozRequestFullScreenWithKeys) {\n    element.mozRequestFullScreenWithKeys();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n  } else {\n    requestFullScreen(element);\n  }\n}\n\n/**\n * Exit fullscreen.\n */\nfunction exitFullScreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n\nexport default FullScreen;\n\n//# sourceMappingURL=FullScreen.js.map","/**\n * @module ol/control/OverviewMap\n */\nimport Collection from '../Collection.js';\nimport Map from '../Map.js';\nimport MapEventType from '../MapEventType.js';\nimport MapProperty from '../MapProperty.js';\nimport {getChangeEventType} from '../Object.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport Overlay from '../Overlay.js';\nimport OverlayPositioning from '../OverlayPositioning.js';\nimport ViewProperty from '../ViewProperty.js';\nimport Control from '../control/Control.js';\nimport {rotate as rotateCoordinate, add as addCoordinate} from '../coordinate.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE, CLASS_COLLAPSED} from '../css.js';\nimport {replaceNode} from '../dom.js';\nimport {listen, listenOnce, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight, scaleFromCenter} from '../extent.js';\n\n\n/**\n * Maximum width and/or height extent ratio that determines when the overview\n * map should be zoomed out.\n * @type {number}\n */\nvar MAX_RATIO = 0.75;\n\n\n/**\n * Minimum width and/or height extent ratio that determines when the overview\n * map should be zoomed in.\n * @type {number}\n */\nvar MIN_RATIO = 0.1;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-overviewmap'] CSS class name.\n * @property {boolean} [collapsed=true] Whether the control should start collapsed or not (expanded).\n * @property {string|HTMLElement} [collapseLabel='«'] Text label to use for the\n * expanded overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {boolean} [collapsible=true] Whether the control can be collapsed or not.\n * @property {string|HTMLElement} [label='»'] Text label to use for the collapsed\n * overviewmap button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {Array<module:ol/layer/Layer>|module:ol/Collection<module:ol/layer/Layer>} [layers]\n * Layers for the overview map. If not set, then all main map layers are used\n * instead.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string} [tipLabel='Overview map'] Text label to use for the button tip.\n * @property {module:ol/View} [view] Custom view for the overview map. If not provided,\n * a default view with an EPSG:3857 projection will be used.\n */\n\n\n/**\n * Create a new control with a map acting as an overview map for an other\n * defined map.\n *\n * @api\n */\nvar OverviewMap = (function (Control) {\n  function OverviewMap(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.collapsed_ = options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ = options.collapsible !== undefined ?\n      options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    var className = options.className !== undefined ? options.className : 'ol-overviewmap';\n\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Overview map';\n\n    var collapseLabel = options.collapseLabel !== undefined ? options.collapseLabel : '\\u00AB';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    var label = options.label !== undefined ? options.label : '\\u00BB';\n\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n    }\n\n    var activeLabel = (this.collapsible_ && !this.collapsed_) ?\n      this.collapseLabel_ : this.label_;\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(activeLabel);\n\n    listen(button, EventType.CLICK,\n      this.handleClick_, this);\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ovmapDiv_ = document.createElement('div');\n    this.ovmapDiv_.className = 'ol-overviewmap-map';\n\n    /**\n     * @type {module:ol/Map}\n     * @private\n     */\n    this.ovmap_ = new Map({\n      controls: new Collection(),\n      interactions: new Collection(),\n      view: options.view\n    });\n    var ovmap = this.ovmap_;\n\n    if (options.layers) {\n      options.layers.forEach(\n        /**\n         * @param {module:ol/layer/Layer} layer Layer.\n         */\n        (function(layer) {\n          ovmap.addLayer(layer);\n        }).bind(this));\n    }\n\n    var box = document.createElement('div');\n    box.className = 'ol-overviewmap-box';\n    box.style.boxSizing = 'border-box';\n\n    /**\n     * @type {module:ol/Overlay}\n     * @private\n     */\n    this.boxOverlay_ = new Overlay({\n      position: [0, 0],\n      positioning: OverlayPositioning.BOTTOM_LEFT,\n      element: box\n    });\n    this.ovmap_.addOverlay(this.boxOverlay_);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL +\n        (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n        (this.collapsible_ ? '' : ' ol-uncollapsible');\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.ovmapDiv_);\n    element.appendChild(button);\n\n    /* Interactive map */\n\n    var scope = this;\n\n    var overlay = this.boxOverlay_;\n    var overlayBox = this.boxOverlay_.getElement();\n\n    /* Functions definition */\n\n    var computeDesiredMousePosition = function(mousePosition) {\n      return {\n        clientX: mousePosition.clientX - (overlayBox.offsetWidth / 2),\n        clientY: mousePosition.clientY + (overlayBox.offsetHeight / 2)\n      };\n    };\n\n    var move = function(event) {\n      var coordinates = ovmap.getEventCoordinate(computeDesiredMousePosition(event));\n\n      overlay.setPosition(coordinates);\n    };\n\n    var endMoving = function(event) {\n      var coordinates = ovmap.getEventCoordinate(event);\n\n      scope.getMap().getView().setCenter(coordinates);\n\n      window.removeEventListener('mousemove', move);\n      window.removeEventListener('mouseup', endMoving);\n    };\n\n    /* Binding */\n\n    overlayBox.addEventListener('mousedown', function() {\n      window.addEventListener('mousemove', move);\n      window.addEventListener('mouseup', endMoving);\n    });\n  }\n\n  if ( Control ) OverviewMap.__proto__ = Control;\n  OverviewMap.prototype = Object.create( Control && Control.prototype );\n  OverviewMap.prototype.constructor = OverviewMap;\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  OverviewMap.prototype.setMap = function setMap (map) {\n    var oldMap = this.getMap();\n    if (map === oldMap) {\n      return;\n    }\n    if (oldMap) {\n      var oldView = oldMap.getView();\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      this.ovmap_.setTarget(null);\n    }\n    Control.prototype.setMap.call(this, map);\n\n    if (map) {\n      this.ovmap_.setTarget(this.ovmapDiv_);\n      this.listenerKeys.push(listen(\n        map, ObjectEventType.PROPERTYCHANGE,\n        this.handleMapPropertyChange_, this));\n\n      // TODO: to really support map switching, this would need to be reworked\n      if (this.ovmap_.getLayers().getLength() === 0) {\n        this.ovmap_.setLayerGroup(map.getLayerGroup());\n      }\n\n      var view = map.getView();\n      if (view) {\n        this.bindView_(view);\n        if (view.isDef()) {\n          this.ovmap_.updateSize();\n          this.resetExtent_();\n        }\n      }\n    }\n  };\n\n  /**\n   * Handle map property changes.  This only deals with changes to the map's view.\n   * @param {module:ol/Object~ObjectEvent} event The propertychange event.\n   * @private\n   */\n  OverviewMap.prototype.handleMapPropertyChange_ = function handleMapPropertyChange_ (event) {\n    if (event.key === MapProperty.VIEW) {\n      var oldView = /** @type {module:ol/View} */ (event.oldValue);\n      if (oldView) {\n        this.unbindView_(oldView);\n      }\n      var newView = this.getMap().getView();\n      this.bindView_(newView);\n    }\n  };\n\n  /**\n   * Register listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.bindView_ = function bindView_ (view) {\n    listen(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Unregister listeners for view property changes.\n   * @param {module:ol/View} view The view.\n   * @private\n   */\n  OverviewMap.prototype.unbindView_ = function unbindView_ (view) {\n    unlisten(view,\n      getChangeEventType(ViewProperty.ROTATION),\n      this.handleRotationChanged_, this);\n  };\n\n  /**\n   * Handle rotation changes to the main map.\n   * TODO: This should rotate the extent rectrangle instead of the\n   * overview map's view.\n   * @private\n   */\n  OverviewMap.prototype.handleRotationChanged_ = function handleRotationChanged_ () {\n    this.ovmap_.getView().setRotation(this.getMap().getView().getRotation());\n  };\n\n  /**\n   * Reset the overview map extent if the box size (width or\n   * height) is less than the size of the overview map size times minRatio\n   * or is greater than the size of the overview size times maxRatio.\n   *\n   * If the map extent was not reset, the box size can fits in the defined\n   * ratio sizes. This method then checks if is contained inside the overview\n   * map current extent. If not, recenter the overview map to the current\n   * main map center location.\n   * @private\n   */\n  OverviewMap.prototype.validateExtent_ = function validateExtent_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovmapSize = /** @type {module:ol/size~Size} */ (ovmap.getSize());\n\n    var ovview = ovmap.getView();\n    var ovextent = ovview.calculateExtent(ovmapSize);\n\n    var topLeftPixel =\n        ovmap.getPixelFromCoordinate(getTopLeft(extent));\n    var bottomRightPixel =\n        ovmap.getPixelFromCoordinate(getBottomRight(extent));\n\n    var boxWidth = Math.abs(topLeftPixel[0] - bottomRightPixel[0]);\n    var boxHeight = Math.abs(topLeftPixel[1] - bottomRightPixel[1]);\n\n    var ovmapWidth = ovmapSize[0];\n    var ovmapHeight = ovmapSize[1];\n\n    if (boxWidth < ovmapWidth * MIN_RATIO ||\n        boxHeight < ovmapHeight * MIN_RATIO ||\n        boxWidth > ovmapWidth * MAX_RATIO ||\n        boxHeight > ovmapHeight * MAX_RATIO) {\n      this.resetExtent_();\n    } else if (!containsExtent(ovextent, extent)) {\n      this.recenter_();\n    }\n  };\n\n  /**\n   * Reset the overview map extent to half calculated min and max ratio times\n   * the extent of the main map.\n   * @private\n   */\n  OverviewMap.prototype.resetExtent_ = function resetExtent_ () {\n    if (MAX_RATIO === 0 || MIN_RATIO === 0) {\n      return;\n    }\n\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n    var extent = view.calculateExtent(mapSize);\n\n    var ovview = ovmap.getView();\n\n    // get how many times the current map overview could hold different\n    // box sizes using the min and max ratio, pick the step in the middle used\n    // to calculate the extent from the main map to set it to the overview map,\n    var steps = Math.log(\n      MAX_RATIO / MIN_RATIO) / Math.LN2;\n    var ratio = 1 / (Math.pow(2, steps / 2) * MIN_RATIO);\n    scaleFromCenter(extent, ratio);\n    ovview.fit(extent);\n  };\n\n  /**\n   * Set the center of the overview map to the map center without changing its\n   * resolution.\n   * @private\n   */\n  OverviewMap.prototype.recenter_ = function recenter_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    ovview.setCenter(view.getCenter());\n  };\n\n  /**\n   * Update the box using the main map extent\n   * @private\n   */\n  OverviewMap.prototype.updateBox_ = function updateBox_ () {\n    var map = this.getMap();\n    var ovmap = this.ovmap_;\n\n    if (!map.isRendered() || !ovmap.isRendered()) {\n      return;\n    }\n\n    var mapSize = /** @type {module:ol/size~Size} */ (map.getSize());\n\n    var view = map.getView();\n\n    var ovview = ovmap.getView();\n\n    var rotation = view.getRotation();\n\n    var overlay = this.boxOverlay_;\n    var box = this.boxOverlay_.getElement();\n    var extent = view.calculateExtent(mapSize);\n    var ovresolution = ovview.getResolution();\n    var bottomLeft = getBottomLeft(extent);\n    var topRight = getTopRight(extent);\n\n    // set position using bottom left coordinates\n    var rotateBottomLeft = this.calculateCoordinateRotate_(rotation, bottomLeft);\n    overlay.setPosition(rotateBottomLeft);\n\n    // set box size calculated from map extent size and overview map resolution\n    if (box) {\n      box.style.width = Math.abs((bottomLeft[0] - topRight[0]) / ovresolution) + 'px';\n      box.style.height = Math.abs((topRight[1] - bottomLeft[1]) / ovresolution) + 'px';\n    }\n  };\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {module:ol/coordinate~Coordinate|undefined} Coordinate for rotation and center anchor.\n   * @private\n   */\n  OverviewMap.prototype.calculateCoordinateRotate_ = function calculateCoordinateRotate_ (rotation, coordinate) {\n    var coordinateRotate;\n\n    var map = this.getMap();\n    var view = map.getView();\n\n    var currentCenter = view.getCenter();\n\n    if (currentCenter) {\n      coordinateRotate = [\n        coordinate[0] - currentCenter[0],\n        coordinate[1] - currentCenter[1]\n      ];\n      rotateCoordinate(coordinateRotate, rotation);\n      addCoordinate(coordinateRotate, currentCenter);\n    }\n    return coordinateRotate;\n  };\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  OverviewMap.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleToggle_();\n  };\n\n  /**\n   * @private\n   */\n  OverviewMap.prototype.handleToggle_ = function handleToggle_ () {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n\n    // manage overview map if it had not been rendered before and control\n    // is expanded\n    var ovmap = this.ovmap_;\n    if (!this.collapsed_ && !ovmap.isRendered()) {\n      ovmap.updateSize();\n      this.resetExtent_();\n      listenOnce(ovmap, MapEventType.POSTRENDER,\n        function(event) {\n          this.updateBox_();\n        },\n        this);\n    }\n  };\n\n  /**\n   * Return `true` if the overview map is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsible = function getCollapsible () {\n    return this.collapsible_;\n  };\n\n  /**\n   * Set whether the overview map should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsible = function setCollapsible (collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (!collapsible && this.collapsed_) {\n      this.handleToggle_();\n    }\n  };\n\n  /**\n   * Collapse or expand the overview map according to the passed parameter. Will\n   * not do anything if the overview map isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.setCollapsed = function setCollapsed (collapsed) {\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  };\n\n  /**\n   * Determine if the overview map is collapsed.\n   * @return {boolean} The overview map is collapsed.\n   * @api\n   */\n  OverviewMap.prototype.getCollapsed = function getCollapsed () {\n    return this.collapsed_;\n  };\n\n  /**\n   * Return the overview map.\n   * @return {module:ol/PluggableMap} Overview map.\n   * @api\n   */\n  OverviewMap.prototype.getOverviewMap = function getOverviewMap () {\n    return this.ovmap_;\n  };\n\n  return OverviewMap;\n}(Control));\n\n\n/**\n * Update the overview map element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/OverviewMap}\n * @api\n */\nexport function render(mapEvent) {\n  this.validateExtent_();\n  this.updateBox_();\n}\n\n\nexport default OverviewMap;\n\n//# sourceMappingURL=OverviewMap.js.map","/**\n * @module ol/control/ScaleLine\n */\nimport {getChangeEventType} from '../Object.js';\nimport {assert} from '../asserts.js';\nimport Control from '../control/Control.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {listen} from '../events.js';\nimport {getPointResolution, METERS_PER_UNIT} from '../proj.js';\nimport ProjUnits from '../proj/Units.js';\n\n\n/**\n * @type {string}\n */\nvar UNITS_PROP = 'units';\n\n/**\n * Units for the scale line. Supported values are `'degrees'`, `'imperial'`,\n * `'nautical'`, `'metric'`, `'us'`.\n * @enum {string}\n */\nexport var Units = {\n  DEGREES: 'degrees',\n  IMPERIAL: 'imperial',\n  NAUTICAL: 'nautical',\n  METRIC: 'metric',\n  US: 'us'\n};\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nvar LEADING_DIGITS = [1, 2, 5];\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-scale-line'] CSS Class name.\n * @property {number} [minWidth=64] Minimum width in pixels.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {module:ol/control/ScaleLine~Units|string} [units='metric'] Units.\n */\n\n\n/**\n * @classdesc\n * A control displaying rough y-axis distances, calculated for the center of the\n * viewport. For conformal projections (e.g. EPSG:3857, the default view\n * projection in OpenLayers), the scale is valid for all directions.\n * No scale line will be shown when the y-axis distance of a pixel at the\n * viewport center cannot be calculated in the view projection.\n * By default the scale line will show in the bottom left portion of the map,\n * but this can be changed by using the css selector `.ol-scale-line`.\n *\n * @api\n */\nvar ScaleLine = (function (Control) {\n  function ScaleLine(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    var className = options.className !== undefined ? options.className : 'ol-scale-line';\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render,\n      target: options.target\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.innerElement_ = document.createElement('div');\n    this.innerElement_.className = className + '-inner';\n\n    this.element.className = className + ' ' + CLASS_UNSELECTABLE;\n    this.element.appendChild(this.innerElement_);\n\n    /**\n     * @private\n     * @type {?module:ol/View~State}\n     */\n    this.viewState_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minWidth_ = options.minWidth !== undefined ? options.minWidth : 64;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = false;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderedWidth_ = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = '';\n\n    listen(\n      this, getChangeEventType(UNITS_PROP),\n      this.handleUnitsChanged_, this);\n\n    this.setUnits(/** @type {module:ol/control/ScaleLine~Units} */ (options.units) ||\n        Units.METRIC);\n\n  }\n\n  if ( Control ) ScaleLine.__proto__ = Control;\n  ScaleLine.prototype = Object.create( Control && Control.prototype );\n  ScaleLine.prototype.constructor = ScaleLine;\n\n  /**\n   * Return the units to use in the scale line.\n   * @return {module:ol/control/ScaleLine~Units|undefined} The units\n   * to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.getUnits = function getUnits () {\n    return (\n      /** @type {module:ol/control/ScaleLine~Units|undefined} */ (this.get(UNITS_PROP))\n    );\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.handleUnitsChanged_ = function handleUnitsChanged_ () {\n    this.updateElement_();\n  };\n\n  /**\n   * Set the units to use in the scale line.\n   * @param {module:ol/control/ScaleLine~Units} units The units to use in the scale line.\n   * @observable\n   * @api\n   */\n  ScaleLine.prototype.setUnits = function setUnits (units) {\n    this.set(UNITS_PROP, units);\n  };\n\n  /**\n   * @private\n   */\n  ScaleLine.prototype.updateElement_ = function updateElement_ () {\n    var this$1 = this;\n\n    var viewState = this.viewState_;\n\n    if (!viewState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    var center = viewState.center;\n    var projection = viewState.projection;\n    var units = this.getUnits();\n    var pointResolutionUnits = units == Units.DEGREES ?\n      ProjUnits.DEGREES :\n      ProjUnits.METERS;\n    var pointResolution =\n        getPointResolution(projection, viewState.resolution, center, pointResolutionUnits);\n    if (projection.getUnits() != ProjUnits.DEGREES && projection.getMetersPerUnit()\n      && pointResolutionUnits == ProjUnits.METERS) {\n      pointResolution *= projection.getMetersPerUnit();\n    }\n\n    var nominalCount = this.minWidth_ * pointResolution;\n    var suffix = '';\n    if (units == Units.DEGREES) {\n      var metersPerDegree = METERS_PER_UNIT[ProjUnits.DEGREES];\n      if (projection.getUnits() == ProjUnits.DEGREES) {\n        nominalCount *= metersPerDegree;\n      } else {\n        pointResolution /= metersPerDegree;\n      }\n      if (nominalCount < metersPerDegree / 60) {\n        suffix = '\\u2033'; // seconds\n        pointResolution *= 3600;\n      } else if (nominalCount < metersPerDegree) {\n        suffix = '\\u2032'; // minutes\n        pointResolution *= 60;\n      } else {\n        suffix = '\\u00b0'; // degrees\n      }\n    } else if (units == Units.IMPERIAL) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution /= 0.0254;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.3048;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.344;\n      }\n    } else if (units == Units.NAUTICAL) {\n      pointResolution /= 1852;\n      suffix = 'nm';\n    } else if (units == Units.METRIC) {\n      if (nominalCount < 0.001) {\n        suffix = 'μm';\n        pointResolution *= 1000000;\n      } else if (nominalCount < 1) {\n        suffix = 'mm';\n        pointResolution *= 1000;\n      } else if (nominalCount < 1000) {\n        suffix = 'm';\n      } else {\n        suffix = 'km';\n        pointResolution /= 1000;\n      }\n    } else if (units == Units.US) {\n      if (nominalCount < 0.9144) {\n        suffix = 'in';\n        pointResolution *= 39.37;\n      } else if (nominalCount < 1609.344) {\n        suffix = 'ft';\n        pointResolution /= 0.30480061;\n      } else {\n        suffix = 'mi';\n        pointResolution /= 1609.3472;\n      }\n    } else {\n      assert(false, 33); // Invalid units\n    }\n\n    var i = 3 * Math.floor(\n      Math.log(this.minWidth_ * pointResolution) / Math.log(10));\n    var count, width;\n    while (true) {\n      count = LEADING_DIGITS[((i % 3) + 3) % 3] *\n          Math.pow(10, Math.floor(i / 3));\n      width = Math.round(count / pointResolution);\n      if (isNaN(width)) {\n        this$1.element.style.display = 'none';\n        this$1.renderedVisible_ = false;\n        return;\n      } else if (width >= this$1.minWidth_) {\n        break;\n      }\n      ++i;\n    }\n\n    var html = count + ' ' + suffix;\n    if (this.renderedHTML_ != html) {\n      this.innerElement_.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n\n    if (this.renderedWidth_ != width) {\n      this.innerElement_.style.width = width + 'px';\n      this.renderedWidth_ = width;\n    }\n\n    if (!this.renderedVisible_) {\n      this.element.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n  };\n\n  return ScaleLine;\n}(Control));\n\n\n/**\n * Update the scale line element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ScaleLine}\n * @api\n */\nexport function render(mapEvent) {\n  var frameState = mapEvent.frameState;\n  if (!frameState) {\n    this.viewState_ = null;\n  } else {\n    this.viewState_ = frameState.viewState;\n  }\n  this.updateElement_();\n}\n\n\nexport default ScaleLine;\n\n//# sourceMappingURL=ScaleLine.js.map","/**\n * @module ol/control/ZoomSlider\n */\nimport ViewHint from '../ViewHint.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport {listen} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {clamp} from '../math.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport PointerEventHandler from '../pointer/PointerEventHandler.js';\n\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nvar Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(module:ol/MapEvent)} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n */\n\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nvar ZoomSlider = (function (Control) {\n  function ZoomSlider(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      render: options.render || render\n    });\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.previousY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {module:ol/size~Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoomslider';\n    var thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    var containerElement = this.element;\n    containerElement.className = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n    /**\n     * @type {module:ol/pointer/PointerEventHandler}\n     * @private\n     */\n    this.dragger_ = new PointerEventHandler(containerElement);\n\n    listen(this.dragger_, PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_, this);\n    listen(this.dragger_, PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_, this);\n    listen(this.dragger_, PointerEventType.POINTERUP,\n      this.handleDraggerEnd_, this);\n\n    listen(containerElement, EventType.CLICK, this.handleContainerClick_, this);\n    listen(thumbElement, EventType.CLICK, stopPropagation);\n  }\n\n  if ( Control ) ZoomSlider.__proto__ = Control;\n  ZoomSlider.prototype = Object.create( Control && Control.prototype );\n  ZoomSlider.prototype.constructor = ZoomSlider;\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.disposeInternal = function disposeInternal () {\n    this.dragger_.dispose();\n    Control.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ZoomSlider.prototype.setMap = function setMap (map) {\n    Control.prototype.setMap.call(this, map);\n    if (map) {\n      map.render();\n    }\n  };\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @private\n   */\n  ZoomSlider.prototype.initSlider_ = function initSlider_ () {\n    var container = this.element;\n    var containerSize = {\n      width: container.offsetWidth, height: container.offsetHeight\n    };\n\n    var thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    var computedStyle = getComputedStyle(thumb);\n    var thumbWidth = thumb.offsetWidth +\n        parseFloat(computedStyle['marginRight']) +\n        parseFloat(computedStyle['marginLeft']);\n    var thumbHeight = thumb.offsetHeight +\n        parseFloat(computedStyle['marginTop']) +\n        parseFloat(computedStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerSize.width > containerSize.height) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerSize.width - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerSize.height - thumbHeight;\n    }\n    this.sliderInitialized_ = true;\n  };\n\n  /**\n   * @param {MouseEvent} event The browser event to handle.\n   * @private\n   */\n  ZoomSlider.prototype.handleContainerClick_ = function handleContainerClick_ (event) {\n    var view = this.getMap().getView();\n\n    var relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2);\n\n    var resolution = this.getResolutionForPosition_(relativePosition);\n\n    view.animate({\n      resolution: view.constrainResolution(resolution),\n      duration: this.duration_,\n      easing: easeOut\n    });\n  };\n\n  /**\n   * Handle dragger start events.\n   * @param {module:ol/pointer/PointerEvent} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerStart_ = function handleDraggerStart_ (event) {\n    if (!this.dragging_ && event.originalEvent.target === this.element.firstElementChild) {\n      this.getMap().getView().setHint(ViewHint.INTERACTING, 1);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n      this.dragging_ = true;\n    }\n  };\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerDrag_ = function handleDraggerDrag_ (event) {\n    if (this.dragging_) {\n      var element = /** @type {HTMLElement} */ (this.element.firstElementChild);\n      var deltaX = event.clientX - this.previousX_ + parseInt(element.style.left, 10);\n      var deltaY = event.clientY - this.previousY_ + parseInt(element.style.top, 10);\n      var relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ = this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n      this.setThumbPosition_(this.currentResolution_);\n      this.previousX_ = event.clientX;\n      this.previousY_ = event.clientY;\n    }\n  };\n\n  /**\n   * Handle dragger end events.\n   * @param {module:ol/pointer/PointerEvent|Event} event The drag event.\n   * @private\n   */\n  ZoomSlider.prototype.handleDraggerEnd_ = function handleDraggerEnd_ (event) {\n    if (this.dragging_) {\n      var view = this.getMap().getView();\n      view.setHint(ViewHint.INTERACTING, -1);\n\n      view.animate({\n        resolution: view.constrainResolution(this.currentResolution_),\n        duration: this.duration_,\n        easing: easeOut\n      });\n\n      this.dragging_ = false;\n      this.previousX_ = undefined;\n      this.previousY_ = undefined;\n    }\n  };\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  ZoomSlider.prototype.setThumbPosition_ = function setThumbPosition_ (res) {\n    var position = this.getPositionForResolution_(res);\n    var thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  };\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  ZoomSlider.prototype.getRelativePosition_ = function getRelativePosition_ (x, y) {\n    var amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  };\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  ZoomSlider.prototype.getResolutionForPosition_ = function getResolutionForPosition_ (position) {\n    var fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  };\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  ZoomSlider.prototype.getPositionForResolution_ = function getPositionForResolution_ (res) {\n    var fn = this.getMap().getView().getValueForResolutionFunction();\n    return 1 - fn(res);\n  };\n\n  return ZoomSlider;\n}(Control));\n\n\n/**\n * Update the zoomslider element.\n * @param {module:ol/MapEvent} mapEvent Map event.\n * @this {module:ol/control/ZoomSlider}\n * @api\n */\nexport function render(mapEvent) {\n  if (!mapEvent.frameState) {\n    return;\n  }\n  if (!this.sliderInitialized_) {\n    this.initSlider_();\n  }\n  var res = mapEvent.frameState.viewState.resolution;\n  if (res !== this.currentResolution_) {\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\n\nexport default ZoomSlider;\n\n//# sourceMappingURL=ZoomSlider.js.map","/**\n * @module ol/control/ZoomToExtent\n */\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport Control from '../control/Control.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoom-extent'] Class name.\n * @property {HTMLElement|string} [target] Specify a target if you want the control\n * to be rendered outside of the map's viewport.\n * @property {string|HTMLElement} [label='E'] Text label to use for the button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Fit to extent'] Text label to use for the button tip.\n * @property {module:ol/extent~Extent} [extent] The extent to zoom to. If undefined the validity\n * extent of the view projection is used.\n */\n\n\n/**\n * @classdesc\n * A button control which, when pressed, changes the map view to a specific\n * extent. To style this control use the css selector `.ol-zoom-extent`.\n *\n * @api\n */\nvar ZoomToExtent = (function (Control) {\n  function ZoomToExtent(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    Control.call(this, {\n      element: document.createElement('div'),\n      target: options.target\n    });\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @protected\n     */\n    this.extent = options.extent ? options.extent : null;\n\n    var className = options.className !== undefined ? options.className : 'ol-zoom-extent';\n\n    var label = options.label !== undefined ? options.label : 'E';\n    var tipLabel = options.tipLabel !== undefined ? options.tipLabel : 'Fit to extent';\n    var button = document.createElement('button');\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(\n      typeof label === 'string' ? document.createTextNode(label) : label\n    );\n\n    listen(button, EventType.CLICK, this.handleClick_, this);\n\n    var cssClasses = className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    var element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n  }\n\n  if ( Control ) ZoomToExtent.__proto__ = Control;\n  ZoomToExtent.prototype = Object.create( Control && Control.prototype );\n  ZoomToExtent.prototype.constructor = ZoomToExtent;\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  ZoomToExtent.prototype.handleClick_ = function handleClick_ (event) {\n    event.preventDefault();\n    this.handleZoomToExtent();\n  };\n\n  /**\n   * @protected\n   */\n  ZoomToExtent.prototype.handleZoomToExtent = function handleZoomToExtent () {\n    var map = this.getMap();\n    var view = map.getView();\n    var extent = !this.extent ? view.getProjection().getExtent() : this.extent;\n    view.fit(extent);\n  };\n\n  return ZoomToExtent;\n}(Control));\n\nexport default ZoomToExtent;\n\n//# sourceMappingURL=ZoomToExtent.js.map","/**\n * @module ol/control\n */\n\nexport {default as Attribution} from './control/Attribution.js';\nexport {default as Control} from './control/Control.js';\nexport {default as FullScreen} from './control/FullScreen.js';\nexport {default as OverviewMap} from './control/OverviewMap.js';\nexport {default as Rotate} from './control/Rotate.js';\nexport {default as ScaleLine} from './control/ScaleLine.js';\nexport {default as Zoom} from './control/Zoom.js';\nexport {default as ZoomSlider} from './control/ZoomSlider.js';\nexport {default as ZoomToExtent} from './control/ZoomToExtent.js';\nexport {defaults} from './control/util.js';\n\n//# sourceMappingURL=control.js.map","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.NgwMap=e():t.NgwMap=e()}(window,function(){return function(t){var e={};function n(r){if(e[r])return e[r].exports;var o=e[r]={i:r,l:!1,exports:{}};return t[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},n.r=function(t){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},n.t=function(t,e){if(1&e&&(t=n(t)),8&e)return t;if(4&e&&\"object\"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,\"default\",{enumerable:!0,value:t}),2&e&&\"string\"!=typeof t)for(var o in t)n.d(r,o,function(e){return t[e]}.bind(null,o));return r},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,\"a\",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p=\"\",n(n.s=16)}([function(t,e){var n;n=function(){return this}();try{n=n||Function(\"return this\")()||(0,eval)(\"this\")}catch(t){\"object\"==typeof window&&(n=window)}t.exports=n},function(t,e,n){!function(t){\"use strict\";\n/*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n])})(t,n)};function n(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}var r=function(){return(r=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function o(t,e,n,r){return new(n||(n=Promise))(function(o,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function s(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(a,s)}l((r=r.apply(t,e||[])).next())})}function i(t,e){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}function a(t){var e=\"function\"==typeof Symbol&&t[Symbol.iterator],n=0;return e?e.call(t):{next:function(){return t&&n>=t.length&&(t=void 0),{value:t&&t[n++],done:!t}}}}function s(t){if(!Symbol.asyncIterator)throw new TypeError(\"Symbol.asyncIterator is not defined.\");var e,n=t[Symbol.asyncIterator];return n?n.call(t):(t=a(t),e={},r(\"next\"),r(\"throw\"),r(\"return\"),e[Symbol.asyncIterator]=function(){return this},e);function r(n){e[n]=t[n]&&function(e){return new Promise(function(r,o){e=t[n](e),function(t,e,n,r){Promise.resolve(r).then(function(e){t({value:e,done:n})},e)}(r,o,e.done,e.value)})}}}function l(){}function c(){c.init.call(this)}function u(t){return void 0===t._maxListeners?c.defaultMaxListeners:t._maxListeners}function f(t,e,n,r){var o,i,a;if(\"function\"!=typeof n)throw new TypeError('\"listener\" argument must be a function');if((i=t._events)?(i.newListener&&(t.emit(\"newListener\",e,n.listener?n.listener:n),i=t._events),a=i[e]):(i=t._events=new l,t._eventsCount=0),a){if(\"function\"==typeof a?a=i[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),!a.warned&&(o=u(t))&&o>0&&a.length>o){a.warned=!0;var s=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+e+\" listeners added. Use emitter.setMaxListeners() to increase limit\");s.name=\"MaxListenersExceededWarning\",s.emitter=t,s.type=e,s.count=a.length,function(t){\"function\"==typeof console.warn?console.warn(t):console.log(t)}(s)}}else a=i[e]=n,++t._eventsCount;return t}function p(t,e,n){var r=!1;function o(){t.removeListener(e,o),r||(r=!0,n.apply(t,arguments))}return o.listener=n,o}function h(t){var e=this._events;if(e){var n=e[t];if(\"function\"==typeof n)return 1;if(n)return n.length}return 0}function d(t,e){for(var n=new Array(e);e--;)n[e]=t[e];return n}function m(t,e,n,r){var o;if(void 0===e&&(e=function(t){return t}),void 0===r&&(r=[]),Array.isArray(t))o=t;else{var i=e(t);i&&r.push(t);var a=n(t);a&&(o=[].concat(a))}if(o)for(var s=0;s<o.length;s++)o[s]&&m(o[s],e,n,r);return r}l.prototype=Object.create(null),c.EventEmitter=c,c.usingDomains=!1,c.prototype.domain=void 0,c.prototype._events=void 0,c.prototype._maxListeners=void 0,c.defaultMaxListeners=10,c.init=function(){this.domain=null,c.usingDomains&&(void 0).active&&(void 0).Domain,this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=new l,this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},c.prototype.setMaxListeners=function(t){if(\"number\"!=typeof t||t<0||isNaN(t))throw new TypeError('\"n\" argument must be a positive number');return this._maxListeners=t,this},c.prototype.getMaxListeners=function(){return u(this)},c.prototype.emit=function(t){var e,n,r,o,i,a,s,l=\"error\"===t;if(a=this._events)l=l&&null==a.error;else if(!l)return!1;if(s=this.domain,l){if(e=arguments[1],!s){if(e instanceof Error)throw e;var c=new Error('Uncaught, unspecified \"error\" event. ('+e+\")\");throw c.context=e,c}return e||(e=new Error('Uncaught, unspecified \"error\" event')),e.domainEmitter=this,e.domain=s,e.domainThrown=!1,s.emit(\"error\",e),!1}if(!(n=a[t]))return!1;var u=\"function\"==typeof n;switch(r=arguments.length){case 1:!function(t,e,n){if(e)t.call(n);else for(var r=t.length,o=d(t,r),i=0;i<r;++i)o[i].call(n)}(n,u,this);break;case 2:!function(t,e,n,r){if(e)t.call(n,r);else for(var o=t.length,i=d(t,o),a=0;a<o;++a)i[a].call(n,r)}(n,u,this,arguments[1]);break;case 3:!function(t,e,n,r,o){if(e)t.call(n,r,o);else for(var i=t.length,a=d(t,i),s=0;s<i;++s)a[s].call(n,r,o)}(n,u,this,arguments[1],arguments[2]);break;case 4:!function(t,e,n,r,o,i){if(e)t.call(n,r,o,i);else for(var a=t.length,s=d(t,a),l=0;l<a;++l)s[l].call(n,r,o,i)}(n,u,this,arguments[1],arguments[2],arguments[3]);break;default:for(o=new Array(r-1),i=1;i<r;i++)o[i-1]=arguments[i];!function(t,e,n,r){if(e)t.apply(n,r);else for(var o=t.length,i=d(t,o),a=0;a<o;++a)i[a].apply(n,r)}(n,u,this,o)}return!0},c.prototype.addListener=function(t,e){return f(this,t,e,!1)},c.prototype.on=c.prototype.addListener,c.prototype.prependListener=function(t,e){return f(this,t,e,!0)},c.prototype.once=function(t,e){if(\"function\"!=typeof e)throw new TypeError('\"listener\" argument must be a function');return this.on(t,p(this,t,e)),this},c.prototype.prependOnceListener=function(t,e){if(\"function\"!=typeof e)throw new TypeError('\"listener\" argument must be a function');return this.prependListener(t,p(this,t,e)),this},c.prototype.removeListener=function(t,e){var n,r,o,i,a;if(\"function\"!=typeof e)throw new TypeError('\"listener\" argument must be a function');if(!(r=this._events))return this;if(!(n=r[t]))return this;if(n===e||n.listener&&n.listener===e)0==--this._eventsCount?this._events=new l:(delete r[t],r.removeListener&&this.emit(\"removeListener\",t,n.listener||e));else if(\"function\"!=typeof n){for(o=-1,i=n.length;i-- >0;)if(n[i]===e||n[i].listener&&n[i].listener===e){a=n[i].listener,o=i;break}if(o<0)return this;if(1===n.length){if(n[0]=void 0,0==--this._eventsCount)return this._events=new l,this;delete r[t]}else!function(t,e){for(var n=e,r=n+1,o=t.length;r<o;n+=1,r+=1)t[n]=t[r];t.pop()}(n,o);r.removeListener&&this.emit(\"removeListener\",t,a||e)}return this},c.prototype.removeAllListeners=function(t){var e,n;if(!(n=this._events))return this;if(!n.removeListener)return 0===arguments.length?(this._events=new l,this._eventsCount=0):n[t]&&(0==--this._eventsCount?this._events=new l:delete n[t]),this;if(0===arguments.length){for(var r,o=Object.keys(n),i=0;i<o.length;++i)\"removeListener\"!==(r=o[i])&&this.removeAllListeners(r);return this.removeAllListeners(\"removeListener\"),this._events=new l,this._eventsCount=0,this}if(\"function\"==typeof(e=n[t]))this.removeListener(t,e);else if(e)do{this.removeListener(t,e[e.length-1])}while(e[0]);return this},c.prototype.listeners=function(t){var e,n,r=this._events;return r?(e=r[t],n=e?\"function\"==typeof e?[e.listener||e]:function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(e):[]):n=[],n},c.listenerCount=function(t,e){return\"function\"==typeof t.listenerCount?t.listenerCount(e):h.call(t,e)},c.prototype.listenerCount=h,c.prototype.eventNames=function(){return this._eventsCount>0?Reflect.ownKeys(this._events):[]};var y=function(){function t(t){this._children=[],this.entry=t}return t.prototype.setParent=function(t){this._parent=t},t.prototype.addChildren=function(t){this._children.push(t)},t.prototype.getParent=function(){return this._parent},t.prototype.getParents=function(t){if(this.getParent()){var e=m(this._parent,t,function(t){return t.tree.getParent()});return e}return[]},t.prototype.getDescendants=function(t){return m(this._children,t,function(t){return t.tree.getChildren()})},t.prototype.getChildren=function(){return this._children},t}(),g=function(t){function e(n,r,o){var i=t.call(this,n,r,Object.assign({},e.options,o))||this;return i.set(i.value()),i}return n(e,t),e.prototype.update=function(t,e){if(t){var n=e&&e.bubble||this.options.bubble;if(n){this.unBlock(e);var r=this.getParent(),o=r&&r.properties.get(this.name);o&&o.set(t,Object.assign({},e,{bubble:!0,propagation:!1}))}this.isBlocked()||this._turnOn(e)}else this._turnOff(e);var i=e&&e.propagation||this.options.propagation;i&&this._propagation(t,e)},e.prototype.getHierarchyValue=function(){var t=this;return this.value()&&this.getParents().every(function(e){var n=e.properties[t.name];return n&&n.get()})},e.prototype._prepareValue=function(t){return!!t},e.prototype._turnOff=function(t){this.options.turnOff&&this.options.turnOff.call(this,t),this._callOnSet(!1,t),this.options.hierarchy&&this.isGroup()&&this.blockChilds(t)},e.prototype._turnOn=function(t){this.options.turnOn&&this.options.turnOn.call(this,t),this._callOnSet(!0,t),this.options.hierarchy&&this.isGroup()&&this.unblockChilds(t)},e.prototype.block=function(t){this._blocked=!0,this._block(t)},e.prototype._block=function(t){this._turnOff(t)},e.prototype.unBlock=function(t){this._blocked=!1,this.getValue()&&this._unBlock(t)},e.prototype._unBlock=function(t){this._turnOn(t)},e.prototype.blockChilds=function(t){this.entry.tree.getDescendants().forEach(this._blockChild.bind(this,t))},e.prototype.unblockChilds=function(t){this.entry.tree.getChildren().forEach(this._unBlockChild.bind(this,t))},e.prototype._blockChild=function(t,e){var n=e.properties.get(this.name);n.block&&n.block(t)},e.prototype._unBlockChild=function(t,e){var n=e.properties.get(this.name);n.unBlock&&n.unBlock(t)},e.prototype._propagation=function(t,e){if(this.isGroup())for(var n=this.entry.tree.getChildren(),o=0;o<n.length;o++){var i=n[o],a=i.properties.get(this.name);a&&a.set(t,r({},e,{propagation:!0,bubble:!1}))}},e.options={hierarchy:!0,bubble:!1,propagation:!1,label:\"Toggle\"},e}(function(){function t(t,e,n){this.emitter=new c,this.entry=e,this.options=Object.assign({},n),this.name=t,this._value=this.getProperty()}return t.prototype.getProperty=function(){return\"function\"==typeof this.options.getProperty?this.options.getProperty.call(this):this.options.value},t.prototype.getParents=function(){return this.entry.tree.getParents()||[]},t.prototype.getParent=function(){return this.entry.tree.getParent()},t.prototype.isGroup=function(){var t=this.entry.tree.getDescendants();return t.length},t.prototype.isBlocked=function(){var t=this;if(void 0===this._blocked){var e=this.entry.tree.getParents();if(e){var n=e.find(function(e){var n=e.properties.get(t.name);if(n)return!n.value()});this._blocked=!!n}else this._blocked=!1}return this._blocked},t.prototype.set=function(t,e){this._value=this._prepareValue(t),this.update(this._value,e),this._fireChangeEvent(this._value,e)},t.prototype.value=function(){return this.getValue()},t.prototype.update=function(t,e){this._callOnSet(t,e)},t.prototype.getContainer=function(){return this._container},t.prototype.destroy=function(){this._container&&this._container.parentNode.removeChild(this._container),this._removeEventsListener&&this._removeEventsListener()},t.prototype.getValue=function(){return void 0!==this._value?this._value:this.getProperty()},t.prototype._prepareValue=function(t){return t},t.prototype._callOnSet=function(t,e){this.options.onSet&&this.options.onSet.call(this,t,e)},t.prototype._fireChangeEvent=function(t,e){var n=this;t=void 0!==t?t:this.getValue(),this.emitter.emit(\"change\",{value:t,options:e});var r=this.entry.tree.getParents();r.forEach(function(r){var o=r.properties.get(n.name);o&&o.emitter.emit(\"change-tree\",{value:t,options:e,entry:n.entry})})},t}()),b=function(){function t(t,e){this.options={},this.entry=t,this._properties={},this._propertiesList=[],e&&e.forEach(this._setPropertyHandler.bind(this))}return t.prototype.add=function(t){this._setPropertyHandler(t)},t.prototype._setPropertyHandler=function(e){var n=t.handlers,o=e.handler;if(!o&&e.type)switch(e.type){case\"boolean\":o=n.CheckProperty;break;case\"string\":o=n.BaseProperty;break;default:o=n.BaseProperty}if(o){var i=r({},e||{});this._properties[e.name]=new o(e.name,this.entry,i),this._propertiesList.push(e.name)}},t.prototype.update=function(){this.list().forEach(function(t){t.update()})},t.prototype.value=function(t){var e=this.get(t);if(e)return e.value},t.prototype.set=function(t,e,n){var r=this.get(t);if(r)return r.set(e,n)},t.prototype.get=function(t){return this._properties[t]},t.prototype.list=function(){var t=this;return this._propertiesList.map(function(e){return t._properties[e]})},t.prototype.destroy=function(){for(var t in this._properties)if(this._properties.hasOwnProperty(t)){var e=this.get(t);e&&e.destroy&&e.destroy()}this._properties=null,this._propertiesList=[]},t.handlers={CheckProperty:g},t}(),v=0,w=function(t){function e(n,r,o,i){var a=t.call(this,Object.assign({},e.options,o))||this;return a.map=n,a.item=r,i&&a.tree.setParent(i),a.initProperties(),a.initItem(r),a}return n(e,t),e.prototype.initItem=function(t){var n=this,r=t._layer;if(\"group\"===t.item_type||\"root\"===t.item_type)t.children&&t.children.length&&t.children.forEach(function(t){var r=new e(n.map,t,n.options,n);n.tree.addChildren(r)});else if(\"layer\"===t.item_type){var o=t.layer_adapter.toUpperCase();r=this.map.addLayer(o,Object.assign({id:this.id},t))}r&&(t._layer=r,\"layer\"===t.item_type&&t.layer_enabled&&this.properties.get(\"visibility\").set(!0))},e.prototype.fit=function(){\"layer\"===this.item.item_type&&console.log(this.item)},e.options={properties:[{type:\"boolean\",name:\"visibility\",getProperty:function(){var t=this.entry;return\"group\"===t.item.item_type||(\"layer\"===t.item.item_type?t.item.layer_enabled:\"root\"===t.item.item_type)},onSet:function(t){var e=this.entry;\"layer\"===e.item.item_type&&(t?e.map.showLayer(e.id):e.map.hideLayer(e.id),e.item.layer_enabled=t)}}]},e}(function(){function t(t){this.emitter=new c,this.options=Object.assign({},this.options,t),this.id=String(v++),this.tree=new y(this)}return t.prototype.initProperties=function(){this.properties=new b(this,this.options.properties)},t}()),x=function(){this.backspace=8,this.tab=9,this.enter=13,this.shift=16,this.ctrl=17,this.alt=18,this[\"pause/break\"]=19,this.caps_lock=20,this.escape=27,this.page_up=33,this.page_down=34,this.end=35,this.home=36,this.left_arrow=37,this.up_arrow=38,this.right_arrow=39,this.down_arrow=40,this.insert=45,this.delete=46,this.left_window_key=91,this.right_window_key=92,this.select_key=93,this.numpad_0=96,this.numpad_1=97,this.numpad_2=98,this.numpad_3=99,this.numpad_4=100,this.numpad_5=101,this.numpad_6=102,this.numpad_7=103,this.numpad_8=104,this.numpad_9=105,this.multiply=106,this.add=107,this.subtract=109,this.decimal_point=110,this.divide=111,this.f1=112,this.f2=113,this.f3=114,this.f4=115,this.f5=116,this.f6=117,this.f7=118,this.f8=119,this.f9=120,this.f10=121,this.f11=122,this.f12=123,this.num_lock=144,this.scroll_lock=145,this[\"semi-colon\"]=186,this.equal_sign=187,this[\",\"]=188,this[\"-\"]=189,this[\".\"]=190,this[\"/\"]=191,this[\"`\"]=192,this[\"[\"]=219,this[\"\\\\\"]=220,this[\"]\"]=221,this[\"'\"]=222},_=function(){function t(){this.keyCodeAlias=new x,this.keys={},this._windowOnFocus=this.windowOnFocus.bind(this),this._keysPressed=this.keysPressed.bind(this),this._keysReleased=this.keysReleased.bind(this),this.addKeyboardEventsListener()}return t.prototype.pressed=function(t){var e=this.keyCodeAlias[t];if(e)return this.keys[e]},t.prototype.addKeyboardEventsListener=function(){window.addEventListener(\"focus\",this._windowOnFocus,!1),window.addEventListener(\"keydown\",this._keysPressed,!1),window.addEventListener(\"keyup\",this._keysReleased,!1)},t.prototype.removeKeyboardEventsListener=function(){window.removeEventListener(\"focus\",this._windowOnFocus,!1),window.removeEventListener(\"keydown\",this._keysPressed,!1),window.removeEventListener(\"keyup\",this._keysReleased,!1)},t.prototype.keysPressed=function(t){t.stopPropagation(),this.keys[t.keyCode]||(this.keys[t.keyCode]=!0)},t.prototype.keysReleased=function(t){t.stopPropagation(),this.keys[t.keyCode]=!1},t.prototype.windowOnFocus=function(){this.keys={}},t}(),k=function(){function t(t){this.displayProjection=\"EPSG:3857\",this.lonlatProjection=\"EPSG:4326\",this.emitter=new c,this.keys=new _,this.settingsIsLoading=!1,this._baseLayers=[],this.map=t.mapAdapter,this._starterKits=t.starterKits||[],this._addEventsListeners()}return t.prototype.create=function(t){return o(this,void 0,void 0,function(){return i(this,function(e){switch(e.label){case 0:return this.options=function t(e,n,r){void 0===r&&(r=!1);var o=Array.isArray(n),i=o&&[]||{};return o?r?(e=e||[],i=i.concat(e),n.forEach(function(n,o){void 0===i[o]?i[o]=n:\"object\"==typeof n?i[o]=t(e[o],n,r):-1===e.indexOf(n)&&i.push(n)})):i=n:(e&&\"object\"==typeof e&&Object.keys(e).forEach(function(t){i[t]=e[t]}),Object.keys(n).forEach(function(o){\"object\"==typeof n[o]&&n[o]&&e[o]?i[o]=t(e[o],n[o],r):i[o]=n[o]})),i}(this.options||{},t),this.settings||!this._starterKits.length?[3,2]:[4,this.getSettings()];case 1:e.sent(),e.label=2;case 2:return[4,this._setupMap()];case 3:return e.sent(),[2,this]}})})},t.prototype.getSettings=function(){return o(this,void 0,void 0,function(){var t,e,n,r,o,a,s=this;return i(this,function(i){switch(i.label){case 0:return this.settings?[2,Promise.resolve(this.settings)]:this.settingsIsLoading?[2,new Promise(function(t){var e=function(n){t(n),s.emitter.removeListener(\"load-settings\",e)};s.emitter.on(\"load-settings\",e)})]:[3,1];case 1:this.settingsIsLoading=!0,t=void 0,i.label=2;case 2:i.trys.push([2,7,,8]),t={},e=0,n=this._starterKits.filter(function(t){return t.getSettings}),i.label=3;case 3:return e<n.length?[4,(r=n[e]).getSettings.call(r)]:[3,6];case 4:(o=i.sent())&&Object.assign(t,o),i.label=5;case 5:return e++,[3,3];case 6:return[3,8];case 7:throw a=i.sent(),this.settingsIsLoading=!1,new Error(a);case 8:if(t)return this.settings=t,this.settingsIsLoading=!1,this.emitter.emit(\"load-settings\",t),[2,t];i.label=9;case 9:return[2]}})})},t.prototype.addBaseLayer=function(t,e,n){var o=this;return this.map.addLayer(e,r({},n,{id:t}),!0).then(function(t){return t&&o._baseLayers.push(t.name),t})},t.prototype.isBaseLayer=function(t){return-1!==this._baseLayers.indexOf(t)},t.prototype._setupMap=function(){return o(this,void 0,void 0,function(){var t,e,n,r,o,a;return i(this,function(i){switch(i.label){case 0:return this.settings&&(t=this.settings,e=t.extent_bottom,n=t.extent_left,r=t.extent_top,o=t.extent_right,e&&n&&r&&o&&(this._extent=[n,e,o,r],(a=this._extent)[3]>82&&(a[3]=82),a[1]<-82&&(a[1]=-82))),this.map.displayProjection=this.displayProjection,this.map.lonlatProjection=this.lonlatProjection,this.map.create(this.options),this._addTreeLayers(),[4,this._addLayerProviders()];case 1:return i.sent(),this._zoomToInitialExtent(),this.emitter.emit(\"build-map\",this.map),[2,this]}})})},t.prototype._addTreeLayers=function(){return o(this,void 0,void 0,function(){var t,e;return i(this,function(n){switch(n.label){case 0:return[4,this.getSettings()];case 1:return(t=n.sent())&&(e=t.root_item)&&(this.layers=new w(this.map,e),this.emitter.emit(\"add-layers\",this.layers)),[2]}})})},t.prototype._zoomToInitialExtent=function(){if(this._extent)this.map.fit(this._extent);else{var t=this.options,e=t.center,n=t.zoom;e&&this.map.setCenter(e),n&&this.map.setZoom(n)}},t.prototype._addLayerProviders=function(){return o(this,void 0,void 0,function(){var t,e,n,r,o,a,l,c,u,f,p,h,d,m,y;return i(this,function(i){switch(i.label){case 0:i.trys.push([0,26,,27]),i.label=1;case 1:i.trys.push([1,19,20,25]),o=s(this._starterKits.filter(function(t){return t.getLayerAdapters})),i.label=2;case 2:return[4,o.next()];case 3:return(a=i.sent()).done?[3,18]:[4,(l=a.value).getLayerAdapters.call(l)];case 4:if(!(c=i.sent()))return[3,17];i.label=5;case 5:i.trys.push([5,11,12,17]),u=s(c),i.label=6;case 6:return[4,u.next()];case 7:return(f=i.sent()).done?[3,10]:[4,(p=f.value).createAdapter(this.map)];case 8:(h=i.sent())&&(this.map.layerAdapters[p.name]=h),i.label=9;case 9:return[3,6];case 10:return[3,17];case 11:return d=i.sent(),n={error:d},[3,17];case 12:return i.trys.push([12,,15,16]),f&&!f.done&&(r=u.return)?[4,r.call(u)]:[3,14];case 13:i.sent(),i.label=14;case 14:return[3,16];case 15:if(n)throw n.error;return[7];case 16:return[7];case 17:return[3,2];case 18:return[3,25];case 19:return m=i.sent(),t={error:m},[3,25];case 20:return i.trys.push([20,,23,24]),a&&!a.done&&(e=o.return)?[4,e.call(o)]:[3,22];case 21:i.sent(),i.label=22;case 22:return[3,24];case 23:if(t)throw t.error;return[7];case 24:return[7];case 25:return[3,27];case 26:throw y=i.sent(),new Error(y);case 27:return[2]}})})},t.prototype._addEventsListeners=function(){var t=this;this.map.emitter.on(\"click\",function(e){return t._onMapClick(e)})},t.prototype._onMapClick=function(t){var e=this;this.emitter.emit(\"click\",t),this._starterKits.forEach(function(n){n.onMapClick&&n.onMapClick(t,e)})},t}();function L(t,e){return o(this,void 0,void 0,function(){var n;return i(this,function(r){switch(r.label){case 0:return[4,(n=new k(t)).create(e)];case 1:return r.sent(),[2,n]}})})}window.buildWebMap=L,t.WebMap=k,t.buildWebMap=L,Object.defineProperty(t,\"__esModule\",{value:!0})}(e)},function(e,n,r){(function(e,r){!function(t,e){e(n)}(0,function(n){\"use strict\";\n/*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */function o(t,e){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}var i=\"undefined\"!=typeof window?window:void 0!==e?e:\"undefined\"!=typeof self?self:{};!function(t,e){t(e={exports:{}},e.exports)}(function(e,n){Object.assign||Object.defineProperty(Object,\"assign\",{enumerable:!1,configurable:!0,writable:!0,value:function(e,n){if(null==e)throw new TypeError(\"Cannot convert first argument to object\");for(let t=Object(e),n=1;n<arguments.length;n++){let e=arguments[n];if(null!=e)for(let n=Object.keys(Object(e)),r=0,o=n.length;r<o;r++){let o=n[r],i=Object.getOwnPropertyDescriptor(e,o);void 0!==i&&i.enumerable&&(t[o]=e[o])}}return t}}),function(){function t(t){var e=this.constructor;return this.then(function(n){return e.resolve(t()).then(function(){return n})},function(n){return e.resolve(t()).then(function(){return e.reject(n)})})}function e(){}function n(t){if(!(this instanceof n))throw new TypeError(\"Promises must be constructed via new\");if(\"function\"!=typeof t)throw new TypeError(\"not a function\");this._state=0,this._handled=!1,this._value=void 0,this._deferreds=[],c(t,this)}function o(t,e){for(;3===t._state;)t=t._value;0!==t._state?(t._handled=!0,n._immediateFn(function(){var n=1===t._state?e.onFulfilled:e.onRejected;if(null!==n){var r;try{r=n(t._value)}catch(t){return void s(e.promise,t)}a(e.promise,r)}else(1===t._state?a:s)(e.promise,t._value)})):t._deferreds.push(e)}function a(t,e){try{if(e===t)throw new TypeError(\"A promise cannot be resolved with itself.\");if(e&&(\"object\"==typeof e||\"function\"==typeof e)){var r=e.then;if(e instanceof n)return t._state=3,t._value=e,void l(t);if(\"function\"==typeof r)return void c(function(t,e){return function(){t.apply(e,arguments)}}(r,e),t)}t._state=1,t._value=e,l(t)}catch(e){s(t,e)}}function s(t,e){t._state=2,t._value=e,l(t)}function l(t){2===t._state&&0===t._deferreds.length&&n._immediateFn(function(){t._handled||n._unhandledRejectionFn(t._value)});for(var e=0,r=t._deferreds.length;r>e;e++)o(t,t._deferreds[e]);t._deferreds=null}function c(t,e){var n=!1;try{t(function(t){n||(n=!0,a(e,t))},function(t){n||(n=!0,s(e,t))})}catch(t){if(n)return;n=!0,s(e,t)}}var u=setTimeout;n.prototype.catch=function(t){return this.then(null,t)},n.prototype.then=function(t,n){var r=new this.constructor(e);return o(this,new function(t,e,n){this.onFulfilled=\"function\"==typeof t?t:null,this.onRejected=\"function\"==typeof e?e:null,this.promise=n}(t,n,r)),r},n.prototype.finally=t,n.all=function(t){return new n(function(e,n){function r(t,a){try{if(a&&(\"object\"==typeof a||\"function\"==typeof a)){var s=a.then;if(\"function\"==typeof s)return void s.call(a,function(e){r(t,e)},n)}o[t]=a,0==--i&&e(o)}catch(t){n(t)}}if(!t||void 0===t.length)throw new TypeError(\"Promise.all accepts an array\");var o=Array.prototype.slice.call(t);if(0===o.length)return e([]);for(var i=o.length,a=0;o.length>a;a++)r(a,o[a])})},n.resolve=function(t){return t&&\"object\"==typeof t&&t.constructor===n?t:new n(function(e){e(t)})},n.reject=function(t){return new n(function(e,n){n(t)})},n.race=function(t){return new n(function(e,n){for(var r=0,o=t.length;o>r;r++)t[r].then(e,n)})},n._immediateFn=\"function\"==typeof r&&function(t){r(t)}||function(t){u(t,0)},n._unhandledRejectionFn=function(t){void 0!==console&&console&&console.warn(\"Possible Unhandled Promise Rejection:\",t)};var f=function(){if(\"undefined\"!=typeof self)return self;if(\"undefined\"!=typeof window)return window;if(void 0!==i)return i;throw Error(\"unable to locate global object\")}();\"Promise\"in f?f.Promise.prototype.finally||(f.Promise.prototype.finally=t):f.Promise=n}()});var a={route:\"/api/component/pyramid/route\"},s=function(){function t(t){this.options={},this._loadingQueue={},this._loadingStatus={},this.options=Object.assign({},a,t||{})}return t.prototype.connect=function(){return function(t,e,n,r){return new(n||(n=Promise))(function(o,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function s(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(a,s)}l((r=r.apply(t,e||[])).next())})}(this,void 0,void 0,function(){var t,e,n,r=this;return o(this,function(o){switch(o.label){case 0:return this.route?[2,Promise.resolve(this.route)]:[3,1];case 1:return this.options.auth?(t=this.options.auth,e=t.login,n=t.password,e&&n?[4,this.getUserInfo()]:[3,3]):[3,3];case 2:o.sent(),o.label=3;case 3:return[4,this.makeQuery(this.options.route,{},{}).then(function(t){return r.route=t,t})];case 4:return[2,o.sent()]}})})},t.prototype.getUserInfo=function(){var t=this,e=this.makeClientId();return this.makeQuery(\"/api/component/auth/current_user\",{},{headers:{Authorization:\"Basic \"+e,\"Access-Control-Allow-Origin\":\"*\",\"Access-Control-Allow-Headers\":\"*\"},mode:\"cors\"}).then(function(e){console.log(e),\"guest\"!==e.keyname&&(e.clientId=t.makeClientId(),localStorage&&localStorage.setItem(\"nguser\",JSON.stringify(e)))})},t.prototype.makeClientId=function(){var t=this.options.auth,e=t.login,n=t.password;return window.btoa(unescape(encodeURIComponent(e+\":\"+n)))},t.prototype.request=function(t,e,n){var r=this;return this.connect().then(function(o){for(var i in o)if(o.hasOwnProperty(i)&&i===t){var a=o[i].slice(),s=a.shift();if(a.length){e=e||{};for(var l={},u=0;u<a.length;u++){var f=a[u];if(l[u]=\"{\"+f+\"}\",void 0===e[f])throw new Error(\"`\"+f+\"` url api argument is not specified\")}s=c(s,l)}return r.makeQuery(s,e,n)}})},t.prototype.post=function(t,e,n){return(e=e||{}).method=\"POST\",this.request(t,n,e)},t.prototype.makeQuery=function(t,e,n){var r=this;if(t=(this.options.baseUrl?this.options.baseUrl:\"\")+t)return e&&(t=c(t,e)),t=t.replace(/([^:]\\/)\\/+/g,\"$1\"),this._loadingStatus[t]?(this._loadingStatus[t]=!1,new Promise(function(e,n){r._setLoadingQueue(t,e,n)})):(this._loadingStatus[t]=!0,this._getJson(t,n).then(function(e){return r._loadingStatus[t]=!1,r._executeLoadingQueue(t,e),e}).catch(function(e){throw r._loadingStatus[t]=!1,r._executeLoadingQueue(t,e,!0),e}));throw new Error(\"No `url` parameter set for option \"+name)},t.prototype._setLoadingQueue=function(t,e,n){this._loadingQueue[t]=this._loadingQueue[t]||{name:t,waiting:[]},this._loadingQueue[t].waiting.push({resolve:e,reject:n,timestamp:new Date})},t.prototype._executeLoadingQueue=function(t,e,n){var r=this._loadingQueue[t];if(r){for(var o=0;o<r.waiting.length;o++){var i=r.waiting[o];n?i.reject&&i.reject():i.resolve(e)}r.waiting=[]}},t.prototype._getJson=function(t,e){return new Promise(function(n,r){!function(t,e,n,r){void 0===n&&(n={});var o;n.method=n.method||\"GET\",\"cors\"===n.mode?o=function(t,e){var n=new XMLHttpRequest;if(\"withCredentials\"in n)n.open(t,e,!0);else{var r=XDomainRequest;void 0!==r?(n=new r).open(t,e):n=null}return n}(n.method,t):(o=new XMLHttpRequest).open(n.method||\"GET\",t,!0);o.onreadystatechange=function(){if(4===o.readyState&&200===o.status||3===o.readyState&&201===o.status){if(o.responseText)try{e(JSON.parse(o.responseText))}catch(t){r()}}else if(3===o.readyState&&400===o.status)if(o.responseText)try{r(JSON.parse(o.responseText))}catch(t){r({message:\"\"})}else r({message:\"\"})},o.onerror=function(t){r(t)},o.upload.onprogress=function(t){if(t.lengthComputable){var e=t.loaded/t.total*100;n.onProgress&&n.onProgress(e)}};var i,a=n.headers;if(a)for(var s in a)a.hasOwnProperty(s)&&o.setRequestHeader(s,a[s]);if(o.withCredentials=n.withCredentials,n.file){if((i=new FormData).append(\"file\",n.file),n.data)for(var l in i)i.hasOwnProperty(l)&&i.append(l,i[l])}else i=n.data?JSON.stringify(n.data):null;o.send(i)}(t,n,e,r)})},t}();var l=/\\{ *([\\w_-]+) *\\}/g;function c(t,e){return t.replace(l,function(t,n){var r=e[n];if(void 0===r)throw new Error(\"No value provided for letiable \"+t);return\"function\"==typeof r&&(r=r(e)),r})}n.NgwConnector=s,Object.defineProperty(n,\"__esModule\",{value:!0})})}).call(this,r(0),r(4).setImmediate)},function(t,e,n){!function(t){\"use strict\";\n/*! *****************************************************************************\n    Copyright (c) Microsoft Corporation. All rights reserved.\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\n    this file except in compliance with the License. You may obtain a copy of the\n    License at http://www.apache.org/licenses/LICENSE-2.0\n\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\n    MERCHANTABLITY OR NON-INFRINGEMENT.\n\n    See the Apache Version 2.0 License for specific language governing permissions\n    and limitations under the License.\n    ***************************************************************************** */var e=function(){return(e=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function n(t,e){var n,r,o,i,a={label:0,sent:function(){if(1&o[0])throw o[1];return o[1]},trys:[],ops:[]};return i={next:s(0),throw:s(1),return:s(2)},\"function\"==typeof Symbol&&(i[Symbol.iterator]=function(){return this}),i;function s(i){return function(s){return function(i){if(n)throw new TypeError(\"Generator is already executing.\");for(;a;)try{if(n=1,r&&(o=2&i[0]?r.return:i[0]?r.throw||((o=r.return)&&o.call(r),0):r.next)&&!(o=o.call(r,i[1])).done)return o;switch(r=0,o&&(i=[2&i[0],o.value]),i[0]){case 0:case 1:o=i;break;case 4:return a.label++,{value:i[1],done:!1};case 5:a.label++,r=i[1],i=[0];continue;case 7:i=a.ops.pop(),a.trys.pop();continue;default:if(!(o=(o=a.trys).length>0&&o[o.length-1])&&(6===i[0]||2===i[0])){a=0;continue}if(3===i[0]&&(!o||i[1]>o[0]&&i[1]<o[3])){a.label=i[1];break}if(6===i[0]&&a.label<o[1]){a.label=o[1],o=i;break}if(o&&a.label<o[2]){a.label=o[2],a.ops.push(i);break}o[2]&&a.ops.pop(),a.trys.pop();continue}i=e.call(t,a)}catch(t){i=[6,t],r=0}finally{n=o=0}if(5&i[0])throw i[1];return{value:i[0]?i[1]:void 0,done:!0}}([i,s])}}}var r=function(){function t(t){this.options={url:\"https://qms.nextgis.com\"},this.options=e({},this.options,t),this.url=this.options.url}return t.prototype.getLayerAdapters=function(){var t=this;return Promise.resolve([{name:\"QMS\",createAdapter:function(e){return Promise.resolve(t._createAdapter(e))}}])},t.prototype.getQmsServices=function(){return function(t,e,n,r){return new(n||(n=Promise))(function(o,i){function a(t){try{l(r.next(t))}catch(t){i(t)}}function s(t){try{l(r.throw(t))}catch(t){i(t)}}function l(t){t.done?o(t.value):new n(function(e){e(t.value)}).then(a,s)}l((r=r.apply(t,e||[])).next())})}(this,void 0,void 0,function(){return n(this,function(t){return[2,o(this.url+\"/api/v1/geoservices/\")]})})},t.prototype._createAdapter=function(t){var e=this.url;this.map=t;var n={tms:\"TILE\"},r=function(t,e){this.map=t,this.name=e.id};return r.prototype.addLayer=function(r){var i=this;return o(e+\"/api/v1/geoservices/\"+r.qmsid).then(function(e){if(e){var o=n[e.type],a=t.layerAdapters[o];if(a&&\"TILE\"===o)return r.url=e.url,a.prototype.addLayer.call(i,r)}})},r},t}();function o(t){return new Promise(function(e,n){var r=new XMLHttpRequest;r.onreadystatechange=function(){if(4===r.readyState&&200===r.status&&r.responseText)try{e(JSON.parse(r.responseText))}catch(t){n(t)}},r.open(\"GET\",function(t){return t.replace(/([^:]\\/)\\/+/g,\"$1\")}(t),!0),r.send(null)})}t.QmsKit=r,Object.defineProperty(t,\"__esModule\",{value:!0})}(e)},function(t,e,n){(function(t){var r=void 0!==t&&t||\"undefined\"!=typeof self&&self||window,o=Function.prototype.apply;function i(t,e){this._id=t,this._clearFn=e}e.setTimeout=function(){return new i(o.call(setTimeout,r,arguments),clearTimeout)},e.setInterval=function(){return new i(o.call(setInterval,r,arguments),clearInterval)},e.clearTimeout=e.clearInterval=function(t){t&&t.close()},i.prototype.unref=i.prototype.ref=function(){},i.prototype.close=function(){this._clearFn.call(r,this._id)},e.enroll=function(t,e){clearTimeout(t._idleTimeoutId),t._idleTimeout=e},e.unenroll=function(t){clearTimeout(t._idleTimeoutId),t._idleTimeout=-1},e._unrefActive=e.active=function(t){clearTimeout(t._idleTimeoutId);var e=t._idleTimeout;e>=0&&(t._idleTimeoutId=setTimeout(function(){t._onTimeout&&t._onTimeout()},e))},n(5),e.setImmediate=\"undefined\"!=typeof self&&self.setImmediate||void 0!==t&&t.setImmediate||this&&this.setImmediate,e.clearImmediate=\"undefined\"!=typeof self&&self.clearImmediate||void 0!==t&&t.clearImmediate||this&&this.clearImmediate}).call(this,n(0))},function(t,e,n){(function(t,e){!function(t,n){\"use strict\";if(!t.setImmediate){var r,o=1,i={},a=!1,s=t.document,l=Object.getPrototypeOf&&Object.getPrototypeOf(t);l=l&&l.setTimeout?l:t,\"[object process]\"==={}.toString.call(t.process)?r=function(t){e.nextTick(function(){u(t)})}:function(){if(t.postMessage&&!t.importScripts){var e=!0,n=t.onmessage;return t.onmessage=function(){e=!1},t.postMessage(\"\",\"*\"),t.onmessage=n,e}}()?function(){var e=\"setImmediate$\"+Math.random()+\"$\",n=function(n){n.source===t&&\"string\"==typeof n.data&&0===n.data.indexOf(e)&&u(+n.data.slice(e.length))};t.addEventListener?t.addEventListener(\"message\",n,!1):t.attachEvent(\"onmessage\",n),r=function(n){t.postMessage(e+n,\"*\")}}():t.MessageChannel?function(){var t=new MessageChannel;t.port1.onmessage=function(t){u(t.data)},r=function(e){t.port2.postMessage(e)}}():s&&\"onreadystatechange\"in s.createElement(\"script\")?function(){var t=s.documentElement;r=function(e){var n=s.createElement(\"script\");n.onreadystatechange=function(){u(e),n.onreadystatechange=null,t.removeChild(n),n=null},t.appendChild(n)}}():r=function(t){setTimeout(u,0,t)},l.setImmediate=function(t){\"function\"!=typeof t&&(t=new Function(\"\"+t));for(var e=new Array(arguments.length-1),n=0;n<e.length;n++)e[n]=arguments[n+1];var a={callback:t,args:e};return i[o]=a,r(o),o++},l.clearImmediate=c}function c(t){delete i[t]}function u(t){if(a)setTimeout(u,0,t);else{var e=i[t];if(e){a=!0;try{!function(t){var e=t.callback,r=t.args;switch(r.length){case 0:e();break;case 1:e(r[0]);break;case 2:e(r[0],r[1]);break;case 3:e(r[0],r[1],r[2]);break;default:e.apply(n,r)}}(e)}finally{c(t),a=!1}}}}}(\"undefined\"==typeof self?void 0===t?this:t:self)}).call(this,n(0),n(6))},function(t,e){var n,r,o=t.exports={};function i(){throw new Error(\"setTimeout has not been defined\")}function a(){throw new Error(\"clearTimeout has not been defined\")}function s(t){if(n===setTimeout)return setTimeout(t,0);if((n===i||!n)&&setTimeout)return n=setTimeout,setTimeout(t,0);try{return n(t,0)}catch(e){try{return n.call(null,t,0)}catch(e){return n.call(this,t,0)}}}!function(){try{n=\"function\"==typeof setTimeout?setTimeout:i}catch(t){n=i}try{r=\"function\"==typeof clearTimeout?clearTimeout:a}catch(t){r=a}}();var l,c=[],u=!1,f=-1;function p(){u&&l&&(u=!1,l.length?c=l.concat(c):f=-1,c.length&&h())}function h(){if(!u){var t=s(p);u=!0;for(var e=c.length;e;){for(l=c,c=[];++f<e;)l&&l[f].run();f=-1,e=c.length}l=null,u=!1,function(t){if(r===clearTimeout)return clearTimeout(t);if((r===a||!r)&&clearTimeout)return r=clearTimeout,clearTimeout(t);try{r(t)}catch(e){try{return r.call(null,t)}catch(e){return r.call(this,t)}}}(t)}}function d(t,e){this.fun=t,this.array=e}function m(){}o.nextTick=function(t){var e=new Array(arguments.length-1);if(arguments.length>1)for(var n=1;n<arguments.length;n++)e[n-1]=arguments[n];c.push(new d(t,e)),1!==c.length||u||s(h)},d.prototype.run=function(){this.fun.apply(null,this.array)},o.title=\"browser\",o.browser=!0,o.env={},o.argv=[],o.version=\"\",o.versions={},o.on=m,o.addListener=m,o.once=m,o.off=m,o.removeListener=m,o.removeAllListeners=m,o.emit=m,o.prependListener=m,o.prependOnceListener=m,o.listeners=function(t){return[]},o.binding=function(t){throw new Error(\"process.binding is not supported\")},o.cwd=function(){return\"/\"},o.chdir=function(t){throw new Error(\"process.chdir is not supported\")},o.umask=function(){return 0}},function(t,e,n){var r=n(8);\"string\"==typeof r&&(r=[[t.i,r,\"\"]]);var o={hmr:!0,transform:void 0,insertInto:void 0};n(14)(r,o);r.locals&&(t.exports=r.locals)},function(t,e,n){var r=n(9);(t.exports=n(10)(!1)).push([t.i,\"/* required styles */\\r\\n\\r\\n.leaflet-pane,\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-tile-container,\\r\\n.leaflet-pane > svg,\\r\\n.leaflet-pane > canvas,\\r\\n.leaflet-zoom-box,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-layer {\\r\\n\\tposition: absolute;\\r\\n\\tleft: 0;\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-container {\\r\\n\\toverflow: hidden;\\r\\n\\t}\\r\\n.leaflet-tile,\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\t-webkit-user-select: none;\\r\\n\\t   -moz-user-select: none;\\r\\n\\t        user-select: none;\\r\\n\\t  -webkit-user-drag: none;\\r\\n\\t}\\r\\n/* Safari renders non-retina tile on retina better with this, but Chrome is worse */\\r\\n.leaflet-safari .leaflet-tile {\\r\\n\\timage-rendering: -webkit-optimize-contrast;\\r\\n\\t}\\r\\n/* hack that prevents hw layers \\\"stretching\\\" when loading new tiles */\\r\\n.leaflet-safari .leaflet-tile-container {\\r\\n\\twidth: 1600px;\\r\\n\\theight: 1600px;\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n/* .leaflet-container svg: reset svg max-width decleration shipped in Joomla! (joomla.org) 3.x */\\r\\n/* .leaflet-container img: map is broken in FF if you have max-width: 100% on tiles */\\r\\n.leaflet-container .leaflet-overlay-pane svg,\\r\\n.leaflet-container .leaflet-marker-pane img,\\r\\n.leaflet-container .leaflet-shadow-pane img,\\r\\n.leaflet-container .leaflet-tile-pane img,\\r\\n.leaflet-container img.leaflet-image-layer,\\r\\n.leaflet-container .leaflet-tile {\\r\\n\\tmax-width: none !important;\\r\\n\\tmax-height: none !important;\\r\\n\\t}\\r\\n\\r\\n.leaflet-container.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: pan-x pan-y;\\r\\n\\ttouch-action: pan-x pan-y;\\r\\n\\t}\\r\\n.leaflet-container.leaflet-touch-drag {\\r\\n\\t-ms-touch-action: pinch-zoom;\\r\\n\\t/* Fallback for FF which doesn't support pinch-zoom */\\r\\n\\ttouch-action: none;\\r\\n\\ttouch-action: pinch-zoom;\\r\\n}\\r\\n.leaflet-container.leaflet-touch-drag.leaflet-touch-zoom {\\r\\n\\t-ms-touch-action: none;\\r\\n\\ttouch-action: none;\\r\\n}\\r\\n.leaflet-container {\\r\\n\\t-webkit-tap-highlight-color: transparent;\\r\\n}\\r\\n.leaflet-container a {\\r\\n\\t-webkit-tap-highlight-color: rgba(51, 181, 229, 0.4);\\r\\n}\\r\\n.leaflet-tile {\\r\\n\\tfilter: inherit;\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n.leaflet-tile-loaded {\\r\\n\\tvisibility: inherit;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\twidth: 0;\\r\\n\\theight: 0;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\tz-index: 800;\\r\\n\\t}\\r\\n/* workaround for https://bugzilla.mozilla.org/show_bug.cgi?id=888319 */\\r\\n.leaflet-overlay-pane svg {\\r\\n\\t-moz-user-select: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-pane         { z-index: 400; }\\r\\n\\r\\n.leaflet-tile-pane    { z-index: 200; }\\r\\n.leaflet-overlay-pane { z-index: 400; }\\r\\n.leaflet-shadow-pane  { z-index: 500; }\\r\\n.leaflet-marker-pane  { z-index: 600; }\\r\\n.leaflet-tooltip-pane   { z-index: 650; }\\r\\n.leaflet-popup-pane   { z-index: 700; }\\r\\n\\r\\n.leaflet-map-pane canvas { z-index: 100; }\\r\\n.leaflet-map-pane svg    { z-index: 200; }\\r\\n\\r\\n.leaflet-vml-shape {\\r\\n\\twidth: 1px;\\r\\n\\theight: 1px;\\r\\n\\t}\\r\\n.lvml {\\r\\n\\tbehavior: url(#default#VML);\\r\\n\\tdisplay: inline-block;\\r\\n\\tposition: absolute;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* control positioning */\\r\\n\\r\\n.leaflet-control {\\r\\n\\tposition: relative;\\r\\n\\tz-index: 800;\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-top,\\r\\n.leaflet-bottom {\\r\\n\\tposition: absolute;\\r\\n\\tz-index: 1000;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-top {\\r\\n\\ttop: 0;\\r\\n\\t}\\r\\n.leaflet-right {\\r\\n\\tright: 0;\\r\\n\\t}\\r\\n.leaflet-bottom {\\r\\n\\tbottom: 0;\\r\\n\\t}\\r\\n.leaflet-left {\\r\\n\\tleft: 0;\\r\\n\\t}\\r\\n.leaflet-control {\\r\\n\\tfloat: left;\\r\\n\\tclear: both;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tfloat: right;\\r\\n\\t}\\r\\n.leaflet-top .leaflet-control {\\r\\n\\tmargin-top: 10px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control {\\r\\n\\tmargin-bottom: 10px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control {\\r\\n\\tmargin-left: 10px;\\r\\n\\t}\\r\\n.leaflet-right .leaflet-control {\\r\\n\\tmargin-right: 10px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* zoom and fade animations */\\r\\n\\r\\n.leaflet-fade-anim .leaflet-tile {\\r\\n\\twill-change: opacity;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-popup {\\r\\n\\topacity: 0;\\r\\n\\t-webkit-transition: opacity 0.2s linear;\\r\\n\\t   -moz-transition: opacity 0.2s linear;\\r\\n\\t        transition: opacity 0.2s linear;\\r\\n\\t}\\r\\n.leaflet-fade-anim .leaflet-map-pane .leaflet-popup {\\r\\n\\topacity: 1;\\r\\n\\t}\\r\\n.leaflet-zoom-animated {\\r\\n\\t-webkit-transform-origin: 0 0;\\r\\n\\t    -ms-transform-origin: 0 0;\\r\\n\\t        transform-origin: 0 0;\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\twill-change: transform;\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-zoom-animated {\\r\\n\\t-webkit-transition: -webkit-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t   -moz-transition:    -moz-transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t        transition:         transform 0.25s cubic-bezier(0,0,0.25,1);\\r\\n\\t}\\r\\n.leaflet-zoom-anim .leaflet-tile,\\r\\n.leaflet-pan-anim .leaflet-tile {\\r\\n\\t-webkit-transition: none;\\r\\n\\t   -moz-transition: none;\\r\\n\\t        transition: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-zoom-anim .leaflet-zoom-hide {\\r\\n\\tvisibility: hidden;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* cursors */\\r\\n\\r\\n.leaflet-interactive {\\r\\n\\tcursor: pointer;\\r\\n\\t}\\r\\n.leaflet-grab {\\r\\n\\tcursor: -webkit-grab;\\r\\n\\tcursor:    -moz-grab;\\r\\n\\tcursor:         grab;\\r\\n\\t}\\r\\n.leaflet-crosshair,\\r\\n.leaflet-crosshair .leaflet-interactive {\\r\\n\\tcursor: crosshair;\\r\\n\\t}\\r\\n.leaflet-popup-pane,\\r\\n.leaflet-control {\\r\\n\\tcursor: auto;\\r\\n\\t}\\r\\n.leaflet-dragging .leaflet-grab,\\r\\n.leaflet-dragging .leaflet-grab .leaflet-interactive,\\r\\n.leaflet-dragging .leaflet-marker-draggable {\\r\\n\\tcursor: move;\\r\\n\\tcursor: -webkit-grabbing;\\r\\n\\tcursor:    -moz-grabbing;\\r\\n\\tcursor:         grabbing;\\r\\n\\t}\\r\\n\\r\\n/* marker & overlays interactivity */\\r\\n.leaflet-marker-icon,\\r\\n.leaflet-marker-shadow,\\r\\n.leaflet-image-layer,\\r\\n.leaflet-pane > svg path,\\r\\n.leaflet-tile-container {\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n\\r\\n.leaflet-marker-icon.leaflet-interactive,\\r\\n.leaflet-image-layer.leaflet-interactive,\\r\\n.leaflet-pane > svg path.leaflet-interactive {\\r\\n\\tpointer-events: visiblePainted; /* IE 9-10 doesn't have auto */\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n\\r\\n/* visual tweaks */\\r\\n\\r\\n.leaflet-container {\\r\\n\\tbackground: #ddd;\\r\\n\\toutline: 0;\\r\\n\\t}\\r\\n.leaflet-container a {\\r\\n\\tcolor: #0078A8;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-active {\\r\\n\\toutline: 2px solid orange;\\r\\n\\t}\\r\\n.leaflet-zoom-box {\\r\\n\\tborder: 2px dotted #38f;\\r\\n\\tbackground: rgba(255,255,255,0.5);\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general typography */\\r\\n.leaflet-container {\\r\\n\\tfont: 12px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* general toolbar styles */\\r\\n\\r\\n.leaflet-bar {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.65);\\r\\n\\tborder-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-bar a:hover {\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder-bottom: 1px solid #ccc;\\r\\n\\twidth: 26px;\\r\\n\\theight: 26px;\\r\\n\\tline-height: 26px;\\r\\n\\tdisplay: block;\\r\\n\\ttext-align: center;\\r\\n\\ttext-decoration: none;\\r\\n\\tcolor: black;\\r\\n\\t}\\r\\n.leaflet-bar a,\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-position: 50% 50%;\\r\\n\\tbackground-repeat: no-repeat;\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-bar a:hover {\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\t}\\r\\n.leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 4px;\\r\\n\\tborder-top-right-radius: 4px;\\r\\n\\t}\\r\\n.leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 4px;\\r\\n\\tborder-bottom-right-radius: 4px;\\r\\n\\tborder-bottom: none;\\r\\n\\t}\\r\\n.leaflet-bar a.leaflet-disabled {\\r\\n\\tcursor: default;\\r\\n\\tbackground-color: #f4f4f4;\\r\\n\\tcolor: #bbb;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-bar a {\\r\\n\\twidth: 30px;\\r\\n\\theight: 30px;\\r\\n\\tline-height: 30px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:first-child {\\r\\n\\tborder-top-left-radius: 2px;\\r\\n\\tborder-top-right-radius: 2px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-bar a:last-child {\\r\\n\\tborder-bottom-left-radius: 2px;\\r\\n\\tborder-bottom-right-radius: 2px;\\r\\n\\t}\\r\\n\\r\\n/* zoom control */\\r\\n\\r\\n.leaflet-control-zoom-in,\\r\\n.leaflet-control-zoom-out {\\r\\n\\tfont: bold 18px 'Lucida Console', Monaco, monospace;\\r\\n\\ttext-indent: 1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-zoom-in, .leaflet-touch .leaflet-control-zoom-out  {\\r\\n\\tfont-size: 22px;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* layers control */\\r\\n\\r\\n.leaflet-control-layers {\\r\\n\\tbox-shadow: 0 1px 5px rgba(0,0,0,0.4);\\r\\n\\tbackground: #fff;\\r\\n\\tborder-radius: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\"+r(n(11))+\");\\r\\n\\twidth: 36px;\\r\\n\\theight: 36px;\\r\\n\\t}\\r\\n.leaflet-retina .leaflet-control-layers-toggle {\\r\\n\\tbackground-image: url(\"+r(n(12))+\");\\r\\n\\tbackground-size: 26px 26px;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers-toggle {\\r\\n\\twidth: 44px;\\r\\n\\theight: 44px;\\r\\n\\t}\\r\\n.leaflet-control-layers .leaflet-control-layers-list,\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-toggle {\\r\\n\\tdisplay: none;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded .leaflet-control-layers-list {\\r\\n\\tdisplay: block;\\r\\n\\tposition: relative;\\r\\n\\t}\\r\\n.leaflet-control-layers-expanded {\\r\\n\\tpadding: 6px 10px 6px 6px;\\r\\n\\tcolor: #333;\\r\\n\\tbackground: #fff;\\r\\n\\t}\\r\\n.leaflet-control-layers-scrollbar {\\r\\n\\toverflow-y: scroll;\\r\\n\\toverflow-x: hidden;\\r\\n\\tpadding-right: 5px;\\r\\n\\t}\\r\\n.leaflet-control-layers-selector {\\r\\n\\tmargin-top: 2px;\\r\\n\\tposition: relative;\\r\\n\\ttop: 1px;\\r\\n\\t}\\r\\n.leaflet-control-layers label {\\r\\n\\tdisplay: block;\\r\\n\\t}\\r\\n.leaflet-control-layers-separator {\\r\\n\\theight: 0;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\tmargin: 5px -10px 5px -6px;\\r\\n\\t}\\r\\n\\r\\n/* Default icon URLs */\\r\\n.leaflet-default-icon-path {\\r\\n\\tbackground-image: url(\"+r(n(13))+');\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* attribution and scale controls */\\r\\n\\r\\n.leaflet-container .leaflet-control-attribution {\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.7);\\r\\n\\tmargin: 0;\\r\\n\\t}\\r\\n.leaflet-control-attribution,\\r\\n.leaflet-control-scale-line {\\r\\n\\tpadding: 0 5px;\\r\\n\\tcolor: #333;\\r\\n\\t}\\r\\n.leaflet-control-attribution a {\\r\\n\\ttext-decoration: none;\\r\\n\\t}\\r\\n.leaflet-control-attribution a:hover {\\r\\n\\ttext-decoration: underline;\\r\\n\\t}\\r\\n.leaflet-container .leaflet-control-attribution,\\r\\n.leaflet-container .leaflet-control-scale {\\r\\n\\tfont-size: 11px;\\r\\n\\t}\\r\\n.leaflet-left .leaflet-control-scale {\\r\\n\\tmargin-left: 5px;\\r\\n\\t}\\r\\n.leaflet-bottom .leaflet-control-scale {\\r\\n\\tmargin-bottom: 5px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line {\\r\\n\\tborder: 2px solid #777;\\r\\n\\tborder-top: none;\\r\\n\\tline-height: 1.1;\\r\\n\\tpadding: 2px 5px 1px;\\r\\n\\tfont-size: 11px;\\r\\n\\twhite-space: nowrap;\\r\\n\\toverflow: hidden;\\r\\n\\t-moz-box-sizing: border-box;\\r\\n\\t     box-sizing: border-box;\\r\\n\\r\\n\\tbackground: #fff;\\r\\n\\tbackground: rgba(255, 255, 255, 0.5);\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child) {\\r\\n\\tborder-top: 2px solid #777;\\r\\n\\tborder-bottom: none;\\r\\n\\tmargin-top: -2px;\\r\\n\\t}\\r\\n.leaflet-control-scale-line:not(:first-child):not(:last-child) {\\r\\n\\tborder-bottom: 2px solid #777;\\r\\n\\t}\\r\\n\\r\\n.leaflet-touch .leaflet-control-attribution,\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tbox-shadow: none;\\r\\n\\t}\\r\\n.leaflet-touch .leaflet-control-layers,\\r\\n.leaflet-touch .leaflet-bar {\\r\\n\\tborder: 2px solid rgba(0,0,0,0.2);\\r\\n\\tbackground-clip: padding-box;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* popup */\\r\\n\\r\\n.leaflet-popup {\\r\\n\\tposition: absolute;\\r\\n\\ttext-align: center;\\r\\n\\tmargin-bottom: 20px;\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper {\\r\\n\\tpadding: 1px;\\r\\n\\ttext-align: left;\\r\\n\\tborder-radius: 12px;\\r\\n\\t}\\r\\n.leaflet-popup-content {\\r\\n\\tmargin: 13px 19px;\\r\\n\\tline-height: 1.4;\\r\\n\\t}\\r\\n.leaflet-popup-content p {\\r\\n\\tmargin: 18px 0;\\r\\n\\t}\\r\\n.leaflet-popup-tip-container {\\r\\n\\twidth: 40px;\\r\\n\\theight: 20px;\\r\\n\\tposition: absolute;\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -20px;\\r\\n\\toverflow: hidden;\\r\\n\\tpointer-events: none;\\r\\n\\t}\\r\\n.leaflet-popup-tip {\\r\\n\\twidth: 17px;\\r\\n\\theight: 17px;\\r\\n\\tpadding: 1px;\\r\\n\\r\\n\\tmargin: -10px auto 0;\\r\\n\\r\\n\\t-webkit-transform: rotate(45deg);\\r\\n\\t   -moz-transform: rotate(45deg);\\r\\n\\t    -ms-transform: rotate(45deg);\\r\\n\\t        transform: rotate(45deg);\\r\\n\\t}\\r\\n.leaflet-popup-content-wrapper,\\r\\n.leaflet-popup-tip {\\r\\n\\tbackground: white;\\r\\n\\tcolor: #333;\\r\\n\\tbox-shadow: 0 3px 14px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button {\\r\\n\\tposition: absolute;\\r\\n\\ttop: 0;\\r\\n\\tright: 0;\\r\\n\\tpadding: 4px 4px 0 0;\\r\\n\\tborder: none;\\r\\n\\ttext-align: center;\\r\\n\\twidth: 18px;\\r\\n\\theight: 14px;\\r\\n\\tfont: 16px/14px Tahoma, Verdana, sans-serif;\\r\\n\\tcolor: #c3c3c3;\\r\\n\\ttext-decoration: none;\\r\\n\\tfont-weight: bold;\\r\\n\\tbackground: transparent;\\r\\n\\t}\\r\\n.leaflet-container a.leaflet-popup-close-button:hover {\\r\\n\\tcolor: #999;\\r\\n\\t}\\r\\n.leaflet-popup-scrolled {\\r\\n\\toverflow: auto;\\r\\n\\tborder-bottom: 1px solid #ddd;\\r\\n\\tborder-top: 1px solid #ddd;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper {\\r\\n\\tzoom: 1;\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\twidth: 24px;\\r\\n\\tmargin: 0 auto;\\r\\n\\r\\n\\t-ms-filter: \"progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678)\";\\r\\n\\tfilter: progid:DXImageTransform.Microsoft.Matrix(M11=0.70710678, M12=0.70710678, M21=-0.70710678, M22=0.70710678);\\r\\n\\t}\\r\\n.leaflet-oldie .leaflet-popup-tip-container {\\r\\n\\tmargin-top: -1px;\\r\\n\\t}\\r\\n\\r\\n.leaflet-oldie .leaflet-control-zoom,\\r\\n.leaflet-oldie .leaflet-control-layers,\\r\\n.leaflet-oldie .leaflet-popup-content-wrapper,\\r\\n.leaflet-oldie .leaflet-popup-tip {\\r\\n\\tborder: 1px solid #999;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* div icon */\\r\\n\\r\\n.leaflet-div-icon {\\r\\n\\tbackground: #fff;\\r\\n\\tborder: 1px solid #666;\\r\\n\\t}\\r\\n\\r\\n\\r\\n/* Tooltip */\\r\\n/* Base styles for the element that has a tooltip */\\r\\n.leaflet-tooltip {\\r\\n\\tposition: absolute;\\r\\n\\tpadding: 6px;\\r\\n\\tbackground-color: #fff;\\r\\n\\tborder: 1px solid #fff;\\r\\n\\tborder-radius: 3px;\\r\\n\\tcolor: #222;\\r\\n\\twhite-space: nowrap;\\r\\n\\t-webkit-user-select: none;\\r\\n\\t-moz-user-select: none;\\r\\n\\t-ms-user-select: none;\\r\\n\\tuser-select: none;\\r\\n\\tpointer-events: none;\\r\\n\\tbox-shadow: 0 1px 3px rgba(0,0,0,0.4);\\r\\n\\t}\\r\\n.leaflet-tooltip.leaflet-clickable {\\r\\n\\tcursor: pointer;\\r\\n\\tpointer-events: auto;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before,\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tposition: absolute;\\r\\n\\tpointer-events: none;\\r\\n\\tborder: 6px solid transparent;\\r\\n\\tbackground: transparent;\\r\\n\\tcontent: \"\";\\r\\n\\t}\\r\\n\\r\\n/* Directions */\\r\\n\\r\\n.leaflet-tooltip-bottom {\\r\\n\\tmargin-top: 6px;\\r\\n}\\r\\n.leaflet-tooltip-top {\\r\\n\\tmargin-top: -6px;\\r\\n}\\r\\n.leaflet-tooltip-bottom:before,\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tleft: 50%;\\r\\n\\tmargin-left: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-top:before {\\r\\n\\tbottom: 0;\\r\\n\\tmargin-bottom: -12px;\\r\\n\\tborder-top-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-bottom:before {\\r\\n\\ttop: 0;\\r\\n\\tmargin-top: -12px;\\r\\n\\tmargin-left: -6px;\\r\\n\\tborder-bottom-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-left {\\r\\n\\tmargin-left: -6px;\\r\\n}\\r\\n.leaflet-tooltip-right {\\r\\n\\tmargin-left: 6px;\\r\\n}\\r\\n.leaflet-tooltip-left:before,\\r\\n.leaflet-tooltip-right:before {\\r\\n\\ttop: 50%;\\r\\n\\tmargin-top: -6px;\\r\\n\\t}\\r\\n.leaflet-tooltip-left:before {\\r\\n\\tright: 0;\\r\\n\\tmargin-right: -12px;\\r\\n\\tborder-left-color: #fff;\\r\\n\\t}\\r\\n.leaflet-tooltip-right:before {\\r\\n\\tleft: 0;\\r\\n\\tmargin-left: -12px;\\r\\n\\tborder-right-color: #fff;\\r\\n\\t}\\r\\n',\"\"])},function(t,e){t.exports=function(t){return\"string\"!=typeof t?t:(/^['\"].*['\"]$/.test(t)&&(t=t.slice(1,-1)),/[\"'() \\t\\n]/.test(t)?'\"'+t.replace(/\"/g,'\\\\\"').replace(/\\n/g,\"\\\\n\")+'\"':t)}},function(t,e){t.exports=function(t){var e=[];return e.toString=function(){return this.map(function(e){var n=function(t,e){var n=t[1]||\"\",r=t[3];if(!r)return n;if(e&&\"function\"==typeof btoa){var o=function(t){return\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(t))))+\" */\"}(r),i=r.sources.map(function(t){return\"/*# sourceURL=\"+r.sourceRoot+t+\" */\"});return[n].concat(i).concat([o]).join(\"\\n\")}return[n].join(\"\\n\")}(e,t);return e[2]?\"@media \"+e[2]+\"{\"+n+\"}\":n}).join(\"\")},e.i=function(t,n){\"string\"==typeof t&&(t=[[null,t,\"\"]]);for(var r={},o=0;o<this.length;o++){var i=this[o][0];\"number\"==typeof i&&(r[i]=!0)}for(o=0;o<t.length;o++){var a=t[o];\"number\"==typeof a[0]&&r[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]=\"(\"+a[2]+\") and (\"+n+\")\"),e.push(a))}},e}},function(t,e){t.exports=\"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABoAAAAaCAQAAAADQ4RFAAACf0lEQVR4AY1UM3gkARTePdvdoTxXKc+qTl3aU5U6b2Kbkz3Gtq3Zw6ziLGNPzrYx7946Tr6/ee/XeCQ4D3ykPtL5tHno4n0d/h3+xfuWHGLX81cn7r0iTNzjr7LrlxCqPtkbTQEHeqOrTy4Yyt3VCi/IOB0v7rVC7q45Q3Gr5K6jt+3Gl5nCoDD4MtO+j96Wu8atmhGqcNGHObuf8OM/x3AMx38+4Z2sPqzCxRFK2aF2e5Jol56XTLyggAMTL56XOMoS1W4pOyjUcGGQdZxU6qRh7B9Zp+PfpOFlqt0zyDZckPi1ttmIp03jX8gyJ8a/PG2yutpS/Vol7peZIbZcKBAEEheEIAgFbDkz5H6Zrkm2hVWGiXKiF4Ycw0RWKdtC16Q7qe3X4iOMxruonzegJzWaXFrU9utOSsLUmrc0YjeWYjCW4PDMADElpJSSQ0vQvA1Tm6/JlKnqFs1EGyZiFCqnRZTEJJJiKRYzVYzJck2Rm6P4iH+cmSY0YzimYa8l0EtTODFWhcMIMVqdsI2uiTvKmTisIDHJ3od5GILVhBCarCfVRmo4uTjkhrhzkiBV7SsaqS+TzrzM1qpGGUFt28pIySQHR6h7F6KSwGWm97ay+Z+ZqMcEjEWebE7wxCSQwpkhJqoZA5ivCdZDjJepuJ9IQjGGUmuXJdBFUygxVqVsxFsLMbDe8ZbDYVCGKxs+W080max1hFCarCfV+C1KATwcnvE9gRRuMP2prdbWGowm1KB1y+zwMMENkM755cJ2yPDtqhTI6ED1M/82yIDtC/4j4BijjeObflpO9I9MwXTCsSX8jWAFeHr05WoLTJ5G8IQVS/7vwR6ohirYM7f6HzYpogfS3R2OAAAAAElFTkSuQmCC\"},function(t,e){t.exports=\"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAADQAAAA0CAQAAABvcdNgAAAEsklEQVR4AWL4TydIhpZK1kpWOlg0w3ZXP6D2soBtG42jeI6ZmQTHzAxiTbSJsYLjO9HhP+WOmcuhciVnmHVQcJnp7DFvScowZorad/+V/fVzMdMT2g9Cv9guXGv/7pYOrXh2U+RRR3dSd9JRx6bIFc/ekqHI29JC6pJ5ZEh1yWkhkbcFeSjxgx3L2m1cb1C7bceyxA+CNjT/Ifff+/kDk2u/w/33/IeCMOSaWZ4glosqT3DNnNZQ7Cs58/3Ce5HL78iZH/vKVIaYlqzfdLu8Vi7dnvUbEza5Idt36tquZFldl6N5Z/POLof0XLK61mZCmJSWjVF9tEjUluu74IUXvgttuVIHE7YxSkaYhJZam7yiM9Pv82JYfl9nptxZaxMJE4YSPty+vF0+Y2up9d3wwijfjZbabqm/3bZ9ecKHsiGmRflnn1MW4pjHf9oLufyn2z3y1D6n8g8TZhxyzipLNPnAUpsOiuWimg52psrTZYnOWYNDTMuWBWa0tJb4rgq1UvmutpaYEbZlwU3CLJm/ayYjHW5/h7xWLn9Hh1vepDkyf7dE7MtT5LR4e7yYpHrkhOUpEfssBLq2pPhAqoSWKUkk7EDqkmK6RrCEzqDjhNDWNE+XSMvkJRDWlZTmCW0l0PHQGRZY5t1L83kT0Y3l2SItk5JAWHl2dCOBm+fPu3fo5/3v61RMCO9Jx2EEYYhb0rmNQMX/vm7gqOEJLcXTGw3CAuRNeyaPWwjR8PRqKQ1PDA/dpv+on9Shox52WFnx0KY8onHayrJzm87i5h9xGw/tfkev0jGsQizqezUKjk12hBMKJ4kbCqGPVNXudyyrShovGw5CgxsRICxF6aRmSjlBnHRzg7Gx8fKqEubI2rahQYdR1YgDIRQO7JvQyD52hoIQx0mxa0ODtW2Iozn1le2iIRdzwWewedyZzewidueOGqlsn1MvcnQpuVwLGG3/IR1hIKxCjelIDZ8ldqWz25jWAsnldEnK0Zxro19TGVb2ffIZEsIO89EIEDvKMPrzmBOQcKQ+rroye6NgRRxqR4U8EAkz0CL6uSGOm6KQCdWjvjRiSP1BPalCRS5iQYiEIvxuBMJEWgzSoHADcVMuN7IuqqTeyUPq22qFimFtxDyBBJEwNyt6TM88blFHao/6tWWhuuOM4SAK4EI4QmFHA+SEyWlp4EQoJ13cYGzMu7yszEIBOm2rVmHUNqwAIQabISNMRstmdhNWcFLsSm+0tjJH1MdRxO5Nx0WDMhCtgD6OKgZeljJqJKc9po8juskR9XN0Y1lZ3mWjLR9JCO1jRDMd0fpYC2VnvjBSEFg7wBENc0R9HFlb0xvF1+TBEpF68d+DHR6IOWVv2BECtxo46hOFUBd/APU57WIoEwJhIi2CdpyZX0m93BZicktMj1AS9dClteUFAUNUIEygRZCtik5zSxI9MubTBH1GOiHsiLJ3OCoSZkILa9PxiN0EbvhsAo8tdAf9Seepd36lGWHmtNANTv5Jd0z4QYyeo/UEJqxKRpg5LZx6btLPsOaEmdMyxYdlc8LMaJnikDlhclqmPiQnTEpLUIZEwkRagjYkEibQErwhkTAKCLQEbUgkzJQWc/0PstHHcfEdQ+UAAAAASUVORK5CYII=\"},function(t,e){t.exports=\"data:image/png;charset=utf-8;base64,iVBORw0KGgoAAAANSUhEUgAAABkAAAApCAYAAADAk4LOAAAFgUlEQVR4Aa1XA5BjWRTN2oW17d3YaZtr2962HUzbDNpjszW24mRt28p47v7zq/bXZtrp/lWnXr337j3nPCe85NcypgSFdugCpW5YoDAMRaIMqRi6aKq5E3YqDQO3qAwjVWrD8Ncq/RBpykd8oZUb/kaJutow8r1aP9II0WmLKLIsJyv1w/kqw9Ch2MYdB++12Onxee/QMwvf4/Dk/Lfp/i4nxTXtOoQ4pW5Aj7wpici1A9erdAN2OH64x8OSP9j3Ft3b7aWkTg/Fm91siTra0f9on5sQr9INejH6CUUUpavjFNq1B+Oadhxmnfa8RfEmN8VNAsQhPqF55xHkMzz3jSmChWU6f7/XZKNH+9+hBLOHYozuKQPxyMPUKkrX/K0uWnfFaJGS1QPRtZsOPtr3NsW0uyh6NNCOkU3Yz+bXbT3I8G3xE5EXLXtCXbbqwCO9zPQYPRTZ5vIDXD7U+w7rFDEoUUf7ibHIR4y6bLVPXrz8JVZEql13trxwue/uDivd3fkWRbS6/IA2bID4uk0UpF1N8qLlbBlXs4Ee7HLTfV1j54APvODnSfOWBqtKVvjgLKzF5YdEk5ewRkGlK0i33Eofffc7HT56jD7/6U+qH3Cx7SBLNntH5YIPvODnyfIXZYRVDPqgHtLs5ABHD3YzLuespb7t79FY34DjMwrVrcTuwlT55YMPvOBnRrJ4VXTdNnYug5ucHLBjEpt30701A3Ts+HEa73u6dT3FNWwflY86eMHPk+Yu+i6pzUpRrW7SNDg5JHR4KapmM5Wv2E8Tfcb1HoqqHMHU+uWDD7zg54mz5/2BSnizi9T1Dg4QQXLToGNCkb6tb1NU+QAlGr1++eADrzhn/u8Q2YZhQVlZ5+CAOtqfbhmaUCS1ezNFVm2imDbPmPng5wmz+gwh+oHDce0eUtQ6OGDIyR0uUhUsoO3vfDmmgOezH0mZN59x7MBi++WDL1g/eEiU3avlidO671bkLfwbw5XV2P8Pzo0ydy4t2/0eu33xYSOMOD8hTf4CrBtGMSoXfPLchX+J0ruSePw3LZeK0juPJbYzrhkH0io7B3k164hiGvawhOKMLkrQLyVpZg8rHFW7E2uHOL888IBPlNZ1FPzstSJM694fWr6RwpvcJK60+0HCILTBzZLFNdtAzJaohze60T8qBzyh5ZuOg5e7uwQppofEmf2++DYvmySqGBuKaicF1blQjhuHdvCIMvp8whTTfZzI7RldpwtSzL+F1+wkdZ2TBOW2gIF88PBTzD/gpeREAMEbxnJcaJHNHrpzji0gQCS6hdkEeYt9DF/2qPcEC8RM28Hwmr3sdNyht00byAut2k3gufWNtgtOEOFGUwcXWNDbdNbpgBGxEvKkOQsxivJx33iow0Vw5S6SVTrpVq11ysA2Rp7gTfPfktc6zhtXBBC+adRLshf6sG2RfHPZ5EAc4sVZ83yCN00Fk/4kggu40ZTvIEm5g24qtU4KjBrx/BTTH8ifVASAG7gKrnWxJDcU7x8X6Ecczhm3o6YicvsLXWfh3Ch1W0k8x0nXF+0fFxgt4phz8QvypiwCCFKMqXCnqXExjq10beH+UUA7+nG6mdG/Pu0f3LgFcGrl2s0kNNjpmoJ9o4B29CMO8dMT4Q5ox8uitF6fqsrJOr8qnwNbRzv6hSnG5wP+64C7h9lp30hKNtKdWjtdkbuPA19nJ7Tz3zR/ibgARbhb4AlhavcBebmTHcFl2fvYEnW0ox9xMxKBS8btJ+KiEbq9zA4RthQXDhPa0T9TEe69gWupwc6uBUphquXgf+/FrIjweHQS4/pduMe5ERUMHUd9xv8ZR98CxkS4F2n3EUrUZ10EYNw7BWm9x1GiPssi3GgiGRDKWRYZfXlON+dfNbM+GgIwYdwAAAAASUVORK5CYII=\"},function(t,e,n){var r={},o=function(t){var e;return function(){return void 0===e&&(e=t.apply(this,arguments)),e}}(function(){return window&&document&&document.all&&!window.atob}),i=function(t){var e={};return function(t,n){if(\"function\"==typeof t)return t();if(void 0===e[t]){var r=function(t,e){return e?e.querySelector(t):document.querySelector(t)}.call(this,t,n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(t){r=null}e[t]=r}return e[t]}}(),a=null,s=0,l=[],c=n(15);function u(t,e){for(var n=0;n<t.length;n++){var o=t[n],i=r[o.id];if(i){i.refs++;for(var a=0;a<i.parts.length;a++)i.parts[a](o.parts[a]);for(;a<o.parts.length;a++)i.parts.push(y(o.parts[a],e))}else{var s=[];for(a=0;a<o.parts.length;a++)s.push(y(o.parts[a],e));r[o.id]={id:o.id,refs:1,parts:s}}}}function f(t,e){for(var n=[],r={},o=0;o<t.length;o++){var i=t[o],a=e.base?i[0]+e.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};r[a]?r[a].parts.push(s):n.push(r[a]={id:a,parts:[s]})}return n}function p(t,e){var n=i(t.insertInto);if(!n)throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");var r=l[l.length-1];if(\"top\"===t.insertAt)r?r.nextSibling?n.insertBefore(e,r.nextSibling):n.appendChild(e):n.insertBefore(e,n.firstChild),l.push(e);else if(\"bottom\"===t.insertAt)n.appendChild(e);else{if(\"object\"!=typeof t.insertAt||!t.insertAt.before)throw new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");var o=i(t.insertAt.before,n);n.insertBefore(e,o)}}function h(t){if(null===t.parentNode)return!1;t.parentNode.removeChild(t);var e=l.indexOf(t);e>=0&&l.splice(e,1)}function d(t){var e=document.createElement(\"style\");if(void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),void 0===t.attrs.nonce){var r=function(){0;return n.nc}();r&&(t.attrs.nonce=r)}return m(e,t.attrs),p(t,e),e}function m(t,e){Object.keys(e).forEach(function(n){t.setAttribute(n,e[n])})}function y(t,e){var n,r,o,i;if(e.transform&&t.css){if(!(i=\"function\"==typeof e.transform?e.transform(t.css):e.transform.default(t.css)))return function(){};t.css=i}if(e.singleton){var l=s++;n=a||(a=d(e)),r=b.bind(null,n,l,!1),o=b.bind(null,n,l,!0)}else t.sourceMap&&\"function\"==typeof URL&&\"function\"==typeof URL.createObjectURL&&\"function\"==typeof URL.revokeObjectURL&&\"function\"==typeof Blob&&\"function\"==typeof btoa?(n=function(t){var e=document.createElement(\"link\");return void 0===t.attrs.type&&(t.attrs.type=\"text/css\"),t.attrs.rel=\"stylesheet\",m(e,t.attrs),p(t,e),e}(e),r=function(t,e,n){var r=n.css,o=n.sourceMap,i=void 0===e.convertToAbsoluteUrls&&o;(e.convertToAbsoluteUrls||i)&&(r=c(r));o&&(r+=\"\\n/*# sourceMappingURL=data:application/json;base64,\"+btoa(unescape(encodeURIComponent(JSON.stringify(o))))+\" */\");var a=new Blob([r],{type:\"text/css\"}),s=t.href;t.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}.bind(null,n,e),o=function(){h(n),n.href&&URL.revokeObjectURL(n.href)}):(n=d(e),r=function(t,e){var n=e.css,r=e.media;r&&t.setAttribute(\"media\",r);if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}.bind(null,n),o=function(){h(n)});return r(t),function(e){if(e){if(e.css===t.css&&e.media===t.media&&e.sourceMap===t.sourceMap)return;r(t=e)}else o()}}t.exports=function(t,e){if(\"undefined\"!=typeof DEBUG&&DEBUG&&\"object\"!=typeof document)throw new Error(\"The style-loader cannot be used in a non-browser environment\");(e=e||{}).attrs=\"object\"==typeof e.attrs?e.attrs:{},e.singleton||\"boolean\"==typeof e.singleton||(e.singleton=o()),e.insertInto||(e.insertInto=\"head\"),e.insertAt||(e.insertAt=\"bottom\");var n=f(t,e);return u(n,e),function(t){for(var o=[],i=0;i<n.length;i++){var a=n[i];(s=r[a.id]).refs--,o.push(s)}t&&u(f(t,e),e);for(i=0;i<o.length;i++){var s;if(0===(s=o[i]).refs){for(var l=0;l<s.parts.length;l++)s.parts[l]();delete r[s.id]}}}};var g=function(){var t=[];return function(e,n){return t[e]=n,t.filter(Boolean).join(\"\\n\")}}();function b(t,e,n,r){var o=n?\"\":r.css;if(t.styleSheet)t.styleSheet.cssText=g(e,o);else{var i=document.createTextNode(o),a=t.childNodes;a[e]&&t.removeChild(a[e]),a.length?t.insertBefore(i,a[e]):t.appendChild(i)}}},function(t,e){t.exports=function(t){var e=\"undefined\"!=typeof window&&window.location;if(!e)throw new Error(\"fixUrls requires window.location\");if(!t||\"string\"!=typeof t)return t;var n=e.protocol+\"//\"+e.host,r=n+e.pathname.replace(/\\/[^\\/]*$/,\"/\");return t.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi,function(t,e){var o,i=e.trim().replace(/^\"(.*)\"$/,function(t,e){return e}).replace(/^'(.*)'$/,function(t,e){return e});return/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(i)?t:(o=0===i.indexOf(\"//\")?i:0===i.indexOf(\"/\")?n+i:r+i.replace(/^\\.\\//,\"\"),\"url(\"+JSON.stringify(o)+\")\")})}},function(t,e,n){\"use strict\";n.r(e);var r=n(1),o=n(2),i=n(3);n(7);function a(){return function(t,e,n){var r=n.value;return n.value=function(){for(var t=this,e=[],n=0;n<arguments.length;n++)e[n]=arguments[n];var o=this;return new Promise(function(n,i){o.isLoaded?r.apply(t,e).then(n).catch(i):o.webMap.emitter.once(\"map:created\",function(){r.apply(t,e).then(n).catch(i)})})},n}}function s(t){return t.replace(/([^:]\\/)\\/+/g,\"$1\")}var l=function(){return(l=Object.assign||function(t){for(var e,n=1,r=arguments.length;n<r;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)},c=function(t,e,n,r){var o,i=arguments.length,a=i<3?e:null===r?r=Object.getOwnPropertyDescriptor(e,n):r;if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.decorate)a=Reflect.decorate(t,e,n,r);else for(var s=t.length-1;s>=0;s--)(o=t[s])&&(a=(i<3?o(a):i>3?o(e,n,a):o(e,n))||a);return i>3&&a&&Object.defineProperty(e,n,a),a},u=function(t,e){if(\"object\"==typeof Reflect&&\"function\"==typeof Reflect.metadata)return Reflect.metadata(t,e)},f=function(){function t(t,e){var n=this;this.options={target:\"map\",qmsId:465,baseUrl:\"http://dev.nextgis.com/sandbox\"},this.isLoaded=!1,this._ngwLayers={},this.options=l({},this.options,e),this.connector=new o.NgwConnector({baseUrl:this.options.baseUrl}),this.webMap=new r.WebMap({mapAdapter:t,starterKits:[new i.QmsKit]}),this._createWebMap().then(function(){n._addControls(),n.isLoaded=!0})}return t.prototype.fit=function(){var t=this.options,e=t.center,n=t.zoom,r=t.bounds;e?(this.webMap.map.setCenter(e),n&&this.webMap.map.setZoom(n)):r&&this.fitBounds(r)},t.prototype.fitBounds=function(t){this.webMap.map.fit(t)},t.prototype.addNgwLayer=function(t){var e=this,n=t.adapter||\"IMAGE\";if(\"IMAGE\"===n||\"TILE\"===n){var r=s(this.options.baseUrl+\"/api/component/render/image\");return this.webMap.map.addLayer(n,{url:r,id:String(t.id)}).then(function(t){return e._ngwLayers[t.name]=t,e.webMap.map.showLayer(t.name),t.name})}throw new Error(n+\" not supported yet. Only TILE\")},t.prototype.zoomToLayer=function(t){var e=this;if(this._ngwLayers[t])return this.connector.request(\"resource.item\",{id:t}).then(function(n){if(n)return\"raster_style\"===n.resource.cls?e.connector.request(\"resource.item\",{id:n.resource.parent.id}).then(function(t){return e._fitNgwLayerExtend(t.resource.id)}):e._fitNgwLayerExtend(t)})},t.prototype._fitNgwLayerExtend=function(t){var e=this;return this.connector.request(\"layer.extent\",{id:t}).then(function(t){var n=t.extent,r=n.maxLat,o=n.maxLon,i=n.minLat,a=n.minLon;e.fitBounds([r,o,i,a])})},t.prototype._createWebMap=function(){var t=this;return this.webMap.create({target:this.options.target}).then(function(){t.options.qmsId&&t.webMap.addBaseLayer(String(t.options.qmsId),\"QMS\",{qmsid:t.options.qmsId}).then(function(e){t.webMap.map.showLayer(e.name)}),t.fit(),t.webMap.emitter.emit(\"map:created\"),window.lmap=t.webMap.map.map})},t.prototype._addControls=function(){this.webMap.map.addControl(\"ZOOM\",\"top-left\"),this.webMap.map.addControl(\"ATTRIBUTION\",\"bottom-right\",{customAttribution:['<a href=\"http://nextgis.ru\" target=\"_blank\">©NextGIS</a>']})},t.utils={fixUrlStr:s},t.decorators={onMapLoad:a},c([a(),u(\"design:type\",Function),u(\"design:paramtypes\",[Object]),u(\"design:returntype\",void 0)],t.prototype,\"addNgwLayer\",null),t}();e.default=f}]).default});\n//# sourceMappingURL=ngw-map.js.map","(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('ol/source/ImageWMS'), require('ol/layer/Image'), require('ol/source/OSM'), require('ol/layer/Tile'), require('ol/geom/Point'), require('ol/Feature'), require('ol/proj'), require('ol/layer'), require('ol/source/Vector'), require('ol/source/XYZ'), require('ol'), require('ol/control'), require('ol/extent'), require('ol/format'), require('ol/geom/Polygon')) :\n    typeof define === 'function' && define.amd ? define(['exports', 'ol/source/ImageWMS', 'ol/layer/Image', 'ol/source/OSM', 'ol/layer/Tile', 'ol/geom/Point', 'ol/Feature', 'ol/proj', 'ol/layer', 'ol/source/Vector', 'ol/source/XYZ', 'ol', 'ol/control', 'ol/extent', 'ol/format', 'ol/geom/Polygon'], factory) :\n    (factory((global.OlMapAdapter = {}),global.ol.source.ImageWMS,global.ol.layer.Image,global.ol.source.OSM,global.ol.layer.Tile,global.ol.geom.Point,global.ol.Feature,global.ol.proj,global.ol.layer,global.ol.source.Vector,global.XYZ,global.ol,global.control,global.ol.extent,global.ol.format,global.Polygon));\n}(this, (function (exports,ImageWMS,ImageLayer,OSM,TileLayer,Point,Feature,proj,layer,VectorSource,XYZ,ol,control,extent,format,Polygon) { 'use strict';\n\n    ImageWMS = ImageWMS && ImageWMS.hasOwnProperty('default') ? ImageWMS['default'] : ImageWMS;\n    ImageLayer = ImageLayer && ImageLayer.hasOwnProperty('default') ? ImageLayer['default'] : ImageLayer;\n    OSM = OSM && OSM.hasOwnProperty('default') ? OSM['default'] : OSM;\n    TileLayer = TileLayer && TileLayer.hasOwnProperty('default') ? TileLayer['default'] : TileLayer;\n    Point = Point && Point.hasOwnProperty('default') ? Point['default'] : Point;\n    Feature = Feature && Feature.hasOwnProperty('default') ? Feature['default'] : Feature;\n    VectorSource = VectorSource && VectorSource.hasOwnProperty('default') ? VectorSource['default'] : VectorSource;\n    XYZ = XYZ && XYZ.hasOwnProperty('default') ? XYZ['default'] : XYZ;\n\n    /*! *****************************************************************************\r\n    Copyright (c) Microsoft Corporation. All rights reserved.\r\n    Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n    this file except in compliance with the License. You may obtain a copy of the\r\n    License at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\n    KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\n    WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\n    MERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\n    See the Apache Version 2.0 License for specific language governing permissions\r\n    and limitations under the License.\r\n    ***************************************************************************** */\r\n\r\n    var __assign = function() {\r\n        __assign = Object.assign || function __assign(t) {\r\n            for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n                s = arguments[i];\r\n                for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n            }\r\n            return t;\r\n        };\r\n        return __assign.apply(this, arguments);\r\n    };\n\n    var ID = 1;\r\n    var ImageAdapter = (function () {\r\n        function ImageAdapter() {\r\n        }\r\n        ImageAdapter.prototype.addLayer = function (options) {\r\n            this.name = options.id || 'image-' + ID++;\r\n            var source = new ImageWMS({\r\n                url: options.url,\r\n                params: {\r\n                    resource: options.layer_style_id || options.id,\r\n                },\r\n                ratio: 1,\r\n                imageLoadFunction: function (image, src) {\r\n                    var url = src.split('?')[0];\r\n                    var query = src.split('?')[1];\r\n                    var queryObject = queryToObject(query);\r\n                    image.getImage().src = url\r\n                        + '?resource=' + queryObject.resource\r\n                        + '&extent=' + queryObject.BBOX\r\n                        + '&size=' + queryObject.WIDTH + ',' + queryObject.HEIGHT\r\n                        + '#' + Date.now();\r\n                },\r\n            });\r\n            var layer$$1 = new ImageLayer({ source: source });\r\n            return layer$$1;\r\n        };\r\n        return ImageAdapter;\r\n    }());\r\n    function queryToObject(str) {\r\n        var dec = decodeURIComponent;\r\n        var qp = str.split('&');\r\n        var ret = {};\r\n        var name;\r\n        var val;\r\n        for (var i = 0, l = qp.length, item = void 0; i < l; ++i) {\r\n            item = qp[i];\r\n            if (item.length) {\r\n                var s = item.indexOf('=');\r\n                if (s < 0) {\r\n                    name = dec(item);\r\n                    val = '';\r\n                }\r\n                else {\r\n                    name = dec(item.slice(0, s));\r\n                    val = dec(item.slice(s + 1));\r\n                }\r\n                if (typeof ret[name] === 'string') {\r\n                    ret[name] = [ret[name]];\r\n                }\r\n                if (Array.isArray(ret[name])) {\r\n                    ret[name].push(val);\r\n                }\r\n                else {\r\n                    ret[name] = val;\r\n                }\r\n            }\r\n        }\r\n        return ret;\r\n    }\n\n    var domain;\n\n    // This constructor is used to store event handlers. Instantiating this is\n    // faster than explicitly calling `Object.create(null)` to get a \"clean\" empty\n    // object (tested with v8 v4.9).\n    function EventHandlers() {}\n    EventHandlers.prototype = Object.create(null);\n\n    function EventEmitter() {\n      EventEmitter.init.call(this);\n    }\n\n    // nodejs oddity\n    // require('events') === require('events').EventEmitter\n    EventEmitter.EventEmitter = EventEmitter;\n\n    EventEmitter.usingDomains = false;\n\n    EventEmitter.prototype.domain = undefined;\n    EventEmitter.prototype._events = undefined;\n    EventEmitter.prototype._maxListeners = undefined;\n\n    // By default EventEmitters will print a warning if more than 10 listeners are\n    // added to it. This is a useful default which helps finding memory leaks.\n    EventEmitter.defaultMaxListeners = 10;\n\n    EventEmitter.init = function() {\n      this.domain = null;\n      if (EventEmitter.usingDomains) {\n        // if there is an active domain, then attach to it.\n        if (domain.active && !(this instanceof domain.Domain)) ;\n      }\n\n      if (!this._events || this._events === Object.getPrototypeOf(this)._events) {\n        this._events = new EventHandlers();\n        this._eventsCount = 0;\n      }\n\n      this._maxListeners = this._maxListeners || undefined;\n    };\n\n    // Obviously not all Emitters should be limited to 10. This function allows\n    // that to be increased. Set to zero for unlimited.\n    EventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n      if (typeof n !== 'number' || n < 0 || isNaN(n))\n        throw new TypeError('\"n\" argument must be a positive number');\n      this._maxListeners = n;\n      return this;\n    };\n\n    function $getMaxListeners(that) {\n      if (that._maxListeners === undefined)\n        return EventEmitter.defaultMaxListeners;\n      return that._maxListeners;\n    }\n\n    EventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n      return $getMaxListeners(this);\n    };\n\n    // These standalone emit* functions are used to optimize calling of event\n    // handlers for fast cases because emit() itself often has a variable number of\n    // arguments and can be deoptimized because of that. These functions always have\n    // the same number of arguments and thus do not get deoptimized, so the code\n    // inside them can execute faster.\n    function emitNone(handler, isFn, self) {\n      if (isFn)\n        handler.call(self);\n      else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          listeners[i].call(self);\n      }\n    }\n    function emitOne(handler, isFn, self, arg1) {\n      if (isFn)\n        handler.call(self, arg1);\n      else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          listeners[i].call(self, arg1);\n      }\n    }\n    function emitTwo(handler, isFn, self, arg1, arg2) {\n      if (isFn)\n        handler.call(self, arg1, arg2);\n      else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          listeners[i].call(self, arg1, arg2);\n      }\n    }\n    function emitThree(handler, isFn, self, arg1, arg2, arg3) {\n      if (isFn)\n        handler.call(self, arg1, arg2, arg3);\n      else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          listeners[i].call(self, arg1, arg2, arg3);\n      }\n    }\n\n    function emitMany(handler, isFn, self, args) {\n      if (isFn)\n        handler.apply(self, args);\n      else {\n        var len = handler.length;\n        var listeners = arrayClone(handler, len);\n        for (var i = 0; i < len; ++i)\n          listeners[i].apply(self, args);\n      }\n    }\n\n    EventEmitter.prototype.emit = function emit(type) {\n      var er, handler, len, args, i, events, domain;\n      var doError = (type === 'error');\n\n      events = this._events;\n      if (events)\n        doError = (doError && events.error == null);\n      else if (!doError)\n        return false;\n\n      domain = this.domain;\n\n      // If there is no 'error' event listener then throw.\n      if (doError) {\n        er = arguments[1];\n        if (domain) {\n          if (!er)\n            er = new Error('Uncaught, unspecified \"error\" event');\n          er.domainEmitter = this;\n          er.domain = domain;\n          er.domainThrown = false;\n          domain.emit('error', er);\n        } else if (er instanceof Error) {\n          throw er; // Unhandled 'error' event\n        } else {\n          // At least give some kind of context to the user\n          var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n          err.context = er;\n          throw err;\n        }\n        return false;\n      }\n\n      handler = events[type];\n\n      if (!handler)\n        return false;\n\n      var isFn = typeof handler === 'function';\n      len = arguments.length;\n      switch (len) {\n        // fast cases\n        case 1:\n          emitNone(handler, isFn, this);\n          break;\n        case 2:\n          emitOne(handler, isFn, this, arguments[1]);\n          break;\n        case 3:\n          emitTwo(handler, isFn, this, arguments[1], arguments[2]);\n          break;\n        case 4:\n          emitThree(handler, isFn, this, arguments[1], arguments[2], arguments[3]);\n          break;\n        // slower\n        default:\n          args = new Array(len - 1);\n          for (i = 1; i < len; i++)\n            args[i - 1] = arguments[i];\n          emitMany(handler, isFn, this, args);\n      }\n\n      return true;\n    };\n\n    function _addListener(target, type, listener, prepend) {\n      var m;\n      var events;\n      var existing;\n\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n\n      events = target._events;\n      if (!events) {\n        events = target._events = new EventHandlers();\n        target._eventsCount = 0;\n      } else {\n        // To avoid recursion in the case that type === \"newListener\"! Before\n        // adding it to the listeners, first emit \"newListener\".\n        if (events.newListener) {\n          target.emit('newListener', type,\n                      listener.listener ? listener.listener : listener);\n\n          // Re-assign `events` because a newListener handler could have caused the\n          // this._events to be assigned to a new object\n          events = target._events;\n        }\n        existing = events[type];\n      }\n\n      if (!existing) {\n        // Optimize the case of one listener. Don't need the extra array object.\n        existing = events[type] = listener;\n        ++target._eventsCount;\n      } else {\n        if (typeof existing === 'function') {\n          // Adding the second element, need to change to array.\n          existing = events[type] = prepend ? [listener, existing] :\n                                              [existing, listener];\n        } else {\n          // If we've already got an array, just append.\n          if (prepend) {\n            existing.unshift(listener);\n          } else {\n            existing.push(listener);\n          }\n        }\n\n        // Check for listener leak\n        if (!existing.warned) {\n          m = $getMaxListeners(target);\n          if (m && m > 0 && existing.length > m) {\n            existing.warned = true;\n            var w = new Error('Possible EventEmitter memory leak detected. ' +\n                                existing.length + ' ' + type + ' listeners added. ' +\n                                'Use emitter.setMaxListeners() to increase limit');\n            w.name = 'MaxListenersExceededWarning';\n            w.emitter = target;\n            w.type = type;\n            w.count = existing.length;\n            emitWarning(w);\n          }\n        }\n      }\n\n      return target;\n    }\n    function emitWarning(e) {\n      typeof console.warn === 'function' ? console.warn(e) : console.log(e);\n    }\n    EventEmitter.prototype.addListener = function addListener(type, listener) {\n      return _addListener(this, type, listener, false);\n    };\n\n    EventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\n    EventEmitter.prototype.prependListener =\n        function prependListener(type, listener) {\n          return _addListener(this, type, listener, true);\n        };\n\n    function _onceWrap(target, type, listener) {\n      var fired = false;\n      function g() {\n        target.removeListener(type, g);\n        if (!fired) {\n          fired = true;\n          listener.apply(target, arguments);\n        }\n      }\n      g.listener = listener;\n      return g;\n    }\n\n    EventEmitter.prototype.once = function once(type, listener) {\n      if (typeof listener !== 'function')\n        throw new TypeError('\"listener\" argument must be a function');\n      this.on(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n    EventEmitter.prototype.prependOnceListener =\n        function prependOnceListener(type, listener) {\n          if (typeof listener !== 'function')\n            throw new TypeError('\"listener\" argument must be a function');\n          this.prependListener(type, _onceWrap(this, type, listener));\n          return this;\n        };\n\n    // emits a 'removeListener' event iff the listener was removed\n    EventEmitter.prototype.removeListener =\n        function removeListener(type, listener) {\n          var list, events, position, i, originalListener;\n\n          if (typeof listener !== 'function')\n            throw new TypeError('\"listener\" argument must be a function');\n\n          events = this._events;\n          if (!events)\n            return this;\n\n          list = events[type];\n          if (!list)\n            return this;\n\n          if (list === listener || (list.listener && list.listener === listener)) {\n            if (--this._eventsCount === 0)\n              this._events = new EventHandlers();\n            else {\n              delete events[type];\n              if (events.removeListener)\n                this.emit('removeListener', type, list.listener || listener);\n            }\n          } else if (typeof list !== 'function') {\n            position = -1;\n\n            for (i = list.length; i-- > 0;) {\n              if (list[i] === listener ||\n                  (list[i].listener && list[i].listener === listener)) {\n                originalListener = list[i].listener;\n                position = i;\n                break;\n              }\n            }\n\n            if (position < 0)\n              return this;\n\n            if (list.length === 1) {\n              list[0] = undefined;\n              if (--this._eventsCount === 0) {\n                this._events = new EventHandlers();\n                return this;\n              } else {\n                delete events[type];\n              }\n            } else {\n              spliceOne(list, position);\n            }\n\n            if (events.removeListener)\n              this.emit('removeListener', type, originalListener || listener);\n          }\n\n          return this;\n        };\n\n    EventEmitter.prototype.removeAllListeners =\n        function removeAllListeners(type) {\n          var listeners, events;\n\n          events = this._events;\n          if (!events)\n            return this;\n\n          // not listening for removeListener, no need to emit\n          if (!events.removeListener) {\n            if (arguments.length === 0) {\n              this._events = new EventHandlers();\n              this._eventsCount = 0;\n            } else if (events[type]) {\n              if (--this._eventsCount === 0)\n                this._events = new EventHandlers();\n              else\n                delete events[type];\n            }\n            return this;\n          }\n\n          // emit removeListener for all listeners on all events\n          if (arguments.length === 0) {\n            var keys = Object.keys(events);\n            for (var i = 0, key; i < keys.length; ++i) {\n              key = keys[i];\n              if (key === 'removeListener') continue;\n              this.removeAllListeners(key);\n            }\n            this.removeAllListeners('removeListener');\n            this._events = new EventHandlers();\n            this._eventsCount = 0;\n            return this;\n          }\n\n          listeners = events[type];\n\n          if (typeof listeners === 'function') {\n            this.removeListener(type, listeners);\n          } else if (listeners) {\n            // LIFO order\n            do {\n              this.removeListener(type, listeners[listeners.length - 1]);\n            } while (listeners[0]);\n          }\n\n          return this;\n        };\n\n    EventEmitter.prototype.listeners = function listeners(type) {\n      var evlistener;\n      var ret;\n      var events = this._events;\n\n      if (!events)\n        ret = [];\n      else {\n        evlistener = events[type];\n        if (!evlistener)\n          ret = [];\n        else if (typeof evlistener === 'function')\n          ret = [evlistener.listener || evlistener];\n        else\n          ret = unwrapListeners(evlistener);\n      }\n\n      return ret;\n    };\n\n    EventEmitter.listenerCount = function(emitter, type) {\n      if (typeof emitter.listenerCount === 'function') {\n        return emitter.listenerCount(type);\n      } else {\n        return listenerCount.call(emitter, type);\n      }\n    };\n\n    EventEmitter.prototype.listenerCount = listenerCount;\n    function listenerCount(type) {\n      var events = this._events;\n\n      if (events) {\n        var evlistener = events[type];\n\n        if (typeof evlistener === 'function') {\n          return 1;\n        } else if (evlistener) {\n          return evlistener.length;\n        }\n      }\n\n      return 0;\n    }\n\n    EventEmitter.prototype.eventNames = function eventNames() {\n      return this._eventsCount > 0 ? Reflect.ownKeys(this._events) : [];\n    };\n\n    // About 1.5x faster than the two-arg version of Array#splice().\n    function spliceOne(list, index) {\n      for (var i = index, k = i + 1, n = list.length; k < n; i += 1, k += 1)\n        list[i] = list[k];\n      list.pop();\n    }\n\n    function arrayClone(arr, i) {\n      var copy = new Array(i);\n      while (i--)\n        copy[i] = arr[i];\n      return copy;\n    }\n\n    function unwrapListeners(arr) {\n      var ret = new Array(arr.length);\n      for (var i = 0; i < ret.length; ++i) {\n        ret[i] = arr[i].listener || arr[i];\n      }\n      return ret;\n    }\n\n    var OsmAdapter = (function () {\r\n        function OsmAdapter() {\r\n            this.name = 'osm';\r\n        }\r\n        OsmAdapter.prototype.addLayer = function (options) {\r\n            var layer$$1 = new TileLayer({\r\n                source: new OSM(),\r\n            });\r\n            return layer$$1;\r\n        };\r\n        return OsmAdapter;\r\n    }());\n\n    var ID$1 = 1;\r\n    var MarkerAdapter = (function () {\r\n        function MarkerAdapter() {\r\n        }\r\n        MarkerAdapter.prototype.addLayer = function (options) {\r\n            this.name = options.id || 'marker-' + ID$1++;\r\n            var _a = options.latLng, lat = _a.lat, lng = _a.lng;\r\n            var point = new Feature({\r\n                geometry: new Point(proj.fromLonLat([lng, lat])),\r\n            });\r\n            var source = new VectorSource({\r\n                features: [point],\r\n            });\r\n            var layer$$1 = new layer.Vector({\r\n                source: source,\r\n            });\r\n            return layer$$1;\r\n        };\r\n        return MarkerAdapter;\r\n    }());\n\n    var ID$2 = 1;\r\n    var TileAdapter = (function () {\r\n        function TileAdapter() {\r\n        }\r\n        TileAdapter.prototype.addLayer = function (options) {\r\n            this.name = options.id || 'tile-' + ID$2++;\r\n            var layer$$1 = new TileLayer({\r\n                source: new XYZ({\r\n                    url: options.url,\r\n                }),\r\n            });\r\n            return layer$$1;\r\n        };\r\n        return TileAdapter;\r\n    }());\n\n    var OlMapAdapter = (function () {\r\n        function OlMapAdapter() {\r\n            this.layerAdapters = OlMapAdapter.layerAdapters;\r\n            this.displayProjection = 'EPSG:3857';\r\n            this.lonlatProjection = 'EPSG:4326';\r\n            this.emitter = new EventEmitter();\r\n            this._layers = {};\r\n            this._baseLayers = [];\r\n            this._order = 0;\r\n            this._length = 9999;\r\n            this.DPI = 1000 / 39.37 / 0.28;\r\n            this.IPM = 39.37;\r\n        }\r\n        OlMapAdapter.prototype.create = function (options) {\r\n            if (options === void 0) { options = { target: 'map' }; }\r\n            this.options = Object.assign({}, options);\r\n            var view = new ol.View({\r\n                center: [-9101767, 2822912],\r\n                zoom: 14,\r\n                projection: this.displayProjection,\r\n            });\r\n            var defOpt = {\r\n                logo: false,\r\n                controls: [],\r\n                view: view,\r\n                layers: [],\r\n            };\r\n            var mapInitOptions = __assign({}, defOpt, options);\r\n            this.map = new ol.Map(mapInitOptions);\r\n            this.emitter.emit('create', { map: this.map });\r\n            this._olView = this.map.getView();\r\n            this._addMapListeners();\r\n        };\r\n        OlMapAdapter.prototype.getContainer = function () {\r\n            return document.getElementById(this.options.target);\r\n        };\r\n        OlMapAdapter.prototype.onMapLoad = function (cb) {\r\n            return new Promise(function (resolve) {\r\n                resolve(cb && cb());\r\n            });\r\n        };\r\n        OlMapAdapter.prototype.setCenter = function (latLng) {\r\n            this._olView.setCenter(proj.fromLonLat(latLng));\r\n        };\r\n        OlMapAdapter.prototype.setZoom = function (zoom) {\r\n            this._olView.setZoom(zoom);\r\n        };\r\n        OlMapAdapter.prototype.fit = function (e) {\r\n            var toExtent = proj.transformExtent(e, this.lonlatProjection, this.displayProjection);\r\n            this._olView.fit(toExtent);\r\n        };\r\n        OlMapAdapter.prototype.setRotation = function (angle) {\r\n            this._olView.setRotation(angle);\r\n        };\r\n        OlMapAdapter.prototype.getLayerAdapter = function (name) {\r\n            return OlMapAdapter.layerAdapters[name];\r\n        };\r\n        OlMapAdapter.prototype.getLayer = function (layerName) {\r\n            return this._layers[layerName] !== undefined;\r\n        };\r\n        OlMapAdapter.prototype.getLayers = function () {\r\n            return Object.keys(this._layers);\r\n        };\r\n        OlMapAdapter.prototype.isLayerOnTheMap = function (layerName) {\r\n            var layerMem = this._layers[layerName];\r\n            return layerMem.onMap;\r\n        };\r\n        OlMapAdapter.prototype.addLayer = function (adapterDef, options, baselayer) {\r\n            var _this = this;\r\n            var adapterEngine;\r\n            if (typeof adapterDef === 'string') {\r\n                adapterEngine = this.getLayerAdapter(adapterDef);\r\n            }\r\n            if (adapterEngine) {\r\n                var adapter_1 = new adapterEngine(this.map, options);\r\n                var layer$$1 = adapter_1.addLayer(options);\r\n                var addlayerFun = adapter_1.addLayer(options);\r\n                var toResolve_1 = function (l) {\r\n                    var layerId = adapter_1.name;\r\n                    var layerOpts = { layer: l, onMap: false };\r\n                    if (baselayer) {\r\n                        layerOpts.baseLayer = true;\r\n                        _this._baseLayers.push(layerId);\r\n                    }\r\n                    else {\r\n                        layerOpts.order = options.order || _this._order++;\r\n                    }\r\n                    _this._layers[layerId] = layerOpts;\r\n                    _this._length++;\r\n                    return adapter_1;\r\n                };\r\n                return addlayerFun.then ? addlayerFun.then(function (l) { return toResolve_1(l); }) : Promise.resolve(toResolve_1(layer$$1));\r\n            }\r\n            return Promise.reject('No adapter');\r\n        };\r\n        OlMapAdapter.prototype.removeLayer = function (layerName) {\r\n            var layer$$1 = this._layers[layerName];\r\n            if (layer$$1) {\r\n                this.map.removeLayer(layer$$1.layer);\r\n                if (layer$$1.baseLayer) {\r\n                    var index = this._baseLayers.indexOf(layerName);\r\n                    if (index) {\r\n                        this._baseLayers.splice(index, 1);\r\n                    }\r\n                }\r\n                delete this._layers[layerName];\r\n            }\r\n        };\r\n        OlMapAdapter.prototype.showLayer = function (layerName) {\r\n            this.toggleLayer(layerName, true);\r\n        };\r\n        OlMapAdapter.prototype.hideLayer = function (layerName) {\r\n            this.toggleLayer(layerName, false);\r\n        };\r\n        OlMapAdapter.prototype.setLayerOpacity = function (layerName, value) {\r\n        };\r\n        OlMapAdapter.prototype.getScaleForResolution = function (res, mpu) {\r\n            return parseFloat(res) * (mpu * this.IPM * this.DPI);\r\n        };\r\n        OlMapAdapter.prototype.getResolutionForScale = function (scale, mpu) {\r\n            return parseFloat(scale) / (mpu * this.IPM * this.DPI);\r\n        };\r\n        OlMapAdapter.prototype.toggleLayer = function (layerName, status) {\r\n            var _this = this;\r\n            var action = function (source, l) {\r\n                if (status) {\r\n                    if (source instanceof ol.Map) {\r\n                        source.addLayer(l.layer);\r\n                        l.layer.setZIndex(_this._length - l.order);\r\n                    }\r\n                }\r\n                else {\r\n                    source.removeLayer(l.layer);\r\n                }\r\n                l.onMap = status;\r\n            };\r\n            var layer$$1 = this._layers[layerName];\r\n            if (layer$$1 && layer$$1.onMap !== status) {\r\n                if (this.map) {\r\n                    action(this.map, layer$$1);\r\n                }\r\n                else {\r\n                    this.emitter.once('create', function (data) {\r\n                        action(data.map, layer$$1);\r\n                    });\r\n                }\r\n            }\r\n        };\r\n        OlMapAdapter.prototype.addControl = function (controlDef, position, options) {\r\n            var control$$1;\r\n            if (typeof controlDef === 'string') {\r\n                var engine = OlMapAdapter.controlAdapters[controlDef];\r\n                if (engine) {\r\n                    control$$1 = new engine(options);\r\n                }\r\n            }\r\n            else {\r\n                control$$1 = controlDef;\r\n            }\r\n            if (control$$1) {\r\n                this.map.addControl(control$$1);\r\n                return control$$1;\r\n            }\r\n        };\r\n        OlMapAdapter.prototype.onMapClick = function (evt) {\r\n            var _a = proj.transform(evt.coordinate, this.displayProjection, this.lonlatProjection), lng = _a[0], lat = _a[1];\r\n            var latLng = {\r\n                lat: lat, lng: lng,\r\n            };\r\n            this.emitter.emit('click', {\r\n                latLng: latLng,\r\n                pixel: { left: evt.pixel[0], top: evt.pixel[1] },\r\n                source: evt,\r\n            });\r\n        };\r\n        OlMapAdapter.prototype.requestGeomString = function (pixel, pixelRadius) {\r\n            if (pixelRadius === void 0) { pixelRadius = 5; }\r\n            var top = pixel.top, left = pixel.left;\r\n            var olMap = this.map;\r\n            var bounds = extent.boundingExtent([\r\n                olMap.getCoordinateFromPixel([\r\n                    left - pixelRadius,\r\n                    top - pixelRadius,\r\n                ]),\r\n                olMap.getCoordinateFromPixel([\r\n                    left + pixelRadius,\r\n                    top + pixelRadius,\r\n                ]),\r\n            ]);\r\n            return new format.WKT().writeGeometry(Polygon.fromExtent(bounds));\r\n        };\r\n        OlMapAdapter.prototype._addMapListeners = function () {\r\n            var _this = this;\r\n            this.map.on('click', function (evt) {\r\n                _this.onMapClick(evt);\r\n            });\r\n        };\r\n        OlMapAdapter.layerAdapters = {\r\n            IMAGE: ImageAdapter,\r\n            TILE: TileAdapter,\r\n            OSM: OsmAdapter,\r\n            MARKER: MarkerAdapter,\r\n        };\r\n        OlMapAdapter.controlAdapters = {\r\n            ZOOM: control.Zoom,\r\n            ATTRIBUTION: control.Attribution,\r\n        };\r\n        return OlMapAdapter;\r\n    }());\n\n    exports.OlMapAdapter = OlMapAdapter;\n\n    Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ol-map-adapter.js.map\n","'use strict';\n\nmodule.exports = Pbf;\n\nvar ieee754 = require('ieee754');\n\nfunction Pbf(buf) {\n    this.buf = ArrayBuffer.isView && ArrayBuffer.isView(buf) ? buf : new Uint8Array(buf || 0);\n    this.pos = 0;\n    this.type = 0;\n    this.length = this.buf.length;\n}\n\nPbf.Varint  = 0; // varint: int32, int64, uint32, uint64, sint32, sint64, bool, enum\nPbf.Fixed64 = 1; // 64-bit: double, fixed64, sfixed64\nPbf.Bytes   = 2; // length-delimited: string, bytes, embedded messages, packed repeated fields\nPbf.Fixed32 = 5; // 32-bit: float, fixed32, sfixed32\n\nvar SHIFT_LEFT_32 = (1 << 16) * (1 << 16),\n    SHIFT_RIGHT_32 = 1 / SHIFT_LEFT_32;\n\nPbf.prototype = {\n\n    destroy: function() {\n        this.buf = null;\n    },\n\n    // === READING =================================================================\n\n    readFields: function(readField, result, end) {\n        end = end || this.length;\n\n        while (this.pos < end) {\n            var val = this.readVarint(),\n                tag = val >> 3,\n                startPos = this.pos;\n\n            this.type = val & 0x7;\n            readField(tag, result, this);\n\n            if (this.pos === startPos) this.skip(val);\n        }\n        return result;\n    },\n\n    readMessage: function(readField, result) {\n        return this.readFields(readField, result, this.readVarint() + this.pos);\n    },\n\n    readFixed32: function() {\n        var val = readUInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    readSFixed32: function() {\n        var val = readInt32(this.buf, this.pos);\n        this.pos += 4;\n        return val;\n    },\n\n    // 64-bit int handling is based on github.com/dpw/node-buffer-more-ints (MIT-licensed)\n\n    readFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readUInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readSFixed64: function() {\n        var val = readUInt32(this.buf, this.pos) + readInt32(this.buf, this.pos + 4) * SHIFT_LEFT_32;\n        this.pos += 8;\n        return val;\n    },\n\n    readFloat: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 23, 4);\n        this.pos += 4;\n        return val;\n    },\n\n    readDouble: function() {\n        var val = ieee754.read(this.buf, this.pos, true, 52, 8);\n        this.pos += 8;\n        return val;\n    },\n\n    readVarint: function(isSigned) {\n        var buf = this.buf,\n            val, b;\n\n        b = buf[this.pos++]; val  =  b & 0x7f;        if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 7;  if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 14; if (b < 0x80) return val;\n        b = buf[this.pos++]; val |= (b & 0x7f) << 21; if (b < 0x80) return val;\n        b = buf[this.pos];   val |= (b & 0x0f) << 28;\n\n        return readVarintRemainder(val, isSigned, this);\n    },\n\n    readVarint64: function() { // for compatibility with v2.0.1\n        return this.readVarint(true);\n    },\n\n    readSVarint: function() {\n        var num = this.readVarint();\n        return num % 2 === 1 ? (num + 1) / -2 : num / 2; // zigzag encoding\n    },\n\n    readBoolean: function() {\n        return Boolean(this.readVarint());\n    },\n\n    readString: function() {\n        var end = this.readVarint() + this.pos,\n            str = readUtf8(this.buf, this.pos, end);\n        this.pos = end;\n        return str;\n    },\n\n    readBytes: function() {\n        var end = this.readVarint() + this.pos,\n            buffer = this.buf.subarray(this.pos, end);\n        this.pos = end;\n        return buffer;\n    },\n\n    // verbose for performance reasons; doesn't affect gzipped size\n\n    readPackedVarint: function(arr, isSigned) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readVarint(isSigned));\n        return arr;\n    },\n    readPackedSVarint: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSVarint());\n        return arr;\n    },\n    readPackedBoolean: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readBoolean());\n        return arr;\n    },\n    readPackedFloat: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFloat());\n        return arr;\n    },\n    readPackedDouble: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readDouble());\n        return arr;\n    },\n    readPackedFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed32());\n        return arr;\n    },\n    readPackedSFixed32: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed32());\n        return arr;\n    },\n    readPackedFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readFixed64());\n        return arr;\n    },\n    readPackedSFixed64: function(arr) {\n        var end = readPackedEnd(this);\n        arr = arr || [];\n        while (this.pos < end) arr.push(this.readSFixed64());\n        return arr;\n    },\n\n    skip: function(val) {\n        var type = val & 0x7;\n        if (type === Pbf.Varint) while (this.buf[this.pos++] > 0x7f) {}\n        else if (type === Pbf.Bytes) this.pos = this.readVarint() + this.pos;\n        else if (type === Pbf.Fixed32) this.pos += 4;\n        else if (type === Pbf.Fixed64) this.pos += 8;\n        else throw new Error('Unimplemented type: ' + type);\n    },\n\n    // === WRITING =================================================================\n\n    writeTag: function(tag, type) {\n        this.writeVarint((tag << 3) | type);\n    },\n\n    realloc: function(min) {\n        var length = this.length || 16;\n\n        while (length < this.pos + min) length *= 2;\n\n        if (length !== this.length) {\n            var buf = new Uint8Array(length);\n            buf.set(this.buf);\n            this.buf = buf;\n            this.length = length;\n        }\n    },\n\n    finish: function() {\n        this.length = this.pos;\n        this.pos = 0;\n        return this.buf.subarray(0, this.length);\n    },\n\n    writeFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeSFixed32: function(val) {\n        this.realloc(4);\n        writeInt32(this.buf, val, this.pos);\n        this.pos += 4;\n    },\n\n    writeFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeSFixed64: function(val) {\n        this.realloc(8);\n        writeInt32(this.buf, val & -1, this.pos);\n        writeInt32(this.buf, Math.floor(val * SHIFT_RIGHT_32), this.pos + 4);\n        this.pos += 8;\n    },\n\n    writeVarint: function(val) {\n        val = +val || 0;\n\n        if (val > 0xfffffff || val < 0) {\n            writeBigVarint(val, this);\n            return;\n        }\n\n        this.realloc(4);\n\n        this.buf[this.pos++] =           val & 0x7f  | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] = ((val >>>= 7) & 0x7f) | (val > 0x7f ? 0x80 : 0); if (val <= 0x7f) return;\n        this.buf[this.pos++] =   (val >>> 7) & 0x7f;\n    },\n\n    writeSVarint: function(val) {\n        this.writeVarint(val < 0 ? -val * 2 - 1 : val * 2);\n    },\n\n    writeBoolean: function(val) {\n        this.writeVarint(Boolean(val));\n    },\n\n    writeString: function(str) {\n        str = String(str);\n        this.realloc(str.length * 4);\n\n        this.pos++; // reserve 1 byte for short string length\n\n        var startPos = this.pos;\n        // write the string directly to the buffer and see how much was written\n        this.pos = writeUtf8(this.buf, str, this.pos);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeFloat: function(val) {\n        this.realloc(4);\n        ieee754.write(this.buf, val, this.pos, true, 23, 4);\n        this.pos += 4;\n    },\n\n    writeDouble: function(val) {\n        this.realloc(8);\n        ieee754.write(this.buf, val, this.pos, true, 52, 8);\n        this.pos += 8;\n    },\n\n    writeBytes: function(buffer) {\n        var len = buffer.length;\n        this.writeVarint(len);\n        this.realloc(len);\n        for (var i = 0; i < len; i++) this.buf[this.pos++] = buffer[i];\n    },\n\n    writeRawMessage: function(fn, obj) {\n        this.pos++; // reserve 1 byte for short message length\n\n        // write the message directly to the buffer and see how much was written\n        var startPos = this.pos;\n        fn(obj, this);\n        var len = this.pos - startPos;\n\n        if (len >= 0x80) makeRoomForExtraLength(startPos, len, this);\n\n        // finally, write the message length in the reserved place and restore the position\n        this.pos = startPos - 1;\n        this.writeVarint(len);\n        this.pos += len;\n    },\n\n    writeMessage: function(tag, fn, obj) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeRawMessage(fn, obj);\n    },\n\n    writePackedVarint:   function(tag, arr) { this.writeMessage(tag, writePackedVarint, arr);   },\n    writePackedSVarint:  function(tag, arr) { this.writeMessage(tag, writePackedSVarint, arr);  },\n    writePackedBoolean:  function(tag, arr) { this.writeMessage(tag, writePackedBoolean, arr);  },\n    writePackedFloat:    function(tag, arr) { this.writeMessage(tag, writePackedFloat, arr);    },\n    writePackedDouble:   function(tag, arr) { this.writeMessage(tag, writePackedDouble, arr);   },\n    writePackedFixed32:  function(tag, arr) { this.writeMessage(tag, writePackedFixed32, arr);  },\n    writePackedSFixed32: function(tag, arr) { this.writeMessage(tag, writePackedSFixed32, arr); },\n    writePackedFixed64:  function(tag, arr) { this.writeMessage(tag, writePackedFixed64, arr);  },\n    writePackedSFixed64: function(tag, arr) { this.writeMessage(tag, writePackedSFixed64, arr); },\n\n    writeBytesField: function(tag, buffer) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeBytes(buffer);\n    },\n    writeFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFixed32(val);\n    },\n    writeSFixed32Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeSFixed32(val);\n    },\n    writeFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeFixed64(val);\n    },\n    writeSFixed64Field: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeSFixed64(val);\n    },\n    writeVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeVarint(val);\n    },\n    writeSVarintField: function(tag, val) {\n        this.writeTag(tag, Pbf.Varint);\n        this.writeSVarint(val);\n    },\n    writeStringField: function(tag, str) {\n        this.writeTag(tag, Pbf.Bytes);\n        this.writeString(str);\n    },\n    writeFloatField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed32);\n        this.writeFloat(val);\n    },\n    writeDoubleField: function(tag, val) {\n        this.writeTag(tag, Pbf.Fixed64);\n        this.writeDouble(val);\n    },\n    writeBooleanField: function(tag, val) {\n        this.writeVarintField(tag, Boolean(val));\n    }\n};\n\nfunction readVarintRemainder(l, s, p) {\n    var buf = p.buf,\n        h, b;\n\n    b = buf[p.pos++]; h  = (b & 0x70) >> 4;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 3;  if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 10; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 17; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x7f) << 24; if (b < 0x80) return toNum(l, h, s);\n    b = buf[p.pos++]; h |= (b & 0x01) << 31; if (b < 0x80) return toNum(l, h, s);\n\n    throw new Error('Expected varint not more than 10 bytes');\n}\n\nfunction readPackedEnd(pbf) {\n    return pbf.type === Pbf.Bytes ?\n        pbf.readVarint() + pbf.pos : pbf.pos + 1;\n}\n\nfunction toNum(low, high, isSigned) {\n    if (isSigned) {\n        return high * 0x100000000 + (low >>> 0);\n    }\n\n    return ((high >>> 0) * 0x100000000) + (low >>> 0);\n}\n\nfunction writeBigVarint(val, pbf) {\n    var low, high;\n\n    if (val >= 0) {\n        low  = (val % 0x100000000) | 0;\n        high = (val / 0x100000000) | 0;\n    } else {\n        low  = ~(-val % 0x100000000);\n        high = ~(-val / 0x100000000);\n\n        if (low ^ 0xffffffff) {\n            low = (low + 1) | 0;\n        } else {\n            low = 0;\n            high = (high + 1) | 0;\n        }\n    }\n\n    if (val >= 0x10000000000000000 || val < -0x10000000000000000) {\n        throw new Error('Given varint doesn\\'t fit into 10 bytes');\n    }\n\n    pbf.realloc(10);\n\n    writeBigVarintLow(low, high, pbf);\n    writeBigVarintHigh(high, pbf);\n}\n\nfunction writeBigVarintLow(low, high, pbf) {\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos++] = low & 0x7f | 0x80; low >>>= 7;\n    pbf.buf[pbf.pos]   = low & 0x7f;\n}\n\nfunction writeBigVarintHigh(high, pbf) {\n    var lsb = (high & 0x07) << 4;\n\n    pbf.buf[pbf.pos++] |= lsb         | ((high >>>= 3) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f | ((high >>>= 7) ? 0x80 : 0); if (!high) return;\n    pbf.buf[pbf.pos++]  = high & 0x7f;\n}\n\nfunction makeRoomForExtraLength(startPos, len, pbf) {\n    var extraLen =\n        len <= 0x3fff ? 1 :\n        len <= 0x1fffff ? 2 :\n        len <= 0xfffffff ? 3 : Math.ceil(Math.log(len) / (Math.LN2 * 7));\n\n    // if 1 byte isn't enough for encoding message length, shift the data to the right\n    pbf.realloc(extraLen);\n    for (var i = pbf.pos - 1; i >= startPos; i--) pbf.buf[i + extraLen] = pbf.buf[i];\n}\n\nfunction writePackedVarint(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeVarint(arr[i]);   }\nfunction writePackedSVarint(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeSVarint(arr[i]);  }\nfunction writePackedFloat(arr, pbf)    { for (var i = 0; i < arr.length; i++) pbf.writeFloat(arr[i]);    }\nfunction writePackedDouble(arr, pbf)   { for (var i = 0; i < arr.length; i++) pbf.writeDouble(arr[i]);   }\nfunction writePackedBoolean(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeBoolean(arr[i]);  }\nfunction writePackedFixed32(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed32(arr[i]);  }\nfunction writePackedSFixed32(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed32(arr[i]); }\nfunction writePackedFixed64(arr, pbf)  { for (var i = 0; i < arr.length; i++) pbf.writeFixed64(arr[i]);  }\nfunction writePackedSFixed64(arr, pbf) { for (var i = 0; i < arr.length; i++) pbf.writeSFixed64(arr[i]); }\n\n// Buffer code below from https://github.com/feross/buffer, MIT-licensed\n\nfunction readUInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] * 0x1000000);\n}\n\nfunction writeInt32(buf, val, pos) {\n    buf[pos] = val;\n    buf[pos + 1] = (val >>> 8);\n    buf[pos + 2] = (val >>> 16);\n    buf[pos + 3] = (val >>> 24);\n}\n\nfunction readInt32(buf, pos) {\n    return ((buf[pos]) |\n        (buf[pos + 1] << 8) |\n        (buf[pos + 2] << 16)) +\n        (buf[pos + 3] << 24);\n}\n\nfunction readUtf8(buf, pos, end) {\n    var str = '';\n    var i = pos;\n\n    while (i < end) {\n        var b0 = buf[i];\n        var c = null; // codepoint\n        var bytesPerSequence =\n            b0 > 0xEF ? 4 :\n            b0 > 0xDF ? 3 :\n            b0 > 0xBF ? 2 : 1;\n\n        if (i + bytesPerSequence > end) break;\n\n        var b1, b2, b3;\n\n        if (bytesPerSequence === 1) {\n            if (b0 < 0x80) {\n                c = b0;\n            }\n        } else if (bytesPerSequence === 2) {\n            b1 = buf[i + 1];\n            if ((b1 & 0xC0) === 0x80) {\n                c = (b0 & 0x1F) << 0x6 | (b1 & 0x3F);\n                if (c <= 0x7F) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 3) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0xC | (b1 & 0x3F) << 0x6 | (b2 & 0x3F);\n                if (c <= 0x7FF || (c >= 0xD800 && c <= 0xDFFF)) {\n                    c = null;\n                }\n            }\n        } else if (bytesPerSequence === 4) {\n            b1 = buf[i + 1];\n            b2 = buf[i + 2];\n            b3 = buf[i + 3];\n            if ((b1 & 0xC0) === 0x80 && (b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n                c = (b0 & 0xF) << 0x12 | (b1 & 0x3F) << 0xC | (b2 & 0x3F) << 0x6 | (b3 & 0x3F);\n                if (c <= 0xFFFF || c >= 0x110000) {\n                    c = null;\n                }\n            }\n        }\n\n        if (c === null) {\n            c = 0xFFFD;\n            bytesPerSequence = 1;\n\n        } else if (c > 0xFFFF) {\n            c -= 0x10000;\n            str += String.fromCharCode(c >>> 10 & 0x3FF | 0xD800);\n            c = 0xDC00 | c & 0x3FF;\n        }\n\n        str += String.fromCharCode(c);\n        i += bytesPerSequence;\n    }\n\n    return str;\n}\n\nfunction writeUtf8(buf, str, pos) {\n    for (var i = 0, c, lead; i < str.length; i++) {\n        c = str.charCodeAt(i); // code point\n\n        if (c > 0xD7FF && c < 0xE000) {\n            if (lead) {\n                if (c < 0xDC00) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                    lead = c;\n                    continue;\n                } else {\n                    c = lead - 0xD800 << 10 | c - 0xDC00 | 0x10000;\n                    lead = null;\n                }\n            } else {\n                if (c > 0xDBFF || (i + 1 === str.length)) {\n                    buf[pos++] = 0xEF;\n                    buf[pos++] = 0xBF;\n                    buf[pos++] = 0xBD;\n                } else {\n                    lead = c;\n                }\n                continue;\n            }\n        } else if (lead) {\n            buf[pos++] = 0xEF;\n            buf[pos++] = 0xBF;\n            buf[pos++] = 0xBD;\n            lead = null;\n        }\n\n        if (c < 0x80) {\n            buf[pos++] = c;\n        } else {\n            if (c < 0x800) {\n                buf[pos++] = c >> 0x6 | 0xC0;\n            } else {\n                if (c < 0x10000) {\n                    buf[pos++] = c >> 0xC | 0xE0;\n                } else {\n                    buf[pos++] = c >> 0x12 | 0xF0;\n                    buf[pos++] = c >> 0xC & 0x3F | 0x80;\n                }\n                buf[pos++] = c >> 0x6 & 0x3F | 0x80;\n            }\n            buf[pos++] = c & 0x3F | 0x80;\n        }\n    }\n    return pos;\n}\n","import NgwMap, { MapOptions } from '@nextgis-apps/ngw-map';\n// import NgwMap, { MapOptions } from '../../ngw-map/src/ngw-map';\nimport 'ol/ol.css';\n// import { LeafletMapAdapter } from '../../../nextgisweb_frontend/packages/leaflet-map-adapter/src/LeafletMapAdapter';\nimport { OlMapAdapter } from '@nextgis/ol-map-adapter';\n\nexport default class NgwOl extends NgwMap {\n\n  constructor(options: MapOptions) {\n    super(new OlMapAdapter(), options);\n  }\n\n  //\n  /**\n   * top, left, bottom, right\n   */\n  fitBounds(bounds: [number, number, number, number]) {\n    const [top, left, bottom, right] = bounds;\n    // [extent_left, extent_bottom, extent_right, extent_top];\n    this.webMap.map.fit([left, bottom, right, top]);\n  }\n\n}\n","\nvar content = require(\"!!../css-loader/index.js!./ol.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../css-loader/index.js!./ol.css\", function() {\n\t\tvar newContent = require(\"!!../css-loader/index.js!./ol.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".ol-box {\\n  box-sizing: border-box;\\n  border-radius: 2px;\\n  border: 2px solid blue;\\n}\\n\\n.ol-mouse-position {\\n  top: 8px;\\n  right: 8px;\\n  position: absolute;\\n}\\n\\n.ol-scale-line {\\n  background: rgba(0,60,136,0.3);\\n  border-radius: 4px;\\n  bottom: 8px;\\n  left: 8px;\\n  padding: 2px;\\n  position: absolute;\\n}\\n.ol-scale-line-inner {\\n  border: 1px solid #eee;\\n  border-top: none;\\n  color: #eee;\\n  font-size: 10px;\\n  text-align: center;\\n  margin: 1px;\\n  will-change: contents, width;\\n}\\n.ol-overlay-container {\\n  will-change: left,right,top,bottom;\\n}\\n\\n.ol-unsupported {\\n  display: none;\\n}\\n.ol-viewport, .ol-unselectable {\\n  -webkit-touch-callout: none;\\n  -webkit-user-select: none;\\n  -moz-user-select: none;\\n  -ms-user-select: none;\\n  user-select: none;\\n  -webkit-tap-highlight-color: rgba(0,0,0,0);\\n}\\n.ol-selectable {\\n  -webkit-touch-callout: default;\\n  -webkit-user-select: text;\\n  -moz-user-select: text;\\n  -ms-user-select: text;\\n  user-select: text;\\n}\\n.ol-grabbing {\\n  cursor: -webkit-grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: grabbing;\\n}\\n.ol-grab {\\n  cursor: move;\\n  cursor: -webkit-grab;\\n  cursor: -moz-grab;\\n  cursor: grab;\\n}\\n.ol-control {\\n  position: absolute;\\n  background-color: rgba(255,255,255,0.4);\\n  border-radius: 4px;\\n  padding: 2px;\\n}\\n.ol-control:hover {\\n  background-color: rgba(255,255,255,0.6);\\n}\\n.ol-zoom {\\n  top: .5em;\\n  left: .5em;\\n}\\n.ol-rotate {\\n  top: .5em;\\n  right: .5em;\\n  transition: opacity .25s linear, visibility 0s linear;\\n}\\n.ol-rotate.ol-hidden {\\n  opacity: 0;\\n  visibility: hidden;\\n  transition: opacity .25s linear, visibility 0s linear .25s;\\n}\\n.ol-zoom-extent {\\n  top: 4.643em;\\n  left: .5em;\\n}\\n.ol-full-screen {\\n  right: .5em;\\n  top: .5em;\\n}\\n@media print {\\n  .ol-control {\\n    display: none;\\n  }\\n}\\n\\n.ol-control button {\\n  display: block;\\n  margin: 1px;\\n  padding: 0;\\n  color: white;\\n  font-size: 1.14em;\\n  font-weight: bold;\\n  text-decoration: none;\\n  text-align: center;\\n  height: 1.375em;\\n  width: 1.375em;\\n  line-height: .4em;\\n  background-color: rgba(0,60,136,0.5);\\n  border: none;\\n  border-radius: 2px;\\n}\\n.ol-control button::-moz-focus-inner {\\n  border: none;\\n  padding: 0;\\n}\\n.ol-zoom-extent button {\\n  line-height: 1.4em;\\n}\\n.ol-compass {\\n  display: block;\\n  font-weight: normal;\\n  font-size: 1.2em;\\n  will-change: transform;\\n}\\n.ol-touch .ol-control button {\\n  font-size: 1.5em;\\n}\\n.ol-touch .ol-zoom-extent {\\n  top: 5.5em;\\n}\\n.ol-control button:hover,\\n.ol-control button:focus {\\n  text-decoration: none;\\n  background-color: rgba(0,60,136,0.7);\\n}\\n.ol-zoom .ol-zoom-in {\\n  border-radius: 2px 2px 0 0;\\n}\\n.ol-zoom .ol-zoom-out {\\n  border-radius: 0 0 2px 2px;\\n}\\n\\n\\n.ol-attribution {\\n  text-align: right;\\n  bottom: .5em;\\n  right: .5em;\\n  max-width: calc(100% - 1.3em);\\n}\\n\\n.ol-attribution ul {\\n  margin: 0;\\n  padding: 0 .5em;\\n  font-size: .7rem;\\n  line-height: 1.375em;\\n  color: #000;\\n  text-shadow: 0 0 2px #fff;\\n}\\n.ol-attribution li {\\n  display: inline;\\n  list-style: none;\\n  line-height: inherit;\\n}\\n.ol-attribution li:not(:last-child):after {\\n  content: \\\" \\\";\\n}\\n.ol-attribution img {\\n  max-height: 2em;\\n  max-width: inherit;\\n  vertical-align: middle;\\n}\\n.ol-attribution ul, .ol-attribution button {\\n  display: inline-block;\\n}\\n.ol-attribution.ol-collapsed ul {\\n  display: none;\\n}\\n.ol-attribution:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-attribution.ol-uncollapsible {\\n  bottom: 0;\\n  right: 0;\\n  border-radius: 4px 0 0;\\n  height: 1.1em;\\n  line-height: 1em;\\n}\\n.ol-attribution.ol-uncollapsible img {\\n  margin-top: -.2em;\\n  max-height: 1.6em;\\n}\\n.ol-attribution.ol-uncollapsible button {\\n  display: none;\\n}\\n\\n.ol-zoomslider {\\n  top: 4.5em;\\n  left: .5em;\\n  height: 200px;\\n}\\n.ol-zoomslider button {\\n  position: relative;\\n  height: 10px;\\n}\\n\\n.ol-touch .ol-zoomslider {\\n  top: 5.5em;\\n}\\n\\n.ol-overviewmap {\\n  left: 0.5em;\\n  bottom: 0.5em;\\n}\\n.ol-overviewmap.ol-uncollapsible {\\n  bottom: 0;\\n  left: 0;\\n  border-radius: 0 4px 0 0;\\n}\\n.ol-overviewmap .ol-overviewmap-map,\\n.ol-overviewmap button {\\n  display: inline-block;\\n}\\n.ol-overviewmap .ol-overviewmap-map {\\n  border: 1px solid #7b98bc;\\n  height: 150px;\\n  margin: 2px;\\n  width: 150px;\\n}\\n.ol-overviewmap:not(.ol-collapsed) button{\\n  bottom: 1px;\\n  left: 2px;\\n  position: absolute;\\n}\\n.ol-overviewmap.ol-collapsed .ol-overviewmap-map,\\n.ol-overviewmap.ol-uncollapsible button {\\n  display: none;\\n}\\n.ol-overviewmap:not(.ol-collapsed) {\\n  background: rgba(255,255,255,0.8);\\n}\\n.ol-overviewmap-box {\\n  border: 2px dotted rgba(0,60,136,0.7);\\n}\\n\\n.ol-overviewmap .ol-overviewmap-box:hover {\\n  cursor: move;\\n}\\n\", \"\"]);\n\n// exports\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n// css base code, injected by the css-loader\nmodule.exports = function(useSourceMap) {\n\tvar list = [];\n\n\t// return the list of modules as css string\n\tlist.toString = function toString() {\n\t\treturn this.map(function (item) {\n\t\t\tvar content = cssWithMappingToString(item, useSourceMap);\n\t\t\tif(item[2]) {\n\t\t\t\treturn \"@media \" + item[2] + \"{\" + content + \"}\";\n\t\t\t} else {\n\t\t\t\treturn content;\n\t\t\t}\n\t\t}).join(\"\");\n\t};\n\n\t// import a list of modules into the list\n\tlist.i = function(modules, mediaQuery) {\n\t\tif(typeof modules === \"string\")\n\t\t\tmodules = [[null, modules, \"\"]];\n\t\tvar alreadyImportedModules = {};\n\t\tfor(var i = 0; i < this.length; i++) {\n\t\t\tvar id = this[i][0];\n\t\t\tif(typeof id === \"number\")\n\t\t\t\talreadyImportedModules[id] = true;\n\t\t}\n\t\tfor(i = 0; i < modules.length; i++) {\n\t\t\tvar item = modules[i];\n\t\t\t// skip already imported module\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\n\t\t\t//  when a module is imported multiple times with different media queries.\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\n\t\t\t\tif(mediaQuery && !item[2]) {\n\t\t\t\t\titem[2] = mediaQuery;\n\t\t\t\t} else if(mediaQuery) {\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\n\t\t\t\t}\n\t\t\t\tlist.push(item);\n\t\t\t}\n\t\t}\n\t};\n\treturn list;\n};\n\nfunction cssWithMappingToString(item, useSourceMap) {\n\tvar content = item[1] || '';\n\tvar cssMapping = item[3];\n\tif (!cssMapping) {\n\t\treturn content;\n\t}\n\n\tif (useSourceMap && typeof btoa === 'function') {\n\t\tvar sourceMapping = toComment(cssMapping);\n\t\tvar sourceURLs = cssMapping.sources.map(function (source) {\n\t\t\treturn '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'\n\t\t});\n\n\t\treturn [content].concat(sourceURLs).concat([sourceMapping]).join('\\n');\n\t}\n\n\treturn [content].join('\\n');\n}\n\n// Adapted from convert-source-map (MIT)\nfunction toComment(sourceMap) {\n\t// eslint-disable-next-line no-undef\n\tvar base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\n\tvar data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;\n\n\treturn '/*# ' + data + ' */';\n}\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\nvar stylesInDom = {};\n\nvar\tmemoize = function (fn) {\n\tvar memo;\n\n\treturn function () {\n\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\n\t\treturn memo;\n\t};\n};\n\nvar isOldIE = memoize(function () {\n\t// Test for IE <= 9 as proposed by Browserhacks\n\t// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\n\t// Tests for existence of standard globals is to allow style-loader\n\t// to operate correctly into non-standard environments\n\t// @see https://github.com/webpack-contrib/style-loader/issues/177\n\treturn window && document && document.all && !window.atob;\n});\n\nvar getTarget = function (target, parent) {\n  if (parent){\n    return parent.querySelector(target);\n  }\n  return document.querySelector(target);\n};\n\nvar getElement = (function (fn) {\n\tvar memo = {};\n\n\treturn function(target, parent) {\n                // If passing function in options, then use it for resolve \"head\" element.\n                // Useful for Shadow Root style i.e\n                // {\n                //   insertInto: function () { return document.querySelector(\"#foo\").shadowRoot }\n                // }\n                if (typeof target === 'function') {\n                        return target();\n                }\n                if (typeof memo[target] === \"undefined\") {\n\t\t\tvar styleTarget = getTarget.call(this, target, parent);\n\t\t\t// Special case to return head of iframe instead of iframe itself\n\t\t\tif (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\n\t\t\t\ttry {\n\t\t\t\t\t// This will throw an exception if access to iframe is blocked\n\t\t\t\t\t// due to cross-origin restrictions\n\t\t\t\t\tstyleTarget = styleTarget.contentDocument.head;\n\t\t\t\t} catch(e) {\n\t\t\t\t\tstyleTarget = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tmemo[target] = styleTarget;\n\t\t}\n\t\treturn memo[target]\n\t};\n})();\n\nvar singleton = null;\nvar\tsingletonCounter = 0;\nvar\tstylesInsertedAtTop = [];\n\nvar\tfixUrls = require(\"./urls\");\n\nmodule.exports = function(list, options) {\n\tif (typeof DEBUG !== \"undefined\" && DEBUG) {\n\t\tif (typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\n\t}\n\n\toptions = options || {};\n\n\toptions.attrs = typeof options.attrs === \"object\" ? options.attrs : {};\n\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\n\t// tags it will allow on a page\n\tif (!options.singleton && typeof options.singleton !== \"boolean\") options.singleton = isOldIE();\n\n\t// By default, add <style> tags to the <head> element\n        if (!options.insertInto) options.insertInto = \"head\";\n\n\t// By default, add <style> tags to the bottom of the target\n\tif (!options.insertAt) options.insertAt = \"bottom\";\n\n\tvar styles = listToStyles(list, options);\n\n\taddStylesToDom(styles, options);\n\n\treturn function update (newList) {\n\t\tvar mayRemove = [];\n\n\t\tfor (var i = 0; i < styles.length; i++) {\n\t\t\tvar item = styles[i];\n\t\t\tvar domStyle = stylesInDom[item.id];\n\n\t\t\tdomStyle.refs--;\n\t\t\tmayRemove.push(domStyle);\n\t\t}\n\n\t\tif(newList) {\n\t\t\tvar newStyles = listToStyles(newList, options);\n\t\t\taddStylesToDom(newStyles, options);\n\t\t}\n\n\t\tfor (var i = 0; i < mayRemove.length; i++) {\n\t\t\tvar domStyle = mayRemove[i];\n\n\t\t\tif(domStyle.refs === 0) {\n\t\t\t\tfor (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();\n\n\t\t\t\tdelete stylesInDom[domStyle.id];\n\t\t\t}\n\t\t}\n\t};\n};\n\nfunction addStylesToDom (styles, options) {\n\tfor (var i = 0; i < styles.length; i++) {\n\t\tvar item = styles[i];\n\t\tvar domStyle = stylesInDom[item.id];\n\n\t\tif(domStyle) {\n\t\t\tdomStyle.refs++;\n\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\n\t\t\t}\n\n\t\t\tfor(; j < item.parts.length; j++) {\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\t\t} else {\n\t\t\tvar parts = [];\n\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\n\t\t\t}\n\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\n\t\t}\n\t}\n}\n\nfunction listToStyles (list, options) {\n\tvar styles = [];\n\tvar newStyles = {};\n\n\tfor (var i = 0; i < list.length; i++) {\n\t\tvar item = list[i];\n\t\tvar id = options.base ? item[0] + options.base : item[0];\n\t\tvar css = item[1];\n\t\tvar media = item[2];\n\t\tvar sourceMap = item[3];\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\n\n\t\tif(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});\n\t\telse newStyles[id].parts.push(part);\n\t}\n\n\treturn styles;\n}\n\nfunction insertStyleElement (options, style) {\n\tvar target = getElement(options.insertInto)\n\n\tif (!target) {\n\t\tthrow new Error(\"Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.\");\n\t}\n\n\tvar lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];\n\n\tif (options.insertAt === \"top\") {\n\t\tif (!lastStyleElementInsertedAtTop) {\n\t\t\ttarget.insertBefore(style, target.firstChild);\n\t\t} else if (lastStyleElementInsertedAtTop.nextSibling) {\n\t\t\ttarget.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);\n\t\t} else {\n\t\t\ttarget.appendChild(style);\n\t\t}\n\t\tstylesInsertedAtTop.push(style);\n\t} else if (options.insertAt === \"bottom\") {\n\t\ttarget.appendChild(style);\n\t} else if (typeof options.insertAt === \"object\" && options.insertAt.before) {\n\t\tvar nextSibling = getElement(options.insertAt.before, target);\n\t\ttarget.insertBefore(style, nextSibling);\n\t} else {\n\t\tthrow new Error(\"[Style Loader]\\n\\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\\n Must be 'top', 'bottom', or Object.\\n (https://github.com/webpack-contrib/style-loader#insertat)\\n\");\n\t}\n}\n\nfunction removeStyleElement (style) {\n\tif (style.parentNode === null) return false;\n\tstyle.parentNode.removeChild(style);\n\n\tvar idx = stylesInsertedAtTop.indexOf(style);\n\tif(idx >= 0) {\n\t\tstylesInsertedAtTop.splice(idx, 1);\n\t}\n}\n\nfunction createStyleElement (options) {\n\tvar style = document.createElement(\"style\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\n\tif(options.attrs.nonce === undefined) {\n\t\tvar nonce = getNonce();\n\t\tif (nonce) {\n\t\t\toptions.attrs.nonce = nonce;\n\t\t}\n\t}\n\n\taddAttrs(style, options.attrs);\n\tinsertStyleElement(options, style);\n\n\treturn style;\n}\n\nfunction createLinkElement (options) {\n\tvar link = document.createElement(\"link\");\n\n\tif(options.attrs.type === undefined) {\n\t\toptions.attrs.type = \"text/css\";\n\t}\n\toptions.attrs.rel = \"stylesheet\";\n\n\taddAttrs(link, options.attrs);\n\tinsertStyleElement(options, link);\n\n\treturn link;\n}\n\nfunction addAttrs (el, attrs) {\n\tObject.keys(attrs).forEach(function (key) {\n\t\tel.setAttribute(key, attrs[key]);\n\t});\n}\n\nfunction getNonce() {\n\tif (typeof __webpack_nonce__ === 'undefined') {\n\t\treturn null;\n\t}\n\n\treturn __webpack_nonce__;\n}\n\nfunction addStyle (obj, options) {\n\tvar style, update, remove, result;\n\n\t// If a transform function was defined, run it on the css\n\tif (options.transform && obj.css) {\n\t    result = typeof options.transform === 'function'\n\t\t ? options.transform(obj.css) \n\t\t : options.transform.default(obj.css);\n\n\t    if (result) {\n\t    \t// If transform returns a value, use that instead of the original css.\n\t    \t// This allows running runtime transformations on the css.\n\t    \tobj.css = result;\n\t    } else {\n\t    \t// If the transform function returns a falsy value, don't add this css.\n\t    \t// This allows conditional loading of css\n\t    \treturn function() {\n\t    \t\t// noop\n\t    \t};\n\t    }\n\t}\n\n\tif (options.singleton) {\n\t\tvar styleIndex = singletonCounter++;\n\n\t\tstyle = singleton || (singleton = createStyleElement(options));\n\n\t\tupdate = applyToSingletonTag.bind(null, style, styleIndex, false);\n\t\tremove = applyToSingletonTag.bind(null, style, styleIndex, true);\n\n\t} else if (\n\t\tobj.sourceMap &&\n\t\ttypeof URL === \"function\" &&\n\t\ttypeof URL.createObjectURL === \"function\" &&\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\n\t\ttypeof Blob === \"function\" &&\n\t\ttypeof btoa === \"function\"\n\t) {\n\t\tstyle = createLinkElement(options);\n\t\tupdate = updateLink.bind(null, style, options);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\n\t\t\tif(style.href) URL.revokeObjectURL(style.href);\n\t\t};\n\t} else {\n\t\tstyle = createStyleElement(options);\n\t\tupdate = applyToTag.bind(null, style);\n\t\tremove = function () {\n\t\t\tremoveStyleElement(style);\n\t\t};\n\t}\n\n\tupdate(obj);\n\n\treturn function updateStyle (newObj) {\n\t\tif (newObj) {\n\t\t\tif (\n\t\t\t\tnewObj.css === obj.css &&\n\t\t\t\tnewObj.media === obj.media &&\n\t\t\t\tnewObj.sourceMap === obj.sourceMap\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tupdate(obj = newObj);\n\t\t} else {\n\t\t\tremove();\n\t\t}\n\t};\n}\n\nvar replaceText = (function () {\n\tvar textStore = [];\n\n\treturn function (index, replacement) {\n\t\ttextStore[index] = replacement;\n\n\t\treturn textStore.filter(Boolean).join('\\n');\n\t};\n})();\n\nfunction applyToSingletonTag (style, index, remove, obj) {\n\tvar css = remove ? \"\" : obj.css;\n\n\tif (style.styleSheet) {\n\t\tstyle.styleSheet.cssText = replaceText(index, css);\n\t} else {\n\t\tvar cssNode = document.createTextNode(css);\n\t\tvar childNodes = style.childNodes;\n\n\t\tif (childNodes[index]) style.removeChild(childNodes[index]);\n\n\t\tif (childNodes.length) {\n\t\t\tstyle.insertBefore(cssNode, childNodes[index]);\n\t\t} else {\n\t\t\tstyle.appendChild(cssNode);\n\t\t}\n\t}\n}\n\nfunction applyToTag (style, obj) {\n\tvar css = obj.css;\n\tvar media = obj.media;\n\n\tif(media) {\n\t\tstyle.setAttribute(\"media\", media)\n\t}\n\n\tif(style.styleSheet) {\n\t\tstyle.styleSheet.cssText = css;\n\t} else {\n\t\twhile(style.firstChild) {\n\t\t\tstyle.removeChild(style.firstChild);\n\t\t}\n\n\t\tstyle.appendChild(document.createTextNode(css));\n\t}\n}\n\nfunction updateLink (link, options, obj) {\n\tvar css = obj.css;\n\tvar sourceMap = obj.sourceMap;\n\n\t/*\n\t\tIf convertToAbsoluteUrls isn't defined, but sourcemaps are enabled\n\t\tand there is no publicPath defined then lets turn convertToAbsoluteUrls\n\t\ton by default.  Otherwise default to the convertToAbsoluteUrls option\n\t\tdirectly\n\t*/\n\tvar autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;\n\n\tif (options.convertToAbsoluteUrls || autoFixUrls) {\n\t\tcss = fixUrls(css);\n\t}\n\n\tif (sourceMap) {\n\t\t// http://stackoverflow.com/a/26603875\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\n\t}\n\n\tvar blob = new Blob([css], { type: \"text/css\" });\n\n\tvar oldSrc = link.href;\n\n\tlink.href = URL.createObjectURL(blob);\n\n\tif(oldSrc) URL.revokeObjectURL(oldSrc);\n}\n","\n/**\n * When source maps are enabled, `style-loader` uses a link element with a data-uri to\n * embed the css on the page. This breaks all relative urls because now they are relative to a\n * bundle instead of the current page.\n *\n * One solution is to only use full urls, but that may be impossible.\n *\n * Instead, this function \"fixes\" the relative urls to be absolute according to the current page location.\n *\n * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.\n *\n */\n\nmodule.exports = function (css) {\n  // get current location\n  var location = typeof window !== \"undefined\" && window.location;\n\n  if (!location) {\n    throw new Error(\"fixUrls requires window.location\");\n  }\n\n\t// blank or null?\n\tif (!css || typeof css !== \"string\") {\n\t  return css;\n  }\n\n  var baseUrl = location.protocol + \"//\" + location.host;\n  var currentDir = baseUrl + location.pathname.replace(/\\/[^\\/]*$/, \"/\");\n\n\t// convert each url(...)\n\t/*\n\tThis regular expression is just a way to recursively match brackets within\n\ta string.\n\n\t /url\\s*\\(  = Match on the word \"url\" with any whitespace after it and then a parens\n\t   (  = Start a capturing group\n\t     (?:  = Start a non-capturing group\n\t         [^)(]  = Match anything that isn't a parentheses\n\t         |  = OR\n\t         \\(  = Match a start parentheses\n\t             (?:  = Start another non-capturing groups\n\t                 [^)(]+  = Match anything that isn't a parentheses\n\t                 |  = OR\n\t                 \\(  = Match a start parentheses\n\t                     [^)(]*  = Match anything that isn't a parentheses\n\t                 \\)  = Match a end parentheses\n\t             )  = End Group\n              *\\) = Match anything and then a close parens\n          )  = Close non-capturing group\n          *  = Match anything\n       )  = Close capturing group\n\t \\)  = Match a close parens\n\n\t /gi  = Get all matches, not the first.  Be case insensitive.\n\t */\n\tvar fixedCss = css.replace(/url\\s*\\(((?:[^)(]|\\((?:[^)(]+|\\([^)(]*\\))*\\))*)\\)/gi, function(fullMatch, origUrl) {\n\t\t// strip quotes (if they exist)\n\t\tvar unquotedOrigUrl = origUrl\n\t\t\t.trim()\n\t\t\t.replace(/^\"(.*)\"$/, function(o, $1){ return $1; })\n\t\t\t.replace(/^'(.*)'$/, function(o, $1){ return $1; });\n\n\t\t// already a full url? no change\n\t\tif (/^(#|data:|http:\\/\\/|https:\\/\\/|file:\\/\\/\\/|\\s*$)/i.test(unquotedOrigUrl)) {\n\t\t  return fullMatch;\n\t\t}\n\n\t\t// convert the url to a full url\n\t\tvar newUrl;\n\n\t\tif (unquotedOrigUrl.indexOf(\"//\") === 0) {\n\t\t  \t//TODO: should we add protocol?\n\t\t\tnewUrl = unquotedOrigUrl;\n\t\t} else if (unquotedOrigUrl.indexOf(\"/\") === 0) {\n\t\t\t// path should be relative to the base url\n\t\t\tnewUrl = baseUrl + unquotedOrigUrl; // already starts with '/'\n\t\t} else {\n\t\t\t// path should be relative to current directory\n\t\t\tnewUrl = currentDir + unquotedOrigUrl.replace(/^\\.\\//, \"\"); // Strip leading './'\n\t\t}\n\n\t\t// send back the fixed url(...)\n\t\treturn \"url(\" + JSON.stringify(newUrl) + \")\";\n\t});\n\n\t// send back the fixed css\n\treturn fixedCss;\n};\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from '../source/XYZ.js';\n\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport var ATTRIBUTION = '&#169; ' +\n      '<a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> ' +\n      'contributors.';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize=2048] Cache size.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=1.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {module:ol/Tile~LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url='https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n */\n\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nvar OSM = (function (XYZ) {\n  function OSM(opt_options) {\n\n    var options = opt_options || {};\n\n    var attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    var crossOrigin = options.crossOrigin !== undefined ?\n      options.crossOrigin : 'anonymous';\n\n    var url = options.url !== undefined ?\n      options.url : 'https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    XYZ.call(this, {\n      attributions: attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      url: url,\n      wrapX: options.wrapX\n    });\n\n  }\n\n  if ( XYZ ) OSM.__proto__ = XYZ;\n  OSM.prototype = Object.create( XYZ && XYZ.prototype );\n  OSM.prototype.constructor = OSM;\n\n  return OSM;\n}(XYZ));\n\nexport default OSM;\n\n//# sourceMappingURL=OSM.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/**\n * @module ol/format/Feature\n */\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, equivalent as equivalentProjection, transformExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} ReadOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {module:ol/extent~Extent} [extent] Tile extent of the tile being read. This is only used and\n * required for {@link module:ol/format/MVT}.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n\n/**\n * @typedef {Object} WriteOptions\n * @property {module:ol/proj~ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @abstract\n * @api\n */\nvar FeatureFormat = function FeatureFormat() {\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.dataProjection = null;\n\n  /**\n   * @protected\n   * @type {module:ol/proj/Projection}\n   */\n  this.defaultFeatureProjection = null;\n\n};\n\n/**\n * Adds the data projection to the read options.\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n * @return {module:ol/format/Feature~ReadOptions|undefined} Options.\n * @protected\n */\nFeatureFormat.prototype.getReadOptions = function getReadOptions (source, opt_options) {\n  var options;\n  if (opt_options) {\n    options = {\n      dataProjection: opt_options.dataProjection ?\n        opt_options.dataProjection : this.readProjection(source),\n      featureProjection: opt_options.featureProjection\n    };\n  }\n  return this.adaptOptions(options);\n};\n\n/**\n * Sets the `dataProjection` on the options, if no `dataProjection`\n * is set.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} options\n *   Options.\n * @protected\n * @return {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined}\n *   Updated options.\n */\nFeatureFormat.prototype.adaptOptions = function adaptOptions (options) {\n  return assign({\n    dataProjection: this.dataProjection,\n    featureProjection: this.defaultFeatureProjection\n  }, options);\n};\n\n/**\n * Get the extent from the source of the last {@link readFeatures} call.\n * @return {module:ol/extent~Extent} Tile extent.\n */\nFeatureFormat.prototype.getLastExtent = function getLastExtent () {\n  return null;\n};\n\n/**\n * @abstract\n * @return {module:ol/format/FormatType} Format.\n */\nFeatureFormat.prototype.getType = function getType () {};\n\n/**\n * Read a single feature from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nFeatureFormat.prototype.readFeature = function readFeature (source, opt_options) {};\n\n/**\n * Read all features from a source.\n *\n * @abstract\n * @param {Document|Node|ArrayBuffer|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array<module:ol/Feature>} Features.\n */\nFeatureFormat.prototype.readFeatures = function readFeatures (source, opt_options) {};\n\n/**\n * Read a single geometry from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nFeatureFormat.prototype.readGeometry = function readGeometry (source, opt_options) {};\n\n/**\n * Read the projection from a source.\n *\n * @abstract\n * @param {Document|Node|Object|string} source Source.\n * @return {module:ol/proj/Projection} Projection.\n */\nFeatureFormat.prototype.readProjection = function readProjection (source) {};\n\n/**\n * Encode a feature in this format.\n *\n * @abstract\n * @param {module:ol/Feature} feature Feature.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeature = function writeFeature (feature, opt_options) {};\n\n/**\n * Encode an array of features in this format.\n *\n * @abstract\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeFeatures = function writeFeatures (features, opt_options) {};\n\n/**\n * Write a single geometry in this format.\n *\n * @abstract\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {string} Result.\n */\nFeatureFormat.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {};\n\nexport default FeatureFormat;\n\n/**\n * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {module:ol/format/Feature~WriteOptions|module:ol/format/Feature~ReadOptions|undefined} opt_options\n *     Options.\n * @return {module:ol/geom/Geometry|module:ol/extent~Extent} Transformed geometry.\n */\nexport function transformWithOptions(geometry, write, opt_options) {\n  var featureProjection = opt_options ?\n    getProjection(opt_options.featureProjection) : null;\n  var dataProjection = opt_options ?\n    getProjection(opt_options.dataProjection) : null;\n  /**\n   * @type {module:ol/geom/Geometry|module:ol/extent~Extent}\n   */\n  var transformed;\n  if (featureProjection && dataProjection &&\n      !equivalentProjection(featureProjection, dataProjection)) {\n    if (geometry instanceof Geometry) {\n      transformed = (write ? geometry.clone() : geometry).transform(\n        write ? featureProjection : dataProjection,\n        write ? dataProjection : featureProjection);\n    } else {\n      // FIXME this is necessary because GML treats extents\n      // as geometries\n      transformed = transformExtent(\n        geometry,\n        dataProjection,\n        featureProjection);\n    }\n  } else {\n    transformed = geometry;\n  }\n  if (write && opt_options && opt_options.decimals !== undefined) {\n    var power = Math.pow(10, opt_options.decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    var transform = function(coordinates) {\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = transformed.clone();\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @abstract\n */\nvar JSONFeature = (function (FeatureFormat) {\n  function JSONFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) JSONFeature.__proto__ = FeatureFormat;\n  JSONFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  JSONFeature.prototype.constructor = JSONFeature;\n\n  /**\n   * @inheritDoc\n   */\n  JSONFeature.prototype.getType = function getType () {\n    return FormatType.JSON;\n  };\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  JSONFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  JSONFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  JSONFeature.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {};\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  JSONFeature.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {};\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  JSONFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromObject(\n      getObject(source), this.getReadOptions(source, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  JSONFeature.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {};\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  JSONFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromObject(getObject(source));\n  };\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  JSONFeature.prototype.readProjectionFromObject = function readProjectionFromObject (object) {};\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  JSONFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return JSON.stringify(this.writeFeatureObject(feature, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {};\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  JSONFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return JSON.stringify(this.writeFeaturesObject(features, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {};\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  JSONFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   */\n  JSONFeature.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {};\n\n  return JSONFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    var object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  } else if (source !== null) {\n    return source;\n  } else {\n    return null;\n  }\n}\n\n\nexport default JSONFeature;\n\n//# sourceMappingURL=JSONFeature.js.map","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {deflateCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateCoordinatesArray} from '../geom/flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from '../geom/flat/interpolate.js';\nimport {intersectsLineStringArray} from '../geom/flat/intersectsextent.js';\nimport {douglasPeuckerArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nvar MultiLineString = (function (SimpleGeometry) {\n  function MultiLineString(coordinates, opt_layout, opt_ends) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(coordinates, opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.ends_ = opt_ends;\n    } else {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var ends = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var lineString = coordinates[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiLineString.__proto__ = SimpleGeometry;\n  MultiLineString.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiLineString.prototype.constructor = MultiLineString;\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {module:ol/geom/LineString} lineString LineString.\n   * @api\n   */\n  MultiLineString.prototype.appendLineString = function appendLineString (lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.clone = function clone () {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {module:ol/coordinate~Coordinate} Coordinate.\n   * @api\n   */\n  MultiLineString.prototype.getCoordinateAtM = function getCoordinateAtM (m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    var extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    var interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  };\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<module:ol/coordinate~Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  };\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  MultiLineString.prototype.getEnds = function getEnds () {\n    return this.ends_;\n  };\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/LineString} LineString.\n   * @api\n   */\n  MultiLineString.prototype.getLineString = function getLineString (index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  };\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<module:ol/geom/LineString>} LineStrings.\n   * @api\n   */\n  MultiLineString.prototype.getLineStrings = function getLineStrings () {\n    var flatCoordinates = this.flatCoordinates;\n    var ends = this.ends_;\n    var layout = this.layout;\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = [];\n    var offset = 0;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  };\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  MultiLineString.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var midpoints = [];\n    var flatCoordinates = this.flatCoordinates;\n    var offset = 0;\n    var ends = this.ends_;\n    var stride = this.stride;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiLineString.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.getType = function getType () {\n    return GeometryType.MULTI_LINE_STRING;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiLineString.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<module:ol/coordinate~Coordinate>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiLineString.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  };\n\n  return MultiLineString;\n}(SimpleGeometry));\n\n\nexport default MultiLineString;\n\n//# sourceMappingURL=MultiLineString.js.map","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nvar MultiPoint = (function (SimpleGeometry) {\n  function MultiPoint(coordinates, opt_layout) {\n    SimpleGeometry.call(this);\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n  }\n\n  if ( SimpleGeometry ) MultiPoint.__proto__ = SimpleGeometry;\n  MultiPoint.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPoint.prototype.constructor = MultiPoint;\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {module:ol/geom/Point} point Point.\n   * @api\n   */\n  MultiPoint.prototype.appendPoint = function appendPoint (point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.clone = function clone () {\n    var multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPoint.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (var j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<module:ol/coordinate~Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.getCoordinates = function getCoordinates () {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  };\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Point} Point.\n   * @api\n   */\n  MultiPoint.prototype.getPoint = function getPoint (index) {\n    var n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  };\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<module:ol/geom/Point>} Points.\n   * @api\n   */\n  MultiPoint.prototype.getPoints = function getPoints () {\n    var flatCoordinates = this.flatCoordinates;\n    var layout = this.layout;\n    var stride = this.stride;\n    /** @type {Array<module:ol/geom/Point>} */\n    var points = [];\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.getType = function getType () {\n    return GeometryType.MULTI_POINT;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPoint.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var flatCoordinates = this.flatCoordinates;\n    var stride = this.stride;\n    for (var i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      var x = flatCoordinates[i];\n      var y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<module:ol/coordinate~Coordinate>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPoint.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  };\n\n  return MultiPoint;\n}(SimpleGeometry));\n\n\nexport default MultiPoint;\n\n//# sourceMappingURL=MultiPoint.js.map","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  var flatCenters = [];\n  var extent = createEmpty();\n  for (var i = 0, ii = endss.length; i < ii; ++i) {\n    var ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n\n//# sourceMappingURL=center.js.map","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from '../geom/flat/area.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from '../geom/flat/closest.js';\nimport {linearRingssContainsXY} from '../geom/flat/contains.js';\nimport {deflateMultiCoordinatesArray} from '../geom/flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from '../geom/flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from '../geom/flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRingsArray} from '../geom/flat/orient.js';\nimport {quantizeMultiArray} from '../geom/flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nvar MultiPolygon = (function (SimpleGeometry) {\n  function MultiPolygon(coordinates, opt_layout, opt_endss) {\n\n    SimpleGeometry.call(this);\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      var layout = this.getLayout();\n      var flatCoordinates = [];\n      var endss = [];\n      for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n        var polygon = coordinates[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        var offset = flatCoordinates.length;\n        var ends = polygon.getEnds();\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, coordinates);\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(coordinates, opt_layout);\n    }\n\n  }\n\n  if ( SimpleGeometry ) MultiPolygon.__proto__ = SimpleGeometry;\n  MultiPolygon.prototype = Object.create( SimpleGeometry && SimpleGeometry.prototype );\n  MultiPolygon.prototype.constructor = MultiPolygon;\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {module:ol/geom/Polygon} polygon Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.appendPolygon = function appendPolygon (polygon) {\n    /** @type {Array<number>} */\n    var ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      var offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.clone = function clone () {\n    var this$1 = this;\n\n    var len = this.endss_.length;\n    var newEndss = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      newEndss[i] = this$1.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.containsXY = function containsXY (x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  };\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  MultiPolygon.prototype.getArea = function getArea () {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  };\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<module:ol/coordinate~Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.getCoordinates = function getCoordinates (opt_right) {\n    var flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  };\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  MultiPolygon.prototype.getEndss = function getEndss () {\n    return this.endss_;\n  };\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  MultiPolygon.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      var flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  };\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {module:ol/geom/MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  MultiPolygon.prototype.getInteriorPoints = function getInteriorPoints () {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  };\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  MultiPolygon.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n    if (this.orientedRevision_ != this.getRevision()) {\n      var flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MultiPolygon.prototype.getSimplifiedGeometryInternal = function getSimplifiedGeometryInternal (squaredTolerance) {\n    var simplifiedFlatCoordinates = [];\n    var simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  };\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {module:ol/geom/Polygon} Polygon.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygon = function getPolygon (index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    var offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      var prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    var ends = this.endss_[index].slice();\n    var end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (var i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  };\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<module:ol/geom/Polygon>} Polygons.\n   * @api\n   */\n  MultiPolygon.prototype.getPolygons = function getPolygons () {\n    var layout = this.layout;\n    var flatCoordinates = this.flatCoordinates;\n    var endss = this.endss_;\n    var polygons = [];\n    var offset = 0;\n    for (var i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i].slice();\n      var end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (var j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      var polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.getType = function getType () {\n    return GeometryType.MULTI_POLYGON;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MultiPolygon.prototype.intersectsExtent = function intersectsExtent (extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  };\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<module:ol/coordinate~Coordinate>>>} coordinates Coordinates.\n   * @param {module:ol/geom/GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  MultiPolygon.prototype.setCoordinates = function setCoordinates (coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    var endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      var lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  };\n\n  return MultiPolygon;\n}(SimpleGeometry));\n\n\nexport default MultiPolygon;\n\n//# sourceMappingURL=MultiPolygon.js.map","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @const\n * @type {Object<module:ol/geom/GeometryType, function(EsriJSONGeometry): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {};\nGEOMETRY_READERS[GeometryType.POINT] = readPointGeometry;\nGEOMETRY_READERS[GeometryType.LINE_STRING] = readLineStringGeometry;\nGEOMETRY_READERS[GeometryType.POLYGON] = readPolygonGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POINT] = readMultiPointGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_LINE_STRING] = readMultiLineStringGeometry;\nGEOMETRY_READERS[GeometryType.MULTI_POLYGON] = readMultiPolygonGeometry;\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (EsriJSONGeometry)>}\n */\nvar GEOMETRY_WRITERS = {};\nGEOMETRY_WRITERS[GeometryType.POINT] = writePointGeometry;\nGEOMETRY_WRITERS[GeometryType.LINE_STRING] = writeLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.POLYGON] = writePolygonGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POINT] = writeMultiPointGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_LINE_STRING] = writeMultiLineStringGeometry;\nGEOMETRY_WRITERS[GeometryType.MULTI_POLYGON] = writeMultiPolygonGeometry;\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nvar EsriJSON = (function (JSONFeature) {\n  function EsriJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n  }\n\n  if ( JSONFeature ) EsriJSON.__proto__ = JSONFeature;\n  EsriJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  EsriJSON.prototype.constructor = EsriJSON;\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    var esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    var geometry = readGeometry(esriJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (opt_options && opt_options.idField &&\n      esriJSONFeature.attributes[opt_options.idField]) {\n      feature.setId(/** @type {number} */(esriJSONFeature.attributes[opt_options.idField]));\n    }\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    var options = opt_options ? opt_options : {};\n    if (esriJSONObject.features) {\n      var esriJSONFeatureCollection = /** @type {EsriJSONFeatureCollection} */ (object);\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      var esriJSONFeatures = esriJSONFeatureCollection.features;\n      options.idField = object.objectIdFieldName;\n      for (var i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(esriJSONFeatures[i], options));\n      }\n      return features;\n    } else {\n      return [this.readFeatureFromObject(object, options)];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {EsriJSONGeometry} */(object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  EsriJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var esriJSONObject = /** @type {EsriJSONObject} */ (object);\n    if (esriJSONObject.spatialReference && esriJSONObject.spatialReference.wkid) {\n      var crs = esriJSONObject.spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var object = {};\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, opt_options);\n      if (opt_options && opt_options.featureProjection) {\n        object['geometry']['spatialReference'] = /** @type {EsriJSONCRS} */({\n          wkid: getProjection(opt_options.featureProjection).getCode().split(':').pop()\n        });\n      }\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {Object} EsriJSON Object.\n   * @override\n   * @api\n   */\n  EsriJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {EsriJSONFeatureCollection} */ ({\n      'features': objects\n    });\n  };\n\n  return EsriJSON;\n}(JSONFeature));\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {module:ol/geom/GeometryType} */\n  var type;\n  if (typeof object.x === 'number' && typeof object.y === 'number') {\n    type = GeometryType.POINT;\n  } else if (object.points) {\n    type = GeometryType.MULTI_POINT;\n  } else if (object.paths) {\n    if (object.paths.length === 1) {\n      type = GeometryType.LINE_STRING;\n    } else {\n      type = GeometryType.MULTI_LINE_STRING;\n    }\n  } else if (object.rings) {\n    var layout = getGeometryLayout(object);\n    var rings = convertRings(object.rings, layout);\n    object = /** @type {EsriJSONGeometry} */(assign({}, object));\n    if (rings.length === 1) {\n      type = GeometryType.POLYGON;\n      object.rings = rings[0];\n    } else {\n      type = GeometryType.MULTI_POLYGON;\n      object.rings = rings;\n    }\n  }\n  var geometryReader = GEOMETRY_READERS[type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {module:ol/geom/GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<number>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  var flatRing = [];\n  var outerRings = [];\n  var holes = [];\n  var i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    var clockwise = linearRingIsClockwise(flatRing, 0,\n      flatRing.length, layout.length);\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    var hole = holes.shift();\n    var matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      var outerRing = outerRings[i][0];\n      var containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent()\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Point.\n */\nfunction readPointGeometry(object) {\n  var point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m],\n      GeometryLayout.XYZM);\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z],\n      GeometryLayout.XYZ);\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m],\n      GeometryLayout.XYM);\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} LineString.\n */\nfunction readLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  var layout = GeometryLayout.XY;\n  if (object.hasZ === true && object.hasM === true) {\n    layout = GeometryLayout.XYZM;\n  } else if (object.hasZ === true) {\n    layout = GeometryLayout.XYZ;\n  } else if (object.hasM === true) {\n    layout = GeometryLayout.XYM;\n  }\n  return layout;\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new MultiPolygon(\n    /** @type {Array<Array<Array<Array<number>>>>} */(object.rings),\n    layout);\n}\n\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @return {module:ol/geom/Geometry} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  var layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  var coordinates = /** @type {module:ol/geom/Point} */ (geometry).getCoordinates();\n  var esriJSON;\n  var layout = /** @type {module:ol/geom/Point} */ (geometry).getLayout();\n  if (layout === GeometryLayout.XYZ) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2]\n    });\n  } else if (layout === GeometryLayout.XYZM) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3]\n    });\n  } else if (layout === GeometryLayout.XY) {\n    esriJSON = /** @type {EsriJSONPoint} */ ({\n      x: coordinates[0],\n      y: coordinates[1]\n    });\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n  return /** @type {EsriJSONGeometry} */ (esriJSON);\n}\n\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  var layout = geometry.getLayout();\n  return {\n    hasZ: (layout === GeometryLayout.XYZ ||\n      layout === GeometryLayout.XYZM),\n    hasM: (layout === GeometryLayout.XYM ||\n      layout === GeometryLayout.XYZM)\n  };\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/LineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: [\n        /** @type {module:ol/geom/LineString} */ (geometry).getCoordinates()\n      ]\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  // Esri geometries use the left-hand rule\n  var hasZM = getHasZM(/** @type {module:ol/geom/Polygon} */(geometry));\n  return (\n    /** @type {EsriJSONPolygon} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      rings: /** @type {module:ol/geom/Polygon} */ (geometry).getCoordinates(false)\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiLineString} */(geometry));\n  return (\n    /** @type {EsriJSONPolyline} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      paths: /** @type {module:ol/geom/MultiLineString} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiPoint} */(geometry));\n  return (\n    /** @type {EsriJSONMultipoint} */ {\n      hasZ: hasZM.hasZ,\n      hasM: hasZM.hasM,\n      points: /** @type {module:ol/geom/MultiPoint} */ (geometry).getCoordinates()\n    }\n  );\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var hasZM = getHasZM(/** @type {module:ol/geom/MultiPolygon} */(geometry));\n  var coordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getCoordinates(false);\n  var output = [];\n  for (var i = 0; i < coordinates.length; i++) {\n    for (var x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return /** @type {EsriJSONPolygon} */ ({\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: output\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */(\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\nexport default EsriJSON;\n\n//# sourceMappingURL=EsriJSON.js.map","/**\n * @module ol/geom/GeometryCollection\n */\nimport {listen, unlisten} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {createOrUpdateEmpty, closestSquaredDistanceXY, extend, getCenter} from '../extent.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {clear} from '../obj.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry} objects.\n *\n * @api\n */\nvar GeometryCollection = (function (Geometry) {\n  function GeometryCollection(opt_geometries) {\n\n    Geometry.call(this);\n\n    /**\n     * @private\n     * @type {Array<module:ol/geom/Geometry>}\n     */\n    this.geometries_ = opt_geometries ? opt_geometries : null;\n\n    this.listenGeometriesChange_();\n  }\n\n  if ( Geometry ) GeometryCollection.__proto__ = Geometry;\n  GeometryCollection.prototype = Object.create( Geometry && Geometry.prototype );\n  GeometryCollection.prototype.constructor = GeometryCollection;\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.unlistenGeometriesChange_ = function unlistenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      unlisten(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * @private\n   */\n  GeometryCollection.prototype.listenGeometriesChange_ = function listenGeometriesChange_ () {\n    var this$1 = this;\n\n    if (!this.geometries_) {\n      return;\n    }\n    for (var i = 0, ii = this.geometries_.length; i < ii; ++i) {\n      listen(\n        this$1.geometries_[i], EventType.CHANGE,\n        this$1.changed, this$1);\n    }\n  };\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!module:ol/geom/GeometryCollection} Clone.\n   * @override\n   * @api\n   */\n  GeometryCollection.prototype.clone = function clone () {\n    var geometryCollection = new GeometryCollection(null);\n    geometryCollection.setGeometries(this.geometries_);\n    return geometryCollection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.closestPointXY = function closestPointXY (x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x, y, closestPoint, minSquaredDistance);\n    }\n    return minSquaredDistance;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.containsXY = function containsXY (x, y) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.computeExtent = function computeExtent (extent) {\n    createOrUpdateEmpty(extent);\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  };\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.getGeometries = function getGeometries () {\n    return cloneGeometries(this.geometries_);\n  };\n\n  /**\n   * @return {Array<module:ol/geom/Geometry>} Geometries.\n   */\n  GeometryCollection.prototype.getGeometriesArray = function getGeometriesArray () {\n    return this.geometries_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.getSimplifiedGeometry = function getSimplifiedGeometry (squaredTolerance) {\n    if (this.simplifiedGeometryRevision != this.getRevision()) {\n      clear(this.simplifiedGeometryCache);\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n    var key = squaredTolerance.toString();\n    if (this.simplifiedGeometryCache.hasOwnProperty(key)) {\n      return this.simplifiedGeometryCache[key];\n    } else {\n      var simplifiedGeometries = [];\n      var geometries = this.geometries_;\n      var simplified = false;\n      for (var i = 0, ii = geometries.length; i < ii; ++i) {\n        var geometry = geometries[i];\n        var simplifiedGeometry = geometry.getSimplifiedGeometry(squaredTolerance);\n        simplifiedGeometries.push(simplifiedGeometry);\n        if (simplifiedGeometry !== geometry) {\n          simplified = true;\n        }\n      }\n      if (simplified) {\n        var simplifiedGeometryCollection = new GeometryCollection(null);\n        simplifiedGeometryCollection.setGeometriesArray(simplifiedGeometries);\n        this.simplifiedGeometryCache[key] = simplifiedGeometryCollection;\n        return simplifiedGeometryCollection;\n      } else {\n        this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n        return this;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.getType = function getType () {\n    return GeometryType.GEOMETRY_COLLECTION;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.intersectsExtent = function intersectsExtent (extent) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  GeometryCollection.prototype.isEmpty = function isEmpty () {\n    return this.geometries_.length === 0;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.rotate = function rotate (angle, anchor) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.scale = function scale (sx, opt_sy, opt_anchor) {\n    var anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, opt_sy, anchor);\n    }\n    this.changed();\n  };\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   * @api\n   */\n  GeometryCollection.prototype.setGeometries = function setGeometries (geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  };\n\n  /**\n   * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n   */\n  GeometryCollection.prototype.setGeometriesArray = function setGeometriesArray (geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.applyTransform = function applyTransform (transformFn) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  GeometryCollection.prototype.translate = function translate (deltaX, deltaY) {\n    var geometries = this.geometries_;\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeometryCollection.prototype.disposeInternal = function disposeInternal () {\n    this.unlistenGeometriesChange_();\n    Geometry.prototype.disposeInternal.call(this);\n  };\n\n  return GeometryCollection;\n}(Geometry));\n\n\n/**\n * @param {Array<module:ol/geom/Geometry>} geometries Geometries.\n * @return {Array<module:ol/geom/Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  var clonedGeometries = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    clonedGeometries.push(geometries[i].clone());\n  }\n  return clonedGeometries;\n}\n\n\nexport default GeometryCollection;\n\n//# sourceMappingURL=GeometryCollection.js.map","/**\n * @module ol/format/GeoJSON\n */\n// TODO: serialize dataProjection as crs member when writing\n// see https://github.com/openlayers/openlayers/issues/2078\n\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign, isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {module:ol/proj~ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n  * @api\n */\nvar GeoJSON = (function (JSONFeature) {\n  function GeoJSON(opt_options) {\n\n    var options = opt_options ? opt_options : {};\n\n    JSONFeature.call(this);\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n    if (options.featureProjection) {\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the geometry name in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n  }\n\n  if ( JSONFeature ) GeoJSON.__proto__ = JSONFeature;\n  GeoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  GeoJSON.prototype.constructor = GeoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeatureFromObject = function readFeatureFromObject (object, opt_options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    var geoJSONFeature = null;\n    if (object.type === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ ({\n        type: 'Feature',\n        geometry: /** @type {GeoJSONGeometry|GeoJSONGeometryCollection} */ (object)\n      });\n    }\n\n    var geometry = readGeometry(geoJSONFeature.geometry, opt_options);\n    var feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature.geometry_name !== undefined) {\n      feature.setGeometryName(geoJSONFeature.geometry_name);\n    }\n    feature.setGeometry(geometry);\n    if (geoJSONFeature.id !== undefined) {\n      feature.setId(geoJSONFeature.id);\n    }\n    if (geoJSONFeature.properties) {\n      feature.setProperties(geoJSONFeature.properties);\n    }\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<module:ol/Feature>} */\n    var features = null;\n    if (geoJSONObject.type === 'FeatureCollection') {\n      var geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (object);\n      features = [];\n      var geoJSONFeatures = geoJSONFeatureCollection.features;\n      for (var i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        features.push(this$1.readFeatureFromObject(geoJSONFeatures[i], opt_options));\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, opt_options)];\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readGeometryFromObject = function readGeometryFromObject (object, opt_options) {\n    return readGeometry(/** @type {GeoJSONGeometry} */ (object), opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GeoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    var geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    var crs = geoJSONObject.crs;\n    var projection;\n    if (crs) {\n      if (crs.type == 'name') {\n        projection = getProjection(crs.properties.name);\n      } else {\n        assert(false, 36); // Unknown SRS type\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return (\n      /** @type {module:ol/proj/Projection} */ (projection)\n    );\n  };\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeature} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeatureObject = function writeFeatureObject (feature, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n\n    var object = /** @type {GeoJSONFeature} */ ({\n      'type': 'Feature'\n    });\n    var id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, opt_options);\n    } else {\n      object.geometry = null;\n    }\n    var properties = feature.getProperties();\n    delete properties[feature.getGeometryName()];\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    } else {\n      object.properties = null;\n    }\n    return object;\n  };\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeFeaturesObject = function writeFeaturesObject (features, opt_options) {\n    var this$1 = this;\n\n    opt_options = this.adaptOptions(opt_options);\n    var objects = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this$1.writeFeatureObject(features[i], opt_options));\n    }\n    return /** @type {GeoJSONFeatureCollection} */ ({\n      type: 'FeatureCollection',\n      features: objects\n    });\n  };\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @override\n   * @api\n   */\n  GeoJSON.prototype.writeGeometryObject = function writeGeometryObject (geometry, opt_options) {\n    return writeGeometry(geometry, this.adaptOptions(opt_options));\n  };\n\n  return GeoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(GeoJSONObject): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry,\n  'GeometryCollection': readGeometryCollectionGeometry\n};\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry, module:ol/format/Feature~WriteOptions=): (GeoJSONGeometry|GeoJSONGeometryCollection)>}\n */\nvar GEOMETRY_WRITERS = {\n  'Point': writePointGeometry,\n  'LineString': writeLineStringGeometry,\n  'Polygon': writePolygonGeometry,\n  'MultiPoint': writeMultiPointGeometry,\n  'MultiLineString': writeMultiLineStringGeometry,\n  'MultiPolygon': writeMultiPolygonGeometry,\n  'GeometryCollection': writeGeometryCollectionGeometry,\n  'Circle': writeEmptyGeometryCollectionGeometry\n};\n\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readGeometry(object, opt_options) {\n  if (!object) {\n    return null;\n  }\n  var geometryReader = GEOMETRY_READERS[object.type];\n  return (\n    /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometryReader(object), false, opt_options))\n  );\n}\n\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/geom/GeometryCollection} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, opt_options) {\n  var geometries = object.geometries.map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {module:ol/geom/Geometry} geometry Geometry.\n     */\n    function(geometry) {\n      return readGeometry(geometry, opt_options);\n    });\n  return new GeometryCollection(geometries);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Point} Point.\n */\nfunction readPointGeometry(object) {\n  return new Point(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/LineString} LineString.\n */\nfunction readLineStringGeometry(object) {\n  return new LineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiLineString} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  return new MultiLineString(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPoint} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  return new MultiPoint(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/MultiPolygon} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  return new MultiPolygon(object.coordinates);\n}\n\n\n/**\n * @param {GeoJSONGeometry} object Object.\n * @return {module:ol/geom/Polygon} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  return new Polygon(object.coordinates);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry|GeoJSONGeometryCollection} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, opt_options) {\n  var geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, true, opt_options)), opt_options);\n}\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @return {GeoJSONGeometryCollection} Empty GeoJSON geometry collection.\n */\nfunction writeEmptyGeometryCollectionGeometry(geometry) {\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: []\n  });\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, opt_options) {\n  var geometries = geometry.getGeometriesArray().map(function(geometry) {\n    var options = assign({}, opt_options);\n    delete options.featureProjection;\n    return writeGeometry(geometry, options);\n  });\n  return /** @type {GeoJSONGeometryCollection} */ ({\n    type: 'GeometryCollection',\n    geometries: geometries\n  });\n}\n\n\n/**\n * @param {module:ol/geom/LineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'LineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Point} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, opt_options) {\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Point',\n    coordinates: geometry.getCoordinates()\n  });\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geometry Geometry.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, opt_options) {\n  var right;\n  if (opt_options) {\n    right = opt_options.rightHanded;\n  }\n  return /** @type {GeoJSONGeometry} */ ({\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right)\n  });\n}\n\n\nexport default GeoJSON;\n\n//# sourceMappingURL=GeoJSON.js.map","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n\n/**\n * When using {@link module:ol/xml~makeChildAppender} or\n * {@link module:ol/xml~makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Node} node\n */\n\n\n/**\n * @typedef {function(Node, Array<*>)} Parser\n */\n\n\n/**\n * @typedef {function(Node, *, Array<*>)} Serializer\n */\n\n\n/**\n * This document should be used when creating nodes for XML serializations. This\n * document is also used by {@link module:ol/xml~createElementNS}\n * @const\n * @type {Document}\n */\nexport var DOCUMENT = document.implementation.createDocument('', '', null);\n\n\n/**\n * @type {string}\n */\nexport var XML_SCHEMA_INSTANCE_URI = 'http://www.w3.org/2001/XMLSchema-instance';\n\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Node} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return DOCUMENT.createElementNS(namespaceURI, qualifiedName);\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (node.nodeType == Node.CDATA_SECTION_NODE ||\n      node.nodeType == Node.TEXT_NODE) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    var n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is document.\n */\nexport function isDocument(value) {\n  return value instanceof Document;\n}\n\n\n/**\n * @param {?} value Value.\n * @return {boolean} Is node.\n */\nexport function isNode(value) {\n  return value instanceof Node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        extend(array, value);\n      }\n    }\n  );\n}\n\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var array = /** @type {Array<*>} */ (objectStack[objectStack.length - 1]);\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    });\n}\n\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        var array;\n        if (property in object) {\n          array = object[property];\n        } else {\n          array = object[property] = [];\n        }\n        array.push(value);\n      }\n    });\n}\n\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {string=} opt_property Property.\n * @param {T=} opt_this The object to use as `this` in `valueReader`.\n * @return {module:ol/xml~Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, opt_property, opt_this) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     */\n    function(node, objectStack) {\n      var value = valueReader.call(opt_this !== undefined ? opt_this : this, node, objectStack);\n      if (value !== undefined) {\n        var object = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n        var property = opt_property !== undefined ? opt_property : node.localName;\n        object[property] = value;\n      }\n    });\n}\n\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, opt_this) {\n  return function(node, value, objectStack) {\n    nodeWriter.call(opt_this !== undefined ? opt_this : this, node, value, objectStack);\n    var parent = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n    var parentNode = parent.node;\n    parentNode.appendChild(node);\n  };\n}\n\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml~serialize}. This can be used by the parent writer to have the\n * 'nodeWriter' called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Node, V, Array<*>)} nodeWriter Node writer.\n * @param {T=} opt_this The object to use as `this` in `nodeWriter`.\n * @return {module:ol/xml~Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, opt_this) {\n  var serializersNS, nodeFactory;\n  return function(node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      var serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n\n/**\n * Create a node factory which can use the `opt_keys` passed to\n * {@link module:ol/xml~serialize} or {@link module:ol/xml~pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string=} opt_nodeName Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string=} opt_namespaceURI Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(opt_nodeName, opt_namespaceURI) {\n  var fixedNodeName = opt_nodeName;\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string=} opt_nodeName Node name.\n     * @return {Node} Node.\n     */\n    function(value, objectStack, opt_nodeName) {\n      var context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[objectStack.length - 1]);\n      var node = context.node;\n      var nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = opt_nodeName;\n      }\n\n      var namespaceURI = opt_namespaceURI !== undefined ? opt_namespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport var OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml~serialize} or\n * {@link module:ol/xml~pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `opt_key` argument.\n * @param {Object<string, V>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<V>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n * @template V\n */\nexport function makeSequence(object, orderedKeys) {\n  var length = orderedKeys.length;\n  var sequence = new Array(length);\n  for (var i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>=} opt_structureNS Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, opt_structureNS) {\n  /**\n   * @type {Object<string, T>}\n   */\n  var structureNS = opt_structureNS !== undefined ? opt_structureNS : {};\n  var i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, opt_this) {\n  var n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    var parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      var parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(opt_this, n, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*=} opt_this The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, opt_this) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, opt_this);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  var this$1 = this;\n\n  var length = (opt_keys !== undefined ? opt_keys : values).length;\n  var value, node;\n  for (var i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(opt_this !== undefined ? opt_this : this$1, value, objectStack,\n        opt_keys !== undefined ? opt_keys[i] : undefined);\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName]\n          .call(opt_this, node, value, objectStack);\n      }\n    }\n  }\n}\n\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, module:ol/xml~Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>=} opt_keys Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `opt_keys` has\n *     to match the length of `values`. For serializing a sequence, `opt_keys`\n *     determines the order of the sequence.\n * @param {T=} opt_this The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(object, serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, opt_keys, opt_this);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\n//# sourceMappingURL=xml.js.map","/**\n * @module ol/format/XMLFeature\n */\nimport {extend} from '../array.js';\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for XML feature formats.\n *\n * @abstract\n */\nvar XMLFeature = (function (FeatureFormat) {\n  function XMLFeature() {\n    FeatureFormat.call(this);\n\n    /**\n     * @type {XMLSerializer}\n     * @private\n     */\n    this.xmlSerializer_ = new XMLSerializer();\n  }\n\n  if ( FeatureFormat ) XMLFeature.__proto__ = FeatureFormat;\n  XMLFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  XMLFeature.prototype.constructor = XMLFeature;\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.getType = function getType () {\n    return FormatType.XML;\n  };\n\n  /**\n   * Read a single feature.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  XMLFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeatureFromDocument(/** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeatureFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromDocument = function readFeatureFromDocument (doc, opt_options) {\n    var features = this.readFeaturesFromDocument(doc, opt_options);\n    if (features.length > 0) {\n      return features[0];\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {module:ol/Feature} Feature.\n   */\n  XMLFeature.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read all features from a feature collection.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  XMLFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readFeaturesFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readFeaturesFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeaturesFromDocument(doc, opt_options);\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromDocument = function readFeaturesFromDocument (doc, opt_options) {\n    var this$1 = this;\n\n    /** @type {Array<module:ol/Feature>} */\n    var features = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(features, this$1.readFeaturesFromNode(n, opt_options));\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @abstract\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  XMLFeature.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {};\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    if (isDocument(source)) {\n      return this.readGeometryFromDocument(\n        /** @type {Document} */ (source), opt_options);\n    } else if (isNode(source)) {\n      return this.readGeometryFromNode(/** @type {Node} */ (source), opt_options);\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readGeometryFromDocument(doc, opt_options);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromDocument = function readGeometryFromDocument (doc, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  XMLFeature.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Read the projection from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  XMLFeature.prototype.readProjection = function readProjection (source) {\n    if (isDocument(source)) {\n      return this.readProjectionFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readProjectionFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readProjectionFromDocument(doc);\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  XMLFeature.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return this.dataProjection;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    var node = this.writeFeatureNode(feature, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @protected\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeatureNode = function writeFeatureNode (feature, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Result.\n   * @api\n   */\n  XMLFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    var node = this.writeFeaturesNode(features, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    return null; // not implemented\n  };\n\n  /**\n   * @inheritDoc\n   */\n  XMLFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    var node = this.writeGeometryNode(geometry, opt_options);\n    return this.xmlSerializer_.serializeToString(node);\n  };\n\n  /**\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   */\n  XMLFeature.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    return null; // not implemented\n  };\n\n  return XMLFeature;\n}(FeatureFormat));\n\n\nexport default XMLFeature;\n\n//# sourceMappingURL=XMLFeature.js.map","/**\n * @module ol/format/GMLBase\n */\n// FIXME Envelopes should not be treated as geometries! readEnvelope_ is part\n// of GEOMETRY_PARSERS_ and methods using GEOMETRY_PARSERS_ do not expect\n// envelopes/extents, only geometries!\nimport {extend} from '../array.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {getAllTextContent, getAttributeNS, makeArrayPusher, makeReplacer, parseNode, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nexport var GMLNS = 'http://www.opengis.net/gml';\n\n\n/**\n * A regular expression that matches if a string only contains whitespace\n * characters. It will e.g. match `''`, `' '`, `'\\n'` etc. The non-breaking\n * space (0xa0) is explicitly included as IE doesn't include it in its\n * definition of `\\s`.\n *\n * Information from `goog.string.isEmptyOrWhitespace`: https://github.com/google/closure-library/blob/e877b1e/closure/goog/string/string.js#L156-L160\n *\n * @const\n * @type {RegExp}\n */\nvar ONLY_WHITESPACE_RE = /^[\\s\\xa0]*$/;\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] Feature\n * namespace. If not defined will be derived from GML. If multiple\n * feature types have been configured which come from different feature\n * namespaces, this will be an object with the keys being the prefixes used\n * in the entries of featureType array. The values of the object will be the\n * feature namespaces themselves. So for instance there might be a featureType\n * item `topp:states` in the `featureType` array and then there will be a key\n * `topp` in the featureNS object with value `http://www.openplans.org/topp`.\n * @property {Array<string>|string} [featureType] Feature type(s) to parse.\n * If multiple feature types need to be configured\n * which come from different feature namespaces, `featureNS` will be an object\n * with the keys being the prefixes used in the entries of featureType array.\n * The values of the object will be the feature namespaces themselves.\n * So for instance there might be a featureType item `topp:states` and then\n * there will be a key named `topp` in the featureNS object with value\n * `http://www.openplans.org/topp`.\n * @property {string} srsName srsName to use when writing geometries.\n * @property {boolean} [surface=false] Write gml:Surface instead of gml:Polygon\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [curve=false] Write gml:Curve instead of gml:LineString\n * elements. This also affects the elements in multi-part geometries.\n * @property {boolean} [multiCurve=true] Write gml:MultiCurve instead of gml:MultiLineString.\n * Since the latter is deprecated in GML 3.\n * @property {boolean} [multiSurface=true] Write gml:multiSurface instead of\n * gml:MultiPolygon. Since the latter is deprecated in GML 3.\n * @property {string} [schemaLocation] Optional schemaLocation to use when\n * writing out the GML, this will override the default provided.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Feature base format for reading and writing data in the GML format.\n * This class cannot be instantiated, it contains only base content that\n * is shared with versioned format classes GML2 and GML3.\n *\n * @abstract\n */\nvar GMLBase = (function (XMLFeature) {\n  function GMLBase(opt_options) {\n    XMLFeature.call(this);\n\n    var options = /** @type {module:ol/format/GMLBase~Options} */ (opt_options ? opt_options : {});\n\n    /**\n     * @protected\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType = options.featureType;\n\n    /**\n     * @protected\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS = options.featureNS;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.srsName = options.srsName;\n\n    /**\n     * @protected\n     * @type {string}\n     */\n    this.schemaLocation = '';\n\n    /**\n     * @type {Object<string, Object<string, Object>>}\n     */\n    this.FEATURE_COLLECTION_PARSERS = {};\n    this.FEATURE_COLLECTION_PARSERS[GMLNS] = {\n      'featureMember': makeReplacer(this.readFeaturesInternal),\n      'featureMembers': makeReplacer(this.readFeaturesInternal)\n    };\n\n  }\n\n  if ( XMLFeature ) GMLBase.__proto__ = XMLFeature;\n  GMLBase.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GMLBase.prototype.constructor = GMLBase;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature> | undefined} Features.\n   */\n  GMLBase.prototype.readFeaturesInternal = function readFeaturesInternal (node, objectStack) {\n    var this$1 = this;\n\n    var localName = node.localName;\n    var features = null;\n    if (localName == 'FeatureCollection') {\n      if (node.namespaceURI === 'http://www.opengis.net/wfs') {\n        features = pushParseAndPop([],\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      } else {\n        features = pushParseAndPop(null,\n          this.FEATURE_COLLECTION_PARSERS, node,\n          objectStack, this);\n      }\n    } else if (localName == 'featureMembers' || localName == 'featureMember') {\n      var context = objectStack[0];\n      var featureType = context['featureType'];\n      var featureNS = context['featureNS'];\n      var prefix = 'p';\n      var defaultPrefix = 'p0';\n      if (!featureType && node.childNodes) {\n        featureType = [], featureNS = {};\n        for (var i = 0, ii = node.childNodes.length; i < ii; ++i) {\n          var child = node.childNodes[i];\n          if (child.nodeType === 1) {\n            var ft = child.nodeName.split(':').pop();\n            if (featureType.indexOf(ft) === -1) {\n              var key = '';\n              var count = 0;\n              var uri = child.namespaceURI;\n              for (var candidate in featureNS) {\n                if (featureNS[candidate] === uri) {\n                  key = candidate;\n                  break;\n                }\n                ++count;\n              }\n              if (!key) {\n                key = prefix + count;\n                featureNS[key] = uri;\n              }\n              featureType.push(key + ':' + ft);\n            }\n          }\n        }\n        if (localName != 'featureMember') {\n          // recheck featureType for each featureMember\n          context['featureType'] = featureType;\n          context['featureNS'] = featureNS;\n        }\n      }\n      if (typeof featureNS === 'string') {\n        var ns = featureNS;\n        featureNS = {};\n        featureNS[defaultPrefix] = ns;\n      }\n      var parsersNS = {};\n      var featureTypes = Array.isArray(featureType) ? featureType : [featureType];\n      for (var p in featureNS) {\n        var parsers = {};\n        for (var i$1 = 0, ii$1 = featureTypes.length; i$1 < ii$1; ++i$1) {\n          var featurePrefix = featureTypes[i$1].indexOf(':') === -1 ?\n            defaultPrefix : featureTypes[i$1].split(':')[0];\n          if (featurePrefix === p) {\n            parsers[featureTypes[i$1].split(':').pop()] =\n                (localName == 'featureMembers') ?\n                  makeArrayPusher(this$1.readFeatureElement, this$1) :\n                  makeReplacer(this$1.readFeatureElement, this$1);\n          }\n        }\n        parsersNS[featureNS[p]] = parsers;\n      }\n      if (localName == 'featureMember') {\n        features = pushParseAndPop(undefined, parsersNS, node, objectStack);\n      } else {\n        features = pushParseAndPop([], parsersNS, node, objectStack);\n      }\n    }\n    if (features === null) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Geometry|undefined} Geometry.\n   */\n  GMLBase.prototype.readGeometryElement = function readGeometryElement (node, objectStack) {\n    var context = /** @type {Object} */ (objectStack[0]);\n    context['srsName'] = node.firstElementChild.getAttribute('srsName');\n    context['srsDimension'] = node.firstElementChild.getAttribute('srsDimension');\n    /** @type {module:ol/geom/Geometry} */\n    var geometry = pushParseAndPop(null, this.GEOMETRY_PARSERS_, node, objectStack, this);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, context))\n      );\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/Feature} Feature.\n   */\n  GMLBase.prototype.readFeatureElement = function readFeatureElement (node, objectStack) {\n    var this$1 = this;\n\n    var n;\n    var fid = node.getAttribute('fid') || getAttributeNS(node, GMLNS, 'id');\n    var values = {};\n    var geometryName;\n    for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n      var localName = n.localName;\n      // Assume attribute elements have one child node and that the child\n      // is a text or CDATA node (to be treated as text).\n      // Otherwise assume it is a geometry node.\n      if (n.childNodes.length === 0 ||\n          (n.childNodes.length === 1 &&\n          (n.firstChild.nodeType === 3 || n.firstChild.nodeType === 4))) {\n        var value = getAllTextContent(n, false);\n        if (ONLY_WHITESPACE_RE.test(value)) {\n          value = undefined;\n        }\n        values[localName] = value;\n      } else {\n        // boundedBy is an extent and must not be considered as a geometry\n        if (localName !== 'boundedBy') {\n          geometryName = localName;\n        }\n        values[localName] = this$1.readGeometryElement(n, objectStack);\n      }\n    }\n    var feature = new Feature(values);\n    if (geometryName) {\n      feature.setGeometryName(geometryName);\n    }\n    if (fid) {\n      feature.setId(fid);\n    }\n    return feature;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Point|undefined} Point.\n   */\n  GMLBase.prototype.readPoint = function readPoint (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new Point(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPoint|undefined} MultiPoint.\n   */\n  GMLBase.prototype.readMultiPoint = function readMultiPoint (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var coordinates = pushParseAndPop([],\n      this.MULTIPOINT_PARSERS_, node, objectStack, this);\n    if (coordinates) {\n      return new MultiPoint(coordinates);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  GMLBase.prototype.readMultiLineString = function readMultiLineString (node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTILINESTRING_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      return new MultiLineString(lineStrings);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  GMLBase.prototype.readMultiPolygon = function readMultiPolygon (node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    var polygons = pushParseAndPop([], this.MULTIPOLYGON_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.pointMemberParser_ = function pointMemberParser_ (node, objectStack) {\n    parseNode(this.POINTMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.lineStringMemberParser_ = function lineStringMemberParser_ (node, objectStack) {\n    parseNode(this.LINESTRINGMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GMLBase.prototype.polygonMemberParser_ = function polygonMemberParser_ (node, objectStack) {\n    parseNode(this.POLYGONMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  GMLBase.prototype.readLineString = function readLineString (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} LinearRing flat coordinates.\n   */\n  GMLBase.prototype.readFlatLinearRing_ = function readFlatLinearRing_ (node, objectStack) {\n    var ring = pushParseAndPop(null,\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node,\n      objectStack, this);\n    if (ring) {\n      return ring;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/LinearRing|undefined} LinearRing.\n   */\n  GMLBase.prototype.readLinearRing = function readLinearRing (node, objectStack) {\n    var flatCoordinates = this.readFlatCoordinatesFromNode_(node, objectStack);\n    if (flatCoordinates) {\n      return new LinearRing(flatCoordinates, GeometryLayout.XYZ);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  GMLBase.prototype.readPolygon = function readPolygon (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>} Flat coordinates.\n   */\n  GMLBase.prototype.readFlatCoordinatesFromNode_ = function readFlatCoordinatesFromNode_ (node, objectStack) {\n    return pushParseAndPop(null, this.GEOMETRY_FLAT_COORDINATES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readGeometryFromNode = function readGeometryFromNode (node, opt_options) {\n    var geometry = this.readGeometryElement(node,\n      [this.getReadOptions(node, opt_options ? opt_options : {})]);\n    return geometry ? geometry : null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {\n      featureType: this.featureType,\n      featureNS: this.featureNS\n    };\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    var features = this.readFeaturesInternal(node, [options]);\n    return features || [];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GMLBase.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    return getProjection(this.srsName ? this.srsName : node.firstElementChild.getAttribute('srsName'));\n  };\n\n  return GMLBase;\n}(XMLFeature));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOINT_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeArrayPusher(GMLBase.prototype.pointMemberParser_),\n    'pointMembers': makeArrayPusher(GMLBase.prototype.pointMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTILINESTRING_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_),\n    'lineStringMembers': makeArrayPusher(GMLBase.prototype.lineStringMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.MULTIPOLYGON_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'polygonMember': makeArrayPusher(GMLBase.prototype.polygonMemberParser_),\n    'polygonMembers': makeArrayPusher(GMLBase.prototype.polygonMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POINTMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeArrayPusher(GMLBase.prototype.readFlatCoordinatesFromNode_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.LINESTRINGMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(GMLBase.prototype.readLineString)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGMLBase.prototype.POLYGONMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @protected\n */\nGMLBase.prototype.RING_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'LinearRing': makeReplacer(GMLBase.prototype.readFlatLinearRing_)\n  }\n};\n\nexport default GMLBase;\n\n//# sourceMappingURL=GMLBase.js.map","/**\n * @module ol/format/xsd\n */\nimport {getAllTextContent, DOCUMENT} from '../xml.js';\nimport {padNumber} from '../string.js';\n\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  var s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  var m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  var s = getAllTextContent(node, false);\n  var dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  var s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  var m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeInteger(node) {\n  var s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  var m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, (bool) ? '1' : '0');\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(DOCUMENT.createCDATASection(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  var date = new Date(dateTime * 1000);\n  var string = date.getUTCFullYear() + '-' +\n      padNumber(date.getUTCMonth() + 1, 2) + '-' +\n      padNumber(date.getUTCDate(), 2) + 'T' +\n      padNumber(date.getUTCHours(), 2) + ':' +\n      padNumber(date.getUTCMinutes(), 2) + ':' +\n      padNumber(date.getUTCSeconds(), 2) + 'Z';\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  var string = decimal.toPrecision();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  var string = nonNegativeInteger.toString();\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  node.appendChild(DOCUMENT.createTextNode(string));\n}\n\n//# sourceMappingURL=xsd.js.map","/**\n * @module ol/format/GML3\n */\nimport {extend} from '../array.js';\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {readNonNegativeIntegerString, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Polygon from '../geom/Polygon.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n * @private\n */\nvar schemaLocation = GMLNS +\n    ' http://schemas.opengis.net/gml/3.1.1/profiles/gmlsfProfile/' +\n    '1.0.0/gmlsf.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @api\n */\nvar GML3 = (function (GMLBase) {\n  function GML3(opt_options) {\n    var options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.surface_ = options.surface !== undefined ? options.surface : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.curve_ = options.curve !== undefined ? options.curve : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiCurve_ = options.multiCurve !== undefined ?\n      options.multiCurve : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multiSurface_ = options.multiSurface !== undefined ?\n      options.multiSurface : true;\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hasZ = options.hasZ !== undefined ?\n      options.hasZ : false;\n\n  }\n\n  if ( GMLBase ) GML3.__proto__ = GMLBase;\n  GML3.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML3.prototype.constructor = GML3;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n   */\n  GML3.prototype.readMultiCurve_ = function readMultiCurve_ (node, objectStack) {\n    /** @type {Array<module:ol/geom/LineString>} */\n    var lineStrings = pushParseAndPop([],\n      this.MULTICURVE_PARSERS_, node, objectStack, this);\n    if (lineStrings) {\n      var multiLineString = new MultiLineString(lineStrings);\n      return multiLineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/MultiPolygon|undefined} MultiPolygon.\n   */\n  GML3.prototype.readMultiSurface_ = function readMultiSurface_ (node, objectStack) {\n    /** @type {Array<module:ol/geom/Polygon>} */\n    var polygons = pushParseAndPop([],\n      this.MULTISURFACE_PARSERS_, node, objectStack, this);\n    if (polygons) {\n      return new MultiPolygon(polygons);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.curveMemberParser_ = function curveMemberParser_ (node, objectStack) {\n    parseNode(this.CURVEMEMBER_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.surfaceMemberParser_ = function surfaceMemberParser_ (node, objectStack) {\n    parseNode(this.SURFACEMEMBER_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPatch_ = function readPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.PATCHES_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readSegment_ = function readSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.SEGMENTS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<(Array<number>)>|undefined} flat coordinates.\n   */\n  GML3.prototype.readPolygonPatch_ = function readPolygonPatch_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.FLAT_LINEAR_RINGS_PARSERS_, node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} flat coordinates.\n   */\n  GML3.prototype.readLineStringSegment_ = function readLineStringSegment_ (node, objectStack) {\n    return pushParseAndPop([null],\n      this.GEOMETRY_FLAT_COORDINATES_PARSERS_,\n      node, objectStack, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.interiorParser_ = function interiorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML3.prototype.exteriorParser_ = function exteriorParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/Polygon|undefined} Polygon.\n   */\n  GML3.prototype.readSurface_ = function readSurface_ (node, objectStack) {\n    /** @type {Array<Array<number>>} */\n    var flatLinearRings = pushParseAndPop([null],\n      this.SURFACE_PARSERS_, node, objectStack, this);\n    if (flatLinearRings && flatLinearRings[0]) {\n      var flatCoordinates = flatLinearRings[0];\n      var ends = [flatCoordinates.length];\n      var i, ii;\n      for (i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n        extend(flatCoordinates, flatLinearRings[i]);\n        ends.push(flatCoordinates.length);\n      }\n      return new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/geom/LineString|undefined} LineString.\n   */\n  GML3.prototype.readCurve_ = function readCurve_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.CURVE_PARSERS_, node, objectStack, this);\n    if (flatCoordinates) {\n      var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n      return lineString;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  GML3.prototype.readEnvelope_ = function readEnvelope_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.ENVELOPE_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[2][0],\n      flatCoordinates[2][1]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPos_ = function readFlatPos_ (node, objectStack) {\n    var s = getAllTextContent(node, false);\n    var re = /^\\s*([+\\-]?\\d*\\.?\\d+(?:[eE][+\\-]?\\d+)?)\\s*/;\n    /** @type {Array<number>} */\n    var flatCoordinates = [];\n    var m;\n    while ((m = re.exec(s))) {\n      flatCoordinates.push(parseFloat(m[1]));\n      s = s.substr(m[0].length);\n    }\n    if (s !== '') {\n      return undefined;\n    }\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    if (axisOrientation === 'neu') {\n      var i, ii;\n      for (i = 0, ii = flatCoordinates.length; i < ii; i += 3) {\n        var y = flatCoordinates[i];\n        var x = flatCoordinates[i + 1];\n        flatCoordinates[i] = x;\n        flatCoordinates[i + 1] = y;\n      }\n    }\n    var len = flatCoordinates.length;\n    if (len == 2) {\n      flatCoordinates.push(0);\n    }\n    if (len === 0) {\n      return undefined;\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML3.prototype.readFlatPosList_ = function readFlatPosList_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = objectStack[0];\n    var containerSrs = context['srsName'];\n    var contextDimension = context['srsDimension'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      axisOrientation = proj.getAxisOrientation();\n    }\n    var coords = s.split(/\\s+/);\n    // The \"dimension\" attribute is from the GML 3.0.1 spec.\n    var dim = 2;\n    if (node.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('srsDimension'));\n    } else if (node.getAttribute('dimension')) {\n      dim = readNonNegativeIntegerString(\n        node.getAttribute('dimension'));\n    } else if (node.parentNode.getAttribute('srsDimension')) {\n      dim = readNonNegativeIntegerString(\n        node.parentNode.getAttribute('srsDimension'));\n    } else if (contextDimension) {\n      dim = readNonNegativeIntegerString(contextDimension);\n    }\n    var x, y, z;\n    var flatCoordinates = [];\n    for (var i = 0, ii = coords.length; i < ii; i += dim) {\n      x = parseFloat(coords[i]);\n      y = parseFloat(coords[i + 1]);\n      z = (dim === 3) ? parseFloat(coords[i + 2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} value Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePos_ = function writePos_ (node, value, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    var axisOrientation = 'enu';\n    if (srsName) {\n      axisOrientation = getProjection(srsName).getAxisOrientation();\n    }\n    var point = value.getCoordinates();\n    var coords;\n    // only 2d for simple features profile\n    if (axisOrientation.substr(0, 2) === 'en') {\n      coords = (point[0] + ' ' + point[1]);\n    } else {\n      coords = (point[1] + ' ' + point[0]);\n    }\n    if (hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n    writeStringTextNode(node, coords);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML3.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ' ' + point[1] :\n      point[1] + ' ' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ' ' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePosList_ = function writePosList_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsDimension = hasZ ? 3 : 2;\n    node.setAttribute('srsDimension', srsDimension);\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    var point;\n    for (var i = 0; i < len; ++i) {\n      point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var pos = createElementNS(node.namespaceURI, 'pos');\n    node.appendChild(pos);\n    this.writePos_(pos, geometry, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var posList = createElementNS(node.namespaceURI, 'posList');\n    node.appendChild(posList);\n    this.writePosList_(posList, geometry, objectStack);\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML3.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'interior' : 'exterior');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var posList = createElementNS(node.namespaceURI, 'posList');\n      node.appendChild(posList);\n      this.writePosList_(posList, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    var hasZ = context['hasZ'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI,\n      'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item.node = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML3.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML3.prototype.writeFeatureMembers_ = function writeFeatureMembers_ (node, features, objectStack) {\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureType = context['featureType'];\n    var featureNS = context['featureNS'];\n    var serializers = {};\n    serializers[featureNS] = {};\n    serializers[featureNS][featureType] = makeChildAppender(\n      this.writeFeatureElement, this);\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item),\n      serializers,\n      makeSimpleNodeFactory(featureType, featureNS), features,\n      objectStack);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML3.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var curve = context['curve'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'LineString' && curve === true) {\n        nodeName = 'Curve';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * Encode a geometry in GML 3.1.1 Simple Features.\n   *\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeGeometryNode = function writeGeometryNode (geometry, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var geom = createElementNS('http://www.opengis.net/gml', 'geom');\n    var context = {node: geom, hasZ: this.hasZ, srsName: this.srsName,\n      curve: this.curve_, surface: this.surface_,\n      multiSurface: this.multiSurface_, multiCurve: this.multiCurve_};\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeGeometryElement(geom, geometry, [context]);\n    return geom;\n  };\n\n  /**\n   * Encode an array of features in the GML 3.1.1 format as an XML node.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GML3.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var node = createElementNS('http://www.opengis.net/gml', 'featureMembers');\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation);\n    var context = {\n      srsName: this.srsName,\n      hasZ: this.hasZ,\n      curve: this.curve_,\n      surface: this.surface_,\n      multiSurface: this.multiSurface_,\n      multiCurve: this.multiCurve_,\n      featureNS: this.featureNS,\n      featureType: this.featureType\n    };\n    if (opt_options) {\n      assign(context, opt_options);\n    }\n    this.writeFeatureMembers_(node, features, [context]);\n    return node;\n  };\n\n  return GML3;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'pos': makeReplacer(GML3.prototype.readFlatPos_),\n    'posList': makeReplacer(GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'interior': GML3.prototype.interiorParser_,\n    'exterior': GML3.prototype.exteriorParser_\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Surface': makeReplacer(GML3.prototype.readSurface_),\n    'MultiSurface': makeReplacer(\n      GML3.prototype.readMultiSurface_),\n    'Curve': makeReplacer(GML3.prototype.readCurve_),\n    'MultiCurve': makeReplacer(\n      GML3.prototype.readMultiCurve_),\n    'Envelope': makeReplacer(GML3.prototype.readEnvelope_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTICURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'curveMember': makeArrayPusher(\n      GML3.prototype.curveMemberParser_),\n    'curveMembers': makeArrayPusher(\n      GML3.prototype.curveMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.MULTISURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_),\n    'surfaceMembers': makeArrayPusher(\n      GML3.prototype.surfaceMemberParser_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineString': makeArrayPusher(\n      GMLBase.prototype.readLineString),\n    'Curve': makeArrayPusher(GML3.prototype.readCurve_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACEMEMBER_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Polygon': makeArrayPusher(GMLBase.prototype.readPolygon),\n    'Surface': makeArrayPusher(GML3.prototype.readSurface_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SURFACE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'patches': makeReplacer(GML3.prototype.readPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.CURVE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'segments': makeReplacer(GML3.prototype.readSegment_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.ENVELOPE_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_),\n    'upperCorner': makeArrayPusher(\n      GML3.prototype.readFlatPosList_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.PATCHES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'PolygonPatch': makeReplacer(\n      GML3.prototype.readPolygonPatch_)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML3.prototype.SEGMENTS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'LineStringSegment': makeReplacer(\n      GML3.prototype.readLineStringSegment_)\n  }\n};\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML3.prototype.writeFeatures;\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'exterior': makeChildAppender(GML3.prototype.writeRing_),\n    'interior': makeChildAppender(GML3.prototype.writeRing_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML3.prototype.writePointMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML3.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML3.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML3.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML3.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML3.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML3.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML3.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML3.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML3.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML3.prototype.writeEnvelope)\n  }\n};\n\nexport default GML3;\n\n//# sourceMappingURL=GML3.js.map","/**\n * @module ol/format/GML\n */\nimport GML3 from '../format/GML3.js';\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format\n * version 3.1.1.\n * Currently only supports GML 3.1.1 Simple Features profile.\n *\n * @param {module:ol/format/GMLBase~Options=} opt_options\n *     Optional configuration object.\n * @api\n */\nvar GML = GML3;\n\n\n/**\n * Encode an array of features in GML 3.1.1 Simple Features.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {string} Result.\n * @api\n */\nGML.prototype.writeFeatures;\n\n\n/**\n * Encode an array of features in the GML 3.1.1 format as an XML node.\n *\n * @function\n * @param {Array<module:ol/Feature>} features Features.\n * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n * @return {Node} Node.\n * @api\n */\nGML.prototype.writeFeaturesNode;\n\nexport default GML;\n\n//# sourceMappingURL=GML.js.map","/**\n * @module ol/format/GPX\n */\nimport Feature from '../Feature.js';\nimport {includes} from '../array.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readString, readDecimal, readNonNegativeInteger, readDateTime, writeStringTextNode, writeNonNegativeIntegerTextNode, writeDecimalTextNode, writeDateTimeTextNode} from '../format/xsd.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport Point from '../geom/Point.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, makeArrayPusher, makeArraySerializer, makeChildAppender,\n  makeObjectPropertySetter, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parseNode, pushParseAndPop, pushSerializeAndPop,\n  XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.topografix.com/GPX/1/0',\n  'http://www.topografix.com/GPX/1/1'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.topografix.com/GPX/1/1 ' +\n    'http://www.topografix.com/GPX/1/1/gpx.xsd';\n\n\n/**\n * @const\n * @type {Object<string, function(Node, Array<*>): (module:ol/Feature|undefined)>}\n */\nvar FEATURE_READER = {\n  'rte': readRte,\n  'trk': readTrk,\n  'wpt': readWpt\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GPX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeArrayPusher(readRte),\n    'trk': makeArrayPusher(readTrk),\n    'wpt': makeArrayPusher(readWpt)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeObjectPropertySetter(readString, 'linkText'),\n    'type': makeObjectPropertySetter(readString, 'linkType')\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar GPX_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'rte': makeChildAppender(writeRte),\n    'trk': makeChildAppender(writeTrk),\n    'wpt': makeChildAppender(writeWpt)\n  });\n\n\n/**\n * @typedef {Object} Options\n * @property {function(module:ol/Feature, Node)} [readExtensions] Callback function\n * to process `extensions` nodes. To prevent memory leaks, this callback function must\n * not store any references to the node. Note that the `extensions`\n * node is not allowed in GPX 1.0. Moreover, only `extensions`\n * nodes from `wpt`, `rte` and `trk` can be processed, as those are\n * directly mapped to a feature.\n */\n\n/**\n * @typedef {Object} LayoutOptions\n * @property {boolean} [hasZ]\n * @property {boolean} [hasM]\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GPX format.\n *\n * Note that {@link module:ol/format/GPX~GPX#readFeature} only reads the first\n * feature of the source.\n *\n * When reading, routes (`<rte>`) are converted into LineString geometries, and\n * tracks (`<trk>`) into MultiLineString. Any properties on route and track\n * waypoints are ignored.\n *\n * When writing, LineString geometries are output as routes (`<rte>`), and\n * MultiLineString as tracks (`<trk>`).\n *\n * @api\n */\nvar GPX = (function (XMLFeature) {\n  function GPX(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @type {function(module:ol/Feature, Node)|undefined}\n     * @private\n     */\n    this.readExtensions_ = options.readExtensions;\n  }\n\n  if ( XMLFeature ) GPX.__proto__ = XMLFeature;\n  GPX.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  GPX.prototype.constructor = GPX;\n\n  /**\n   * @param {Array<module:ol/Feature>} features List of features.\n   * @private\n   */\n  GPX.prototype.handleReadExtensions_ = function handleReadExtensions_ (features) {\n    var this$1 = this;\n\n    if (!features) {\n      features = [];\n    }\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      var feature = features[i];\n      if (this$1.readExtensions_) {\n        var extensionsNode = feature.get('extensionsNode_') || null;\n        this$1.readExtensions_(feature, extensionsNode);\n      }\n      feature.set('extensionsNode_', undefined);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var featureReader = FEATURE_READER[node.localName];\n    if (!featureReader) {\n      return null;\n    }\n    var feature = featureReader(node, [this.getReadOptions(node, opt_options)]);\n    if (!feature) {\n      return null;\n    }\n    this.handleReadExtensions_([feature]);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  GPX.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    if (node.localName == 'gpx') {\n      /** @type {Array<module:ol/Feature>} */\n      var features = pushParseAndPop([], GPX_PARSERS,\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        this.handleReadExtensions_(features);\n        return features;\n      } else {\n        return [];\n      }\n    }\n    return [];\n  };\n\n  /**\n   * Encode an array of features in the GPX format as an XML node.\n   * LineString geometries are output as routes (`<rte>`), and MultiLineString\n   * as tracks (`<trk>`).\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  GPX.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    //FIXME Serialize metadata\n    var gpx = createElementNS('http://www.topografix.com/GPX/1/1', 'gpx');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    gpx.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    gpx.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n    gpx.setAttribute('version', '1.1');\n    gpx.setAttribute('creator', 'OpenLayers');\n\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: gpx}), GPX_SERIALIZERS, GPX_NODE_FACTORY, features, [opt_options]);\n    return gpx;\n  };\n\n  return GPX;\n}(XMLFeature));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar RTE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions,\n    'type': makeObjectPropertySetter(readString),\n    'rtept': parseRtePt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar RTEPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'number': makeObjectPropertySetter(readNonNegativeInteger),\n    'type': makeObjectPropertySetter(readString),\n    'extensions': parseExtensions,\n    'trkseg': parseTrkSeg\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRKSEG_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': parseTrkPt\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRKPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar WPT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeObjectPropertySetter(readDecimal),\n    'time': makeObjectPropertySetter(readDateTime),\n    'magvar': makeObjectPropertySetter(readDecimal),\n    'geoidheight': makeObjectPropertySetter(readDecimal),\n    'name': makeObjectPropertySetter(readString),\n    'cmt': makeObjectPropertySetter(readString),\n    'desc': makeObjectPropertySetter(readString),\n    'src': makeObjectPropertySetter(readString),\n    'link': parseLink,\n    'sym': makeObjectPropertySetter(readString),\n    'type': makeObjectPropertySetter(readString),\n    'fix': makeObjectPropertySetter(readString),\n    'sat': makeObjectPropertySetter(readNonNegativeInteger),\n    'hdop': makeObjectPropertySetter(readDecimal),\n    'vdop': makeObjectPropertySetter(readDecimal),\n    'pdop': makeObjectPropertySetter(readDecimal),\n    'ageofdgpsdata': makeObjectPropertySetter(readDecimal),\n    'dgpsid': makeObjectPropertySetter(readNonNegativeInteger),\n    'extensions': parseExtensions\n  });\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar LINK_SEQUENCE = ['text', 'type'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LINK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'text': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'rtept'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar RTE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'rtept': makeArraySerializer(makeChildAppender(writeWptType))\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar RTEPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar TRK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'cmt', 'desc', 'src', 'link', 'number', 'type', 'trkseg'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'number': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'trkseg': makeArraySerializer(makeChildAppender(writeTrkSeg))\n  });\n\n\n/**\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar TRKSEG_NODE_FACTORY = makeSimpleNodeFactory('trkpt');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRKSEG_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'trkpt': makeChildAppender(writeWptType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar WPT_TYPE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'ele', 'time', 'magvar', 'geoidheight', 'name', 'cmt', 'desc', 'src',\n    'link', 'sym', 'type', 'fix', 'sat', 'hdop', 'vdop', 'pdop',\n    'ageofdgpsdata', 'dgpsid'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar WPT_TYPE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ele': makeChildAppender(writeDecimalTextNode),\n    'time': makeChildAppender(writeDateTimeTextNode),\n    'magvar': makeChildAppender(writeDecimalTextNode),\n    'geoidheight': makeChildAppender(writeDecimalTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'cmt': makeChildAppender(writeStringTextNode),\n    'desc': makeChildAppender(writeStringTextNode),\n    'src': makeChildAppender(writeStringTextNode),\n    'link': makeChildAppender(writeLink),\n    'sym': makeChildAppender(writeStringTextNode),\n    'type': makeChildAppender(writeStringTextNode),\n    'fix': makeChildAppender(writeStringTextNode),\n    'sat': makeChildAppender(writeNonNegativeIntegerTextNode),\n    'hdop': makeChildAppender(writeDecimalTextNode),\n    'vdop': makeChildAppender(writeDecimalTextNode),\n    'pdop': makeChildAppender(writeDecimalTextNode),\n    'ageofdgpsdata': makeChildAppender(writeDecimalTextNode),\n    'dgpsid': makeChildAppender(writeNonNegativeIntegerTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'wpt',\n  'LineString': 'rte',\n  'MultiLineString': 'trk'\n};\n\n\n/**\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nfunction GPX_NODE_FACTORY(value, objectStack, opt_nodeName) {\n  var geometry = /** @type {module:ol/Feature} */ (value).getGeometry();\n  if (geometry) {\n    var nodeName = GEOMETRY_TYPE_TO_NODENAME[geometry.getType()];\n    if (nodeName) {\n      var parentNode = objectStack[objectStack.length - 1].node;\n      return createElementNS(parentNode.namespaceURI, nodeName);\n    }\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Node} node Node.\n * @param {!Object} values Values.\n * @return {Array<number>} Flat coordinates.\n */\nfunction appendCoordinate(flatCoordinates, layoutOptions, node, values) {\n  flatCoordinates.push(\n    parseFloat(node.getAttribute('lon')),\n    parseFloat(node.getAttribute('lat')));\n  if ('ele' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['ele']));\n    delete values['ele'];\n    layoutOptions.hasZ = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  if ('time' in values) {\n    flatCoordinates.push(/** @type {number} */ (values['time']));\n    delete values['time'];\n    layoutOptions.hasM = true;\n  } else {\n    flatCoordinates.push(0);\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * Choose GeometryLayout based on flags in layoutOptions and adjust flatCoordinates\n * and ends arrays by shrinking them accordingly (removing unused zero entries).\n *\n * @param {module:ol/format/GPX~LayoutOptions} layoutOptions Layout options.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {Array<number>=} ends Ends.\n * @return {module:ol/geom/GeometryLayout} Layout.\n */\nfunction applyLayoutOptions(layoutOptions, flatCoordinates, ends) {\n  var layout = GeometryLayout.XY;\n  var stride = 2;\n  if (layoutOptions.hasZ && layoutOptions.hasM) {\n    layout = GeometryLayout.XYZM;\n    stride = 4;\n  } else if (layoutOptions.hasZ) {\n    layout = GeometryLayout.XYZ;\n    stride = 3;\n  } else if (layoutOptions.hasM) {\n    layout = GeometryLayout.XYM;\n    stride = 3;\n  }\n  if (stride !== 4) {\n    for (var i = 0, ii = flatCoordinates.length / 4; i < ii; i++) {\n      flatCoordinates[i * stride] = flatCoordinates[i * 4];\n      flatCoordinates[i * stride + 1] = flatCoordinates[i * 4 + 1];\n      if (layoutOptions.hasZ) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 2];\n      }\n      if (layoutOptions.hasM) {\n        flatCoordinates[i * stride + 2] = flatCoordinates[i * 4 + 3];\n      }\n    }\n    flatCoordinates.length = flatCoordinates.length / 4 * stride;\n    if (ends) {\n      for (var i$1 = 0, ii$1 = ends.length; i$1 < ii$1; i$1++) {\n        ends[i$1] = ends[i$1] / 4 * stride;\n      }\n    }\n  }\n  return layout;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseLink(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var href = node.getAttribute('href');\n  if (href !== null) {\n    values['link'] = href;\n  }\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseExtensions(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  values['extensionsNode_'] = node;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseRtePt(node, objectStack) {\n  var values = pushParseAndPop({}, RTEPT_PARSERS, node, objectStack);\n  if (values) {\n    var rteValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (rteValues['flatCoordinates']);\n    var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (rteValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkPt(node, objectStack) {\n  var values = pushParseAndPop({}, TRKPT_PARSERS, node, objectStack);\n  if (values) {\n    var trkValues = /** @type {!Object} */ (objectStack[objectStack.length - 1]);\n    var flatCoordinates = /** @type {Array<number>} */ (trkValues['flatCoordinates']);\n    var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (trkValues['layoutOptions']);\n    appendCoordinate(flatCoordinates, layoutOptions, node, values);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction parseTrkSeg(node, objectStack) {\n  var values = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  parseNode(TRKSEG_PARSERS, node, objectStack);\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  ends.push(flatCoordinates.length);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readRte(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'layoutOptions': {}\n  }, RTE_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates);\n  var geometry = new LineString(flatCoordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Track.\n */\nfunction readTrk(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({\n    'flatCoordinates': [],\n    'ends': [],\n    'layoutOptions': {}\n  }, TRK_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var flatCoordinates = /** @type {Array<number>} */\n      (values['flatCoordinates']);\n  delete values['flatCoordinates'];\n  var ends = /** @type {Array<number>} */ (values['ends']);\n  delete values['ends'];\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ (values['layoutOptions']);\n  delete values['layoutOptions'];\n  var layout = applyLayoutOptions(layoutOptions, flatCoordinates, ends);\n  var geometry = new MultiLineString(flatCoordinates, layout, ends);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/Feature|undefined} Waypoint.\n */\nfunction readWpt(node, objectStack) {\n  var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n  var values = pushParseAndPop({}, WPT_PARSERS, node, objectStack);\n  if (!values) {\n    return undefined;\n  }\n  var layoutOptions = /** @type {module:ol/format/GPX~LayoutOptions} */ ({});\n  var coordinates = appendCoordinate([], layoutOptions, node, values);\n  var layout = applyLayoutOptions(layoutOptions, coordinates);\n  var geometry = new Point(coordinates, layout);\n  transformWithOptions(geometry, false, options);\n  var feature = new Feature(geometry);\n  feature.setProperties(values);\n  return feature;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value Value for the link's `href` attribute.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLink(node, value, objectStack) {\n  node.setAttribute('href', value);\n  var context = objectStack[objectStack.length - 1];\n  var properties = context['properties'];\n  var link = [\n    properties['linkText'],\n    properties['linkType']\n  ];\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ ({node: node}),\n    LINK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    link, objectStack, LINK_SEQUENCE);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWptType(node, coordinate, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var parentNode = context.node;\n  var namespaceURI = parentNode.namespaceURI;\n  var properties = context['properties'];\n  //FIXME Projection handling\n  node.setAttributeNS(null, 'lat', coordinate[1]);\n  node.setAttributeNS(null, 'lon', coordinate[0]);\n  var geometryLayout = context['geometryLayout'];\n  switch (geometryLayout) {\n    case GeometryLayout.XYZM:\n      if (coordinate[3] !== 0) {\n        properties['time'] = coordinate[3];\n      }\n      // fall through\n    case GeometryLayout.XYZ:\n      if (coordinate[2] !== 0) {\n        properties['ele'] = coordinate[2];\n      }\n      break;\n    case GeometryLayout.XYM:\n      if (coordinate[2] !== 0) {\n        properties['time'] = coordinate[2];\n      }\n      break;\n    default:\n      // pass\n  }\n  var orderedKeys = (node.nodeName == 'rtept') ?\n    RTEPT_TYPE_SEQUENCE[namespaceURI] :\n    WPT_TYPE_SEQUENCE[namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n    ({node: node, 'properties': properties}),\n    WPT_TYPE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeRte(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/LineString} */ (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    properties['rtept'] = geometry.getCoordinates();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = RTE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    RTE_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrk(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var properties = feature.getProperties();\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node, 'properties': properties};\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/MultiLineString} */\n      (transformWithOptions(geometry, true, options));\n    properties['trkseg'] = geometry.getLineStrings();\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = TRK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context,\n    TRK_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LineString} lineString LineString.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeTrkSeg(node, lineString, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node, 'geometryLayout': lineString.getLayout(),\n    'properties': {}};\n  pushSerializeAndPop(context,\n    TRKSEG_SERIALIZERS, TRKSEG_NODE_FACTORY,\n    lineString.getCoordinates(), objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeWpt(node, feature, objectStack) {\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var context = objectStack[objectStack.length - 1];\n  context['properties'] = feature.getProperties();\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = /** @type {module:ol/geom/Point} */\n      (transformWithOptions(geometry, true, options));\n    context['geometryLayout'] = geometry.getLayout();\n    writeWptType(node, geometry.getCoordinates(), objectStack);\n  }\n}\n\n\nexport default GPX;\n\n//# sourceMappingURL=GPX.js.map","/**\n * @module ol/format/TextFeature\n */\nimport FeatureFormat from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for text feature formats.\n *\n * @abstract\n */\nvar TextFeature = (function (FeatureFormat) {\n  function TextFeature() {\n    FeatureFormat.call(this);\n  }\n\n  if ( FeatureFormat ) TextFeature.__proto__ = FeatureFormat;\n  TextFeature.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  TextFeature.prototype.constructor = TextFeature;\n\n  /**\n   * @inheritDoc\n   */\n  TextFeature.prototype.getType = function getType () {\n    return FormatType.TEXT;\n  };\n\n  /**\n   * Read the feature from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature} Feature.\n   * @api\n   */\n  TextFeature.prototype.readFeature = function readFeature (source, opt_options) {\n    return this.readFeatureFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/Feature} Feature.\n   */\n  TextFeature.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {};\n\n  /**\n   * Read the features from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  TextFeature.prototype.readFeatures = function readFeatures (source, opt_options) {\n    return this.readFeaturesFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {Array<module:ol/Feature>} Features.\n   */\n  TextFeature.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {};\n\n  /**\n   * Read the geometry from the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/geom/Geometry} Geometry.\n   * @api\n   */\n  TextFeature.prototype.readGeometry = function readGeometry (source, opt_options) {\n    return this.readGeometryFromText(getText(source), this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {string} text Text.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @protected\n   * @return {module:ol/geom/Geometry} Geometry.\n   */\n  TextFeature.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {};\n\n  /**\n   * Read the projection from the source.\n   *\n   * @function\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/proj/Projection} Projection.\n   * @api\n   */\n  TextFeature.prototype.readProjection = function readProjection (source) {\n    return this.readProjectionFromText(getText(source));\n  };\n\n  /**\n   * @param {string} text Text.\n   * @protected\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  TextFeature.prototype.readProjectionFromText = function readProjectionFromText (text) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Encode a feature as a string.\n   *\n   * @function\n   * @param {module:ol/Feature} feature Feature.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  TextFeature.prototype.writeFeature = function writeFeature (feature, opt_options) {\n    return this.writeFeatureText(feature, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/Feature} feature Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {};\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  TextFeature.prototype.writeFeatures = function writeFeatures (features, opt_options) {\n    return this.writeFeaturesText(features, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {};\n\n  /**\n   * Write a single geometry.\n   *\n   * @function\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @return {string} Geometry.\n   * @api\n   */\n  TextFeature.prototype.writeGeometry = function writeGeometry (geometry, opt_options) {\n    return this.writeGeometryText(geometry, this.adaptOptions(opt_options));\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/geom/Geometry} geometry Geometry.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Write options.\n   * @protected\n   * @return {string} Text.\n   */\n  TextFeature.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {};\n\n  return TextFeature;\n}(FeatureFormat));\n\n\n/**\n * @param {Document|Node|Object|string} source Source.\n * @return {string} Text.\n */\nfunction getText(source) {\n  if (typeof source === 'string') {\n    return source;\n  } else {\n    return '';\n  }\n}\n\n\nexport default TextFeature;\n\n//# sourceMappingURL=TextFeature.js.map","/**\n * @module ol/format/KML\n */\nimport Feature from '../Feature.js';\nimport {extend, includes} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readDecimal, readBoolean, readString, writeStringTextNode, writeCDATASection, writeDecimalTextNode, writeBooleanTextNode} from '../format/xsd.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {toRadians} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport Fill from '../style/Fill.js';\nimport Icon from '../style/Icon.js';\nimport IconAnchorUnits from '../style/IconAnchorUnits.js';\nimport IconOrigin from '../style/IconOrigin.js';\nimport Stroke from '../style/Stroke.js';\nimport Style from '../style/Style.js';\nimport Text from '../style/Text.js';\nimport {createElementNS, getAllTextContent, isDocument, isNode, makeArrayExtender,\n  makeArrayPusher, makeChildAppender, makeObjectPropertySetter,\n  makeReplacer, makeSequence, makeSimpleNodeFactory, makeStructureNS,\n  OBJECT_PROPERTY_NODE_FACTORY, parse, parseNode, pushParseAndPop,\n  pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n/**\n * @typedef {Object} Vec2\n * @property {number} x\n * @property {module:ol/style/IconAnchorUnits} xunits\n * @property {number} y\n * @property {module:ol/style/IconAnchorUnits} yunits\n * @property {module:ol/style/IconOrigin} origin\n */\n\n/**\n * @typedef {Object} GxTrackObject\n * @property {Array<number>} flatCoordinates\n * @property {Array<number>} whens\n */\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar GX_NAMESPACE_URIS = [\n  'http://www.google.com/kml/ext/2.2'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://earth.google.com/kml/2.0',\n  'http://earth.google.com/kml/2.1',\n  'http://earth.google.com/kml/2.2',\n  'http://www.opengis.net/kml/2.2'\n];\n\n\n/**\n * @const\n * @type {string}\n */\nvar SCHEMA_LOCATION = 'http://www.opengis.net/kml/2.2 ' +\n    'https://developers.google.com/kml/schema/kml22gx.xsd';\n\n\n/**\n * @type {Object<string, module:ol/style/IconAnchorUnits>}\n */\nvar ICON_ANCHOR_UNITS_MAP = {\n  'fraction': IconAnchorUnits.FRACTION,\n  'pixels': IconAnchorUnits.PIXELS,\n  'insetPixels': IconAnchorUnits.PIXELS\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PLACEMARK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'MultiGeometry': makeObjectPropertySetter(\n      readMultiGeometry, 'geometry'),\n    'LineString': makeObjectPropertySetter(\n      readLineString, 'geometry'),\n    'LinearRing': makeObjectPropertySetter(\n      readLinearRing, 'geometry'),\n    'Point': makeObjectPropertySetter(\n      readPoint, 'geometry'),\n    'Polygon': makeObjectPropertySetter(\n      readPolygon, 'geometry'),\n    'Style': makeObjectPropertySetter(readStyle),\n    'StyleMap': placemarkStyleMapParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'MultiTrack': makeObjectPropertySetter(\n        readGxMultiTrack, 'geometry'),\n      'Track': makeObjectPropertySetter(\n        readGxTrack, 'geometry')\n    }\n  ));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar NETWORK_LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': extendedDataParser,\n    'Region': regionParser,\n    'Link': linkParser,\n    'address': makeObjectPropertySetter(readString),\n    'description': makeObjectPropertySetter(readString),\n    'name': makeObjectPropertySetter(readString),\n    'open': makeObjectPropertySetter(readBoolean),\n    'phoneNumber': makeObjectPropertySetter(readString),\n    'visibility': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REGION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LatLonAltBox': latLonAltBoxParser,\n    'Lod': lodParser\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar KML_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'Document', 'Placemark'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar KML_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Document': makeChildAppender(writeDocument),\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @type {module:ol/color~Color}\n */\nvar DEFAULT_COLOR;\n\n/**\n * @type {module:ol/style/Fill}\n */\nvar DEFAULT_FILL_STYLE = null;\n\n/**\n * Get the default fill style (or null if not yet set).\n * @return {module:ol/style/Fill} The default fill style.\n */\nexport function getDefaultFillStyle() {\n  return DEFAULT_FILL_STYLE;\n}\n\n/**\n * @type {module:ol/size~Size}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n\n/**\n * @type {module:ol/style/IconAnchorUnits}\n */\nvar DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n\n/**\n * @type {module:ol/size~Size}\n */\nvar DEFAULT_IMAGE_STYLE_SIZE;\n\n/**\n * @type {string}\n */\nvar DEFAULT_IMAGE_STYLE_SRC;\n\n/**\n * @type {number}\n */\nvar DEFAULT_IMAGE_SCALE_MULTIPLIER;\n\n/**\n * @type {module:ol/style/Image}\n */\nvar DEFAULT_IMAGE_STYLE = null;\n\n/**\n * Get the default image style (or null if not yet set).\n * @return {module:ol/style/Image} The default image style.\n */\nexport function getDefaultImageStyle() {\n  return DEFAULT_IMAGE_STYLE;\n}\n\n/**\n * @type {string}\n */\nvar DEFAULT_NO_IMAGE_STYLE;\n\n/**\n * @type {module:ol/style/Stroke}\n */\nvar DEFAULT_STROKE_STYLE = null;\n\n/**\n * Get the default stroke style (or null if not yet set).\n * @return {module:ol/style/Stroke} The default stroke style.\n */\nexport function getDefaultStrokeStyle() {\n  return DEFAULT_STROKE_STYLE;\n}\n\n/**\n * @type {module:ol/style/Stroke}\n */\nvar DEFAULT_TEXT_STROKE_STYLE;\n\n/**\n * @type {module:ol/style/Text}\n */\nvar DEFAULT_TEXT_STYLE = null;\n\n/**\n * Get the default text style (or null if not yet set).\n * @return {module:ol/style/Text} The default text style.\n */\nexport function getDefaultTextStyle() {\n  return DEFAULT_TEXT_STYLE;\n}\n\n/**\n * @type {module:ol/style/Style}\n */\nvar DEFAULT_STYLE = null;\n\n/**\n * Get the default style (or null if not yet set).\n * @return {module:ol/style/Style} The default style.\n */\nexport function getDefaultStyle() {\n  return DEFAULT_STYLE;\n}\n\n/**\n * @type {Array<module:ol/style/Style>}\n */\nvar DEFAULT_STYLE_ARRAY = null;\n\n/**\n * Get the default style array (or null if not yet set).\n * @return {Array<module:ol/style/Style>} The default style.\n */\nexport function getDefaultStyleArray() {\n  return DEFAULT_STYLE_ARRAY;\n}\n\n\nfunction createStyleDefaults() {\n\n  DEFAULT_COLOR = [255, 255, 255, 1];\n\n  DEFAULT_FILL_STYLE = new Fill({\n    color: DEFAULT_COLOR\n  });\n\n  DEFAULT_IMAGE_STYLE_ANCHOR = [20, 2]; // FIXME maybe [8, 32] ?\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS = IconAnchorUnits.PIXELS;\n\n  DEFAULT_IMAGE_STYLE_SIZE = [64, 64];\n\n  DEFAULT_IMAGE_STYLE_SRC =\n      'https://maps.google.com/mapfiles/kml/pushpin/ylw-pushpin.png';\n\n  DEFAULT_IMAGE_SCALE_MULTIPLIER = 0.5;\n\n  DEFAULT_IMAGE_STYLE = new Icon({\n    anchor: DEFAULT_IMAGE_STYLE_ANCHOR,\n    anchorOrigin: IconOrigin.BOTTOM_LEFT,\n    anchorXUnits: DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS,\n    anchorYUnits: DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS,\n    crossOrigin: 'anonymous',\n    rotation: 0,\n    scale: DEFAULT_IMAGE_SCALE_MULTIPLIER,\n    size: DEFAULT_IMAGE_STYLE_SIZE,\n    src: DEFAULT_IMAGE_STYLE_SRC\n  });\n\n  DEFAULT_NO_IMAGE_STYLE = 'NO_IMAGE';\n\n  DEFAULT_STROKE_STYLE = new Stroke({\n    color: DEFAULT_COLOR,\n    width: 1\n  });\n\n  DEFAULT_TEXT_STROKE_STYLE = new Stroke({\n    color: [51, 51, 51, 1],\n    width: 2\n  });\n\n  DEFAULT_TEXT_STYLE = new Text({\n    font: 'bold 16px Helvetica',\n    fill: DEFAULT_FILL_STYLE,\n    stroke: DEFAULT_TEXT_STROKE_STYLE,\n    scale: 0.8\n  });\n\n  DEFAULT_STYLE = new Style({\n    fill: DEFAULT_FILL_STYLE,\n    image: DEFAULT_IMAGE_STYLE,\n    text: DEFAULT_TEXT_STYLE,\n    stroke: DEFAULT_STROKE_STYLE,\n    zIndex: 0\n  });\n\n  DEFAULT_STYLE_ARRAY = [DEFAULT_STYLE];\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [extractStyles=true] Extract styles from the KML.\n * @property {boolean} [showPointNames=true] Show names as labels for placemarks which contain points.\n * @property {Array<module:ol/style/Style>} [defaultStyle] Default style. The\n * default default style is the same as Google Earth.\n * @property {boolean} [writeStyles=true] Write styles into KML.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the KML format.\n *\n * {@link module:ol/format/KML~KML#readFeature} will read the first feature from\n * a KML source.\n *\n * MultiGeometries are converted into GeometryCollections if they are a mix of\n * geometry types, and into MultiPoint/MultiLineString/MultiPolygon if they are\n * all of the same type.\n *\n * Note that the KML format uses the URL() constructor. Older browsers such as IE\n * which do not support this will need a URL polyfill to be loaded before use.\n *\n * @api\n */\nvar KML = (function (XMLFeature) {\n  function KML(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    if (!DEFAULT_STYLE_ARRAY) {\n      createStyleDefaults();\n    }\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {Array<module:ol/style/Style>}\n     */\n    this.defaultStyle_ = options.defaultStyle ?\n      options.defaultStyle : DEFAULT_STYLE_ARRAY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.extractStyles_ = options.extractStyles !== undefined ?\n      options.extractStyles : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.writeStyles_ = options.writeStyles !== undefined ?\n      options.writeStyles : true;\n\n    /**\n     * @private\n     * @type {!Object<string, (Array<module:ol/style/Style>|string)>}\n     */\n    this.sharedStyles_ = {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.showPointNames_ = options.showPointNames !== undefined ?\n      options.showPointNames : true;\n\n  }\n\n  if ( XMLFeature ) KML.__proto__ = XMLFeature;\n  KML.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  KML.prototype.constructor = KML;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<module:ol/Feature>|undefined} Features.\n   */\n  KML.prototype.readDocumentOrFolder_ = function readDocumentOrFolder_ (node, objectStack) {\n    // FIXME use scope somehow\n    var parsersNS = makeStructureNS(\n      NAMESPACE_URIS, {\n        'Document': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Folder': makeArrayExtender(this.readDocumentOrFolder_, this),\n        'Placemark': makeArrayPusher(this.readPlacemark_, this),\n        'Style': this.readSharedStyle_.bind(this),\n        'StyleMap': this.readSharedStyleMap_.bind(this)\n      });\n    /** @type {Array<module:ol/Feature>} */\n    var features = pushParseAndPop([], parsersNS, node, objectStack, this);\n    if (features) {\n      return features;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/Feature|undefined} Feature.\n   */\n  KML.prototype.readPlacemark_ = function readPlacemark_ (node, objectStack) {\n    var object = pushParseAndPop({'geometry': null},\n      PLACEMARK_PARSERS, node, objectStack);\n    if (!object) {\n      return undefined;\n    }\n    var feature = new Feature();\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      feature.setId(id);\n    }\n    var options = /** @type {module:ol/format/Feature~ReadOptions} */ (objectStack[0]);\n\n    var geometry = object['geometry'];\n    if (geometry) {\n      transformWithOptions(geometry, false, options);\n    }\n    feature.setGeometry(geometry);\n    delete object['geometry'];\n\n    if (this.extractStyles_) {\n      var style = object['Style'];\n      var styleUrl = object['styleUrl'];\n      var styleFunction = createFeatureStyleFunction(\n        style, styleUrl, this.defaultStyle_, this.sharedStyles_,\n        this.showPointNames_);\n      feature.setStyle(styleFunction);\n    }\n    delete object['Style'];\n    // we do not remove the styleUrl property from the object, so it\n    // gets stored on feature when setProperties is called\n\n    feature.setProperties(object);\n\n    return feature;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyle_ = function readSharedStyle_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id !== null) {\n      var style = readStyle(node, objectStack);\n      if (style) {\n        var styleUri;\n        var baseURI = node.baseURI;\n        if (!baseURI || baseURI == 'about:blank') {\n          baseURI = window.location.href;\n        }\n        if (baseURI) {\n          var url = new URL('#' + id, baseURI);\n          styleUri = url.href;\n        } else {\n          styleUri = '#' + id;\n        }\n        this.sharedStyles_[styleUri] = style;\n      }\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  KML.prototype.readSharedStyleMap_ = function readSharedStyleMap_ (node, objectStack) {\n    var id = node.getAttribute('id');\n    if (id === null) {\n      return;\n    }\n    var styleMapValue = readStyleMapValue(node, objectStack);\n    if (!styleMapValue) {\n      return;\n    }\n    var styleUri;\n    var baseURI = node.baseURI;\n    if (!baseURI || baseURI == 'about:blank') {\n      baseURI = window.location.href;\n    }\n    if (baseURI) {\n      var url = new URL('#' + id, baseURI);\n      styleUri = url.href;\n    } else {\n      styleUri = '#' + id;\n    }\n    this.sharedStyles_[styleUri] = styleMapValue;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeatureFromNode = function readFeatureFromNode (node, opt_options) {\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return null;\n    }\n    var feature = this.readPlacemark_(\n      node, [this.getReadOptions(node, opt_options)]);\n    if (feature) {\n      return feature;\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  KML.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var this$1 = this;\n\n    if (!includes(NAMESPACE_URIS, node.namespaceURI)) {\n      return [];\n    }\n    var features;\n    var localName = node.localName;\n    if (localName == 'Document' || localName == 'Folder') {\n      features = this.readDocumentOrFolder_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (features) {\n        return features;\n      } else {\n        return [];\n      }\n    } else if (localName == 'Placemark') {\n      var feature = this.readPlacemark_(\n        node, [this.getReadOptions(node, opt_options)]);\n      if (feature) {\n        return [feature];\n      } else {\n        return [];\n      }\n    } else if (localName == 'kml') {\n      features = [];\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        var fs = this$1.readFeaturesFromNode(n, opt_options);\n        if (fs) {\n          extend(features, fs);\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * Read the name of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {string|undefined} Name.\n   * @api\n   */\n  KML.prototype.readName = function readName (source) {\n    if (isDocument(source)) {\n      return this.readNameFromDocument(/** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readNameFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readNameFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromDocument = function readNameFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        var name = this$1.readNameFromNode(n);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {string|undefined} Name.\n   */\n  KML.prototype.readNameFromNode = function readNameFromNode (node) {\n    var this$1 = this;\n\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'name') {\n        return readString(n);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'Placemark' ||\n           localName == 'kml')) {\n        var name = this$1.readNameFromNode(n$1);\n        if (name) {\n          return name;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * Read the network links of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Network links.\n   * @api\n   */\n  KML.prototype.readNetworkLinks = function readNetworkLinks (source) {\n    var networkLinks = [];\n    if (isDocument(source)) {\n      extend(networkLinks, this.readNetworkLinksFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(networkLinks, this.readNetworkLinksFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(networkLinks, this.readNetworkLinksFromDocument(doc));\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromDocument = function readNetworkLinksFromDocument (doc) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Network links.\n   */\n  KML.prototype.readNetworkLinksFromNode = function readNetworkLinksFromNode (node) {\n    var this$1 = this;\n\n    var networkLinks = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'NetworkLink') {\n        var obj = pushParseAndPop({}, NETWORK_LINK_PARSERS,\n          n, []);\n        networkLinks.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(networkLinks, this$1.readNetworkLinksFromNode(n$1));\n      }\n    }\n    return networkLinks;\n  };\n\n  /**\n   * Read the regions of the KML.\n   *\n   * @param {Document|Node|string} source Source.\n   * @return {Array<Object>} Regions.\n   * @api\n   */\n  KML.prototype.readRegion = function readRegion (source) {\n    var regions = [];\n    if (isDocument(source)) {\n      extend(regions, this.readRegionFromDocument(\n        /** @type {Document} */ (source)));\n    } else if (isNode(source)) {\n      extend(regions, this.readRegionFromNode(\n        /** @type {Node} */ (source)));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      extend(regions, this.readRegionFromDocument(doc));\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Array<Object>} Region.\n   */\n  KML.prototype.readRegionFromDocument = function readRegionFromDocument (doc) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        extend(regions, this$1.readRegionFromNode(n));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {Array<Object>} Region.\n   * @api\n   */\n  KML.prototype.readRegionFromNode = function readRegionFromNode (node) {\n    var this$1 = this;\n\n    var regions = [];\n    for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n      if (includes(NAMESPACE_URIS, n.namespaceURI) &&\n          n.localName == 'Region') {\n        var obj = pushParseAndPop({}, REGION_PARSERS,\n          n, []);\n        regions.push(obj);\n      }\n    }\n    for (var n$1 = node.firstElementChild; n$1; n$1 = n$1.nextElementSibling) {\n      var localName = n$1.localName;\n      if (includes(NAMESPACE_URIS, n$1.namespaceURI) &&\n          (localName == 'Document' ||\n           localName == 'Folder' ||\n           localName == 'kml')) {\n        extend(regions, this$1.readRegionFromNode(n$1));\n      }\n    }\n    return regions;\n  };\n\n  /**\n   * Encode an array of features in the KML format as an XML node. GeometryCollections,\n   * MultiPoints, MultiLineStrings, and MultiPolygons are output as MultiGeometries.\n   *\n   * @param {Array<module:ol/Feature>} features Features.\n   * @param {module:ol/format/Feature~WriteOptions=} opt_options Options.\n   * @return {Node} Node.\n   * @override\n   * @api\n   */\n  KML.prototype.writeFeaturesNode = function writeFeaturesNode (features, opt_options) {\n    opt_options = this.adaptOptions(opt_options);\n    var kml = createElementNS(NAMESPACE_URIS[4], 'kml');\n    var xmlnsUri = 'http://www.w3.org/2000/xmlns/';\n    kml.setAttributeNS(xmlnsUri, 'xmlns:gx', GX_NAMESPACE_URIS[0]);\n    kml.setAttributeNS(xmlnsUri, 'xmlns:xsi', XML_SCHEMA_INSTANCE_URI);\n    kml.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', SCHEMA_LOCATION);\n\n    var /** @type {module:ol/xml~NodeStackItem} */ context = {node: kml};\n    var properties = {};\n    if (features.length > 1) {\n      properties['Document'] = features;\n    } else if (features.length == 1) {\n      properties['Placemark'] = features[0];\n    }\n    var orderedKeys = KML_SEQUENCE[kml.namespaceURI];\n    var values = makeSequence(properties, orderedKeys);\n    pushSerializeAndPop(context, KML_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, values, [opt_options], orderedKeys,\n      this);\n    return kml;\n  };\n\n  return KML;\n}(XMLFeature));\n\n\n/**\n * @param {module:ol/style/Style|undefined} foundStyle Style.\n * @param {string} name Name.\n * @return {module:ol/style/Style} style Style.\n */\nfunction createNameStyleFunction(foundStyle, name) {\n  var textStyle = null;\n  var textOffset = [0, 0];\n  var textAlign = 'start';\n  if (foundStyle.getImage()) {\n    var imageSize = foundStyle.getImage().getImageSize();\n    if (imageSize === null) {\n      imageSize = DEFAULT_IMAGE_STYLE_SIZE;\n    }\n    if (imageSize.length == 2) {\n      var imageScale = foundStyle.getImage().getScale();\n      // Offset the label to be centered to the right of the icon, if there is\n      // one.\n      textOffset[0] = imageScale * imageSize[0] / 2;\n      textOffset[1] = -imageScale * imageSize[1] / 2;\n      textAlign = 'left';\n    }\n  }\n  if (foundStyle.getText() !== null) {\n    // clone the text style, customizing it with name, alignments and offset.\n    // Note that kml does not support many text options that OpenLayers does (rotation, textBaseline).\n    var foundText = foundStyle.getText();\n    textStyle = foundText.clone();\n    textStyle.setFont(foundText.getFont() || DEFAULT_TEXT_STYLE.getFont());\n    textStyle.setScale(foundText.getScale() || DEFAULT_TEXT_STYLE.getScale());\n    textStyle.setFill(foundText.getFill() || DEFAULT_TEXT_STYLE.getFill());\n    textStyle.setStroke(foundText.getStroke() || DEFAULT_TEXT_STROKE_STYLE);\n  } else {\n    textStyle = DEFAULT_TEXT_STYLE.clone();\n  }\n  textStyle.setText(name);\n  textStyle.setOffsetX(textOffset[0]);\n  textStyle.setOffsetY(textOffset[1]);\n  textStyle.setTextAlign(textAlign);\n\n  var nameStyle = new Style({\n    text: textStyle\n  });\n  return nameStyle;\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|undefined} style Style.\n * @param {string} styleUrl Style URL.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles Shared styles.\n * @param {boolean|undefined} showPointNames true to show names for point placemarks.\n * @return {module:ol/style/Style~StyleFunction} Feature style function.\n */\nfunction createFeatureStyleFunction(style, styleUrl, defaultStyle, sharedStyles, showPointNames) {\n\n  return (\n    /**\n     * @param {module:ol/Feature} feature feature.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/style/Style>} Style.\n     */\n    function(feature, resolution) {\n      var drawName = showPointNames;\n      /** @type {module:ol/style/Style|undefined} */\n      var nameStyle;\n      var name = '';\n      if (drawName) {\n        var geometry = feature.getGeometry();\n        if (geometry) {\n          drawName = geometry.getType() === GeometryType.POINT;\n        }\n      }\n\n      if (drawName) {\n        name = /** @type {string} */ (feature.get('name'));\n        drawName = drawName && name;\n      }\n\n      if (style) {\n        if (drawName) {\n          nameStyle = createNameStyleFunction(style[0], name);\n          return style.concat(nameStyle);\n        }\n        return style;\n      }\n      if (styleUrl) {\n        var foundStyle = findStyle(styleUrl, defaultStyle, sharedStyles);\n        if (drawName) {\n          nameStyle = createNameStyleFunction(foundStyle[0], name);\n          return foundStyle.concat(nameStyle);\n        }\n        return foundStyle;\n      }\n      if (drawName) {\n        nameStyle = createNameStyleFunction(defaultStyle[0], name);\n        return defaultStyle.concat(nameStyle);\n      }\n      return defaultStyle;\n    }\n  );\n}\n\n\n/**\n * @param {Array<module:ol/style/Style>|string|undefined} styleValue Style value.\n * @param {Array<module:ol/style/Style>} defaultStyle Default style.\n * @param {!Object<string, (Array<module:ol/style/Style>|string)>} sharedStyles\n * Shared styles.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction findStyle(styleValue, defaultStyle, sharedStyles) {\n  if (Array.isArray(styleValue)) {\n    return styleValue;\n  } else if (typeof styleValue === 'string') {\n    // KML files in the wild occasionally forget the leading `#` on styleUrls\n    // defined in the same document.  Add a leading `#` if it enables to find\n    // a style.\n    if (!(styleValue in sharedStyles) && ('#' + styleValue in sharedStyles)) {\n      styleValue = '#' + styleValue;\n    }\n    return findStyle(sharedStyles[styleValue], defaultStyle, sharedStyles);\n  } else {\n    return defaultStyle;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/color~Color|undefined} Color.\n */\nfunction readColor(node) {\n  var s = getAllTextContent(node, false);\n  // The KML specification states that colors should not include a leading `#`\n  // but we tolerate them.\n  var m = /^\\s*#?\\s*([0-9A-Fa-f]{8})\\s*$/.exec(s);\n  if (m) {\n    var hexColor = m[1];\n    return [\n      parseInt(hexColor.substr(6, 2), 16),\n      parseInt(hexColor.substr(4, 2), 16),\n      parseInt(hexColor.substr(2, 2), 16),\n      parseInt(hexColor.substr(0, 2), 16) / 255\n    ];\n\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {Array<number>|undefined} Flat coordinates.\n */\nexport function readFlatCoordinates(node) {\n  var s = getAllTextContent(node, false);\n  var flatCoordinates = [];\n  // The KML specification states that coordinate tuples should not include\n  // spaces, but we tolerate them.\n  var re =\n      /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)(?:\\s*,\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?))?\\s*/i;\n  var m;\n  while ((m = re.exec(s))) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = m[3] ? parseFloat(m[3]) : 0;\n    flatCoordinates.push(x, y, z);\n    s = s.substr(m[0].length);\n  }\n  if (s !== '') {\n    return undefined;\n  }\n  return flatCoordinates;\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {string} URI.\n */\nfunction readURI(node) {\n  var s = getAllTextContent(node, false).trim();\n  var baseURI = node.baseURI;\n  if (!baseURI || baseURI == 'about:blank') {\n    baseURI = window.location.href;\n  }\n  if (baseURI) {\n    var url = new URL(s, baseURI);\n    return url.href;\n  } else {\n    return s;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {module:ol/format/KML~Vec2} Vec2.\n */\nfunction readVec2(node) {\n  var xunits = node.getAttribute('xunits');\n  var yunits = node.getAttribute('yunits');\n  var origin;\n  if (xunits !== 'insetPixels') {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_LEFT;\n    } else {\n      origin = IconOrigin.TOP_LEFT;\n    }\n  } else {\n    if (yunits !== 'insetPixels') {\n      origin = IconOrigin.BOTTOM_RIGHT;\n    } else {\n      origin = IconOrigin.TOP_RIGHT;\n    }\n  }\n  return {\n    x: parseFloat(node.getAttribute('x')),\n    xunits: ICON_ANCHOR_UNITS_MAP[xunits],\n    y: parseFloat(node.getAttribute('y')),\n    yunits: ICON_ANCHOR_UNITS_MAP[yunits],\n    origin: origin\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Scale.\n */\nfunction readScale(node) {\n  return readDecimal(node);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_MAP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Pair': pairDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>|string|undefined} StyleMap.\n */\nfunction readStyleMapValue(node, objectStack) {\n  return pushParseAndPop(undefined,\n    STYLE_MAP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ICON_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeObjectPropertySetter(readIcon),\n    'heading': makeObjectPropertySetter(readDecimal),\n    'hotSpot': makeObjectPropertySetter(readVec2),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction iconStyleParser(node, objectStack) {\n  // FIXME refreshMode\n  // FIXME refreshInterval\n  // FIXME viewRefreshTime\n  // FIXME viewBoundScale\n  // FIXME viewFormat\n  // FIXME httpQuery\n  var object = pushParseAndPop(\n    {}, ICON_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var IconObject = 'Icon' in object ? object['Icon'] : {};\n  var drawIcon = (!('Icon' in object) || Object.keys(IconObject).length > 0);\n  var src;\n  var href = /** @type {string|undefined} */\n      (IconObject['href']);\n  if (href) {\n    src = href;\n  } else if (drawIcon) {\n    src = DEFAULT_IMAGE_STYLE_SRC;\n  }\n  var anchor, anchorXUnits, anchorYUnits;\n  var anchorOrigin = IconOrigin.BOTTOM_LEFT;\n  var hotSpot = /** @type {module:ol/format/KML~Vec2|undefined} */\n      (object['hotSpot']);\n  if (hotSpot) {\n    anchor = [hotSpot.x, hotSpot.y];\n    anchorXUnits = hotSpot.xunits;\n    anchorYUnits = hotSpot.yunits;\n    anchorOrigin = hotSpot.origin;\n  } else if (src === DEFAULT_IMAGE_STYLE_SRC) {\n    anchor = DEFAULT_IMAGE_STYLE_ANCHOR;\n    anchorXUnits = DEFAULT_IMAGE_STYLE_ANCHOR_X_UNITS;\n    anchorYUnits = DEFAULT_IMAGE_STYLE_ANCHOR_Y_UNITS;\n  } else if (/^http:\\/\\/maps\\.(?:google|gstatic)\\.com\\//.test(src)) {\n    anchor = [0.5, 0];\n    anchorXUnits = IconAnchorUnits.FRACTION;\n    anchorYUnits = IconAnchorUnits.FRACTION;\n  }\n\n  var offset;\n  var x = /** @type {number|undefined} */\n      (IconObject['x']);\n  var y = /** @type {number|undefined} */\n      (IconObject['y']);\n  if (x !== undefined && y !== undefined) {\n    offset = [x, y];\n  }\n\n  var size;\n  var w = /** @type {number|undefined} */\n      (IconObject['w']);\n  var h = /** @type {number|undefined} */\n      (IconObject['h']);\n  if (w !== undefined && h !== undefined) {\n    size = [w, h];\n  }\n\n  var rotation;\n  var heading = /** @type {number} */\n      (object['heading']);\n  if (heading !== undefined) {\n    rotation = toRadians(heading);\n  }\n\n  var scale = /** @type {number|undefined} */\n      (object['scale']);\n\n  if (drawIcon) {\n    if (src == DEFAULT_IMAGE_STYLE_SRC) {\n      size = DEFAULT_IMAGE_STYLE_SIZE;\n      if (scale === undefined) {\n        scale = DEFAULT_IMAGE_SCALE_MULTIPLIER;\n      }\n    }\n\n    var imageStyle = new Icon({\n      anchor: anchor,\n      anchorOrigin: anchorOrigin,\n      anchorXUnits: anchorXUnits,\n      anchorYUnits: anchorYUnits,\n      crossOrigin: 'anonymous', // FIXME should this be configurable?\n      offset: offset,\n      offsetOrigin: IconOrigin.BOTTOM_LEFT,\n      rotation: rotation,\n      scale: scale,\n      size: size,\n      src: src\n    });\n    styleObject['imageStyle'] = imageStyle;\n  } else {\n    // handle the case when we explicitly want to draw no icon.\n    styleObject['imageStyle'] = DEFAULT_NO_IMAGE_STYLE;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LABEL_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'scale': makeObjectPropertySetter(readScale)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction labelStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, LABEL_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var textStyle = new Text({\n    fill: new Fill({\n      color: /** @type {module:ol/color~Color} */\n          ('color' in object ? object['color'] : DEFAULT_COLOR)\n    }),\n    scale: /** @type {number|undefined} */\n        (object['scale'])\n  });\n  styleObject['textStyle'] = textStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LINE_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'width': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lineStyleParser(node, objectStack) {\n  // FIXME colorMode\n  // FIXME gx:outerColor\n  // FIXME gx:outerWidth\n  // FIXME gx:physicalWidth\n  // FIXME gx:labelVisibility\n  var object = pushParseAndPop(\n    {}, LINE_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var strokeStyle = new Stroke({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR),\n    width: /** @type {number} */ ('width' in object ? object['width'] : 1)\n  });\n  styleObject['strokeStyle'] = strokeStyle;\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar POLY_STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeObjectPropertySetter(readColor),\n    'fill': makeObjectPropertySetter(readBoolean),\n    'outline': makeObjectPropertySetter(readBoolean)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction polyStyleParser(node, objectStack) {\n  // FIXME colorMode\n  var object = pushParseAndPop(\n    {}, POLY_STYLE_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var styleObject = objectStack[objectStack.length - 1];\n  var fillStyle = new Fill({\n    color: /** @type {module:ol/color~Color} */\n        ('color' in object ? object['color'] : DEFAULT_COLOR)\n  });\n  styleObject['fillStyle'] = fillStyle;\n  var fill = /** @type {boolean|undefined} */ (object['fill']);\n  if (fill !== undefined) {\n    styleObject['fill'] = fill;\n  }\n  var outline = /** @type {boolean|undefined} */ (object['outline']);\n  if (outline !== undefined) {\n    styleObject['outline'] = outline;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FLAT_LINEAR_RING_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} LinearRing flat coordinates.\n */\nfunction readFlatLinearRing(node, objectStack) {\n  return pushParseAndPop(null,\n    FLAT_LINEAR_RING_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction gxCoordParser(node, objectStack) {\n  var gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var s = getAllTextContent(node, false);\n  var re =\n      /^\\s*([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s+([+\\-]?\\d+(?:\\.\\d*)?(?:e[+\\-]?\\d*)?)\\s*$/i;\n  var m = re.exec(s);\n  if (m) {\n    var x = parseFloat(m[1]);\n    var y = parseFloat(m[2]);\n    var z = parseFloat(m[3]);\n    flatCoordinates.push(x, y, z, 0);\n  } else {\n    flatCoordinates.push(0, 0, 0, 0);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GX_MULTITRACK_GEOMETRY_PARSERS = makeStructureNS(\n  GX_NAMESPACE_URIS, {\n    'Track': makeArrayPusher(readGxTrack)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/MultiLineString|undefined} MultiLineString.\n */\nfunction readGxMultiTrack(node, objectStack) {\n  var lineStrings = pushParseAndPop([],\n    GX_MULTITRACK_GEOMETRY_PARSERS, node, objectStack);\n  if (!lineStrings) {\n    return undefined;\n  }\n  return new MultiLineString(lineStrings);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GX_TRACK_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'when': whenParser\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'coord': gxCoordParser\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readGxTrack(node, objectStack) {\n  var gxTrackObject = pushParseAndPop(\n    /** @type {module:ol/format/KML~GxTrackObject} */ ({\n      flatCoordinates: [],\n      whens: []\n    }), GX_TRACK_PARSERS, node, objectStack);\n  if (!gxTrackObject) {\n    return undefined;\n  }\n  var flatCoordinates = gxTrackObject.flatCoordinates;\n  var whens = gxTrackObject.whens;\n  for (var i = 0, ii = Math.min(flatCoordinates.length, whens.length); i < ii; ++i) {\n    flatCoordinates[4 * i + 3] = whens[i];\n  }\n  return new LineString(flatCoordinates, GeometryLayout.XYZM);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ICON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeObjectPropertySetter(readURI)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeObjectPropertySetter(readDecimal),\n      'y': makeObjectPropertySetter(readDecimal),\n      'w': makeObjectPropertySetter(readDecimal),\n      'h': makeObjectPropertySetter(readDecimal)\n    }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Icon object.\n */\nfunction readIcon(node, objectStack) {\n  var iconObject = pushParseAndPop(\n    {}, ICON_PARSERS, node, objectStack);\n  if (iconObject) {\n    return iconObject;\n  } else {\n    return null;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar GEOMETRY_FLAT_COORDINATES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'coordinates': makeReplacer(readFlatCoordinates)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<number>} Flat coordinates.\n */\nfunction readFlatCoordinatesFromNode(node, objectStack) {\n  return pushParseAndPop(null,\n    GEOMETRY_FLAT_COORDINATES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXTRUDE_AND_ALTITUDE_MODE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeObjectPropertySetter(readBoolean),\n    'tessellate': makeObjectPropertySetter(readBoolean),\n    'altitudeMode': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/LineString|undefined} LineString.\n */\nfunction readLineString(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var lineString = new LineString(flatCoordinates, GeometryLayout.XYZ);\n    lineString.setProperties(properties);\n    return lineString;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readLinearRing(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, [flatCoordinates.length]);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar MULTI_GEOMETRY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeArrayPusher(readLineString),\n    'LinearRing': makeArrayPusher(readLinearRing),\n    'MultiGeometry': makeArrayPusher(readMultiGeometry),\n    'Point': makeArrayPusher(readPoint),\n    'Polygon': makeArrayPusher(readPolygon)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Geometry} Geometry.\n */\nfunction readMultiGeometry(node, objectStack) {\n  var geometries = pushParseAndPop([],\n    MULTI_GEOMETRY_PARSERS, node, objectStack);\n  if (!geometries) {\n    return null;\n  }\n  if (geometries.length === 0) {\n    return new GeometryCollection(geometries);\n  }\n  /** @type {module:ol/geom/Geometry} */\n  var multiGeometry;\n  var homogeneous = true;\n  var type = geometries[0].getType();\n  var geometry;\n  for (var i = 1, ii = geometries.length; i < ii; ++i) {\n    geometry = geometries[i];\n    if (geometry.getType() != type) {\n      homogeneous = false;\n      break;\n    }\n  }\n  if (homogeneous) {\n    var layout;\n    var flatCoordinates;\n    if (type == GeometryType.POINT) {\n      var point = geometries[0];\n      layout = point.getLayout();\n      flatCoordinates = point.getFlatCoordinates();\n      for (var i$1 = 1, ii$1 = geometries.length; i$1 < ii$1; ++i$1) {\n        geometry = geometries[i$1];\n        extend(flatCoordinates, geometry.getFlatCoordinates());\n      }\n      multiGeometry = new MultiPoint(flatCoordinates, layout);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.LINE_STRING) {\n      multiGeometry = new MultiLineString(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.POLYGON) {\n      multiGeometry = new MultiPolygon(geometries);\n      setCommonGeometryProperties(multiGeometry, geometries);\n    } else if (type == GeometryType.GEOMETRY_COLLECTION) {\n      multiGeometry = new GeometryCollection(geometries);\n    } else {\n      assert(false, 37); // Unknown geometry type found\n    }\n  } else {\n    multiGeometry = new GeometryCollection(geometries);\n  }\n  return (\n    /** @type {module:ol/geom/Geometry} */ (multiGeometry)\n  );\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Point|undefined} Point.\n */\nfunction readPoint(node, objectStack) {\n  var properties = pushParseAndPop({},\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatCoordinates =\n      readFlatCoordinatesFromNode(node, objectStack);\n  if (flatCoordinates) {\n    var point = new Point(flatCoordinates, GeometryLayout.XYZ);\n    point.setProperties(properties);\n    return point;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FLAT_LINEAR_RINGS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'innerBoundaryIs': innerBoundaryIsParser,\n    'outerBoundaryIs': outerBoundaryIsParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/geom/Polygon|undefined} Polygon.\n */\nfunction readPolygon(node, objectStack) {\n  var properties = pushParseAndPop(/** @type {Object<string,*>} */ ({}),\n    EXTRUDE_AND_ALTITUDE_MODE_PARSERS, node,\n    objectStack);\n  var flatLinearRings = pushParseAndPop([null],\n    FLAT_LINEAR_RINGS_PARSERS, node, objectStack);\n  if (flatLinearRings && flatLinearRings[0]) {\n    var flatCoordinates = flatLinearRings[0];\n    var ends = [flatCoordinates.length];\n    for (var i = 1, ii = flatLinearRings.length; i < ii; ++i) {\n      extend(flatCoordinates, flatLinearRings[i]);\n      ends.push(flatCoordinates.length);\n    }\n    var polygon = new Polygon(flatCoordinates, GeometryLayout.XYZ, ends);\n    polygon.setProperties(properties);\n    return polygon;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': iconStyleParser,\n    'LabelStyle': labelStyleParser,\n    'LineStyle': lineStyleParser,\n    'PolyStyle': polyStyleParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<module:ol/style/Style>} Style.\n */\nfunction readStyle(node, objectStack) {\n  var styleObject = pushParseAndPop(\n    {}, STYLE_PARSERS, node, objectStack);\n  if (!styleObject) {\n    return null;\n  }\n  var fillStyle = /** @type {module:ol/style/Fill} */\n      ('fillStyle' in styleObject ?\n        styleObject['fillStyle'] : DEFAULT_FILL_STYLE);\n  var fill = /** @type {boolean|undefined} */ (styleObject['fill']);\n  if (fill !== undefined && !fill) {\n    fillStyle = null;\n  }\n  var imageStyle = /** @type {module:ol/style/Image} */\n      ('imageStyle' in styleObject ?\n        styleObject['imageStyle'] : DEFAULT_IMAGE_STYLE);\n  if (imageStyle == DEFAULT_NO_IMAGE_STYLE) {\n    imageStyle = undefined;\n  }\n  var textStyle = /** @type {module:ol/style/Text} */\n      ('textStyle' in styleObject ?\n        styleObject['textStyle'] : DEFAULT_TEXT_STYLE);\n  var strokeStyle = /** @type {module:ol/style/Stroke} */\n      ('strokeStyle' in styleObject ?\n        styleObject['strokeStyle'] : DEFAULT_STROKE_STYLE);\n  var outline = /** @type {boolean|undefined} */\n      (styleObject['outline']);\n  if (outline !== undefined && !outline) {\n    strokeStyle = null;\n  }\n  return [new Style({\n    fill: fillStyle,\n    image: imageStyle,\n    stroke: strokeStyle,\n    text: textStyle,\n    zIndex: undefined // FIXME\n  })];\n}\n\n\n/**\n * Reads an array of geometries and creates arrays for common geometry\n * properties. Then sets them to the multi geometry.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon} multiGeometry A multi-geometry.\n * @param {Array<module:ol/geom/Geometry>} geometries List of geometries.\n */\nfunction setCommonGeometryProperties(multiGeometry, geometries) {\n  var ii = geometries.length;\n  var extrudes = new Array(geometries.length);\n  var tessellates = new Array(geometries.length);\n  var altitudeModes = new Array(geometries.length);\n  var hasExtrude, hasTessellate, hasAltitudeMode;\n  hasExtrude = hasTessellate = hasAltitudeMode = false;\n  for (var i = 0; i < ii; ++i) {\n    var geometry = geometries[i];\n    extrudes[i] = geometry.get('extrude');\n    tessellates[i] = geometry.get('tessellate');\n    altitudeModes[i] = geometry.get('altitudeMode');\n    hasExtrude = hasExtrude || extrudes[i] !== undefined;\n    hasTessellate = hasTessellate || tessellates[i] !== undefined;\n    hasAltitudeMode = hasAltitudeMode || altitudeModes[i];\n  }\n  if (hasExtrude) {\n    multiGeometry.set('extrude', extrudes);\n  }\n  if (hasTessellate) {\n    multiGeometry.set('tessellate', tessellates);\n  }\n  if (hasAltitudeMode) {\n    multiGeometry.set('altitudeMode', altitudeModes);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'displayName': makeObjectPropertySetter(readString),\n    'value': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction dataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  parseNode(DATA_PARSERS, node, objectStack);\n  var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  if (name !== null) {\n    featureObject[name] = featureObject.value;\n  } else if (featureObject.displayName !== null) {\n    featureObject[featureObject.displayName] = featureObject.value;\n  }\n  delete featureObject['value'];\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXTENDED_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': dataParser,\n    'SchemaData': schemaDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction extendedDataParser(node, objectStack) {\n  parseNode(EXTENDED_DATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction regionParser(node, objectStack) {\n  parseNode(REGION_PARSERS, node, objectStack);\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PAIR_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertySetter(readStyle),\n    'key': makeObjectPropertySetter(readString),\n    'styleUrl': makeObjectPropertySetter(readURI)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction pairDataParser(node, objectStack) {\n  var pairObject = pushParseAndPop(\n    {}, PAIR_PARSERS, node, objectStack);\n  if (!pairObject) {\n    return;\n  }\n  var key = /** @type {string|undefined} */\n      (pairObject['key']);\n  if (key && key == 'normal') {\n    var styleUrl = /** @type {string|undefined} */\n        (pairObject['styleUrl']);\n    if (styleUrl) {\n      objectStack[objectStack.length - 1] = styleUrl;\n    }\n    var Style = /** @type {module:ol/style/Style} */\n        (pairObject['Style']);\n    if (Style) {\n      objectStack[objectStack.length - 1] = Style;\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction placemarkStyleMapParser(node, objectStack) {\n  var styleMapValue = readStyleMapValue(node, objectStack);\n  if (!styleMapValue) {\n    return;\n  }\n  var placemarkObject = objectStack[objectStack.length - 1];\n  if (Array.isArray(styleMapValue)) {\n    placemarkObject['Style'] = styleMapValue;\n  } else if (typeof styleMapValue === 'string') {\n    placemarkObject['styleUrl'] = styleMapValue;\n  } else {\n    assert(false, 38); // `styleMapValue` has an unknown type\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SCHEMA_DATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'SimpleData': simpleDataParser\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction schemaDataParser(node, objectStack) {\n  parseNode(SCHEMA_DATA_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction simpleDataParser(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (name !== null) {\n    var data = readString(node);\n    var featureObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    featureObject[name] = data;\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAT_LON_ALT_BOX_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'altitudeMode': makeObjectPropertySetter(readString),\n    'minAltitude': makeObjectPropertySetter(readDecimal),\n    'maxAltitude': makeObjectPropertySetter(readDecimal),\n    'north': makeObjectPropertySetter(readDecimal),\n    'south': makeObjectPropertySetter(readDecimal),\n    'east': makeObjectPropertySetter(readDecimal),\n    'west': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction latLonAltBoxParser(node, objectStack) {\n  var object = pushParseAndPop({}, LAT_LON_ALT_BOX_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var regionObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var extent = [\n    parseFloat(object['west']),\n    parseFloat(object['south']),\n    parseFloat(object['east']),\n    parseFloat(object['north'])\n  ];\n  regionObject['extent'] = extent;\n  regionObject['altitudeMode'] = object['altitudeMode'];\n  regionObject['minAltitude'] = parseFloat(object['minAltitude']);\n  regionObject['maxAltitude'] = parseFloat(object['maxAltitude']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'minLodPixels': makeObjectPropertySetter(readDecimal),\n    'maxLodPixels': makeObjectPropertySetter(readDecimal),\n    'minFadeExtent': makeObjectPropertySetter(readDecimal),\n    'maxFadeExtent': makeObjectPropertySetter(readDecimal)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction lodParser(node, objectStack) {\n  var object = pushParseAndPop({}, LOD_PARSERS, node, objectStack);\n  if (!object) {\n    return;\n  }\n  var lodObject = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  lodObject['minLodPixels'] = parseFloat(object['minLodPixels']);\n  lodObject['maxLodPixels'] = parseFloat(object['maxLodPixels']);\n  lodObject['minFadeExtent'] = parseFloat(object['minFadeExtent']);\n  lodObject['maxFadeExtent'] = parseFloat(object['maxFadeExtent']);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar INNER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction innerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    INNER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings.push(flatLinearRing);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OUTER_BOUNDARY_IS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeReplacer(readFlatLinearRing)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction outerBoundaryIsParser(node, objectStack) {\n  /** @type {Array<number>|undefined} */\n  var flatLinearRing = pushParseAndPop(undefined,\n    OUTER_BOUNDARY_IS_PARSERS, node, objectStack);\n  if (flatLinearRing) {\n    var flatLinearRings = /** @type {Array<Array<number>>} */\n        (objectStack[objectStack.length - 1]);\n    flatLinearRings[0] = flatLinearRing;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction linkParser(node, objectStack) {\n  parseNode(LINK_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction whenParser(node, objectStack) {\n  var gxTrackObject = /** @type {module:ol/format/KML~GxTrackObject} */\n      (objectStack[objectStack.length - 1]);\n  var whens = gxTrackObject.whens;\n  var s = getAllTextContent(node, false);\n  var when = Date.parse(s);\n  whens.push(isNaN(when) ? 0 : when);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the color to.\n * @param {module:ol/color~Color|string} color Color.\n */\nfunction writeColorTextNode(node, color) {\n  var rgba = asArray(color);\n  var opacity = (rgba.length == 4) ? rgba[3] : 1;\n  var abgr = [opacity * 255, rgba[2], rgba[1], rgba[0]];\n  for (var i = 0; i < 4; ++i) {\n    var hex = parseInt(abgr[i], 10).toString(16);\n    abgr[i] = (hex.length == 1) ? '0' + hex : hex;\n  }\n  writeStringTextNode(node, abgr.join(''));\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the coordinates to.\n * @param {Array<number>} coordinates Coordinates.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeCoordinatesTextNode(node, coordinates, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n\n  var layout = context['layout'];\n  var stride = context['stride'];\n\n  var dimension;\n  if (layout == GeometryLayout.XY ||\n      layout == GeometryLayout.XYM) {\n    dimension = 2;\n  } else if (layout == GeometryLayout.XYZ ||\n      layout == GeometryLayout.XYZM) {\n    dimension = 3;\n  } else {\n    assert(false, 34); // Invalid geometry layout\n  }\n\n  var ii = coordinates.length;\n  var text = '';\n  if (ii > 0) {\n    text += coordinates[0];\n    for (var d = 1; d < dimension; ++d) {\n      text += ',' + coordinates[d];\n    }\n    for (var i = stride; i < ii; i += stride) {\n      text += ' ' + coordinates[i];\n      for (var d$1 = 1; d$1 < dimension; ++d$1) {\n        text += ',' + coordinates[i + d$1];\n      }\n    }\n  }\n  writeStringTextNode(node, text);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar EXTENDEDDATA_NODE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Data': makeChildAppender(writeDataNode),\n    'value': makeChildAppender(writeDataNodeValue),\n    'displayName': makeChildAppender(writeDataNodeName)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {{name: *, value: *}} pair Name value pair.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeDataNode(node, pair, objectStack) {\n  node.setAttribute('name', pair.name);\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var value = pair.value;\n\n  if (typeof value == 'object') {\n    if (value !== null && value.displayName) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.displayName], objectStack, ['displayName']);\n    }\n\n    if (value !== null && value.value) {\n      pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n        OBJECT_PROPERTY_NODE_FACTORY, [value.value], objectStack, ['value']);\n    }\n  } else {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      OBJECT_PROPERTY_NODE_FACTORY, [value], objectStack, ['value']);\n  }\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the name to.\n * @param {string} name DisplayName.\n */\nfunction writeDataNodeName(node, name) {\n  writeCDATASection(node, name);\n}\n\n\n/**\n * @param {Node} node Node to append a CDATA Section with the value to.\n * @param {string} value Value.\n */\nfunction writeDataNodeValue(node, value) {\n  writeStringTextNode(node, value);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar DOCUMENT_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Placemark': makeChildAppender(writePlacemark)\n  });\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar DOCUMENT_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  var parentNode = objectStack[objectStack.length - 1].node;\n  return createElementNS(parentNode.namespaceURI, 'Placemark');\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<module:ol/Feature>} features Features.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writeDocument(node, features, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, DOCUMENT_SERIALIZERS,\n    DOCUMENT_NODE_FACTORY, features, objectStack, undefined,\n    this);\n}\n\n\n/**\n * A factory for creating Data nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar DATA_NODE_FACTORY = makeSimpleNodeFactory('Data');\n\n\n/**\n * @param {Node} node Node.\n * @param {{names: Array<string>, values: (Array<*>)}} namesAndValues Names and values.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeExtendedData(node, namesAndValues, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var names = namesAndValues.names;\n  var values = namesAndValues.values;\n  var length = names.length;\n\n  for (var i = 0; i < length; i++) {\n    pushSerializeAndPop(context, EXTENDEDDATA_NODE_SERIALIZERS,\n      DATA_NODE_FACTORY, [{name: names[i], value: values[i]}], objectStack);\n  }\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'href'\n  ],\n  makeStructureNS(GX_NAMESPACE_URIS, [\n    'x', 'y', 'w', 'h'\n  ]));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar ICON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'href': makeChildAppender(writeStringTextNode)\n  }, makeStructureNS(\n    GX_NAMESPACE_URIS, {\n      'x': makeChildAppender(writeDecimalTextNode),\n      'y': makeChildAppender(writeDecimalTextNode),\n      'w': makeChildAppender(writeDecimalTextNode),\n      'h': makeChildAppender(writeDecimalTextNode)\n    }));\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GX_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  return createElementNS(GX_NAMESPACE_URIS[0],\n    'gx:' + opt_nodeName);\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} icon Icon object.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIcon(node, icon, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context,\n    ICON_SERIALIZERS, OBJECT_PROPERTY_NODE_FACTORY,\n    values, objectStack, orderedKeys);\n  orderedKeys =\n      ICON_SEQUENCE[GX_NAMESPACE_URIS[0]];\n  values = makeSequence(icon, orderedKeys);\n  pushSerializeAndPop(context, ICON_SERIALIZERS,\n    GX_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar ICON_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'scale', 'heading', 'Icon', 'hotSpot'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar ICON_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Icon': makeChildAppender(writeIcon),\n    'heading': makeChildAppender(writeDecimalTextNode),\n    'hotSpot': makeChildAppender(writeVec2),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Icon} style Icon style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeIconStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var src = style.getSrc();\n  var size = style.getSize();\n  var iconImageSize = style.getImageSize();\n  var iconProperties = {\n    'href': src\n  };\n\n  if (size) {\n    iconProperties['w'] = size[0];\n    iconProperties['h'] = size[1];\n    var anchor = style.getAnchor(); // top-left\n    var origin = style.getOrigin(); // top-left\n\n    if (origin && iconImageSize && origin[0] !== 0 && origin[1] !== size[1]) {\n      iconProperties['x'] = origin[0];\n      iconProperties['y'] = iconImageSize[1] - (origin[1] + size[1]);\n    }\n\n    if (anchor && (anchor[0] !== size[0] / 2 || anchor[1] !== size[1] / 2)) {\n      var /** @type {module:ol/format/KML~Vec2} */ hotSpot = {\n        x: anchor[0],\n        xunits: IconAnchorUnits.PIXELS,\n        y: size[1] - anchor[1],\n        yunits: IconAnchorUnits.PIXELS\n      };\n      properties['hotSpot'] = hotSpot;\n    }\n  }\n\n  properties['Icon'] = iconProperties;\n\n  var scale = style.getScale();\n  if (scale !== 1) {\n    properties['scale'] = scale;\n  }\n\n  var rotation = style.getRotation();\n  if (rotation !== 0) {\n    properties['heading'] = rotation; // 0-360\n  }\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = ICON_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, ICON_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LABEL_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'scale'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LABEL_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'scale': makeChildAppender(writeScaleTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Text} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLabelStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fill = style.getFill();\n  if (fill) {\n    properties['color'] = fill.getColor();\n  }\n  var scale = style.getScale();\n  if (scale && scale !== 1) {\n    properties['scale'] = scale;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys =\n      LABEL_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LABEL_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar LINE_STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'color', 'width'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar LINE_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode),\n    'width': makeChildAppender(writeDecimalTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Stroke} style style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeLineStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {\n    'color': style.getColor(),\n    'width': style.getWidth()\n  };\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = LINE_STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, LINE_STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar GEOMETRY_TYPE_TO_NODENAME = {\n  'Point': 'Point',\n  'LineString': 'LineString',\n  'LinearRing': 'LinearRing',\n  'Polygon': 'Polygon',\n  'MultiPoint': 'MultiGeometry',\n  'MultiLineString': 'MultiGeometry',\n  'MultiPolygon': 'MultiGeometry',\n  'GeometryCollection': 'MultiGeometry'\n};\n\n\n/**\n * @const\n * @param {*} value Value.\n * @param {Array<*>} objectStack Object stack.\n * @param {string=} opt_nodeName Node name.\n * @return {Node|undefined} Node.\n */\nvar GEOMETRY_NODE_FACTORY = function(value, objectStack, opt_nodeName) {\n  if (value) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS(parentNode.namespaceURI,\n      GEOMETRY_TYPE_TO_NODENAME[/** @type {module:ol/geom/Geometry} */ (value).getType()]);\n  }\n};\n\n\n/**\n * A factory for creating Point nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POINT_NODE_FACTORY = makeSimpleNodeFactory('Point');\n\n\n/**\n * A factory for creating LineString nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINE_STRING_NODE_FACTORY = makeSimpleNodeFactory('LineString');\n\n\n/**\n * A factory for creating LinearRing nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar LINEAR_RING_NODE_FACTORY = makeSimpleNodeFactory('LinearRing');\n\n\n/**\n * A factory for creating Polygon nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar POLYGON_NODE_FACTORY = makeSimpleNodeFactory('Polygon');\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar MULTI_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LineString': makeChildAppender(\n      writePrimitiveGeometry),\n    'Point': makeChildAppender(\n      writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'GeometryCollection': makeChildAppender(\n      writeMultiGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Geometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeMultiGeometry(node, geometry, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var context = {node: node};\n  var type = geometry.getType();\n  /** @type {Array<module:ol/geom/Geometry>} */\n  var geometries;\n  /** @type {function(*, Array<*>, string=): (Node|undefined)} */\n  var factory;\n  if (type == GeometryType.GEOMETRY_COLLECTION) {\n    geometries = /** @type {module:ol/geom/GeometryCollection} */ (geometry).getGeometries();\n    factory = GEOMETRY_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POINT) {\n    geometries = /** @type {module:ol/geom/MultiPoint} */ (geometry).getPoints();\n    factory = POINT_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_LINE_STRING) {\n    geometries =\n        (/** @type {module:ol/geom/MultiLineString} */ (geometry)).getLineStrings();\n    factory = LINE_STRING_NODE_FACTORY;\n  } else if (type == GeometryType.MULTI_POLYGON) {\n    geometries =\n        (/** @type {module:ol/geom/MultiPolygon} */ (geometry)).getPolygons();\n    factory = POLYGON_NODE_FACTORY;\n  } else {\n    assert(false, 39); // Unknown geometry type\n  }\n  pushSerializeAndPop(context,\n    MULTI_GEOMETRY_SERIALIZERS, factory,\n    geometries, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar BOUNDARY_IS_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LinearRing': makeChildAppender(\n      writePrimitiveGeometry)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/LinearRing} linearRing Linear ring.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeBoundaryIs(node, linearRing, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context,\n    BOUNDARY_IS_SERIALIZERS,\n    LINEAR_RING_NODE_FACTORY, [linearRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar PLACEMARK_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ExtendedData': makeChildAppender(writeExtendedData),\n    'MultiGeometry': makeChildAppender(writeMultiGeometry),\n    'LineString': makeChildAppender(writePrimitiveGeometry),\n    'LinearRing': makeChildAppender(writePrimitiveGeometry),\n    'Point': makeChildAppender(writePrimitiveGeometry),\n    'Polygon': makeChildAppender(writePolygon),\n    'Style': makeChildAppender(writeStyle),\n    'address': makeChildAppender(writeStringTextNode),\n    'description': makeChildAppender(writeStringTextNode),\n    'name': makeChildAppender(writeStringTextNode),\n    'open': makeChildAppender(writeBooleanTextNode),\n    'phoneNumber': makeChildAppender(writeStringTextNode),\n    'styleUrl': makeChildAppender(writeStringTextNode),\n    'visibility': makeChildAppender(writeBooleanTextNode)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PLACEMARK_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'name', 'open', 'visibility', 'address', 'phoneNumber', 'description',\n    'styleUrl', 'Style'\n  ]);\n\n\n/**\n * A factory for creating ExtendedData nodes.\n * @const\n * @type {function(*, Array<*>): (Node|undefined)}\n */\nvar EXTENDEDDATA_NODE_FACTORY = makeSimpleNodeFactory('ExtendedData');\n\n\n/**\n * FIXME currently we do serialize arbitrary/custom feature properties\n * (ExtendedData).\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Object stack.\n * @this {module:ol/format/KML}\n */\nfunction writePlacemark(node, feature, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n\n  // set id\n  if (feature.getId()) {\n    node.setAttribute('id', feature.getId());\n  }\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = feature.getProperties();\n\n  // don't export these to ExtendedData\n  var filter = {'address': 1, 'description': 1, 'name': 1, 'open': 1,\n    'phoneNumber': 1, 'styleUrl': 1, 'visibility': 1};\n  filter[feature.getGeometryName()] = 1;\n  var keys = Object.keys(properties || {}).sort().filter(function(v) {\n    return !filter[v];\n  });\n\n  if (keys.length > 0) {\n    var sequence = makeSequence(properties, keys);\n    var namesAndValues = {names: keys, values: sequence};\n    pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n      EXTENDEDDATA_NODE_FACTORY, [namesAndValues], objectStack);\n  }\n\n  var styleFunction = feature.getStyleFunction();\n  if (styleFunction) {\n    // FIXME the styles returned by the style function are supposed to be\n    // resolution-independent here\n    var styles = styleFunction(feature, 0);\n    if (styles) {\n      var style = Array.isArray(styles) ? styles[0] : styles;\n      if (this.writeStyles_) {\n        properties['Style'] = style;\n      }\n      var textStyle = style.getText();\n      if (textStyle) {\n        properties['name'] = textStyle.getText();\n      }\n    }\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PLACEMARK_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n\n  // serialize geometry\n  var options = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[0]);\n  var geometry = feature.getGeometry();\n  if (geometry) {\n    geometry = transformWithOptions(geometry, true, options);\n  }\n  pushSerializeAndPop(context, PLACEMARK_SERIALIZERS,\n    GEOMETRY_NODE_FACTORY, [geometry], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar PRIMITIVE_GEOMETRY_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'extrude', 'tessellate', 'altitudeMode', 'coordinates'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar PRIMITIVE_GEOMETRY_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'extrude': makeChildAppender(writeBooleanTextNode),\n    'tessellate': makeChildAppender(writeBooleanTextNode),\n    'altitudeMode': makeChildAppender(writeStringTextNode),\n    'coordinates': makeChildAppender(writeCoordinatesTextNode)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/SimpleGeometry} geometry Geometry.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePrimitiveGeometry(node, geometry, objectStack) {\n  var flatCoordinates = geometry.getFlatCoordinates();\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  context['layout'] = geometry.getLayout();\n  context['stride'] = geometry.getStride();\n\n  // serialize properties (properties unknown to KML are not serialized)\n  var properties = geometry.getProperties();\n  properties.coordinates = flatCoordinates;\n\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = PRIMITIVE_GEOMETRY_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, PRIMITIVE_GEOMETRY_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar POLYGON_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'outerBoundaryIs': makeChildAppender(\n      writeBoundaryIs),\n    'innerBoundaryIs': makeChildAppender(\n      writeBoundaryIs)\n  });\n\n\n/**\n * A factory for creating innerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar INNER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('innerBoundaryIs');\n\n\n/**\n * A factory for creating outerBoundaryIs nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar OUTER_BOUNDARY_NODE_FACTORY = makeSimpleNodeFactory('outerBoundaryIs');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/geom/Polygon} polygon Polygon.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolygon(node, polygon, objectStack) {\n  var linearRings = polygon.getLinearRings();\n  var outerRing = linearRings.shift();\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  // inner rings\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    INNER_BOUNDARY_NODE_FACTORY,\n    linearRings, objectStack);\n  // outer ring\n  pushSerializeAndPop(context,\n    POLYGON_SERIALIZERS,\n    OUTER_BOUNDARY_NODE_FACTORY,\n    [outerRing], objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar POLY_STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'color': makeChildAppender(writeColorTextNode)\n  });\n\n\n/**\n * A factory for creating coordinates nodes.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nvar COLOR_NODE_FACTORY = makeSimpleNodeFactory('color');\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Fill} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writePolyStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  pushSerializeAndPop(context, POLY_STYLE_SERIALIZERS,\n    COLOR_NODE_FACTORY, [style.getColor()], objectStack);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the scale to.\n * @param {number|undefined} scale Scale.\n */\nfunction writeScaleTextNode(node, scale) {\n  // the Math is to remove any excess decimals created by float arithmetic\n  writeDecimalTextNode(node,\n    Math.round(scale * 1e6) / 1e6);\n}\n\n\n/**\n * @const\n * @type {Object<string, Array<string>>}\n */\nvar STYLE_SEQUENCE = makeStructureNS(\n  NAMESPACE_URIS, [\n    'IconStyle', 'LabelStyle', 'LineStyle', 'PolyStyle'\n  ]);\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar STYLE_SERIALIZERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'IconStyle': makeChildAppender(writeIconStyle),\n    'LabelStyle': makeChildAppender(writeLabelStyle),\n    'LineStyle': makeChildAppender(writeLineStyle),\n    'PolyStyle': makeChildAppender(writePolyStyle)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/style/Style} style Style.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction writeStyle(node, style, objectStack) {\n  var /** @type {module:ol/xml~NodeStackItem} */ context = {node: node};\n  var properties = {};\n  var fillStyle = style.getFill();\n  var strokeStyle = style.getStroke();\n  var imageStyle = style.getImage();\n  var textStyle = style.getText();\n  if (imageStyle instanceof Icon) {\n    properties['IconStyle'] = imageStyle;\n  }\n  if (textStyle) {\n    properties['LabelStyle'] = textStyle;\n  }\n  if (strokeStyle) {\n    properties['LineStyle'] = strokeStyle;\n  }\n  if (fillStyle) {\n    properties['PolyStyle'] = fillStyle;\n  }\n  var parentNode = objectStack[objectStack.length - 1].node;\n  var orderedKeys = STYLE_SEQUENCE[parentNode.namespaceURI];\n  var values = makeSequence(properties, orderedKeys);\n  pushSerializeAndPop(context, STYLE_SERIALIZERS,\n    OBJECT_PROPERTY_NODE_FACTORY, values, objectStack, orderedKeys);\n}\n\n\n/**\n * @param {Node} node Node to append a TextNode with the Vec2 to.\n * @param {module:ol/format/KML~Vec2} vec2 Vec2.\n */\nfunction writeVec2(node, vec2) {\n  node.setAttribute('x', vec2.x);\n  node.setAttribute('y', vec2.y);\n  node.setAttribute('xunits', vec2.xunits);\n  node.setAttribute('yunits', vec2.yunits);\n}\n\n\nexport default KML;\n\n//# sourceMappingURL=KML.js.map","/**\n * @module ol/format/IGC\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * IGC altitude/z. One of 'barometric', 'gps', 'none'.\n * @enum {string}\n */\nvar IGCZ = {\n  BAROMETRIC: 'barometric',\n  GPS: 'gps',\n  NONE: 'none'\n};\n\n/**\n * @const\n * @type {RegExp}\n */\nvar B_RECORD_RE =\n    /^B(\\d{2})(\\d{2})(\\d{2})(\\d{2})(\\d{5})([NS])(\\d{3})(\\d{5})([EW])([AV])(\\d{5})(\\d{5})/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar H_RECORD_RE = /^H.([A-Z]{3}).*?:(.*)/;\n\n\n/**\n * @const\n * @type {RegExp}\n */\nvar HFDTE_RECORD_RE = /^HFDTE(\\d{2})(\\d{2})(\\d{2})/;\n\n\n/**\n * A regular expression matching the newline characters `\\r\\n`, `\\r` and `\\n`.\n *\n * @const\n * @type {RegExp}\n */\nvar NEWLINE_RE = /\\r\\n|\\r|\\n/;\n\n\n/**\n * @typedef {Object} Options\n * @property {IGCZ|string} [altitudeMode='none'] Altitude mode. Possible\n * values are `'barometric'`, `'gps'`, and `'none'`.\n */\n\n\n/**\n * @classdesc\n * Feature format for `*.igc` flight recording files.\n *\n * As IGC sources contain a single feature,\n * {@link module:ol/format/IGC~IGC#readFeatures} will return the feature in an\n * array\n *\n * @api\n */\nvar IGC = (function (TextFeature) {\n  function IGC(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {IGCZ}\n     */\n    this.altitudeMode_ = options.altitudeMode ? options.altitudeMode : IGCZ.NONE;\n  }\n\n  if ( TextFeature ) IGC.__proto__ = TextFeature;\n  IGC.prototype = Object.create( TextFeature && TextFeature.prototype );\n  IGC.prototype.constructor = IGC;\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var altitudeMode = this.altitudeMode_;\n    var lines = text.split(NEWLINE_RE);\n    /** @type {Object<string, string>} */\n    var properties = {};\n    var flatCoordinates = [];\n    var year = 2000;\n    var month = 0;\n    var day = 1;\n    var lastDateTime = -1;\n    var i, ii;\n    for (i = 0, ii = lines.length; i < ii; ++i) {\n      var line = lines[i];\n      var m = (void 0);\n      if (line.charAt(0) == 'B') {\n        m = B_RECORD_RE.exec(line);\n        if (m) {\n          var hour = parseInt(m[1], 10);\n          var minute = parseInt(m[2], 10);\n          var second = parseInt(m[3], 10);\n          var y = parseInt(m[4], 10) + parseInt(m[5], 10) / 60000;\n          if (m[6] == 'S') {\n            y = -y;\n          }\n          var x = parseInt(m[7], 10) + parseInt(m[8], 10) / 60000;\n          if (m[9] == 'W') {\n            x = -x;\n          }\n          flatCoordinates.push(x, y);\n          if (altitudeMode != IGCZ.NONE) {\n            var z = (void 0);\n            if (altitudeMode == IGCZ.GPS) {\n              z = parseInt(m[11], 10);\n            } else if (altitudeMode == IGCZ.BAROMETRIC) {\n              z = parseInt(m[12], 10);\n            } else {\n              z = 0;\n            }\n            flatCoordinates.push(z);\n          }\n          var dateTime = Date.UTC(year, month, day, hour, minute, second);\n          // Detect UTC midnight wrap around.\n          if (dateTime < lastDateTime) {\n            dateTime = Date.UTC(year, month, day + 1, hour, minute, second);\n          }\n          flatCoordinates.push(dateTime / 1000);\n          lastDateTime = dateTime;\n        }\n      } else if (line.charAt(0) == 'H') {\n        m = HFDTE_RECORD_RE.exec(line);\n        if (m) {\n          day = parseInt(m[1], 10);\n          month = parseInt(m[2], 10) - 1;\n          year = 2000 + parseInt(m[3], 10);\n        } else {\n          m = H_RECORD_RE.exec(line);\n          if (m) {\n            properties[m[1]] = m[2].trim();\n          }\n        }\n      }\n    }\n    if (flatCoordinates.length === 0) {\n      return null;\n    }\n    var layout = altitudeMode == IGCZ.NONE ? GeometryLayout.XYM : GeometryLayout.XYZM;\n    var lineString = new LineString(flatCoordinates, layout);\n    var feature = new Feature(transformWithOptions(lineString, false, opt_options));\n    feature.setProperties(properties);\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  IGC.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    if (feature) {\n      return [feature];\n    } else {\n      return [];\n    }\n  };\n\n  return IGC;\n}(TextFeature));\n\nexport default IGC;\n\n//# sourceMappingURL=IGC.js.map","/**\n * @module ol/render/Feature\n */\nimport {VOID} from '../functions.js';\nimport {extend} from '../array.js';\nimport {createOrUpdateFromCoordinate, createOrUpdateFromFlatCoordinates, getCenter, getHeight} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {getInteriorPointOfArray, getInteriorPointsOfMultiArray} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {get as getProjection} from '../proj.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\n\n\n/**\n * @type {module:ol/transform~Transform}\n */\nvar tmpTransform = createTransform();\n\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n *\n * @param {module:ol/geom/GeometryType} type Geometry type.\n * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n *     to be right-handed for polygons.\n * @param {Array<number>|Array<Array<number>>} ends Ends or Endss.\n * @param {Object<string, *>} properties Properties.\n * @param {number|string|undefined} id Feature id.\n */\nvar RenderFeature = function RenderFeature(type, flatCoordinates, ends, properties, id) {\n  /**\n  * @private\n  * @type {module:ol/extent~Extent|undefined}\n  */\n  this.extent_;\n\n  /**\n  * @private\n  * @type {number|string|undefined}\n  */\n  this.id_ = id;\n\n  /**\n  * @private\n  * @type {module:ol/geom/GeometryType}\n  */\n  this.type_ = type;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatCoordinates_ = flatCoordinates;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatInteriorPoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>}\n  */\n  this.flatMidpoints_ = null;\n\n  /**\n  * @private\n  * @type {Array<number>|Array<Array<number>>}\n  */\n  this.ends_ = ends;\n\n  /**\n  * @private\n  * @type {Object<string, *>}\n  */\n  this.properties_ = properties;\n\n};\n\n/**\n* Get a feature property by its key.\n* @param {string} key Key\n* @return {*} Value for the requested key.\n* @api\n*/\nRenderFeature.prototype.get = function get (key) {\n  return this.properties_[key];\n};\n\n/**\n* Get the extent of this feature's geometry.\n* @return {module:ol/extent~Extent} Extent.\n* @api\n*/\nRenderFeature.prototype.getExtent = function getExtent () {\n  if (!this.extent_) {\n    this.extent_ = this.type_ === GeometryType.POINT ?\n      createOrUpdateFromCoordinate(this.flatCoordinates_) :\n      createOrUpdateFromFlatCoordinates(\n        this.flatCoordinates_, 0, this.flatCoordinates_.length, 2);\n\n  }\n  return this.extent_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoint = function getFlatInteriorPoint () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenter = getCenter(this.getExtent());\n    this.flatInteriorPoints_ = getInteriorPointOfArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenter, 0);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat interior points.\n*/\nRenderFeature.prototype.getFlatInteriorPoints = function getFlatInteriorPoints () {\n  if (!this.flatInteriorPoints_) {\n    var flatCenters = linearRingssCenter(\n      this.flatCoordinates_, 0, this.ends_, 2);\n    this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n      this.flatCoordinates_, 0, this.ends_, 2, flatCenters);\n  }\n  return this.flatInteriorPoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoint.\n*/\nRenderFeature.prototype.getFlatMidpoint = function getFlatMidpoint () {\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = interpolatePoint(\n      this.flatCoordinates_, 0, this.flatCoordinates_.length, 2, 0.5);\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* @return {Array<number>} Flat midpoints.\n*/\nRenderFeature.prototype.getFlatMidpoints = function getFlatMidpoints () {\n    var this$1 = this;\n\n  if (!this.flatMidpoints_) {\n    this.flatMidpoints_ = [];\n    var flatCoordinates = this.flatCoordinates_;\n    var offset = 0;\n    var ends = this.ends_;\n    for (var i = 0, ii = ends.length; i < ii; ++i) {\n      var end = ends[i];\n      var midpoint = interpolatePoint(\n        flatCoordinates, offset, end, 2, 0.5);\n      extend(this$1.flatMidpoints_, midpoint);\n      offset = end;\n    }\n  }\n  return this.flatMidpoints_;\n};\n\n/**\n* Get the feature identifier.This is a stable identifier for the feature and\n* is set when reading data from a remote source.\n* @return {number|string|undefined} Id.\n* @api\n*/\nRenderFeature.prototype.getId = function getId () {\n  return this.id_;\n};\n\n/**\n* @return {Array<number>} Flat coordinates.\n*/\nRenderFeature.prototype.getOrientedFlatCoordinates = function getOrientedFlatCoordinates () {\n  return this.flatCoordinates_;\n};\n\n/**\n* For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n* determining the geometry type in style function (see {@link #getType}).\n* @return {module:ol/render/Feature} Feature.\n* @api\n*/\nRenderFeature.prototype.getGeometry = function getGeometry () {\n  return this;\n};\n\n/**\n* Get the feature properties.\n* @return {Object<string, *>} Feature properties.\n* @api\n*/\nRenderFeature.prototype.getProperties = function getProperties () {\n  return this.properties_;\n};\n\n/**\n* @return {number} Stride.\n*/\nRenderFeature.prototype.getStride = function getStride () {\n  return 2;\n};\n\n/**\n* Get the type of this feature's geometry.\n* @return {module:ol/geom/GeometryType} Geometry type.\n* @api\n*/\nRenderFeature.prototype.getType = function getType () {\n  return this.type_;\n};\n\n/**\n* Transform geometry coordinates from tile pixel space to projected.\n* The SRS of the source and destination are expected to be the same.\n*\n* @param {module:ol/proj~ProjectionLike} source The current projection\n* @param {module:ol/proj~ProjectionLike} destination The desired projection.\n*/\nRenderFeature.prototype.transform = function transform (source, destination) {\n  source = getProjection(source);\n  var pixelExtent = source.getExtent();\n  var projectedExtent = source.getWorldExtent();\n  var scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n  composeTransform(tmpTransform,\n    projectedExtent[0], projectedExtent[3],\n    scale, -scale, 0,\n    0, 0);\n  transform2D(this.flatCoordinates_, 0, this.flatCoordinates_.length, 2,\n    tmpTransform, this.flatCoordinates_);\n};\n\n\n/**\n * @return {Array<number>|Array<Array<number>>} Ends or endss.\n */\nRenderFeature.prototype.getEnds =\nRenderFeature.prototype.getEndss = function() {\n  return this.ends_;\n};\n\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n    RenderFeature.prototype.getOrientedFlatCoordinates;\n\n\n/**\n * Get the feature for working with its geometry.\n * @return {module:ol/render/Feature} Feature.\n */\nRenderFeature.prototype.getSimplifiedGeometry =\n    RenderFeature.prototype.getGeometry;\n\n\n/**\n * @return {undefined}\n */\nRenderFeature.prototype.getStyleFunction = VOID;\n\n\nexport default RenderFeature;\n\n//# sourceMappingURL=Feature.js.map","/**\n * @module ol/format/MVT\n */\n//FIXME Implement projection handling\n\nimport {assert} from '../asserts.js';\nimport PBF from 'pbf';\nimport FeatureFormat, {transformWithOptions} from '../format/Feature.js';\nimport FormatType from '../format/FormatType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport Projection from '../proj/Projection.js';\nimport Units from '../proj/Units.js';\nimport RenderFeature from '../render/Feature.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function((module:ol/geom/Geometry|Object<string,*>)=)|function(module:ol/geom/GeometryType,Array<number>,(Array<number>|Array<Array<number>>),Object<string,*>,number)} [featureClass]\n * Class for features returned by {@link module:ol/format/MVT#readFeatures}. Set to\n * {@link module:ol/Feature~Feature} to get full editing and geometry support at the cost of\n * decreased rendering performance. The default is {@link module:ol/render/Feature~RenderFeature},\n * which is optimized for rendering and hit detection.\n * @property {string} [geometryName='geometry'] Geometry name to use when creating\n * features.\n * @property {string} [layerName='layer'] Name of the feature attribute that\n * holds the layer name.\n * @property {Array<string>} [layers] Layers to read features from. If not\n * provided, features will be read from all layers.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the Mapbox MVT format.\n *\n * @param {module:ol/format/MVT~Options=} opt_options Options.\n * @api\n */\nvar MVT = (function (FeatureFormat) {\n  function MVT(opt_options) {\n    FeatureFormat.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/proj/Projection}\n     */\n    this.dataProjection = new Projection({\n      code: '',\n      units: Units.TILE_PIXELS\n    });\n\n    /**\n     * @private\n     * @type {function((module:ol/geom/Geometry|Object<string,*>)=)|\n     *     function(module:ol/geom/GeometryType,Array<number>,\n     *         (Array<number>|Array<Array<number>>),Object<string,*>,number)}\n     */\n    this.featureClass_ = options.featureClass ?\n      options.featureClass : RenderFeature;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layerName_ = options.layerName ? options.layerName : 'layer';\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n  }\n\n  if ( FeatureFormat ) MVT.__proto__ = FeatureFormat;\n  MVT.prototype = Object.create( FeatureFormat && FeatureFormat.prototype );\n  MVT.prototype.constructor = MVT;\n\n  /**\n   * Read the raw geometry from the pbf offset stored in a raw feature's geometry\n   * property.\n   * @suppress {missingProperties}\n   * @param {Object} pbf PBF.\n   * @param {Object} feature Raw feature.\n   * @param {Array<number>} flatCoordinates Array to store flat coordinates in.\n   * @param {Array<number>} ends Array to store ends in.\n   * @private\n   */\n  MVT.prototype.readRawGeometry_ = function readRawGeometry_ (pbf, feature, flatCoordinates, ends) {\n    pbf.pos = feature.geometry;\n\n    var end = pbf.readVarint() + pbf.pos;\n    var cmd = 1;\n    var length = 0;\n    var x = 0;\n    var y = 0;\n    var coordsLen = 0;\n    var currentEnd = 0;\n\n    while (pbf.pos < end) {\n      if (!length) {\n        var cmdLen = pbf.readVarint();\n        cmd = cmdLen & 0x7;\n        length = cmdLen >> 3;\n      }\n\n      length--;\n\n      if (cmd === 1 || cmd === 2) {\n        x += pbf.readSVarint();\n        y += pbf.readSVarint();\n\n        if (cmd === 1) { // moveTo\n          if (coordsLen > currentEnd) {\n            ends.push(coordsLen);\n            currentEnd = coordsLen;\n          }\n        }\n\n        flatCoordinates.push(x, y);\n        coordsLen += 2;\n\n      } else if (cmd === 7) {\n\n        if (coordsLen > currentEnd) {\n          // close polygon\n          flatCoordinates.push(\n            flatCoordinates[currentEnd], flatCoordinates[currentEnd + 1]);\n          coordsLen += 2;\n        }\n\n      } else {\n        assert(false, 59); // Invalid command found in the PBF\n      }\n    }\n\n    if (coordsLen > currentEnd) {\n      ends.push(coordsLen);\n      currentEnd = coordsLen;\n    }\n\n  };\n\n  /**\n   * @private\n   * @param {Object} pbf PBF\n   * @param {Object} rawFeature Raw Mapbox feature.\n   * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n   * @return {module:ol/Feature|module:ol/render/Feature} Feature.\n   */\n  MVT.prototype.createFeature_ = function createFeature_ (pbf, rawFeature, opt_options) {\n    var type = rawFeature.type;\n    if (type === 0) {\n      return null;\n    }\n\n    var feature;\n    var id = rawFeature.id;\n    var values = rawFeature.properties;\n    values[this.layerName_] = rawFeature.layer.name;\n\n    var flatCoordinates = [];\n    var ends = [];\n    this.readRawGeometry_(pbf, rawFeature, flatCoordinates, ends);\n\n    var geometryType = getGeometryType(type, ends.length);\n\n    if (this.featureClass_ === RenderFeature) {\n      feature = new this.featureClass_(geometryType, flatCoordinates, ends, values, id);\n    } else {\n      var geom;\n      if (geometryType == GeometryType.POLYGON) {\n        var endss = [];\n        var offset = 0;\n        var prevEndIndex = 0;\n        for (var i = 0, ii = ends.length; i < ii; ++i) {\n          var end = ends[i];\n          if (!linearRingIsClockwise(flatCoordinates, offset, end, 2)) {\n            endss.push(ends.slice(prevEndIndex, i));\n            prevEndIndex = i;\n          }\n          offset = end;\n        }\n        if (endss.length > 1) {\n          geom = new MultiPolygon(flatCoordinates, GeometryLayout.XY, endss);\n        } else {\n          geom = new Polygon(flatCoordinates, GeometryLayout.XY, ends);\n        }\n      } else {\n        geom = geometryType === GeometryType.POINT ? new Point(flatCoordinates, GeometryLayout.XY) :\n          geometryType === GeometryType.LINE_STRING ? new LineString(flatCoordinates, GeometryLayout.XY) :\n            geometryType === GeometryType.POLYGON ? new Polygon(flatCoordinates, GeometryLayout.XY, ends) :\n              geometryType === GeometryType.MULTI_POINT ? new MultiPoint(flatCoordinates, GeometryLayout.XY) :\n                geometryType === GeometryType.MULTI_LINE_STRING ? new MultiLineString(flatCoordinates, GeometryLayout.XY, ends) :\n                  null;\n      }\n      feature = new this.featureClass_();\n      if (this.geometryName_) {\n        feature.setGeometryName(this.geometryName_);\n      }\n      var geometry = transformWithOptions(geom, false, this.adaptOptions(opt_options));\n      feature.setGeometry(geometry);\n      feature.setId(id);\n      feature.setProperties(values);\n    }\n\n    return feature;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.getLastExtent = function getLastExtent () {\n    return this.extent_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  MVT.prototype.getType = function getType () {\n    return FormatType.ARRAY_BUFFER;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readFeatures = function readFeatures (source, opt_options) {\n    var this$1 = this;\n\n    var layers = this.layers_;\n\n    var pbf = new PBF(/** @type {ArrayBuffer} */ (source));\n    var pbfLayers = pbf.readFields(layersPBFReader, {});\n    /** @type {Array<module:ol/Feature|module:ol/render/Feature>} */\n    var features = [];\n    for (var name in pbfLayers) {\n      if (layers && layers.indexOf(name) == -1) {\n        continue;\n      }\n      var pbfLayer = pbfLayers[name];\n\n      for (var i = 0, ii = pbfLayer.length; i < ii; ++i) {\n        var rawFeature = readRawFeature(pbf, pbfLayer, i);\n        features.push(this$1.createFeature_(pbf, rawFeature));\n      }\n      this$1.extent_ = pbfLayer ? [0, 0, pbfLayer.extent, pbfLayer.extent] : null;\n    }\n\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  MVT.prototype.readProjection = function readProjection (source) {\n    return this.dataProjection;\n  };\n\n  /**\n   * Sets the layers that features will be read from.\n   * @param {Array<string>} layers Layers.\n   * @api\n   */\n  MVT.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  return MVT;\n}(FeatureFormat));\n\n\n/**\n * Reader callback for parsing layers.\n * @param {number} tag The tag.\n * @param {Object} layers The layers object.\n * @param {Object} pbf The PBF.\n */\nfunction layersPBFReader(tag, layers, pbf) {\n  if (tag === 3) {\n    var layer = {\n      keys: [],\n      values: [],\n      features: []\n    };\n    var end = pbf.readVarint() + pbf.pos;\n    pbf.readFields(layerPBFReader, layer, end);\n    layer.length = layer.features.length;\n    if (layer.length) {\n      layers[layer.name] = layer;\n    }\n  }\n}\n\n/**\n * Reader callback for parsing layer.\n * @param {number} tag The tag.\n * @param {Object} layer The layer object.\n * @param {Object} pbf The PBF.\n */\nfunction layerPBFReader(tag, layer, pbf) {\n  if (tag === 15) {\n    layer.version = pbf.readVarint();\n  } else if (tag === 1) {\n    layer.name = pbf.readString();\n  } else if (tag === 5) {\n    layer.extent = pbf.readVarint();\n  } else if (tag === 2) {\n    layer.features.push(pbf.pos);\n  } else if (tag === 3) {\n    layer.keys.push(pbf.readString());\n  } else if (tag === 4) {\n    var value = null;\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      tag = pbf.readVarint() >> 3;\n      value = tag === 1 ? pbf.readString() :\n        tag === 2 ? pbf.readFloat() :\n          tag === 3 ? pbf.readDouble() :\n            tag === 4 ? pbf.readVarint64() :\n              tag === 5 ? pbf.readVarint() :\n                tag === 6 ? pbf.readSVarint() :\n                  tag === 7 ? pbf.readBoolean() : null;\n    }\n    layer.values.push(value);\n  }\n}\n\n/**\n * Reader callback for parsing feature.\n * @param {number} tag The tag.\n * @param {Object} feature The feature object.\n * @param {Object} pbf The PBF.\n */\nfunction featurePBFReader(tag, feature, pbf) {\n  if (tag == 1) {\n    feature.id = pbf.readVarint();\n  } else if (tag == 2) {\n    var end = pbf.readVarint() + pbf.pos;\n    while (pbf.pos < end) {\n      var key = feature.layer.keys[pbf.readVarint()];\n      var value = feature.layer.values[pbf.readVarint()];\n      feature.properties[key] = value;\n    }\n  } else if (tag == 3) {\n    feature.type = pbf.readVarint();\n  } else if (tag == 4) {\n    feature.geometry = pbf.pos;\n  }\n}\n\n\n/**\n * Read a raw feature from the pbf offset stored at index `i` in the raw layer.\n * @suppress {missingProperties}\n * @param {Object} pbf PBF.\n * @param {Object} layer Raw layer.\n * @param {number} i Index of the feature in the raw layer's `features` array.\n * @return {Object} Raw feature.\n */\nfunction readRawFeature(pbf, layer, i) {\n  pbf.pos = layer.features[i];\n  var end = pbf.readVarint() + pbf.pos;\n\n  var feature = {\n    layer: layer,\n    type: 0,\n    properties: {}\n  };\n  pbf.readFields(featurePBFReader, feature, end);\n  return feature;\n}\n\n\n/**\n * @suppress {missingProperties}\n * @param {number} type The raw feature's geometry type\n * @param {number} numEnds Number of ends of the flat coordinates of the\n * geometry.\n * @return {module:ol/geom/GeometryType} The geometry type.\n */\nfunction getGeometryType(type, numEnds) {\n  /** @type {module:ol/geom/GeometryType} */\n  var geometryType;\n  if (type === 1) {\n    geometryType = numEnds === 1 ?\n      GeometryType.POINT : GeometryType.MULTI_POINT;\n  } else if (type === 2) {\n    geometryType = numEnds === 1 ?\n      GeometryType.LINE_STRING :\n      GeometryType.MULTI_LINE_STRING;\n  } else if (type === 3) {\n    geometryType = GeometryType.POLYGON;\n    // MultiPolygon not relevant for rendering - winding order determines\n    // outer rings of polygons.\n  }\n  return geometryType;\n}\n\nexport default MVT;\n\n//# sourceMappingURL=MVT.js.map","/**\n * @module ol/format/XLink\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n\n//# sourceMappingURL=XLink.js.map","/**\n * @module ol/format/XML\n */\nimport {isDocument, isNode, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nvar XML = function XML () {};\n\nXML.prototype.read = function read (source) {\n  if (isDocument(source)) {\n    return this.readFromDocument(/** @type {Document} */ (source));\n  } else if (isNode(source)) {\n    return this.readFromNode(/** @type {Node} */ (source));\n  } else if (typeof source === 'string') {\n    var doc = parse(source);\n    return this.readFromDocument(doc);\n  } else {\n    return null;\n  }\n};\n\n/**\n * @abstract\n * @param {Document} doc Document.\n * @return {Object} Object\n */\nXML.prototype.readFromDocument = function readFromDocument (doc) {};\n\n/**\n * @abstract\n * @param {Node} node Node.\n * @return {Object} Object\n */\nXML.prototype.readFromNode = function readFromNode (node) {};\n\nexport default XML;\n\n//# sourceMappingURL=XML.js.map","/**\n * @module ol/format/OWS\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString} from '../format/xsd.js';\nimport {makeObjectPropertyPusher, makeObjectPropertySetter, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n    'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n    'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata)\n  });\n\n\nvar OWS = (function (XML) {\n  function OWS() {\n    XML.call(this);\n  }\n\n  if ( XML ) OWS.__proto__ = XML;\n  OWS.prototype = Object.create( XML && XML.prototype );\n  OWS.prototype.constructor = OWS;\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  OWS.prototype.readFromNode = function readFromNode (node) {\n    var owsObject = pushParseAndPop({},\n      PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  };\n\n  return OWS;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DeliveryPoint': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'AdministrativeArea': makeObjectPropertySetter(readString),\n    'PostalCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString),\n    'ElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ALLOWED_VALUES_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Value': makeObjectPropertyPusher(readValue)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONSTRAINT_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AllowedValues': makeObjectPropertySetter(readAllowedValues)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_INFO_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Phone': makeObjectPropertySetter(readPhone),\n    'Address': makeObjectPropertySetter(readAddress)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DCP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHttp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertyPusher(readGet),\n    'Post': undefined // TODO\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'DCP': makeObjectPropertySetter(readDcp)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATIONS_METADATA_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Operation': readOperation\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PHONE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Voice': makeObjectPropertySetter(readString),\n    'Facsimile': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REQUEST_METHOD_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Constraint': makeObjectPropertyPusher(readConstraint)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_CONTACT_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'IndividualName': makeObjectPropertySetter(readString),\n        'PositionName': makeObjectPropertySetter(readString),\n        'ContactInfo': makeObjectPropertySetter(readContactInfo)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_IDENTIFICATION_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'Abstract': makeObjectPropertySetter(readString),\n        'AccessConstraints': makeObjectPropertySetter(readString),\n        'Fees': makeObjectPropertySetter(readString),\n        'Title': makeObjectPropertySetter(readString),\n        'ServiceTypeVersion': makeObjectPropertySetter(readString),\n        'ServiceType': makeObjectPropertySetter(readString)\n      });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_PROVIDER_PARSERS =\n    makeStructureNS(\n      NAMESPACE_URIS, {\n        'ProviderName': makeObjectPropertySetter(readString),\n        'ProviderSite': makeObjectPropertySetter(readHref),\n        'ServiceContact': makeObjectPropertySetter(readServiceContact)\n      });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({},\n    ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({},\n    ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  var name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name},\n    CONSTRAINT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({},\n    CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({},\n    DCP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  var href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop({'href': href},\n    REQUEST_METHOD_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  var name = node.getAttribute('name');\n  var value = pushParseAndPop({},\n    OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  var object = /** @type {Object} */\n      (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({},\n    OPERATIONS_METADATA_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({},\n    PHONE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_IDENTIFICATION_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_CONTACT_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop(\n    {}, SERVICE_PROVIDER_PARSERS, node,\n    objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\n\nexport default OWS;\n\n//# sourceMappingURL=OWS.js.map","/**\n * @module ol/geom/flat/flip\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_dest Destination.\n * @param {number=} opt_destOffset Destination offset.\n * @return {Array<number>} Flat coordinates.\n */\nexport function flipXY(flatCoordinates, offset, end, stride, opt_dest, opt_destOffset) {\n  var dest, destOffset;\n  if (opt_dest !== undefined) {\n    dest = opt_dest;\n    destOffset = opt_destOffset !== undefined ? opt_destOffset : 0;\n  } else {\n    dest = [];\n    destOffset = 0;\n  }\n  var j = offset;\n  while (j < end) {\n    var x = flatCoordinates[j++];\n    dest[destOffset++] = flatCoordinates[j++];\n    dest[destOffset++] = x;\n    for (var k = 2; k < stride; ++k) {\n      dest[destOffset++] = flatCoordinates[j++];\n    }\n  }\n  dest.length = destOffset;\n  return dest;\n}\n\n//# sourceMappingURL=flip.js.map","/**\n * @module ol/format/Polyline\n */\nimport {assert} from '../asserts.js';\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport {getStrideForLayout} from '../geom/SimpleGeometry.js';\nimport {flipXY} from '../geom/flat/flip.js';\nimport {inflateCoordinates} from '../geom/flat/inflate.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [factor=1e5] The factor by which the coordinates values will be scaled.\n * @property {module:ol/geom/GeometryLayout} [geometryLayout='XY'] Layout of the\n * feature geometries created by the format reader.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the Encoded\n * Polyline Algorithm Format.\n *\n * When reading features, the coordinates are assumed to be in two dimensions\n * and in [latitude, longitude] order.\n *\n * As Polyline sources contain a single feature,\n * {@link module:ol/format/Polyline~Polyline#readFeatures} will return the\n * feature in an array.\n *\n * @api\n */\nvar Polyline = (function (TextFeature) {\n  function Polyline(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection('EPSG:4326');\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.factor_ = options.factor ? options.factor : 1e5;\n\n    /**\n     * @private\n     * @type {module:ol/geom/GeometryLayout}\n     */\n    this.geometryLayout_ = options.geometryLayout ?\n      options.geometryLayout : GeometryLayout.XY;\n  }\n\n  if ( TextFeature ) Polyline.__proto__ = TextFeature;\n  Polyline.prototype = Object.create( TextFeature && TextFeature.prototype );\n  Polyline.prototype.constructor = Polyline;\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geometry = this.readGeometryFromText(text, opt_options);\n    return new Feature(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var feature = this.readFeatureFromText(text, opt_options);\n    return [feature];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var stride = getStrideForLayout(this.geometryLayout_);\n    var flatCoordinates = decodeDeltas(text, stride, this.factor_);\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    var coordinates = inflateCoordinates(flatCoordinates, 0, flatCoordinates.length, stride);\n\n    return (\n      /** @type {module:ol/geom/Geometry} */ (transformWithOptions(\n        new LineString(coordinates, this.geometryLayout_),\n        false,\n        this.adaptOptions(opt_options)\n      ))\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    } else {\n      assert(false, 40); // Expected `feature` to have a geometry\n      return '';\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    return this.writeFeatureText(features[0], opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  Polyline.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    geometry = /** @type {module:ol/geom/LineString} */\n      (transformWithOptions(geometry, true, this.adaptOptions(opt_options)));\n    var flatCoordinates = geometry.getFlatCoordinates();\n    var stride = geometry.getStride();\n    flipXY(flatCoordinates, 0, flatCoordinates.length, stride, flatCoordinates);\n    return encodeDeltas(flatCoordinates, stride, this.factor_);\n  };\n\n  return Polyline;\n}(TextFeature));\n\n\n/**\n * Encode a list of n-dimensional points and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of n-dimensional points.\n * @param {number} stride The number of dimension of the points in the list.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeDeltas(numbers, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      var num = numbers[i];\n      var delta = num - lastNumbers[d];\n      lastNumbers[d] = num;\n\n      numbers[i] = delta;\n    }\n  }\n\n  return encodeFloats(numbers, factor);\n}\n\n\n/**\n * Decode a list of n-dimensional points from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number} stride The number of dimension of the points in the\n *     encoded string.\n * @param {number=} opt_factor The factor by which the resulting numbers will\n *     be divided. Default is `1e5`.\n * @return {Array<number>} A list of n-dimensional points.\n * @api\n */\nexport function decodeDeltas(encoded, stride, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var d;\n\n  /** @type {Array<number>} */\n  var lastNumbers = new Array(stride);\n  for (d = 0; d < stride; ++d) {\n    lastNumbers[d] = 0;\n  }\n\n  var numbers = decodeFloats(encoded, factor);\n\n  for (var i = 0, ii = numbers.length; i < ii;) {\n    for (d = 0; d < stride; ++d, ++i) {\n      lastNumbers[d] += numbers[i];\n\n      numbers[i] = lastNumbers[d];\n    }\n  }\n\n  return numbers;\n}\n\n\n/**\n * Encode a list of floating point numbers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of floating point numbers.\n * @param {number=} opt_factor The factor by which the numbers will be\n *     multiplied. The remaining decimal places will get rounded away.\n *     Default is `1e5`.\n * @return {string} The encoded string.\n * @api\n */\nexport function encodeFloats(numbers, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] = Math.round(numbers[i] * factor);\n  }\n\n  return encodeSignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of floating point numbers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @param {number=} opt_factor The factor by which the result will be divided.\n *     Default is `1e5`.\n * @return {Array<number>} A list of floating point numbers.\n * @api\n */\nexport function decodeFloats(encoded, opt_factor) {\n  var factor = opt_factor ? opt_factor : 1e5;\n  var numbers = decodeSignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    numbers[i] /= factor;\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of signed integers and return an encoded string\n *\n * Attention: This function will modify the passed array!\n *\n * @param {Array<number>} numbers A list of signed integers.\n * @return {string} The encoded string.\n */\nexport function encodeSignedIntegers(numbers) {\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num < 0) ? ~(num << 1) : (num << 1);\n  }\n  return encodeUnsignedIntegers(numbers);\n}\n\n\n/**\n * Decode a list of signed integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of signed integers.\n */\nexport function decodeSignedIntegers(encoded) {\n  var numbers = decodeUnsignedIntegers(encoded);\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    var num = numbers[i];\n    numbers[i] = (num & 1) ? ~(num >> 1) : (num >> 1);\n  }\n  return numbers;\n}\n\n\n/**\n * Encode a list of unsigned integers and return an encoded string\n *\n * @param {Array<number>} numbers A list of unsigned integers.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedIntegers(numbers) {\n  var encoded = '';\n  for (var i = 0, ii = numbers.length; i < ii; ++i) {\n    encoded += encodeUnsignedInteger(numbers[i]);\n  }\n  return encoded;\n}\n\n\n/**\n * Decode a list of unsigned integers from an encoded string\n *\n * @param {string} encoded An encoded string.\n * @return {Array<number>} A list of unsigned integers.\n */\nexport function decodeUnsignedIntegers(encoded) {\n  var numbers = [];\n  var current = 0;\n  var shift = 0;\n  for (var i = 0, ii = encoded.length; i < ii; ++i) {\n    var b = encoded.charCodeAt(i) - 63;\n    current |= (b & 0x1f) << shift;\n    if (b < 0x20) {\n      numbers.push(current);\n      current = 0;\n      shift = 0;\n    } else {\n      shift += 5;\n    }\n  }\n  return numbers;\n}\n\n\n/**\n * Encode one single unsigned integer and return an encoded string\n *\n * @param {number} num Unsigned integer that should be encoded.\n * @return {string} The encoded string.\n */\nexport function encodeUnsignedInteger(num) {\n  var value, encoded = '';\n  while (num >= 0x20) {\n    value = (0x20 | (num & 0x1f)) + 63;\n    encoded += String.fromCharCode(value);\n    num >>= 5;\n  }\n  value = num + 63;\n  encoded += String.fromCharCode(value);\n  return encoded;\n}\n\n\nexport default Polyline;\n\n//# sourceMappingURL=Polyline.js.map","/**\n * @module ol/format/TopoJSON\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport JSONFeature from '../format/JSONFeature.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/proj~ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {string} [layerName] Set the name of the TopoJSON topology\n * `objects`'s children as feature property with the specified name. This means\n * that when set to `'layer'`, a topology like\n * ```\n * {\n *   \"type\": \"Topology\",\n *   \"objects\": {\n *     \"example\": {\n *       \"type\": \"GeometryCollection\",\n *       \"geometries\": []\n *     }\n *   }\n * }\n * ```\n * will result in features that have a property `'layer'` set to `'example'`.\n * When not set, no property will be added to features.\n * @property {Array<string>} [layers] Names of the TopoJSON topology's\n * `objects`'s children to read features from.  If not provided, features will\n * be read from all children.\n */\n\n\n/**\n * @classdesc\n * Feature format for reading data in the TopoJSON format.\n *\n * @api\n */\nvar TopoJSON = (function (JSONFeature) {\n  function TopoJSON(opt_options) {\n    JSONFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.layerName_ = options.layerName;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n\n    /**\n     * @inheritDoc\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ?\n        options.dataProjection : 'EPSG:4326');\n\n  }\n\n  if ( JSONFeature ) TopoJSON.__proto__ = JSONFeature;\n  TopoJSON.prototype = Object.create( JSONFeature && JSONFeature.prototype );\n  TopoJSON.prototype.constructor = TopoJSON;\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readFeaturesFromObject = function readFeaturesFromObject (object, opt_options) {\n    var this$1 = this;\n\n    if (object.type == 'Topology') {\n      var topoJSONTopology = /** @type {TopoJSONTopology} */ (object);\n      var transform, scale = null, translate = null;\n      if (topoJSONTopology.transform) {\n        transform = topoJSONTopology.transform;\n        scale = transform.scale;\n        translate = transform.translate;\n      }\n      var arcs = topoJSONTopology.arcs;\n      if (transform) {\n        transformArcs(arcs, scale, translate);\n      }\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      var topoJSONFeatures = topoJSONTopology.objects;\n      var property = this.layerName_;\n      var feature;\n      for (var objectName in topoJSONFeatures) {\n        if (this$1.layers_ && this$1.layers_.indexOf(objectName) == -1) {\n          continue;\n        }\n        if (topoJSONFeatures[objectName].type === 'GeometryCollection') {\n          feature = /** @type {TopoJSONGeometryCollection} */ (topoJSONFeatures[objectName]);\n          features.push.apply(features, readFeaturesFromGeometryCollection(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        } else {\n          feature = /** @type {TopoJSONGeometry} */ (topoJSONFeatures[objectName]);\n          features.push(readFeatureFromGeometry(\n            feature, arcs, scale, translate, property, objectName, opt_options));\n        }\n      }\n      return features;\n    } else {\n      return [];\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  TopoJSON.prototype.readProjectionFromObject = function readProjectionFromObject (object) {\n    return this.dataProjection;\n  };\n\n  return TopoJSON;\n}(JSONFeature));\n\n\n/**\n * @const\n * @type {Object<string, function(TopoJSONGeometry, Array, ...Array): module:ol/geom/Geometry>}\n */\nvar GEOMETRY_READERS = {\n  'Point': readPointGeometry,\n  'LineString': readLineStringGeometry,\n  'Polygon': readPolygonGeometry,\n  'MultiPoint': readMultiPointGeometry,\n  'MultiLineString': readMultiLineStringGeometry,\n  'MultiPolygon': readMultiPolygonGeometry\n};\n\n\n/**\n * Concatenate arcs into a coordinate array.\n * @param {Array<number>} indices Indices of arcs to concatenate.  Negative\n *     values indicate arcs need to be reversed.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs (already\n *     transformed).\n * @return {Array<module:ol/coordinate~Coordinate>} Coordinates array.\n */\nfunction concatenateArcs(indices, arcs) {\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  var coordinates = [];\n  var index, arc;\n  for (var i = 0, ii = indices.length; i < ii; ++i) {\n    index = indices[i];\n    if (i > 0) {\n      // splicing together arcs, discard last point\n      coordinates.pop();\n    }\n    if (index >= 0) {\n      // forward arc\n      arc = arcs[index];\n    } else {\n      // reverse arc\n      arc = arcs[~index].slice().reverse();\n    }\n    coordinates.push.apply(coordinates, arc);\n  }\n  // provide fresh copies of coordinate arrays\n  for (var j = 0, jj = coordinates.length; j < jj; ++j) {\n    coordinates[j] = coordinates[j].slice();\n  }\n  return coordinates;\n}\n\n\n/**\n * Create a point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/Point} Geometry.\n */\nfunction readPointGeometry(object, scale, translate) {\n  var coordinates = object.coordinates;\n  if (scale && translate) {\n    transformVertex(coordinates, scale, translate);\n  }\n  return new Point(coordinates);\n}\n\n\n/**\n * Create a multi-point from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @return {module:ol/geom/MultiPoint} Geometry.\n */\nfunction readMultiPointGeometry(object, scale, translate) {\n  var coordinates = object.coordinates;\n  if (scale && translate) {\n    for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n      transformVertex(coordinates[i], scale, translate);\n    }\n  }\n  return new MultiPoint(coordinates);\n}\n\n\n/**\n * Create a linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/LineString} Geometry.\n */\nfunction readLineStringGeometry(object, arcs) {\n  var coordinates = concatenateArcs(object.arcs, arcs);\n  return new LineString(coordinates);\n}\n\n\n/**\n * Create a multi-linestring from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiLineString} Geometry.\n */\nfunction readMultiLineStringGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new MultiLineString(coordinates);\n}\n\n\n/**\n * Create a polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/Polygon} Geometry.\n */\nfunction readPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    coordinates[i] = concatenateArcs(object.arcs[i], arcs);\n  }\n  return new Polygon(coordinates);\n}\n\n\n/**\n * Create a multi-polygon from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @return {module:ol/geom/MultiPolygon} Geometry.\n */\nfunction readMultiPolygonGeometry(object, arcs) {\n  var coordinates = [];\n  for (var i = 0, ii = object.arcs.length; i < ii; ++i) {\n    // for each polygon\n    var polyArray = object.arcs[i];\n    var ringCoords = [];\n    for (var j = 0, jj = polyArray.length; j < jj; ++j) {\n      // for each ring\n      ringCoords[j] = concatenateArcs(polyArray[j], arcs);\n    }\n    coordinates[i] = ringCoords;\n  }\n  return new MultiPolygon(coordinates);\n}\n\n\n/**\n * Create features from a TopoJSON GeometryCollection object.\n *\n * @param {TopoJSONGeometryCollection} collection TopoJSON Geometry\n *     object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {Array<module:ol/Feature>} Array of features.\n */\nfunction readFeaturesFromGeometryCollection(collection, arcs, scale, translate, property, name, opt_options) {\n  var geometries = collection.geometries;\n  var features = [];\n  for (var i = 0, ii = geometries.length; i < ii; ++i) {\n    features[i] = readFeatureFromGeometry(\n      geometries[i], arcs, scale, translate, property, name, opt_options);\n  }\n  return features;\n}\n\n\n/**\n * Create a feature from a TopoJSON geometry object.\n *\n * @param {TopoJSONGeometry} object TopoJSON geometry object.\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n * @param {string|undefined} property Property to set the `GeometryCollection`'s parent\n *     object to.\n * @param {string} name Name of the `Topology`'s child object.\n * @param {module:ol/format/Feature~ReadOptions=} opt_options Read options.\n * @return {module:ol/Feature} Feature.\n */\nfunction readFeatureFromGeometry(object, arcs, scale, translate, property, name, opt_options) {\n  var geometry;\n  var type = object.type;\n  var geometryReader = GEOMETRY_READERS[type];\n  if ((type === 'Point') || (type === 'MultiPoint')) {\n    geometry = geometryReader(object, scale, translate);\n  } else {\n    geometry = geometryReader(object, arcs);\n  }\n  var feature = new Feature();\n  feature.setGeometry(/** @type {module:ol/geom/Geometry} */ (\n    transformWithOptions(geometry, false, opt_options)));\n  if (object.id !== undefined) {\n    feature.setId(object.id);\n  }\n  var properties = object.properties;\n  if (property) {\n    if (!properties) {\n      properties = {};\n    }\n    properties[property] = name;\n  }\n  if (properties) {\n    feature.setProperties(properties);\n  }\n  return feature;\n}\n\n\n/**\n * Apply a linear transform to array of arcs.  The provided array of arcs is\n * modified in place.\n *\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} arcs Array of arcs.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArcs(arcs, scale, translate) {\n  for (var i = 0, ii = arcs.length; i < ii; ++i) {\n    transformArc(arcs[i], scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to an arc.  The provided arc is modified in place.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} arc Arc.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformArc(arc, scale, translate) {\n  var x = 0;\n  var y = 0;\n  for (var i = 0, ii = arc.length; i < ii; ++i) {\n    var vertex = arc[i];\n    x += vertex[0];\n    y += vertex[1];\n    vertex[0] = x;\n    vertex[1] = y;\n    transformVertex(vertex, scale, translate);\n  }\n}\n\n\n/**\n * Apply a linear transform to a vertex.  The provided vertex is modified in\n * place.\n *\n * @param {module:ol/coordinate~Coordinate} vertex Vertex.\n * @param {Array<number>} scale Scale for each dimension.\n * @param {Array<number>} translate Translation for each dimension.\n */\nfunction transformVertex(vertex, scale, translate) {\n  vertex[0] = vertex[0] * scale[0] + translate[0];\n  vertex[1] = vertex[1] * scale[1] + translate[1];\n}\n\n\nexport default TopoJSON;\n\n//# sourceMappingURL=TopoJSON.js.map","/**\n * @module ol/format/GML2\n */\nimport {createOrUpdate} from '../extent.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transformExtent} from '../proj.js';\nimport {createElementNS, getAllTextContent, makeArrayPusher, makeChildAppender,\n  makeReplacer, makeSimpleNodeFactory, OBJECT_PROPERTY_NODE_FACTORY, pushParseAndPop, pushSerializeAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {string}\n */\nvar schemaLocation = GMLNS + ' http://schemas.opengis.net/gml/2.1.2/feature.xsd';\n\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar MULTIGEOMETRY_TO_MEMBER_NODENAME = {\n  'MultiLineString': 'lineStringMember',\n  'MultiCurve': 'curveMember',\n  'MultiPolygon': 'polygonMember',\n  'MultiSurface': 'surfaceMember'\n};\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GML format,\n * version 2.1.2.\n *\n * @api\n */\nvar GML2 = (function (GMLBase) {\n  function GML2(opt_options) {\n    var options = /** @type {module:ol/format/GMLBase~Options} */\n        (opt_options ? opt_options : {});\n\n    GMLBase.call(this, options);\n\n    this.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(this.readFeaturesInternal);\n\n    /**\n     * @inheritDoc\n     */\n    this.schemaLocation = options.schemaLocation ?\n      options.schemaLocation : schemaLocation;\n\n  }\n\n  if ( GMLBase ) GML2.__proto__ = GMLBase;\n  GML2.prototype = Object.create( GMLBase && GMLBase.prototype );\n  GML2.prototype.constructor = GML2;\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {Array<number>|undefined} Flat coordinates.\n   */\n  GML2.prototype.readFlatCoordinates_ = function readFlatCoordinates_ (node, objectStack) {\n    var s = getAllTextContent(node, false).replace(/^\\s*|\\s*$/g, '');\n    var context = /** @type {module:ol/xml~NodeStackItem} */ (objectStack[0]);\n    var containerSrs = context['srsName'];\n    var axisOrientation = 'enu';\n    if (containerSrs) {\n      var proj = getProjection(containerSrs);\n      if (proj) {\n        axisOrientation = proj.getAxisOrientation();\n      }\n    }\n    var coordsGroups = s.trim().split(/\\s+/);\n    var flatCoordinates = [];\n    for (var i = 0, ii = coordsGroups.length; i < ii; i++) {\n      var coords = coordsGroups[i].split(/,+/);\n      var x = parseFloat(coords[0]);\n      var y = parseFloat(coords[1]);\n      var z = (coords.length === 3) ? parseFloat(coords[2]) : 0;\n      if (axisOrientation.substr(0, 2) === 'en') {\n        flatCoordinates.push(x, y, z);\n      } else {\n        flatCoordinates.push(y, x, z);\n      }\n    }\n    return flatCoordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   * @return {module:ol/extent~Extent|undefined} Envelope.\n   */\n  GML2.prototype.readBox_ = function readBox_ (node, objectStack) {\n    /** @type {Array<number>} */\n    var flatCoordinates = pushParseAndPop([null],\n      this.BOX_PARSERS_, node, objectStack, this);\n    return createOrUpdate(flatCoordinates[1][0],\n      flatCoordinates[1][1], flatCoordinates[1][3],\n      flatCoordinates[1][4]);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.innerBoundaryIsParser_ = function innerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings.push(flatLinearRing);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @private\n   */\n  GML2.prototype.outerBoundaryIsParser_ = function outerBoundaryIsParser_ (node, objectStack) {\n    /** @type {Array<number>|undefined} */\n    var flatLinearRing = pushParseAndPop(undefined,\n      this.RING_PARSERS, node, objectStack, this);\n    if (flatLinearRing) {\n      var flatLinearRings = /** @type {Array<Array<number>>} */\n          (objectStack[objectStack.length - 1]);\n      flatLinearRings[0] = flatLinearRing;\n    }\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.GEOMETRY_NODE_FACTORY_ = function GEOMETRY_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var multiSurface = context['multiSurface'];\n    var surface = context['surface'];\n    var multiCurve = context['multiCurve'];\n    var nodeName;\n    if (!Array.isArray(value)) {\n      nodeName = /** @type {module:ol/geom/Geometry} */ (value).getType();\n      if (nodeName === 'MultiPolygon' && multiSurface === true) {\n        nodeName = 'MultiSurface';\n      } else if (nodeName === 'Polygon' && surface === true) {\n        nodeName = 'Surface';\n      } else if (nodeName === 'MultiLineString' && multiCurve === true) {\n        nodeName = 'MultiCurve';\n      }\n    } else {\n      nodeName = 'Envelope';\n    }\n    return createElementNS('http://www.opengis.net/gml',\n      nodeName);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeFeatureElement = function writeFeatureElement (node, feature, objectStack) {\n    var this$1 = this;\n\n    var fid = feature.getId();\n    if (fid) {\n      node.setAttribute('fid', fid);\n    }\n    var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n    var featureNS = context['featureNS'];\n    var geometryName = feature.getGeometryName();\n    if (!context.serializers) {\n      context.serializers = {};\n      context.serializers[featureNS] = {};\n    }\n    var properties = feature.getProperties();\n    var keys = [];\n    var values = [];\n    for (var key in properties) {\n      var value = properties[key];\n      if (value !== null) {\n        keys.push(key);\n        values.push(value);\n        if (key == geometryName || value instanceof Geometry) {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(\n              this$1.writeGeometryElement, this$1);\n          }\n        } else {\n          if (!(key in context.serializers[featureNS])) {\n            context.serializers[featureNS][key] = makeChildAppender(writeStringTextNode);\n          }\n        }\n      }\n    }\n    var item = assign({}, context);\n    item.node = node;\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), context.serializers,\n      makeSimpleNodeFactory(undefined, featureNS),\n      values,\n      objectStack, keys);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} geometry LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveOrLineString_ = function writeCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'LineStringSegment' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'LineString' ||\n        node.nodeName === 'LineStringSegment') {\n      var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n      node.appendChild(coordinates);\n      this.writeCoordinates_(coordinates, geometry, objectStack);\n    } else if (node.nodeName === 'Curve') {\n      var segments = createElementNS(node.namespaceURI, 'segments');\n      node.appendChild(segments);\n      this.writeCurveSegments_(segments,\n        geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLineStringOrCurveMember_ = function writeLineStringOrCurveMember_ (node, line, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(line, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeCurveOrLineString_(child, line, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiLineString} geometry MultiLineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiCurveOrLineString_ = function writeMultiCurveOrLineString_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var curve = context['curve'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var lines = geometry.getLineStrings();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, curve: curve},\n      this.LINESTRINGORCURVEMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, lines,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Geometry|module:ol/extent~Extent} geometry Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   */\n  GML2.prototype.writeGeometryElement = function writeGeometryElement (node, geometry, objectStack) {\n    var context = /** @type {module:ol/format/Feature~WriteOptions} */ (objectStack[objectStack.length - 1]);\n    var item = assign({}, context);\n    item.node = node;\n    var value;\n    if (Array.isArray(geometry)) {\n      if (context.dataProjection) {\n        value = transformExtent(\n          geometry, context.featureProjection, context.dataProjection);\n      } else {\n        value = geometry;\n      }\n    } else {\n      value = transformWithOptions(/** @type {module:ol/geom/Geometry} */ (geometry), true, context);\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      (item), this.GEOMETRY_SERIALIZERS_,\n      this.GEOMETRY_NODE_FACTORY_, [value],\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {string} namespaceURI XML namespace.\n   * @returns {Node} coordinates node.\n   * @private\n   */\n  GML2.prototype.createCoordinatesNode_ = function createCoordinatesNode_ (namespaceURI) {\n    var coordinates = createElementNS(namespaceURI, 'coordinates');\n    coordinates.setAttribute('decimal', '.');\n    coordinates.setAttribute('cs', ',');\n    coordinates.setAttribute('ts', ' ');\n\n    return coordinates;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} value Geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCoordinates_ = function writeCoordinates_ (node, value, objectStack) {\n    var this$1 = this;\n\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    // only 2d for simple features profile\n    var points = value.getCoordinates();\n    var len = points.length;\n    var parts = new Array(len);\n    for (var i = 0; i < len; ++i) {\n      var point = points[i];\n      parts[i] = this$1.getCoords_(point, srsName, hasZ);\n    }\n    writeStringTextNode(node, parts.join(' '));\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LineString} line LineString geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeCurveSegments_ = function writeCurveSegments_ (node, line, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'LineStringSegment');\n    node.appendChild(child);\n    this.writeCurveOrLineString_(child, line, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} geometry Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygon_ = function writeSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (node.nodeName !== 'PolygonPatch' && srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    if (node.nodeName === 'Polygon' || node.nodeName === 'PolygonPatch') {\n      var rings = geometry.getLinearRings();\n      pushSerializeAndPop(\n        {node: node, hasZ: hasZ, srsName: srsName},\n        this.RING_SERIALIZERS_,\n        this.RING_NODE_FACTORY_,\n        rings, objectStack, undefined, this);\n    } else if (node.nodeName === 'Surface') {\n      var patches = createElementNS(node.namespaceURI, 'patches');\n      node.appendChild(patches);\n      this.writeSurfacePatches_(\n        patches, geometry, objectStack);\n    }\n  };\n\n  /**\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node} Node.\n   * @private\n   */\n  GML2.prototype.RING_NODE_FACTORY_ = function RING_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var context = objectStack[objectStack.length - 1];\n    var parentNode = context.node;\n    var exteriorWritten = context['exteriorWritten'];\n    if (exteriorWritten === undefined) {\n      context['exteriorWritten'] = true;\n    }\n    return createElementNS(parentNode.namespaceURI,\n      exteriorWritten !== undefined ? 'innerBoundaryIs' : 'outerBoundaryIs');\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfacePatches_ = function writeSurfacePatches_ (node, polygon, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'PolygonPatch');\n    node.appendChild(child);\n    this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} ring LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeRing_ = function writeRing_ (node, ring, objectStack) {\n    var linearRing = createElementNS(node.namespaceURI, 'LinearRing');\n    node.appendChild(linearRing);\n    this.writeLinearRing_(linearRing, ring, objectStack);\n  };\n\n  /**\n   * @param {Array<number>} point Point geometry.\n   * @param {string=} opt_srsName Optional srsName\n   * @param {boolean=} opt_hasZ whether the geometry has a Z coordinate (is 3D) or not.\n   * @return {string} The coords string.\n   * @private\n   */\n  GML2.prototype.getCoords_ = function getCoords_ (point, opt_srsName, opt_hasZ) {\n    var axisOrientation = 'enu';\n    if (opt_srsName) {\n      axisOrientation = getProjection(opt_srsName).getAxisOrientation();\n    }\n    var coords = ((axisOrientation.substr(0, 2) === 'en') ?\n      point[0] + ',' + point[1] :\n      point[1] + ',' + point[0]);\n    if (opt_hasZ) {\n      // For newly created points, Z can be undefined.\n      var z = point[2] || 0;\n      coords += ',' + z;\n    }\n\n    return coords;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} geometry Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePoint_ = function writePoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    var point = geometry.getCoordinates();\n    var coord = this.getCoords_(point, srsName, hasZ);\n    writeStringTextNode(coordinates, coord);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPoint} geometry MultiPoint geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiPoint_ = function writeMultiPoint_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var points = geometry.getPoints();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName},\n      this.POINTMEMBER_SERIALIZERS_,\n      makeSimpleNodeFactory('pointMember'), points,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Point} point Point geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writePointMember_ = function writePointMember_ (node, point, objectStack) {\n    var child = createElementNS(node.namespaceURI, 'Point');\n    node.appendChild(child);\n    this.writePoint_(child, point, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/LinearRing} geometry LinearRing geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeLinearRing_ = function writeLinearRing_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var coordinates = this.createCoordinatesNode_(node.namespaceURI);\n    node.appendChild(coordinates);\n    this.writeCoordinates_(coordinates, geometry, objectStack);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/MultiPolygon} geometry MultiPolygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeMultiSurfaceOrPolygon_ = function writeMultiSurfaceOrPolygon_ (node, geometry, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var hasZ = context['hasZ'];\n    var srsName = context['srsName'];\n    var surface = context['surface'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var polygons = geometry.getPolygons();\n    pushSerializeAndPop({node: node, hasZ: hasZ, srsName: srsName, surface: surface},\n      this.SURFACEORPOLYGONMEMBER_SERIALIZERS_,\n      this.MULTIGEOMETRY_MEMBER_NODE_FACTORY_, polygons,\n      objectStack, undefined, this);\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/geom/Polygon} polygon Polygon geometry.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeSurfaceOrPolygonMember_ = function writeSurfaceOrPolygonMember_ (node, polygon, objectStack) {\n    var child = this.GEOMETRY_NODE_FACTORY_(\n      polygon, objectStack);\n    if (child) {\n      node.appendChild(child);\n      this.writeSurfaceOrPolygon_(child, polygon, objectStack);\n    }\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {Array<*>} objectStack Node stack.\n   * @private\n   */\n  GML2.prototype.writeEnvelope = function writeEnvelope (node, extent, objectStack) {\n    var context = objectStack[objectStack.length - 1];\n    var srsName = context['srsName'];\n    if (srsName) {\n      node.setAttribute('srsName', srsName);\n    }\n    var keys = ['lowerCorner', 'upperCorner'];\n    var values = [extent[0] + ' ' + extent[1], extent[2] + ' ' + extent[3]];\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */\n      ({node: node}), this.ENVELOPE_SERIALIZERS_,\n      OBJECT_PROPERTY_NODE_FACTORY,\n      values,\n      objectStack, keys, this);\n  };\n\n  /**\n   * @const\n   * @param {*} value Value.\n   * @param {Array<*>} objectStack Object stack.\n   * @param {string=} opt_nodeName Node name.\n   * @return {Node|undefined} Node.\n   * @private\n   */\n  GML2.prototype.MULTIGEOMETRY_MEMBER_NODE_FACTORY_ = function MULTIGEOMETRY_MEMBER_NODE_FACTORY_ (value, objectStack, opt_nodeName) {\n    var parentNode = objectStack[objectStack.length - 1].node;\n    return createElementNS('http://www.opengis.net/gml',\n      MULTIGEOMETRY_TO_MEMBER_NODENAME[parentNode.nodeName]);\n  };\n\n  return GML2;\n}(GMLBase));\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_FLAT_COORDINATES_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeReplacer(GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.FLAT_LINEAR_RINGS_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'innerBoundaryIs': GML2.prototype.innerBoundaryIsParser_,\n    'outerBoundaryIs': GML2.prototype.outerBoundaryIsParser_\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.BOX_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'coordinates': makeArrayPusher(\n      GML2.prototype.readFlatCoordinates_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n * @private\n */\nGML2.prototype.GEOMETRY_PARSERS_ = {\n  'http://www.opengis.net/gml': {\n    'Point': makeReplacer(GMLBase.prototype.readPoint),\n    'MultiPoint': makeReplacer(\n      GMLBase.prototype.readMultiPoint),\n    'LineString': makeReplacer(\n      GMLBase.prototype.readLineString),\n    'MultiLineString': makeReplacer(\n      GMLBase.prototype.readMultiLineString),\n    'LinearRing': makeReplacer(\n      GMLBase.prototype.readLinearRing),\n    'Polygon': makeReplacer(GMLBase.prototype.readPolygon),\n    'MultiPolygon': makeReplacer(\n      GMLBase.prototype.readMultiPolygon),\n    'Box': makeReplacer(GML2.prototype.readBox_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.GEOMETRY_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'Curve': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiCurve': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'Point': makeChildAppender(GML2.prototype.writePoint_),\n    'MultiPoint': makeChildAppender(\n      GML2.prototype.writeMultiPoint_),\n    'LineString': makeChildAppender(\n      GML2.prototype.writeCurveOrLineString_),\n    'MultiLineString': makeChildAppender(\n      GML2.prototype.writeMultiCurveOrLineString_),\n    'LinearRing': makeChildAppender(\n      GML2.prototype.writeLinearRing_),\n    'Polygon': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiPolygon': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Surface': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygon_),\n    'MultiSurface': makeChildAppender(\n      GML2.prototype.writeMultiSurfaceOrPolygon_),\n    'Envelope': makeChildAppender(\n      GML2.prototype.writeEnvelope)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.LINESTRINGORCURVEMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lineStringMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_),\n    'curveMember': makeChildAppender(\n      GML2.prototype.writeLineStringOrCurveMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.RING_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'outerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_),\n    'innerBoundaryIs': makeChildAppender(GML2.prototype.writeRing_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.POINTMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'pointMember': makeChildAppender(\n      GML2.prototype.writePointMember_)\n  }\n};\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.SURFACEORPOLYGONMEMBER_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'surfaceMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_),\n    'polygonMember': makeChildAppender(\n      GML2.prototype.writeSurfaceOrPolygonMember_)\n  }\n};\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n * @private\n */\nGML2.prototype.ENVELOPE_SERIALIZERS_ = {\n  'http://www.opengis.net/gml': {\n    'lowerCorner': makeChildAppender(writeStringTextNode),\n    'upperCorner': makeChildAppender(writeStringTextNode)\n  }\n};\n\nexport default GML2;\n\n//# sourceMappingURL=GML2.js.map","/**\n * @module ol/format/filter/Filter\n */\n\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature filters.\n *\n * @abstract\n */\nvar Filter = function Filter(tagName) {\n\n  /**\n   * @private\n   * @type {!string}\n   */\n  this.tagName_ = tagName;\n};\n\n/**\n * The XML tag name for a filter.\n * @returns {!string} Name.\n */\nFilter.prototype.getTagName = function getTagName () {\n  return this.tagName_;\n};\n\nexport default Filter;\n\n//# sourceMappingURL=Filter.js.map","/**\n * @module ol/format/filter/LogicalNary\n */\nimport {assert} from '../../asserts.js';\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature n-ary logical filters.\n *\n * @abstract\n */\nvar LogicalNary = (function (Filter) {\n  function LogicalNary(tagName, conditions) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {Array<module:ol/format/filter/Filter>}\n     */\n    this.conditions = Array.prototype.slice.call(arguments, 1);\n    assert(this.conditions.length >= 2, 57); // At least 2 conditions are required.\n  }\n\n  if ( Filter ) LogicalNary.__proto__ = Filter;\n  LogicalNary.prototype = Object.create( Filter && Filter.prototype );\n  LogicalNary.prototype.constructor = LogicalNary;\n\n  return LogicalNary;\n}(Filter));\n\nexport default LogicalNary;\n\n//# sourceMappingURL=LogicalNary.js.map","/**\n * @module ol/format/filter/And\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<And>` operator between two or more filter conditions.\n *\n * @abstract\n */\nvar And = (function (LogicalNary) {\n  function And(conditions) {\n    var params = ['And'].concat(Array.prototype.slice.call(arguments));\n    LogicalNary.apply(this, params);\n  }\n\n  if ( LogicalNary ) And.__proto__ = LogicalNary;\n  And.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  And.prototype.constructor = And;\n\n  return And;\n}(LogicalNary));\n\nexport default And;\n\n//# sourceMappingURL=And.js.map","/**\n * @module ol/format/filter/Bbox\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @api\n */\nvar Bbox = (function (Filter) {\n  function Bbox(geometryName, extent, opt_srsName) {\n\n    Filter.call(this, 'BBOX');\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName;\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Bbox.__proto__ = Filter;\n  Bbox.prototype = Object.create( Filter && Filter.prototype );\n  Bbox.prototype.constructor = Bbox;\n\n  return Bbox;\n}(Filter));\n\nexport default Bbox;\n\n//# sourceMappingURL=Bbox.js.map","/**\n * @module ol/format/filter/Spatial\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Represents a spatial operator to test whether a geometry-valued property\n * relates to a given geometry.\n *\n * @abstract\n */\nvar Spatial = (function (Filter) {\n  function Spatial(tagName, geometryName, geometry, opt_srsName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.geometryName = geometryName || 'the_geom';\n\n    /**\n     * @type {module:ol/geom/Geometry}\n     */\n    this.geometry = geometry;\n\n    /**\n     * @type {string|undefined}\n     */\n    this.srsName = opt_srsName;\n  }\n\n  if ( Filter ) Spatial.__proto__ = Filter;\n  Spatial.prototype = Object.create( Filter && Filter.prototype );\n  Spatial.prototype.constructor = Spatial;\n\n  return Spatial;\n}(Filter));\n\nexport default Spatial;\n\n//# sourceMappingURL=Spatial.js.map","/**\n * @module ol/format/filter/Comparison\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property comparison filters.\n *\n * @abstract\n */\nvar Comparison = (function (Filter) {\n  function Comparison(tagName, propertyName) {\n\n    Filter.call(this, tagName);\n\n    /**\n     * @type {!string}\n     */\n    this.propertyName = propertyName;\n  }\n\n  if ( Filter ) Comparison.__proto__ = Filter;\n  Comparison.prototype = Object.create( Filter && Filter.prototype );\n  Comparison.prototype.constructor = Comparison;\n\n  return Comparison;\n}(Filter));\n\nexport default Comparison;\n\n//# sourceMappingURL=Comparison.js.map","/**\n * @module ol/format/filter/Contains\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n * @api\n */\nvar Contains = (function (Spatial) {\n  function Contains(geometryName, geometry, opt_srsName) {\n\n    Spatial.call(this, 'Contains', geometryName, geometry, opt_srsName);\n\n  }\n\n  if ( Spatial ) Contains.__proto__ = Spatial;\n  Contains.prototype = Object.create( Spatial && Spatial.prototype );\n  Contains.prototype.constructor = Contains;\n\n  return Contains;\n}(Spatial));\n\nexport default Contains;\n\n//# sourceMappingURL=Contains.js.map","/**\n * @module ol/format/filter/ComparisonBinary\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Abstract class; normally only used for creating subclasses and not instantiated in apps.\n * Base class for WFS GetFeature property binary comparison filters.\n *\n * @abstract\n */\nvar ComparisonBinary = (function (Comparison) {\n  function ComparisonBinary(tagName, propertyName, expression, opt_matchCase) {\n\n    Comparison.call(this, tagName, propertyName);\n\n    /**\n     * @type {!(string|number)}\n     */\n    this.expression = expression;\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n  }\n\n  if ( Comparison ) ComparisonBinary.__proto__ = Comparison;\n  ComparisonBinary.prototype = Object.create( Comparison && Comparison.prototype );\n  ComparisonBinary.prototype.constructor = ComparisonBinary;\n\n  return ComparisonBinary;\n}(Comparison));\n\nexport default ComparisonBinary;\n\n//# sourceMappingURL=ComparisonBinary.js.map","/**\n * @module ol/format/filter/During\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<During>` comparison operator.\n * @api\n */\nvar During = (function (Comparison) {\n  function During(propertyName, begin, end) {\n    Comparison.call(this, 'During', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.begin = begin;\n\n    /**\n     * @type {!string}\n     */\n    this.end = end;\n  }\n\n  if ( Comparison ) During.__proto__ = Comparison;\n  During.prototype = Object.create( Comparison && Comparison.prototype );\n  During.prototype.constructor = During;\n\n  return During;\n}(Comparison));\n\nexport default During;\n\n//# sourceMappingURL=During.js.map","/**\n * @module ol/format/filter/EqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsEqualTo>` comparison operator.\n * @api\n */\nvar EqualTo = (function (ComparisonBinary) {\n  function EqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) EqualTo.__proto__ = ComparisonBinary;\n  EqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  EqualTo.prototype.constructor = EqualTo;\n\n  return EqualTo;\n}(ComparisonBinary));\n\nexport default EqualTo;\n\n//# sourceMappingURL=EqualTo.js.map","/**\n * @module ol/format/filter/GreaterThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThan>` comparison operator.\n * @api\n */\nvar GreaterThan = (function (ComparisonBinary) {\n  function GreaterThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThan.__proto__ = ComparisonBinary;\n  GreaterThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThan.prototype.constructor = GreaterThan;\n\n  return GreaterThan;\n}(ComparisonBinary));\n\nexport default GreaterThan;\n\n//# sourceMappingURL=GreaterThan.js.map","/**\n * @module ol/format/filter/GreaterThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n * @api\n */\nvar GreaterThanOrEqualTo = (function (ComparisonBinary) {\n  function GreaterThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsGreaterThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) GreaterThanOrEqualTo.__proto__ = ComparisonBinary;\n  GreaterThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  GreaterThanOrEqualTo.prototype.constructor = GreaterThanOrEqualTo;\n\n  return GreaterThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default GreaterThanOrEqualTo;\n\n//# sourceMappingURL=GreaterThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Intersects\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n * @api\n */\nvar Intersects = (function (Spatial) {\n  function Intersects(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Intersects', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Intersects.__proto__ = Spatial;\n  Intersects.prototype = Object.create( Spatial && Spatial.prototype );\n  Intersects.prototype.constructor = Intersects;\n\n  return Intersects;\n}(Spatial));\n\nexport default Intersects;\n\n//# sourceMappingURL=Intersects.js.map","/**\n * @module ol/format/filter/IsBetween\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsBetween>` comparison operator.\n * @api\n */\nvar IsBetween = (function (Comparison) {\n  function IsBetween(propertyName, lowerBoundary, upperBoundary) {\n    Comparison.call(this, 'PropertyIsBetween', propertyName);\n\n    /**\n     * @type {!number}\n     */\n    this.lowerBoundary = lowerBoundary;\n\n    /**\n     * @type {!number}\n     */\n    this.upperBoundary = upperBoundary;\n\n  }\n\n  if ( Comparison ) IsBetween.__proto__ = Comparison;\n  IsBetween.prototype = Object.create( Comparison && Comparison.prototype );\n  IsBetween.prototype.constructor = IsBetween;\n\n  return IsBetween;\n}(Comparison));\n\nexport default IsBetween;\n\n//# sourceMappingURL=IsBetween.js.map","/**\n * @module ol/format/filter/IsLike\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLike>` comparison operator.\n * @api\n */\nvar IsLike = (function (Comparison) {\n  function IsLike(propertyName, pattern, opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n    Comparison.call(this, 'PropertyIsLike', propertyName);\n\n    /**\n     * @type {!string}\n     */\n    this.pattern = pattern;\n\n    /**\n     * @type {!string}\n     */\n    this.wildCard = (opt_wildCard !== undefined) ? opt_wildCard : '*';\n\n    /**\n     * @type {!string}\n     */\n    this.singleChar = (opt_singleChar !== undefined) ? opt_singleChar : '.';\n\n    /**\n     * @type {!string}\n     */\n    this.escapeChar = (opt_escapeChar !== undefined) ? opt_escapeChar : '!';\n\n    /**\n     * @type {boolean|undefined}\n     */\n    this.matchCase = opt_matchCase;\n\n  }\n\n  if ( Comparison ) IsLike.__proto__ = Comparison;\n  IsLike.prototype = Object.create( Comparison && Comparison.prototype );\n  IsLike.prototype.constructor = IsLike;\n\n  return IsLike;\n}(Comparison));\n\nexport default IsLike;\n\n//# sourceMappingURL=IsLike.js.map","/**\n * @module ol/format/filter/IsNull\n */\nimport Comparison from '../filter/Comparison.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNull>` comparison operator.\n * @api\n */\nvar IsNull = (function (Comparison) {\n  function IsNull(propertyName) {\n    Comparison.call(this, 'PropertyIsNull', propertyName);\n  }\n\n  if ( Comparison ) IsNull.__proto__ = Comparison;\n  IsNull.prototype = Object.create( Comparison && Comparison.prototype );\n  IsNull.prototype.constructor = IsNull;\n\n  return IsNull;\n}(Comparison));\n\nexport default IsNull;\n\n//# sourceMappingURL=IsNull.js.map","/**\n * @module ol/format/filter/LessThan\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThan>` comparison operator.\n * @api\n */\nvar LessThan = (function (ComparisonBinary) {\n  function LessThan(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThan', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThan.__proto__ = ComparisonBinary;\n  LessThan.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThan.prototype.constructor = LessThan;\n\n  return LessThan;\n}(ComparisonBinary));\n\nexport default LessThan;\n\n//# sourceMappingURL=LessThan.js.map","/**\n * @module ol/format/filter/LessThanOrEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n * @api\n */\nvar LessThanOrEqualTo = (function (ComparisonBinary) {\n  function LessThanOrEqualTo(propertyName, expression) {\n    ComparisonBinary.call(this, 'PropertyIsLessThanOrEqualTo', propertyName, expression);\n  }\n\n  if ( ComparisonBinary ) LessThanOrEqualTo.__proto__ = ComparisonBinary;\n  LessThanOrEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  LessThanOrEqualTo.prototype.constructor = LessThanOrEqualTo;\n\n  return LessThanOrEqualTo;\n}(ComparisonBinary));\n\nexport default LessThanOrEqualTo;\n\n//# sourceMappingURL=LessThanOrEqualTo.js.map","/**\n * @module ol/format/filter/Not\n */\nimport Filter from '../filter/Filter.js';\n\n/**\n * @classdesc\n * Represents a logical `<Not>` operator for a filter condition.\n * @api\n */\nvar Not = (function (Filter) {\n  function Not(condition) {\n\n    Filter.call(this, 'Not');\n\n    /**\n     * @type {!module:ol/format/filter/Filter}\n     */\n    this.condition = condition;\n\n  }\n\n  if ( Filter ) Not.__proto__ = Filter;\n  Not.prototype = Object.create( Filter && Filter.prototype );\n  Not.prototype.constructor = Not;\n\n  return Not;\n}(Filter));\n\nexport default Not;\n\n//# sourceMappingURL=Not.js.map","/**\n * @module ol/format/filter/NotEqualTo\n */\nimport ComparisonBinary from '../filter/ComparisonBinary.js';\n\n/**\n * @classdesc\n * Represents a `<PropertyIsNotEqualTo>` comparison operator.\n * @api\n */\nvar NotEqualTo = (function (ComparisonBinary) {\n  function NotEqualTo(propertyName, expression, opt_matchCase) {\n    ComparisonBinary.call(this, 'PropertyIsNotEqualTo', propertyName, expression, opt_matchCase);\n  }\n\n  if ( ComparisonBinary ) NotEqualTo.__proto__ = ComparisonBinary;\n  NotEqualTo.prototype = Object.create( ComparisonBinary && ComparisonBinary.prototype );\n  NotEqualTo.prototype.constructor = NotEqualTo;\n\n  return NotEqualTo;\n}(ComparisonBinary));\n\nexport default NotEqualTo;\n\n//# sourceMappingURL=NotEqualTo.js.map","/**\n * @module ol/format/filter/Or\n */\nimport LogicalNary from '../filter/LogicalNary.js';\n\n/**\n * @classdesc\n * Represents a logical `<Or>` operator between two ore more filter conditions.\n * @api\n */\nvar Or = (function (LogicalNary) {\n  function Or(conditions) {\n    var params = ['Or'].concat(Array.prototype.slice.call(arguments));\n    LogicalNary.apply(this, params);\n  }\n\n  if ( LogicalNary ) Or.__proto__ = LogicalNary;\n  Or.prototype = Object.create( LogicalNary && LogicalNary.prototype );\n  Or.prototype.constructor = Or;\n\n  return Or;\n}(LogicalNary));\n\nexport default Or;\n\n//# sourceMappingURL=Or.js.map","/**\n * @module ol/format/filter/Within\n */\nimport Spatial from '../filter/Spatial.js';\n\n/**\n * @classdesc\n * Represents a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n * @api\n */\nvar Within = (function (Spatial) {\n  function Within(geometryName, geometry, opt_srsName) {\n    Spatial.call(this, 'Within', geometryName, geometry, opt_srsName);\n  }\n\n  if ( Spatial ) Within.__proto__ = Spatial;\n  Within.prototype = Object.create( Spatial && Spatial.prototype );\n  Within.prototype.constructor = Within;\n\n  return Within;\n}(Spatial));\n\nexport default Within;\n\n//# sourceMappingURL=Within.js.map","/**\n * @module ol/format/WFS\n */\nimport {assert} from '../asserts.js';\nimport GML2 from '../format/GML2.js';\nimport GML3 from '../format/GML3.js';\nimport GMLBase, {GMLNS} from '../format/GMLBase.js';\nimport {and as andFilter, bbox as bboxFilter} from '../format/filter.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {readNonNegativeIntegerString, readNonNegativeInteger, writeStringTextNode} from '../format/xsd.js';\nimport Geometry from '../geom/Geometry.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {createElementNS, isDocument, isNode, makeArrayPusher, makeChildAppender,\n  makeObjectPropertySetter, makeSimpleNodeFactory, parse, parseNode,\n  pushParseAndPop, pushSerializeAndPop, XML_SCHEMA_INSTANCE_URI} from '../xml.js';\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FEATURE_COLLECTION_PARSERS = {\n  'http://www.opengis.net/gml': {\n    'boundedBy': makeObjectPropertySetter(\n      GMLBase.prototype.readGeometryElement, 'bounds')\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRANSACTION_SUMMARY_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'totalInserted': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalUpdated': makeObjectPropertySetter(readNonNegativeInteger),\n    'totalDeleted': makeObjectPropertySetter(readNonNegativeInteger)\n  }\n};\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TRANSACTION_RESPONSE_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'TransactionSummary': makeObjectPropertySetter(\n      readTransactionSummary, 'transactionSummary'),\n    'InsertResults': makeObjectPropertySetter(\n      readInsertResults, 'insertIds')\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar QUERY_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'PropertyName': makeChildAppender(writeStringTextNode)\n  }\n};\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar TRANSACTION_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Insert': makeChildAppender(writeFeature),\n    'Update': makeChildAppender(writeUpdate),\n    'Delete': makeChildAppender(writeDelete),\n    'Property': makeChildAppender(writeProperty),\n    'Native': makeChildAppender(writeNative)\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {Object<string, string>|string} [featureNS] The namespace URI used for features.\n * @property {Array<string>|string} [featureType] The feature type to parse. Only used for read operations.\n * @property {module:ol/format/GMLBase} [gmlFormat] The GML format to use to parse the response. Default is `ol/format/GML3`.\n * @property {string} [schemaLocation] Optional schemaLocation to use for serialization, this will override the default.\n */\n\n\n/**\n * @typedef {Object} WriteGetFeatureOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {Array<string>} featureTypes The feature type names.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {string} [outputFormat] Output format.\n * @property {number} [maxFeatures] Maximum number of features to fetch.\n * @property {string} [geometryName] Geometry name to use in a BBOX filter.\n * @property {Array<string>} [propertyNames] Optional list of property names to serialize.\n * @property {number} [startIndex] Start index to use for WFS paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services.\n * @property {number} [count] Number of features to retrieve when paging. This is a\n * WFS 2.0 feature backported to WFS 1.1.0 by some Web Feature Services. Please note that some\n * Web Feature Services have repurposed `maxfeatures` instead.\n * @property {module:ol/extent~Extent} [bbox] Extent to use for the BBOX filter.\n * @property {module:ol/format/filter/Filter} [filter] Filter condition. See\n * {@link module:ol/format/Filter} for more information.\n * @property {string} [resultType] Indicates what response should be returned,\n * E.g. `hits` only includes the `numberOfFeatures` attribute in the response and no features.\n */\n\n\n/**\n * @typedef {Object} WriteTransactionOptions\n * @property {string} featureNS The namespace URI used for features.\n * @property {string} featurePrefix The prefix for the feature namespace.\n * @property {string} featureType The feature type name.\n * @property {string} [srsName] SRS name. No srsName attribute will be set on\n * geometries when this is not provided.\n * @property {string} [handle] Handle.\n * @property {boolean} [hasZ] Must be set to true if the transaction is for\n * a 3D layer. This will allow the Z coordinate to be included in the transaction.\n * @property {Array<Object>} nativeElements Native elements. Currently not supported.\n * @property {module:ol/format/GMLBase~Options} [gmlOptions] GML options for the WFS transaction writer.\n * @property {string} [version='1.1.0'] WFS version to use for the transaction. Can be either `1.0.0` or `1.1.0`.\n */\n\n\n/**\n * Number of features; bounds/extent.\n * @typedef {Object} FeatureCollectionMetadata\n * @property {number} numberOfFeatures\n * @property {module:ol/extent~Extent} bounds\n */\n\n\n/**\n * Total deleted; total inserted; total updated; array of insert ids.\n * @typedef {Object} TransactionResponse\n * @property {number} totalDeleted\n * @property {number} totalInserted\n * @property {number} totalUpdated\n * @property {Array<string>} insertIds\n */\n\n\n/**\n * @type {string}\n */\nvar FEATURE_PREFIX = 'feature';\n\n\n/**\n * @type {string}\n */\nvar XMLNS = 'http://www.w3.org/2000/xmlns/';\n\n\n/**\n * @type {string}\n */\nvar OGCNS = 'http://www.opengis.net/ogc';\n\n\n/**\n * @type {string}\n */\nvar WFSNS = 'http://www.opengis.net/wfs';\n\n\n/**\n * @type {string}\n */\nvar FESNS = 'http://www.opengis.net/fes';\n\n\n/**\n * @type {Object<string, string>}\n */\nvar SCHEMA_LOCATIONS = {\n  '1.1.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.1.0/wfs.xsd',\n  '1.0.0': 'http://www.opengis.net/wfs http://schemas.opengis.net/wfs/1.0.0/wfs.xsd'\n};\n\n\n/**\n * @const\n * @type {string}\n */\nvar DEFAULT_VERSION = '1.1.0';\n\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the WFS format.\n * By default, supports WFS version 1.1.0. You can pass a GML format\n * as option if you want to read a WFS that contains GML2 (WFS 1.0.0).\n * Also see {@link module:ol/format/GMLBase~GMLBase} which is used by this format.\n *\n * @api\n */\nvar WFS = (function (XMLFeature) {\n  function WFS(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {Array<string>|string|undefined}\n     */\n    this.featureType_ = options.featureType;\n\n    /**\n     * @private\n     * @type {Object<string, string>|string|undefined}\n     */\n    this.featureNS_ = options.featureNS;\n\n    /**\n     * @private\n     * @type {module:ol/format/GMLBase}\n     */\n    this.gmlFormat_ = options.gmlFormat ?\n      options.gmlFormat : new GML3();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.schemaLocation_ = options.schemaLocation ?\n      options.schemaLocation : SCHEMA_LOCATIONS[DEFAULT_VERSION];\n  }\n\n  if ( XMLFeature ) WFS.__proto__ = XMLFeature;\n  WFS.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WFS.prototype.constructor = WFS;\n\n  /**\n   * @return {Array<string>|string|undefined} featureType\n   */\n  WFS.prototype.getFeatureType = function getFeatureType () {\n    return this.featureType_;\n  };\n\n  /**\n   * @param {Array<string>|string|undefined} featureType Feature type(s) to parse.\n   */\n  WFS.prototype.setFeatureType = function setFeatureType (featureType) {\n    this.featureType_ = featureType;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var context = /** @type {module:ol/xml~NodeStackItem} */ ({\n      'featureType': this.featureType_,\n      'featureNS': this.featureNS_\n    });\n    assign(context, this.getReadOptions(node, opt_options ? opt_options : {}));\n    var objectStack = [context];\n    this.gmlFormat_.FEATURE_COLLECTION_PARSERS[GMLNS][\n      'featureMember'] =\n        makeArrayPusher(GMLBase.prototype.readFeaturesInternal);\n    var features = pushParseAndPop([],\n      this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n      objectStack, this.gmlFormat_);\n    if (!features) {\n      features = [];\n    }\n    return features;\n  };\n\n  /**\n   * Read transaction response of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   * @api\n   */\n  WFS.prototype.readTransactionResponse = function readTransactionResponse (source) {\n    if (isDocument(source)) {\n      return this.readTransactionResponseFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readTransactionResponseFromNode(/** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readTransactionResponseFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Read feature collection metadata of the source.\n   *\n   * @param {Document|Node|Object|string} source Source.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   * @api\n   */\n  WFS.prototype.readFeatureCollectionMetadata = function readFeatureCollectionMetadata (source) {\n    if (isDocument(source)) {\n      return this.readFeatureCollectionMetadataFromDocument(\n        /** @type {Document} */ (source));\n    } else if (isNode(source)) {\n      return this.readFeatureCollectionMetadataFromNode(\n        /** @type {Node} */ (source));\n    } else if (typeof source === 'string') {\n      var doc = parse(source);\n      return this.readFeatureCollectionMetadataFromDocument(doc);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromDocument = function readFeatureCollectionMetadataFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFeatureCollectionMetadataFromNode(n);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~FeatureCollectionMetadata|undefined}\n   *     FeatureCollection metadata.\n   */\n  WFS.prototype.readFeatureCollectionMetadataFromNode = function readFeatureCollectionMetadataFromNode (node) {\n    var result = {};\n    var value = readNonNegativeIntegerString(\n      node.getAttribute('numberOfFeatures'));\n    result['numberOfFeatures'] = value;\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~FeatureCollectionMetadata} */ (result),\n      FEATURE_COLLECTION_PARSERS, node, [], this.gmlFormat_);\n  };\n\n  /**\n   * @param {Document} doc Document.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromDocument = function readTransactionResponseFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readTransactionResponseFromNode(n);\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @return {module:ol/format/WFS~TransactionResponse|undefined} Transaction response.\n   */\n  WFS.prototype.readTransactionResponseFromNode = function readTransactionResponseFromNode (node) {\n    return pushParseAndPop(\n      /** @type {module:ol/format/WFS~TransactionResponse} */({}),\n      TRANSACTION_RESPONSE_PARSERS, node, []);\n  };\n\n  /**\n   * Encode format as WFS `GetFeature` and return the Node.\n   *\n   * @param {module:ol/format/WFS~WriteGetFeatureOptions} options Options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeGetFeature = function writeGetFeature$1 (options) {\n    var node = createElementNS(WFSNS, 'GetFeature');\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', '1.1.0');\n    var filter;\n    if (options) {\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n      if (options.outputFormat) {\n        node.setAttribute('outputFormat', options.outputFormat);\n      }\n      if (options.maxFeatures !== undefined) {\n        node.setAttribute('maxFeatures', options.maxFeatures);\n      }\n      if (options.resultType) {\n        node.setAttribute('resultType', options.resultType);\n      }\n      if (options.startIndex !== undefined) {\n        node.setAttribute('startIndex', options.startIndex);\n      }\n      if (options.count !== undefined) {\n        node.setAttribute('count', options.count);\n      }\n      filter = options.filter;\n      if (options.bbox) {\n        assert(options.geometryName,\n          12); // `options.geometryName` must also be provided when `options.bbox` is set\n        var bbox = bboxFilter(\n          /** @type {string} */ (options.geometryName), options.bbox, options.srsName);\n        if (filter) {\n          // if bbox and filter are both set, combine the two into a single filter\n          filter = andFilter(filter, bbox);\n        } else {\n          filter = bbox;\n        }\n      }\n    }\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', this.schemaLocation_);\n    /** @type {module:ol/xml~NodeStackItem} */\n    var context = {\n      node: node,\n      'srsName': options.srsName,\n      'featureNS': options.featureNS ? options.featureNS : this.featureNS_,\n      'featurePrefix': options.featurePrefix,\n      'geometryName': options.geometryName,\n      'filter': filter,\n      'propertyNames': options.propertyNames ? options.propertyNames : []\n    };\n    assert(Array.isArray(options.featureTypes),\n      11); // `options.featureTypes` should be an Array\n    writeGetFeature(node, /** @type {!Array<string>} */ (options.featureTypes), [context]);\n    return node;\n  };\n\n  /**\n   * Encode format as WFS `Transaction` and return the Node.\n   *\n   * @param {Array<module:ol/Feature>} inserts The features to insert.\n   * @param {Array<module:ol/Feature>} updates The features to update.\n   * @param {Array<module:ol/Feature>} deletes The features to delete.\n   * @param {module:ol/format/WFS~WriteTransactionOptions} options Write options.\n   * @return {Node} Result.\n   * @api\n   */\n  WFS.prototype.writeTransaction = function writeTransaction (inserts, updates, deletes, options) {\n    var objectStack = [];\n    var node = createElementNS(WFSNS, 'Transaction');\n    var version = options.version ? options.version : DEFAULT_VERSION;\n    var gmlVersion = version === '1.0.0' ? 2 : 3;\n    node.setAttribute('service', 'WFS');\n    node.setAttribute('version', version);\n    var baseObj;\n    /** @type {module:ol/xml~NodeStackItem} */\n    var obj;\n    if (options) {\n      baseObj = options.gmlOptions ? options.gmlOptions : {};\n      if (options.handle) {\n        node.setAttribute('handle', options.handle);\n      }\n    }\n    var schemaLocation = SCHEMA_LOCATIONS[version];\n    node.setAttributeNS(XML_SCHEMA_INSTANCE_URI, 'xsi:schemaLocation', schemaLocation);\n    var featurePrefix = options.featurePrefix ? options.featurePrefix : FEATURE_PREFIX;\n    if (inserts) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Insert'), inserts,\n        objectStack);\n    }\n    if (updates) {\n      obj = {node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'hasZ': options.hasZ, 'srsName': options.srsName};\n      assign(obj, baseObj);\n      pushSerializeAndPop(obj,\n        TRANSACTION_SERIALIZERS,\n        makeSimpleNodeFactory('Update'), updates,\n        objectStack);\n    }\n    if (deletes) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Delete'), deletes,\n      objectStack);\n    }\n    if (options.nativeElements) {\n      pushSerializeAndPop({node: node, 'featureNS': options.featureNS,\n        'featureType': options.featureType, 'featurePrefix': featurePrefix,\n        'gmlVersion': gmlVersion, 'srsName': options.srsName},\n      TRANSACTION_SERIALIZERS,\n      makeSimpleNodeFactory('Native'), options.nativeElements,\n      objectStack);\n    }\n    return node;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromDocument = function readProjectionFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readProjectionFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WFS.prototype.readProjectionFromNode = function readProjectionFromNode (node) {\n    var this$1 = this;\n\n    if (node.firstElementChild &&\n        node.firstElementChild.firstElementChild) {\n      node = node.firstElementChild.firstElementChild;\n      for (var n = node.firstElementChild; n; n = n.nextElementSibling) {\n        if (!(n.childNodes.length === 0 ||\n            (n.childNodes.length === 1 &&\n            n.firstChild.nodeType === 3))) {\n          var objectStack = [{}];\n          this$1.gmlFormat_.readGeometryElement(n, objectStack);\n          return getProjection(objectStack.pop().srsName);\n        }\n      }\n    }\n\n    return null;\n  };\n\n  return WFS;\n}(XMLFeature));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Transaction Summary.\n */\nfunction readTransactionSummary(node, objectStack) {\n  return pushParseAndPop(\n    {}, TRANSACTION_SUMMARY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OGC_FID_PARSERS = {\n  'http://www.opengis.net/ogc': {\n    'FeatureId': makeArrayPusher(function(node, objectStack) {\n      return node.getAttribute('fid');\n    })\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n */\nfunction fidParser(node, objectStack) {\n  parseNode(OGC_FID_PARSERS, node, objectStack);\n}\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar INSERT_RESULTS_PARSERS = {\n  'http://www.opengis.net/wfs': {\n    'Feature': fidParser\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Insert results.\n */\nfunction readInsertResults(node, objectStack) {\n  return pushParseAndPop(\n    [], INSERT_RESULTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFeature(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  var featureType = context['featureType'];\n  var featureNS = context['featureNS'];\n  var gmlVersion = context['gmlVersion'];\n  var child = createElementNS(featureNS, featureType);\n  node.appendChild(child);\n  if (gmlVersion === 2) {\n    GML2.prototype.writeFeatureElement(child, feature, objectStack);\n  } else {\n    GML3.prototype.writeFeatureElement(child, feature, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {number|string} fid Feature identifier.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeOgcFidFilter(node, fid, objectStack) {\n  var filter = createElementNS(OGCNS, 'Filter');\n  var child = createElementNS(OGCNS, 'FeatureId');\n  filter.appendChild(child);\n  child.setAttribute('fid', fid);\n  node.appendChild(filter);\n}\n\n\n/**\n * @param {string|undefined} featurePrefix The prefix of the feature.\n * @param {string} featureType The type of the feature.\n * @returns {string} The value of the typeName property.\n */\nfunction getTypeName(featurePrefix, featureType) {\n  featurePrefix = featurePrefix ? featurePrefix : FEATURE_PREFIX;\n  var prefix = featurePrefix + ':';\n  // The featureType already contains the prefix.\n  if (featureType.indexOf(prefix) === 0) {\n    return featureType;\n  } else {\n    return prefix + featureType;\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDelete(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 26); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/Feature} feature Feature.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeUpdate(node, feature, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  assert(feature.getId() !== undefined, 27); // Features must have an id set\n  var featureType = context['featureType'];\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var typeName = getTypeName(featurePrefix, featureType);\n  var geometryName = feature.getGeometryName();\n  node.setAttribute('typeName', typeName);\n  node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  var fid = feature.getId();\n  if (fid !== undefined) {\n    var keys = feature.getKeys();\n    var values = [];\n    for (var i = 0, ii = keys.length; i < ii; i++) {\n      var value = feature.get(keys[i]);\n      if (value !== undefined) {\n        var name = keys[i];\n        if (value instanceof Geometry) {\n          name = geometryName;\n        }\n        values.push({name: name, value: value});\n      }\n    }\n    pushSerializeAndPop(/** @type {module:ol/xml~NodeStackItem} */ (\n      {'gmlVersion': context['gmlVersion'], node: node,\n        'hasZ': context['hasZ'], 'srsName': context['srsName']}),\n    TRANSACTION_SERIALIZERS,\n    makeSimpleNodeFactory('Property'), values,\n    objectStack);\n    writeOgcFidFilter(node, fid, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Object} pair Property name and value.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeProperty(node, pair, objectStack) {\n  var name = createElementNS(WFSNS, 'Name');\n  var context = objectStack[objectStack.length - 1];\n  var gmlVersion = context['gmlVersion'];\n  node.appendChild(name);\n  writeStringTextNode(name, pair.name);\n  if (pair.value !== undefined && pair.value !== null) {\n    var value = createElementNS(WFSNS, 'Value');\n    node.appendChild(value);\n    if (pair.value instanceof Geometry) {\n      if (gmlVersion === 2) {\n        GML2.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      } else {\n        GML3.prototype.writeGeometryElement(value,\n          pair.value, objectStack);\n      }\n    } else {\n      writeStringTextNode(value, pair.value);\n    }\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {{vendorId: string, safeToIgnore: boolean, value: string}} nativeElement The native element.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNative(node, nativeElement, objectStack) {\n  if (nativeElement.vendorId) {\n    node.setAttribute('vendorId', nativeElement.vendorId);\n  }\n  if (nativeElement.safeToIgnore !== undefined) {\n    node.setAttribute('safeToIgnore', nativeElement.safeToIgnore);\n  }\n  if (nativeElement.value !== undefined) {\n    writeStringTextNode(node, nativeElement.value);\n  }\n}\n\n\n/**\n * @type {Object<string, Object<string, module:ol/xml~Serializer>>}\n */\nvar GETFEATURE_SERIALIZERS = {\n  'http://www.opengis.net/wfs': {\n    'Query': makeChildAppender(writeQuery)\n  },\n  'http://www.opengis.net/ogc': {\n    'During': makeChildAppender(writeDuringFilter),\n    'And': makeChildAppender(writeLogicalFilter),\n    'Or': makeChildAppender(writeLogicalFilter),\n    'Not': makeChildAppender(writeNotFilter),\n    'BBOX': makeChildAppender(writeBboxFilter),\n    'Contains': makeChildAppender(writeContainsFilter),\n    'Intersects': makeChildAppender(writeIntersectsFilter),\n    'Within': makeChildAppender(writeWithinFilter),\n    'PropertyIsEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNotEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsLessThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThan': makeChildAppender(writeComparisonFilter),\n    'PropertyIsGreaterThanOrEqualTo': makeChildAppender(writeComparisonFilter),\n    'PropertyIsNull': makeChildAppender(writeIsNullFilter),\n    'PropertyIsBetween': makeChildAppender(writeIsBetweenFilter),\n    'PropertyIsLike': makeChildAppender(writeIsLikeFilter)\n  }\n};\n\n\n/**\n * @param {Node} node Node.\n * @param {string} featureType Feature type.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeQuery(node, featureType, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var featurePrefix = context['featurePrefix'];\n  var featureNS = context['featureNS'];\n  var propertyNames = context['propertyNames'];\n  var srsName = context['srsName'];\n  var typeName;\n  // If feature prefix is not defined, we must not use the default prefix.\n  if (featurePrefix) {\n    typeName = getTypeName(featurePrefix, featureType);\n  } else {\n    typeName = featureType;\n  }\n  node.setAttribute('typeName', typeName);\n  if (srsName) {\n    node.setAttribute('srsName', srsName);\n  }\n  if (featureNS) {\n    node.setAttributeNS(XMLNS, 'xmlns:' + featurePrefix, featureNS);\n  }\n  var item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    QUERY_SERIALIZERS,\n    makeSimpleNodeFactory('PropertyName'), propertyNames,\n    objectStack);\n  var filter = context['filter'];\n  if (filter) {\n    var child = createElementNS(OGCNS, 'Filter');\n    node.appendChild(child);\n    writeFilterCondition(child, filter, objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeFilterCondition(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(filter.getTagName()),\n    [filter], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Bbox} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeBboxFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.extent, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Contains} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeContainsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Intersects} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIntersectsFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Within} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeWithinFilter(node, filter, objectStack) {\n  var context = objectStack[objectStack.length - 1];\n  context['srsName'] = filter.srsName;\n\n  writeOgcPropertyName(node, filter.geometryName);\n  GML3.prototype.writeGeometryElement(node, filter.geometry, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/During} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeDuringFilter(node, filter, objectStack) {\n\n  var valueReference = createElementNS(FESNS, 'ValueReference');\n  writeStringTextNode(valueReference, filter.propertyName);\n  node.appendChild(valueReference);\n\n  var timePeriod = createElementNS(GMLNS, 'TimePeriod');\n\n  node.appendChild(timePeriod);\n\n  var begin = createElementNS(GMLNS, 'begin');\n  timePeriod.appendChild(begin);\n  writeTimeInstant(begin, filter.begin);\n\n  var end = createElementNS(GMLNS, 'end');\n  timePeriod.appendChild(end);\n  writeTimeInstant(end, filter.end);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/LogicalNary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeLogicalFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  var conditions = filter.conditions;\n  for (var i = 0, ii = conditions.length; i < ii; ++i) {\n    var condition = conditions[i];\n    pushSerializeAndPop(item,\n      GETFEATURE_SERIALIZERS,\n      makeSimpleNodeFactory(condition.getTagName()),\n      [condition], objectStack);\n  }\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/Not} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeNotFilter(node, filter, objectStack) {\n  /** @type {module:ol/xml~NodeStackItem} */\n  var item = {node: node};\n  var condition = filter.condition;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory(condition.getTagName()),\n    [condition], objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/ComparisonBinary} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeComparisonFilter(node, filter, objectStack) {\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.expression);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsNull} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsNullFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsBetween} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsBetweenFilter(node, filter, objectStack) {\n  writeOgcPropertyName(node, filter.propertyName);\n\n  var lowerBoundary = createElementNS(OGCNS, 'LowerBoundary');\n  node.appendChild(lowerBoundary);\n  writeOgcLiteral(lowerBoundary, '' + filter.lowerBoundary);\n\n  var upperBoundary = createElementNS(OGCNS, 'UpperBoundary');\n  node.appendChild(upperBoundary);\n  writeOgcLiteral(upperBoundary, '' + filter.upperBoundary);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {module:ol/format/filter/IsLike} filter Filter.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeIsLikeFilter(node, filter, objectStack) {\n  node.setAttribute('wildCard', filter.wildCard);\n  node.setAttribute('singleChar', filter.singleChar);\n  node.setAttribute('escapeChar', filter.escapeChar);\n  if (filter.matchCase !== undefined) {\n    node.setAttribute('matchCase', filter.matchCase.toString());\n  }\n  writeOgcPropertyName(node, filter.propertyName);\n  writeOgcLiteral(node, '' + filter.pattern);\n}\n\n\n/**\n * @param {string} tagName Tag name.\n * @param {Node} node Node.\n * @param {string} value Value.\n */\nfunction writeOgcExpression(tagName, node, value) {\n  var property = createElementNS(OGCNS, tagName);\n  writeStringTextNode(property, value);\n  node.appendChild(property);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcPropertyName(node, value) {\n  writeOgcExpression('PropertyName', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} value PropertyName value.\n */\nfunction writeOgcLiteral(node, value) {\n  writeOgcExpression('Literal', node, value);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {string} time PropertyName value.\n */\nfunction writeTimeInstant(node, time) {\n  var timeInstant = createElementNS(GMLNS, 'TimeInstant');\n  node.appendChild(timeInstant);\n\n  var timePosition = createElementNS(GMLNS, 'timePosition');\n  timeInstant.appendChild(timePosition);\n  writeStringTextNode(timePosition, time);\n}\n\n\n/**\n * Encode filter as WFS `Filter` and return the Node.\n *\n * @param {module:ol/format/filter/Filter} filter Filter.\n * @return {Node} Result.\n * @api\n */\nexport function writeFilter(filter) {\n  var child = createElementNS(OGCNS, 'Filter');\n  writeFilterCondition(child, filter, []);\n  return child;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<string>} featureTypes Feature types.\n * @param {Array<*>} objectStack Node stack.\n */\nfunction writeGetFeature(node, featureTypes, objectStack) {\n  var context = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  var item = /** @type {module:ol/xml~NodeStackItem} */ (assign({}, context));\n  item.node = node;\n  pushSerializeAndPop(item,\n    GETFEATURE_SERIALIZERS,\n    makeSimpleNodeFactory('Query'), featureTypes,\n    objectStack);\n}\n\n\nexport default WFS;\n\n//# sourceMappingURL=WFS.js.map","/**\n * @module ol/format/filter\n */\nimport And from '../format/filter/And.js';\nimport Bbox from '../format/filter/Bbox.js';\nimport Contains from '../format/filter/Contains.js';\nimport During from '../format/filter/During.js';\nimport EqualTo from '../format/filter/EqualTo.js';\nimport GreaterThan from '../format/filter/GreaterThan.js';\nimport GreaterThanOrEqualTo from '../format/filter/GreaterThanOrEqualTo.js';\nimport Intersects from '../format/filter/Intersects.js';\nimport IsBetween from '../format/filter/IsBetween.js';\nimport IsLike from '../format/filter/IsLike.js';\nimport IsNull from '../format/filter/IsNull.js';\nimport LessThan from '../format/filter/LessThan.js';\nimport LessThanOrEqualTo from '../format/filter/LessThanOrEqualTo.js';\nimport Not from '../format/filter/Not.js';\nimport NotEqualTo from '../format/filter/NotEqualTo.js';\nimport Or from '../format/filter/Or.js';\nimport Within from '../format/filter/Within.js';\n\n\n/**\n * Create a logical `<And>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/And} `<And>` operator.\n * @api\n */\nexport function and(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(And, params));\n}\n\n\n/**\n * Create a logical `<Or>` operator between two or more filter conditions.\n *\n * @param {...module:ol/format/filter/Filter} conditions Filter conditions.\n * @returns {!module:ol/format/filter/Or} `<Or>` operator.\n * @api\n */\nexport function or(conditions) {\n  var params = [null].concat(Array.prototype.slice.call(arguments));\n  return new (Function.prototype.bind.apply(Or, params));\n}\n\n\n/**\n * Represents a logical `<Not>` operator for a filter condition.\n *\n * @param {!module:ol/format/filter/Filter} condition Filter condition.\n * @returns {!module:ol/format/filter/Not} `<Not>` operator.\n * @api\n */\nexport function not(condition) {\n  return new Not(condition);\n}\n\n\n/**\n * Create a `<BBOX>` operator to test whether a geometry-valued property\n * intersects a fixed bounding box\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/extent~Extent} extent Extent.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Bbox} `<BBOX>` operator.\n * @api\n */\nexport function bbox(geometryName, extent, opt_srsName) {\n  return new Bbox(geometryName, extent, opt_srsName);\n}\n\n/**\n * Create a `<Contains>` operator to test whether a geometry-valued property\n * contains a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Contains} `<Contains>` operator.\n * @api\n */\nexport function contains(geometryName, geometry, opt_srsName) {\n  return new Contains(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Intersects>` operator to test whether a geometry-valued property\n * intersects a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Intersects} `<Intersects>` operator.\n * @api\n */\nexport function intersects(geometryName, geometry, opt_srsName) {\n  return new Intersects(geometryName, geometry, opt_srsName);\n}\n\n/**\n * Create a `<Within>` operator to test whether a geometry-valued property\n * is within a given geometry.\n *\n * @param {!string} geometryName Geometry name to use.\n * @param {!module:ol/geom/Geometry} geometry Geometry.\n * @param {string=} opt_srsName SRS name. No srsName attribute will be\n *    set on geometries when this is not provided.\n * @returns {!module:ol/format/filter/Within} `<Within>` operator.\n * @api\n */\nexport function within(geometryName, geometry, opt_srsName) {\n  return new Within(geometryName, geometry, opt_srsName);\n}\n\n\n/**\n * Creates a `<PropertyIsEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/EqualTo} `<PropertyIsEqualTo>` operator.\n * @api\n */\nexport function equalTo(propertyName, expression, opt_matchCase) {\n  return new EqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsNotEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!(string|number)} expression The value to compare.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/NotEqualTo} `<PropertyIsNotEqualTo>` operator.\n * @api\n */\nexport function notEqualTo(propertyName, expression, opt_matchCase) {\n  return new NotEqualTo(propertyName, expression, opt_matchCase);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThan} `<PropertyIsLessThan>` operator.\n * @api\n */\nexport function lessThan(propertyName, expression) {\n  return new LessThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsLessThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/LessThanOrEqualTo} `<PropertyIsLessThanOrEqualTo>` operator.\n * @api\n */\nexport function lessThanOrEqualTo(propertyName, expression) {\n  return new LessThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThan>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThan} `<PropertyIsGreaterThan>` operator.\n * @api\n */\nexport function greaterThan(propertyName, expression) {\n  return new GreaterThan(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsGreaterThanOrEqualTo>` comparison operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} expression The value to compare.\n * @returns {!module:ol/format/filter/GreaterThanOrEqualTo} `<PropertyIsGreaterThanOrEqualTo>` operator.\n * @api\n */\nexport function greaterThanOrEqualTo(propertyName, expression) {\n  return new GreaterThanOrEqualTo(propertyName, expression);\n}\n\n\n/**\n * Creates a `<PropertyIsNull>` comparison operator to test whether a property value\n * is null.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @returns {!module:ol/format/filter/IsNull} `<PropertyIsNull>` operator.\n * @api\n */\nexport function isNull(propertyName) {\n  return new IsNull(propertyName);\n}\n\n\n/**\n * Creates a `<PropertyIsBetween>` comparison operator to test whether an expression\n * value lies within a range given by a lower and upper bound (inclusive).\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!number} lowerBoundary The lower bound of the range.\n * @param {!number} upperBoundary The upper bound of the range.\n * @returns {!module:ol/format/filter/IsBetween} `<PropertyIsBetween>` operator.\n * @api\n */\nexport function between(propertyName, lowerBoundary, upperBoundary) {\n  return new IsBetween(propertyName, lowerBoundary, upperBoundary);\n}\n\n\n/**\n * Represents a `<PropertyIsLike>` comparison operator that matches a string property\n * value against a text pattern.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} pattern Text pattern.\n * @param {string=} opt_wildCard Pattern character which matches any sequence of\n *    zero or more string characters. Default is '*'.\n * @param {string=} opt_singleChar pattern character which matches any single\n *    string character. Default is '.'.\n * @param {string=} opt_escapeChar Escape character which can be used to escape\n *    the pattern characters. Default is '!'.\n * @param {boolean=} opt_matchCase Case-sensitive?\n * @returns {!module:ol/format/filter/IsLike} `<PropertyIsLike>` operator.\n * @api\n */\nexport function like(propertyName, pattern,\n  opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase) {\n  return new IsLike(propertyName, pattern,\n    opt_wildCard, opt_singleChar, opt_escapeChar, opt_matchCase);\n}\n\n\n/**\n * Create a `<During>` temporal operator.\n *\n * @param {!string} propertyName Name of the context property to compare.\n * @param {!string} begin The begin date in ISO-8601 format.\n * @param {!string} end The end date in ISO-8601 format.\n * @returns {!module:ol/format/filter/During} `<During>` operator.\n * @api\n */\nexport function during(propertyName, begin, end) {\n  return new During(propertyName, begin, end);\n}\n\n//# sourceMappingURL=filter.js.map","/**\n * @module ol/format/WKT\n */\nimport Feature from '../Feature.js';\nimport {transformWithOptions} from '../format/Feature.js';\nimport TextFeature from '../format/TextFeature.js';\nimport GeometryCollection from '../geom/GeometryCollection.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport GeometryLayout from '../geom/GeometryLayout.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport SimpleGeometry from '../geom/SimpleGeometry.js';\n\n\n/**\n * @enum {function (new:module:ol/geom/Geometry, Array, module:ol/geom/GeometryLayout)}\n */\nvar GeometryConstructor = {\n  'POINT': Point,\n  'LINESTRING': LineString,\n  'POLYGON': Polygon,\n  'MULTIPOINT': MultiPoint,\n  'MULTILINESTRING': MultiLineString,\n  'MULTIPOLYGON': MultiPolygon\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [splitCollection=false] Whether to split GeometryCollections into\n * multiple features on reading.\n */\n\n/**\n * @typedef {Object} Token\n * @property {number} type\n * @property {number|string} [value]\n * @property {number} position\n */\n\n/**\n * @const\n * @type {string}\n */\nvar EMPTY = 'EMPTY';\n\n\n/**\n * @const\n * @type {string}\n */\nvar Z = 'Z';\n\n\n/**\n * @const\n * @type {string}\n */\nvar M = 'M';\n\n\n/**\n * @const\n * @type {string}\n */\nvar ZM = 'ZM';\n\n\n/**\n * @const\n * @enum {number}\n */\nvar TokenType = {\n  TEXT: 1,\n  LEFT_PAREN: 2,\n  RIGHT_PAREN: 3,\n  NUMBER: 4,\n  COMMA: 5,\n  EOF: 6\n};\n\n/**\n * @const\n * @type {Object<string, string>}\n */\nvar WKTGeometryType = {};\nfor (var type in GeometryType) {\n  WKTGeometryType[type] = GeometryType[type].toUpperCase();\n}\n\n\n/**\n * Class to tokenize a WKT string.\n */\nvar Lexer = function Lexer(wkt) {\n\n  /**\n   * @type {string}\n   */\n  this.wkt = wkt;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.index_ = -1;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is alphabetic.\n * @private\n */\nLexer.prototype.isAlpha_ = function isAlpha_ (c) {\n  return c >= 'a' && c <= 'z' || c >= 'A' && c <= 'Z';\n};\n\n/**\n * @param {string} c Character.\n * @param {boolean=} opt_decimal Whether the string number\n *   contains a dot, i.e. is a decimal number.\n * @return {boolean} Whether the character is numeric.\n * @private\n */\nLexer.prototype.isNumeric_ = function isNumeric_ (c, opt_decimal) {\n  var decimal = opt_decimal !== undefined ? opt_decimal : false;\n  return c >= '0' && c <= '9' || c == '.' && !decimal;\n};\n\n/**\n * @param {string} c Character.\n * @return {boolean} Whether the character is whitespace.\n * @private\n */\nLexer.prototype.isWhiteSpace_ = function isWhiteSpace_ (c) {\n  return c == ' ' || c == '\\t' || c == '\\r' || c == '\\n';\n};\n\n/**\n * @return {string} Next string character.\n * @private\n */\nLexer.prototype.nextChar_ = function nextChar_ () {\n  return this.wkt.charAt(++this.index_);\n};\n\n/**\n * Fetch and return the next token.\n * @return {!module:ol/format/WKT~Token} Next string token.\n */\nLexer.prototype.nextToken = function nextToken () {\n  var c = this.nextChar_();\n  var token = {position: this.index_, value: c};\n\n  if (c == '(') {\n    token.type = TokenType.LEFT_PAREN;\n  } else if (c == ',') {\n    token.type = TokenType.COMMA;\n  } else if (c == ')') {\n    token.type = TokenType.RIGHT_PAREN;\n  } else if (this.isNumeric_(c) || c == '-') {\n    token.type = TokenType.NUMBER;\n    token.value = this.readNumber_();\n  } else if (this.isAlpha_(c)) {\n    token.type = TokenType.TEXT;\n    token.value = this.readText_();\n  } else if (this.isWhiteSpace_(c)) {\n    return this.nextToken();\n  } else if (c === '') {\n    token.type = TokenType.EOF;\n  } else {\n    throw new Error('Unexpected character: ' + c);\n  }\n\n  return token;\n};\n\n/**\n * @return {number} Numeric token value.\n * @private\n */\nLexer.prototype.readNumber_ = function readNumber_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  var decimal = false;\n  var scientificNotation = false;\n  do {\n    if (c == '.') {\n      decimal = true;\n    } else if (c == 'e' || c == 'E') {\n      scientificNotation = true;\n    }\n    c = this$1.nextChar_();\n  } while (\n    this.isNumeric_(c, decimal) ||\n      // if we haven't detected a scientific number before, 'e' or 'E'\n      // hint that we should continue to read\n      !scientificNotation && (c == 'e' || c == 'E') ||\n      // once we know that we have a scientific number, both '-' and '+'\n      // are allowed\n      scientificNotation && (c == '-' || c == '+')\n  );\n  return parseFloat(this.wkt.substring(index, this.index_--));\n};\n\n/**\n * @return {string} String token value.\n * @private\n */\nLexer.prototype.readText_ = function readText_ () {\n    var this$1 = this;\n\n  var c;\n  var index = this.index_;\n  do {\n    c = this$1.nextChar_();\n  } while (this.isAlpha_(c));\n  return this.wkt.substring(index, this.index_--).toUpperCase();\n};\n\n/**\n * Class to parse the tokens from the WKT string.\n */\nvar Parser = function Parser(lexer) {\n\n  /**\n   * @type {module:ol/format/WKT~Lexer}\n   * @private\n   */\n  this.lexer_ = lexer;\n\n  /**\n   * @type {module:ol/format/WKT~Token}\n   * @private\n   */\n  this.token_;\n\n  /**\n   * @type {module:ol/geom/GeometryLayout}\n   * @private\n   */\n  this.layout_ = GeometryLayout.XY;\n};\n\n/**\n * Fetch the next token form the lexer and replace the active token.\n * @private\n */\nParser.prototype.consume_ = function consume_ () {\n  this.token_ = this.lexer_.nextToken();\n};\n\n/**\n * Tests if the given type matches the type of the current token.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.isTokenType = function isTokenType (type) {\n  var isMatch = this.token_.type == type;\n  return isMatch;\n};\n\n/**\n * If the given type matches the current token, consume it.\n * @param {module:ol/format/WKT~TokenType} type Token type.\n * @return {boolean} Whether the token matches the given type.\n */\nParser.prototype.match = function match (type) {\n  var isMatch = this.isTokenType(type);\n  if (isMatch) {\n    this.consume_();\n  }\n  return isMatch;\n};\n\n/**\n * Try to parse the tokens provided by the lexer.\n * @return {module:ol/geom/Geometry} The geometry.\n */\nParser.prototype.parse = function parse () {\n  this.consume_();\n  var geometry = this.parseGeometry_();\n  return geometry;\n};\n\n/**\n * Try to parse the dimensional info.\n * @return {module:ol/geom/GeometryLayout} The layout.\n * @private\n */\nParser.prototype.parseGeometryLayout_ = function parseGeometryLayout_ () {\n  var layout = GeometryLayout.XY;\n  var dimToken = this.token_;\n  if (this.isTokenType(TokenType.TEXT)) {\n    var dimInfo = dimToken.value;\n    if (dimInfo === Z) {\n      layout = GeometryLayout.XYZ;\n    } else if (dimInfo === M) {\n      layout = GeometryLayout.XYM;\n    } else if (dimInfo === ZM) {\n      layout = GeometryLayout.XYZM;\n    }\n    if (layout !== GeometryLayout.XY) {\n      this.consume_();\n    }\n  }\n  return layout;\n};\n\n/**\n * @return {!Array<module:ol/geom/Geometry>} A collection of geometries.\n * @private\n */\nParser.prototype.parseGeometryCollectionText_ = function parseGeometryCollectionText_ () {\n    var this$1 = this;\n\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var geometries = [];\n    do {\n      geometries.push(this$1.parseGeometry_());\n    } while (this.match(TokenType.COMMA));\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return geometries;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {Array<number>} All values in a point.\n * @private\n */\nParser.prototype.parsePointText_ = function parsePointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePoint_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return null;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a linestring.\n * @private\n */\nParser.prototype.parseLineStringText_ = function parseLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePointList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a polygon.\n * @private\n */\nParser.prototype.parsePolygonText_ = function parsePolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All points in a multipoint.\n * @private\n */\nParser.prototype.parseMultiPointText_ = function parseMultiPointText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates;\n    if (this.token_.type == TokenType.LEFT_PAREN) {\n      coordinates = this.parsePointTextList_();\n    } else {\n      coordinates = this.parsePointList_();\n    }\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All linestring points\n *                                      in a multilinestring.\n * @private\n */\nParser.prototype.parseMultiLineStringText_ = function parseMultiLineStringText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parseLineStringTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} All polygon points in a multipolygon.\n * @private\n */\nParser.prototype.parseMultiPolygonText_ = function parseMultiPolygonText_ () {\n  if (this.match(TokenType.LEFT_PAREN)) {\n    var coordinates = this.parsePolygonTextList_();\n    if (this.match(TokenType.RIGHT_PAREN)) {\n      return coordinates;\n    }\n  } else if (this.isEmptyGeometry_()) {\n    return [];\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<number>} A point.\n * @private\n */\nParser.prototype.parsePoint_ = function parsePoint_ () {\n    var this$1 = this;\n\n  var coordinates = [];\n  var dimensions = this.layout_.length;\n  for (var i = 0; i < dimensions; ++i) {\n    var token = this$1.token_;\n    if (this$1.match(TokenType.NUMBER)) {\n      coordinates.push(token.value);\n    } else {\n      break;\n    }\n  }\n  if (coordinates.length == dimensions) {\n    return coordinates;\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointList_ = function parsePointList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePoint_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePoint_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePointTextList_ = function parsePointTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePointText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePointText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parseLineStringTextList_ = function parseLineStringTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parseLineStringText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parseLineStringText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {!Array<!Array<number>>} An array of points.\n * @private\n */\nParser.prototype.parsePolygonTextList_ = function parsePolygonTextList_ () {\n    var this$1 = this;\n\n  var coordinates = [this.parsePolygonText_()];\n  while (this.match(TokenType.COMMA)) {\n    coordinates.push(this$1.parsePolygonText_());\n  }\n  return coordinates;\n};\n\n/**\n * @return {boolean} Whether the token implies an empty geometry.\n * @private\n */\nParser.prototype.isEmptyGeometry_ = function isEmptyGeometry_ () {\n  var isEmpty = this.isTokenType(TokenType.TEXT) &&\n      this.token_.value == EMPTY;\n  if (isEmpty) {\n    this.consume_();\n  }\n  return isEmpty;\n};\n\n/**\n * Create an error message for an unexpected token error.\n * @return {string} Error message.\n * @private\n */\nParser.prototype.formatErrorMessage_ = function formatErrorMessage_ () {\n  return 'Unexpected `' + this.token_.value + '` at position ' +\n      this.token_.position + ' in `' + this.lexer_.wkt + '`';\n};\n\n/**\n * @return {!module:ol/geom/Geometry} The geometry.\n * @private\n */\nParser.prototype.parseGeometry_ = function parseGeometry_ () {\n  var token = this.token_;\n  if (this.match(TokenType.TEXT)) {\n    var geomType = token.value;\n    this.layout_ = this.parseGeometryLayout_();\n    if (geomType == 'GEOMETRYCOLLECTION') {\n      var geometries = this.parseGeometryCollectionText_();\n      return new GeometryCollection(geometries);\n    } else {\n      var ctor = GeometryConstructor[geomType];\n      if (!ctor) {\n        throw new Error('Invalid geometry type: ' + geomType);\n      }\n\n      var coordinates;\n      switch (geomType) {\n        case 'POINT': {\n          coordinates = this.parsePointText_();\n          break;\n        }\n        case 'LINESTRING': {\n          coordinates = this.parseLineStringText_();\n          break;\n        }\n        case 'POLYGON': {\n          coordinates = this.parsePolygonText_();\n          break;\n        }\n        case 'MULTIPOINT': {\n          coordinates = this.parseMultiPointText_();\n          break;\n        }\n        case 'MULTILINESTRING': {\n          coordinates = this.parseMultiLineStringText_();\n          break;\n        }\n        case 'MULTIPOLYGON': {\n          coordinates = this.parseMultiPolygonText_();\n          break;\n        }\n        default: {\n          throw new Error('Invalid geometry type: ' + geomType);\n        }\n      }\n\n      if (!coordinates) {\n        if (ctor === GeometryConstructor['POINT']) {\n          coordinates = [NaN, NaN];\n        } else {\n          coordinates = [];\n        }\n      }\n      return new ctor(coordinates, this.layout_);\n    }\n  }\n  throw new Error(this.formatErrorMessage_());\n};\n\n\n/**\n * @classdesc\n * Geometry format for reading and writing data in the `WellKnownText` (WKT)\n * format.\n *\n * @api\n */\nvar WKT = (function (TextFeature) {\n  function WKT(opt_options) {\n    TextFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n\n    /**\n     * Split GeometryCollection into multiple features.\n     * @type {boolean}\n     * @private\n     */\n    this.splitCollection_ = options.splitCollection !== undefined ?\n      options.splitCollection : false;\n\n  }\n\n  if ( TextFeature ) WKT.__proto__ = TextFeature;\n  WKT.prototype = Object.create( TextFeature && TextFeature.prototype );\n  WKT.prototype.constructor = WKT;\n\n  /**\n   * Parse a WKT string.\n   * @param {string} wkt WKT string.\n   * @return {module:ol/geom/Geometry|undefined}\n   *     The geometry created.\n   * @private\n   */\n  WKT.prototype.parse_ = function parse_ (wkt) {\n    var lexer = new Lexer(wkt);\n    var parser = new Parser(lexer);\n    return parser.parse();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeatureFromText = function readFeatureFromText (text, opt_options) {\n    var geom = this.readGeometryFromText(text, opt_options);\n    if (geom) {\n      var feature = new Feature();\n      feature.setGeometry(geom);\n      return feature;\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readFeaturesFromText = function readFeaturesFromText (text, opt_options) {\n    var geometries = [];\n    var geometry = this.readGeometryFromText(text, opt_options);\n    if (this.splitCollection_ &&\n        geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n      geometries = (/** @type {module:ol/geom/GeometryCollection} */ (geometry))\n        .getGeometriesArray();\n    } else {\n      geometries = [geometry];\n    }\n    var features = [];\n    for (var i = 0, ii = geometries.length; i < ii; ++i) {\n      var feature = new Feature();\n      feature.setGeometry(geometries[i]);\n      features.push(feature);\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.readGeometryFromText = function readGeometryFromText (text, opt_options) {\n    var geometry = this.parse_(text);\n    if (geometry) {\n      return (\n        /** @type {module:ol/geom/Geometry} */ (transformWithOptions(geometry, false, opt_options))\n      );\n    } else {\n      return null;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeatureText = function writeFeatureText (feature, opt_options) {\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      return this.writeGeometryText(geometry, opt_options);\n    }\n    return '';\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeFeaturesText = function writeFeaturesText (features, opt_options) {\n    if (features.length == 1) {\n      return this.writeFeatureText(features[0], opt_options);\n    }\n    var geometries = [];\n    for (var i = 0, ii = features.length; i < ii; ++i) {\n      geometries.push(features[i].getGeometry());\n    }\n    var collection = new GeometryCollection(geometries);\n    return this.writeGeometryText(collection, opt_options);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WKT.prototype.writeGeometryText = function writeGeometryText (geometry, opt_options) {\n    return encode(/** @type {module:ol/geom/Geometry} */ (\n      transformWithOptions(geometry, true, opt_options)));\n  };\n\n  return WKT;\n}(TextFeature));\n\n\n/**\n * @param {module:ol/geom/Point} geom Point geometry.\n * @return {string} Coordinates part of Point as WKT.\n */\nfunction encodePointGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  if (coordinates.length === 0) {\n    return '';\n  }\n  return coordinates.join(' ');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPoint} geom MultiPoint geometry.\n * @return {string} Coordinates part of MultiPoint as WKT.\n */\nfunction encodeMultiPointGeometry(geom) {\n  var array = [];\n  var components = geom.getPoints();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePointGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/GeometryCollection} geom GeometryCollection geometry.\n * @return {string} Coordinates part of GeometryCollection as WKT.\n */\nfunction encodeGeometryCollectionGeometry(geom) {\n  var array = [];\n  var geoms = geom.getGeometries();\n  for (var i = 0, ii = geoms.length; i < ii; ++i) {\n    array.push(encode(geoms[i]));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/LineString|module:ol/geom/LinearRing} geom LineString geometry.\n * @return {string} Coordinates part of LineString as WKT.\n */\nfunction encodeLineStringGeometry(geom) {\n  var coordinates = geom.getCoordinates();\n  var array = [];\n  for (var i = 0, ii = coordinates.length; i < ii; ++i) {\n    array.push(coordinates[i].join(' '));\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiLineString} geom MultiLineString geometry.\n * @return {string} Coordinates part of MultiLineString as WKT.\n */\nfunction encodeMultiLineStringGeometry(geom) {\n  var array = [];\n  var components = geom.getLineStrings();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/Polygon} geom Polygon geometry.\n * @return {string} Coordinates part of Polygon as WKT.\n */\nfunction encodePolygonGeometry(geom) {\n  var array = [];\n  var rings = geom.getLinearRings();\n  for (var i = 0, ii = rings.length; i < ii; ++i) {\n    array.push('(' + encodeLineStringGeometry(rings[i]) + ')');\n  }\n  return array.join(',');\n}\n\n\n/**\n * @param {module:ol/geom/MultiPolygon} geom MultiPolygon geometry.\n * @return {string} Coordinates part of MultiPolygon as WKT.\n */\nfunction encodeMultiPolygonGeometry(geom) {\n  var array = [];\n  var components = geom.getPolygons();\n  for (var i = 0, ii = components.length; i < ii; ++i) {\n    array.push('(' + encodePolygonGeometry(components[i]) + ')');\n  }\n  return array.join(',');\n}\n\n/**\n * @param {module:ol/geom/SimpleGeometry} geom SimpleGeometry geometry.\n * @return {string} Potential dimensional information for WKT type.\n */\nfunction encodeGeometryLayout(geom) {\n  var layout = geom.getLayout();\n  var dimInfo = '';\n  if (layout === GeometryLayout.XYZ || layout === GeometryLayout.XYZM) {\n    dimInfo += Z;\n  }\n  if (layout === GeometryLayout.XYM || layout === GeometryLayout.XYZM) {\n    dimInfo += M;\n  }\n  return dimInfo;\n}\n\n\n/**\n * @const\n * @type {Object<string, function(module:ol/geom/Geometry): string>}\n */\nvar GeometryEncoder = {\n  'Point': encodePointGeometry,\n  'LineString': encodeLineStringGeometry,\n  'Polygon': encodePolygonGeometry,\n  'MultiPoint': encodeMultiPointGeometry,\n  'MultiLineString': encodeMultiLineStringGeometry,\n  'MultiPolygon': encodeMultiPolygonGeometry,\n  'GeometryCollection': encodeGeometryCollectionGeometry\n};\n\n\n/**\n * Encode a geometry as WKT.\n * @param {module:ol/geom/Geometry} geom The geometry to encode.\n * @return {string} WKT string for the geometry.\n */\nfunction encode(geom) {\n  var type = geom.getType();\n  var geometryEncoder = GeometryEncoder[type];\n  var enc = geometryEncoder(geom);\n  type = type.toUpperCase();\n  if (geom instanceof SimpleGeometry) {\n    var dimInfo = encodeGeometryLayout(geom);\n    if (dimInfo.length > 0) {\n      type += ' ' + dimInfo;\n    }\n  }\n  if (enc.length === 0) {\n    return type + ' ' + EMPTY;\n  }\n  return type + '(' + enc + ')';\n}\n\n\nexport default WKT;\n\n//# sourceMappingURL=WKT.js.map","/**\n * @module ol/format/WMSCapabilities\n */\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readDecimalString, readString, readNonNegativeInteger, readDecimal, readBooleanString, readNonNegativeIntegerString} from '../format/xsd.js';\nimport {makeArrayPusher, makeObjectPropertyPusher, makeObjectPropertySetter,\n  makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wms'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Service': makeObjectPropertySetter(readService),\n    'Capability': makeObjectPropertySetter(readCapability)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CAPABILITY_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Request': makeObjectPropertySetter(readRequest),\n    'Exception': makeObjectPropertySetter(readException),\n    'Layer': makeObjectPropertySetter(readCapabilityLayer)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMS capabilities data\n *\n * @api\n */\nvar WMSCapabilities = (function (XML) {\n  function WMSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {string|undefined}\n     */\n    this.version = undefined;\n  }\n\n  if ( XML ) WMSCapabilities.__proto__ = XML;\n  WMSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMSCapabilities.prototype.constructor = WMSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    this.version = node.getAttribute('version').trim();\n    var wmsCapabilityObject = pushParseAndPop({\n      'version': this.version\n    }, PARSERS, node, []);\n    return wmsCapabilityObject ? wmsCapabilityObject : null;\n  };\n\n  return WMSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar SERVICE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'ContactInformation': makeObjectPropertySetter(readContactInformation),\n    'Fees': makeObjectPropertySetter(readString),\n    'AccessConstraints': makeObjectPropertySetter(readString),\n    'LayerLimit': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_INFORMATION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPersonPrimary': makeObjectPropertySetter(readContactPersonPrimary),\n    'ContactPosition': makeObjectPropertySetter(readString),\n    'ContactAddress': makeObjectPropertySetter(readContactAddress),\n    'ContactVoiceTelephone': makeObjectPropertySetter(readString),\n    'ContactFacsimileTelephone': makeObjectPropertySetter(readString),\n    'ContactElectronicMailAddress': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_PERSON_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'ContactPerson': makeObjectPropertySetter(readString),\n    'ContactOrganization': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTACT_ADDRESS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'AddressType': makeObjectPropertySetter(readString),\n    'Address': makeObjectPropertySetter(readString),\n    'City': makeObjectPropertySetter(readString),\n    'StateOrProvince': makeObjectPropertySetter(readString),\n    'PostCode': makeObjectPropertySetter(readString),\n    'Country': makeObjectPropertySetter(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EXCEPTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeArrayPusher(readString)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'KeywordList': makeObjectPropertySetter(readKeywordList),\n    'CRS': makeObjectPropertyPusher(readString),\n    'EX_GeographicBoundingBox': makeObjectPropertySetter(readEXGeographicBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBox),\n    'Dimension': makeObjectPropertyPusher(readDimension),\n    'Attribution': makeObjectPropertySetter(readAttribution),\n    'AuthorityURL': makeObjectPropertyPusher(readAuthorityURL),\n    'Identifier': makeObjectPropertyPusher(readString),\n    'MetadataURL': makeObjectPropertyPusher(readMetadataURL),\n    'DataURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'FeatureListURL': makeObjectPropertyPusher(readFormatOnlineresource),\n    'Style': makeObjectPropertyPusher(readStyle),\n    'MinScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'MaxScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'Layer': makeObjectPropertyPusher(readLayer)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar ATTRIBUTION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'OnlineResource': makeObjectPropertySetter(readHref),\n    'LogoURL': makeObjectPropertySetter(readSizedFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'westBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'eastBoundLongitude': makeObjectPropertySetter(readDecimal),\n      'southBoundLatitude': makeObjectPropertySetter(readDecimal),\n      'northBoundLatitude': makeObjectPropertySetter(readDecimal)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar REQUEST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'GetCapabilities': makeObjectPropertySetter(readOperationType),\n    'GetMap': makeObjectPropertySetter(readOperationType),\n    'GetFeatureInfo': makeObjectPropertySetter(readOperationType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar OPERATIONTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Format': makeObjectPropertyPusher(readString),\n    'DCPType': makeObjectPropertyPusher(readDCPType)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DCPTYPE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'HTTP': makeObjectPropertySetter(readHTTP)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar HTTP_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Get': makeObjectPropertySetter(readFormatOnlineresource),\n    'Post': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Name': makeObjectPropertySetter(readString),\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'LegendURL': makeObjectPropertyPusher(readSizedFormatOnlineresource),\n    'StyleSheetURL': makeObjectPropertySetter(readFormatOnlineresource),\n    'StyleURL': makeObjectPropertySetter(readFormatOnlineresource)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar FORMAT_ONLINERESOURCE_PARSERS =\n    makeStructureNS(NAMESPACE_URIS, {\n      'Format': makeObjectPropertySetter(readString),\n      'OnlineResource': makeObjectPropertySetter(readHref)\n    });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar KEYWORDLIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Keyword': makeArrayPusher(readString)\n  });\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readAttribution(node, objectStack) {\n  return pushParseAndPop({}, ATTRIBUTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Bounding box object.\n */\nfunction readBoundingBox(node, objectStack) {\n  var extent = [\n    readDecimalString(node.getAttribute('minx')),\n    readDecimalString(node.getAttribute('miny')),\n    readDecimalString(node.getAttribute('maxx')),\n    readDecimalString(node.getAttribute('maxy'))\n  ];\n\n  var resolutions = [\n    readDecimalString(node.getAttribute('resx')),\n    readDecimalString(node.getAttribute('resy'))\n  ];\n\n  return {\n    'crs': node.getAttribute('CRS'),\n    'extent': extent,\n    'res': resolutions\n  };\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {module:ol/extent~Extent|undefined} Bounding box object.\n */\nfunction readEXGeographicBoundingBox(node, objectStack) {\n  var geographicBoundingBox = pushParseAndPop(\n    {},\n    EX_GEOGRAPHIC_BOUNDING_BOX_PARSERS,\n    node, objectStack);\n  if (!geographicBoundingBox) {\n    return undefined;\n  }\n  var westBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['westBoundLongitude']);\n  var southBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['southBoundLatitude']);\n  var eastBoundLongitude = /** @type {number|undefined} */\n        (geographicBoundingBox['eastBoundLongitude']);\n  var northBoundLatitude = /** @type {number|undefined} */\n        (geographicBoundingBox['northBoundLatitude']);\n  if (westBoundLongitude === undefined || southBoundLatitude === undefined ||\n        eastBoundLongitude === undefined || northBoundLatitude === undefined) {\n    return undefined;\n  }\n  return [\n    westBoundLongitude, southBoundLatitude,\n    eastBoundLongitude, northBoundLatitude\n  ];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Capability object.\n */\nfunction readCapability(node, objectStack) {\n  return pushParseAndPop({}, CAPABILITY_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Service object.\n */\nfunction readService(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact information object.\n */\nfunction readContactInformation(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFORMATION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact person object.\n */\nfunction readContactPersonPrimary(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_PERSON_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Contact address object.\n */\nfunction readContactAddress(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_ADDRESS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Format array.\n */\nfunction readException(node, objectStack) {\n  return pushParseAndPop([], EXCEPTION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readCapabilityLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layer object.\n */\nfunction readLayer(node, objectStack) {\n  var parentLayerObject = /**  @type {!Object<string,*>} */ (objectStack[objectStack.length - 1]);\n\n  var layerObject = pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n\n  if (!layerObject) {\n    return undefined;\n  }\n  var queryable = readBooleanString(node.getAttribute('queryable'));\n  if (queryable === undefined) {\n    queryable = parentLayerObject['queryable'];\n  }\n  layerObject['queryable'] = queryable !== undefined ? queryable : false;\n\n  var cascaded = readNonNegativeIntegerString(\n    node.getAttribute('cascaded'));\n  if (cascaded === undefined) {\n    cascaded = parentLayerObject['cascaded'];\n  }\n  layerObject['cascaded'] = cascaded;\n\n  var opaque = readBooleanString(node.getAttribute('opaque'));\n  if (opaque === undefined) {\n    opaque = parentLayerObject['opaque'];\n  }\n  layerObject['opaque'] = opaque !== undefined ? opaque : false;\n\n  var noSubsets = readBooleanString(node.getAttribute('noSubsets'));\n  if (noSubsets === undefined) {\n    noSubsets = parentLayerObject['noSubsets'];\n  }\n  layerObject['noSubsets'] = noSubsets !== undefined ? noSubsets : false;\n\n  var fixedWidth = readDecimalString(node.getAttribute('fixedWidth'));\n  if (!fixedWidth) {\n    fixedWidth = parentLayerObject['fixedWidth'];\n  }\n  layerObject['fixedWidth'] = fixedWidth;\n\n  var fixedHeight = readDecimalString(node.getAttribute('fixedHeight'));\n  if (!fixedHeight) {\n    fixedHeight = parentLayerObject['fixedHeight'];\n  }\n  layerObject['fixedHeight'] = fixedHeight;\n\n  // See 7.2.4.8\n  var addKeys = ['Style', 'CRS', 'AuthorityURL'];\n  addKeys.forEach(function(key) {\n    if (key in parentLayerObject) {\n      var childValue = layerObject[key] || [];\n      layerObject[key] = childValue.concat(parentLayerObject[key]);\n    }\n  });\n\n  var replaceKeys = ['EX_GeographicBoundingBox', 'BoundingBox', 'Dimension',\n    'Attribution', 'MinScaleDenominator', 'MaxScaleDenominator'];\n  replaceKeys.forEach(function(key) {\n    if (!(key in layerObject)) {\n      var parentValue = parentLayerObject[key];\n      layerObject[key] = parentValue;\n    }\n  });\n\n  return layerObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object} Dimension object.\n */\nfunction readDimension(node, objectStack) {\n  var dimensionObject = {\n    'name': node.getAttribute('name'),\n    'units': node.getAttribute('units'),\n    'unitSymbol': node.getAttribute('unitSymbol'),\n    'default': node.getAttribute('default'),\n    'multipleValues': readBooleanString(node.getAttribute('multipleValues')),\n    'nearestValue': readBooleanString(node.getAttribute('nearestValue')),\n    'current': readBooleanString(node.getAttribute('current')),\n    'values': readString(node)\n  };\n  return dimensionObject;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readFormatOnlineresource(node, objectStack) {\n  return pushParseAndPop({}, FORMAT_ONLINERESOURCE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Request object.\n */\nfunction readRequest(node, objectStack) {\n  return pushParseAndPop({}, REQUEST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} DCP type object.\n */\nfunction readDCPType(node, objectStack) {\n  return pushParseAndPop({}, DCPTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} HTTP object.\n */\nfunction readHTTP(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Operation type object.\n */\nfunction readOperationType(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONTYPE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Online resource object.\n */\nfunction readSizedFormatOnlineresource(node, objectStack) {\n  var formatOnlineresource = readFormatOnlineresource(node, objectStack);\n  if (formatOnlineresource) {\n    var size = [\n      readNonNegativeIntegerString(node.getAttribute('width')),\n      readNonNegativeIntegerString(node.getAttribute('height'))\n    ];\n    formatOnlineresource['size'] = size;\n    return formatOnlineresource;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Authority URL object.\n */\nfunction readAuthorityURL(node, objectStack) {\n  var authorityObject = readFormatOnlineresource(node, objectStack);\n  if (authorityObject) {\n    authorityObject['name'] = node.getAttribute('name');\n    return authorityObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Metadata URL object.\n */\nfunction readMetadataURL(node, objectStack) {\n  var metadataObject = readFormatOnlineresource(node, objectStack);\n  if (metadataObject) {\n    metadataObject['type'] = node.getAttribute('type');\n    return metadataObject;\n  }\n  return undefined;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  return pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Array<string>|undefined} Keyword list.\n */\nfunction readKeywordList(node, objectStack) {\n  return pushParseAndPop([], KEYWORDLIST_PARSERS, node, objectStack);\n}\n\n\nexport default WMSCapabilities;\n\n//# sourceMappingURL=WMSCapabilities.js.map","/**\n * @module ol/format/WMSGetFeatureInfo\n */\nimport {extend, includes} from '../array.js';\nimport GML2 from '../format/GML2.js';\nimport XMLFeature from '../format/XMLFeature.js';\nimport {assign} from '../obj.js';\nimport {makeArrayPusher, makeStructureNS, pushParseAndPop} from '../xml.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<string>} [layers] If set, only features of the given layers will be returned by the format when read.\n */\n\n\n/**\n * @const\n * @type {string}\n */\nvar featureIdentifier = '_feature';\n\n\n/**\n * @const\n * @type {string}\n */\nvar layerIdentifier = '_layer';\n\n\n/**\n * @classdesc\n * Format for reading WMSGetFeatureInfo format. It uses\n * {@link module:ol/format/GML2~GML2} to read features.\n *\n * @api\n */\nvar WMSGetFeatureInfo = (function (XMLFeature) {\n  function WMSGetFeatureInfo(opt_options) {\n    XMLFeature.call(this);\n\n    var options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.featureNS_ = 'http://mapserver.gis.umn.edu/mapserver';\n\n\n    /**\n     * @private\n     * @type {module:ol/format/GML2}\n     */\n    this.gmlFormat_ = new GML2();\n\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.layers_ = options.layers ? options.layers : null;\n  }\n\n  if ( XMLFeature ) WMSGetFeatureInfo.__proto__ = XMLFeature;\n  WMSGetFeatureInfo.prototype = Object.create( XMLFeature && XMLFeature.prototype );\n  WMSGetFeatureInfo.prototype.constructor = WMSGetFeatureInfo;\n\n  /**\n   * @return {Array<string>} layers\n   */\n  WMSGetFeatureInfo.prototype.getLayers = function getLayers () {\n    return this.layers_;\n  };\n\n  /**\n   * @param {Array<string>} layers Layers to parse.\n   */\n  WMSGetFeatureInfo.prototype.setLayers = function setLayers (layers) {\n    this.layers_ = layers;\n  };\n\n  /**\n   * @param {Node} node Node.\n   * @param {Array<*>} objectStack Object stack.\n   * @return {Array<module:ol/Feature>} Features.\n   * @private\n   */\n  WMSGetFeatureInfo.prototype.readFeatures_ = function readFeatures_ (node, objectStack) {\n    var this$1 = this;\n\n    node.setAttribute('namespaceURI', this.featureNS_);\n    var localName = node.localName;\n    /** @type {Array<module:ol/Feature>} */\n    var features = [];\n    if (node.childNodes.length === 0) {\n      return features;\n    }\n    if (localName == 'msGMLOutput') {\n      for (var i = 0, ii = node.childNodes.length; i < ii; i++) {\n        var layer = node.childNodes[i];\n        if (layer.nodeType !== Node.ELEMENT_NODE) {\n          continue;\n        }\n        var context = objectStack[0];\n\n        var toRemove = layerIdentifier;\n        var layerName = layer.localName.replace(toRemove, '');\n\n        if (this$1.layers_ && !includes(this$1.layers_, layerName)) {\n          continue;\n        }\n\n        var featureType = layerName +\n            featureIdentifier;\n\n        context['featureType'] = featureType;\n        context['featureNS'] = this$1.featureNS_;\n\n        var parsers = {};\n        parsers[featureType] = makeArrayPusher(\n          this$1.gmlFormat_.readFeatureElement, this$1.gmlFormat_);\n        var parsersNS = makeStructureNS(\n          [context['featureNS'], null], parsers);\n        layer.setAttribute('namespaceURI', this$1.featureNS_);\n        var layerFeatures = pushParseAndPop(\n          [], parsersNS, layer, objectStack, this$1.gmlFormat_);\n        if (layerFeatures) {\n          extend(features, layerFeatures);\n        }\n      }\n    }\n    if (localName == 'FeatureCollection') {\n      var gmlFeatures = pushParseAndPop([],\n        this.gmlFormat_.FEATURE_COLLECTION_PARSERS, node,\n        [{}], this.gmlFormat_);\n      if (gmlFeatures) {\n        features = gmlFeatures;\n      }\n    }\n    return features;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMSGetFeatureInfo.prototype.readFeaturesFromNode = function readFeaturesFromNode (node, opt_options) {\n    var options = {};\n    if (opt_options) {\n      assign(options, this.getReadOptions(node, opt_options));\n    }\n    return this.readFeatures_(node, [options]);\n  };\n\n  return WMSGetFeatureInfo;\n}(XMLFeature));\n\n\nexport default WMSGetFeatureInfo;\n\n//# sourceMappingURL=WMSGetFeatureInfo.js.map","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport OWS from '../format/OWS.js';\nimport {readHref} from '../format/XLink.js';\nimport XML from '../format/XML.js';\nimport {readString, readNonNegativeInteger, readDecimal} from '../format/xsd.js';\nimport {pushParseAndPop, makeStructureNS,\n  makeObjectPropertySetter, makeObjectPropertyPusher, makeArrayPusher} from '../xml.js';\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/wmts/1.0'\n];\n\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nvar OWS_NAMESPACE_URIS = [\n  null,\n  'http://www.opengis.net/ows/1.1'\n];\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Contents': makeObjectPropertySetter(readContents)\n  });\n\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n  * @api\n */\nvar WMTSCapabilities = (function (XML) {\n  function WMTSCapabilities() {\n    XML.call(this);\n\n    /**\n     * @type {module:ol/format/OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  if ( XML ) WMTSCapabilities.__proto__ = XML;\n  WMTSCapabilities.prototype = Object.create( XML && XML.prototype );\n  WMTSCapabilities.prototype.constructor = WMTSCapabilities;\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromDocument = function readFromDocument (doc) {\n    var this$1 = this;\n\n    for (var n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this$1.readFromNode(n);\n      }\n    }\n    return null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WMTSCapabilities.prototype.readFromNode = function readFromNode (node) {\n    var version = node.getAttribute('version').trim();\n    var WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(WMTSCapabilityObject, PARSERS, node, []);\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  };\n\n  return WMTSCapabilities;\n}(XML));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar CONTENTS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Layer': makeObjectPropertyPusher(readLayer),\n    'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readWgs84BoundingBox),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LINKS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixSet': makeObjectPropertySetter(readString),\n    'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList)\n  });\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LIMITS_LIST_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_LIMITS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TileMatrix': makeObjectPropertySetter(readString),\n    'MinTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileRow': makeObjectPropertySetter(readNonNegativeInteger),\n    'MinTileCol': makeObjectPropertySetter(readNonNegativeInteger),\n    'MaxTileCol': makeObjectPropertySetter(readNonNegativeInteger)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar WGS84_BBOX_READERS = makeStructureNS(\n  OWS_NAMESPACE_URIS, {\n    'LowerCorner': makeArrayPusher(readCoordinates),\n    'UpperCorner': makeArrayPusher(readCoordinates)\n  });\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @const\n * @type {Object<string, Object<string, module:ol/xml~Parser>>}\n */\nvar TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS, {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'TileHeight': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixWidth': makeObjectPropertySetter(readNonNegativeInteger),\n    'MatrixHeight': makeObjectPropertySetter(readNonNegativeInteger)\n  }, makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString)\n  }));\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  var style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  var isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  var format = node.getAttribute('format');\n  var template = node.getAttribute('template');\n  var resourceType = node.getAttribute('resourceType');\n  var resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} WGS84 BBox object.\n */\nfunction readWgs84BoundingBox(node, objectStack) {\n  var coordinates = pushParseAndPop([], WGS84_BBOX_READERS, node, objectStack);\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  var legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  var coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  var x = +coordinates[0];\n  var y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\n\nexport default WMTSCapabilities;\n\n//# sourceMappingURL=WMTSCapabilities.js.map","/**\n * @module ol/format\n */\n\nexport {default as EsriJSON} from './format/EsriJSON.js';\nexport {default as GeoJSON} from './format/GeoJSON.js';\nexport {default as GML} from './format/GML.js';\nexport {default as GPX} from './format/GPX.js';\nexport {default as IGC} from './format/IGC.js';\nexport {default as KML} from './format/KML.js';\nexport {default as MVT} from './format/MVT.js';\nexport {default as OWS} from './format/OWS.js';\nexport {default as Polyline} from './format/Polyline.js';\nexport {default as TopoJSON} from './format/TopoJSON.js';\nexport {default as WFS} from './format/WFS.js';\nexport {default as WKT} from './format/WKT.js';\nexport {default as WMSCapabilities} from './format/WMSCapabilities.js';\nexport {default as WMSGetFeatureInfo} from './format/WMSGetFeatureInfo.js';\nexport {default as WMTSCapabilities} from './format/WMTSCapabilities.js';\n\n//# sourceMappingURL=format.js.map","/**\n * @module ol/GeolocationProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACCURACY: 'accuracy',\n  ACCURACY_GEOMETRY: 'accuracyGeometry',\n  ALTITUDE: 'altitude',\n  ALTITUDE_ACCURACY: 'altitudeAccuracy',\n  HEADING: 'heading',\n  POSITION: 'position',\n  PROJECTION: 'projection',\n  SPEED: 'speed',\n  TRACKING: 'tracking',\n  TRACKING_OPTIONS: 'trackingOptions'\n};\n\n//# sourceMappingURL=GeolocationProperty.js.map","/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nvar Geolocation = (function (BaseObject) {\n  function Geolocation(opt_options) {\n\n    BaseObject.call(this);\n\n    var options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  if ( BaseObject ) Geolocation.__proto__ = BaseObject;\n  Geolocation.prototype = Object.create( BaseObject && BaseObject.prototype );\n  Geolocation.prototype.constructor = Geolocation;\n\n  /**\n   * @inheritDoc\n   */\n  Geolocation.prototype.disposeInternal = function disposeInternal () {\n    this.setTracking(false);\n    BaseObject.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleProjectionChanged_ = function handleProjectionChanged_ () {\n    var projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  Geolocation.prototype.handleTrackingChanged_ = function handleTrackingChanged_ () {\n    if (GEOLOCATION) {\n      var tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  Geolocation.prototype.positionChange_ = function positionChange_ (position) {\n    var coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    var projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    var geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  };\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  Geolocation.prototype.positionError_ = function positionError_ (error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  };\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracy = function getAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  };\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAccuracyGeometry = function getAccuracyGeometry () {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  };\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitude = function getAltitude () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  };\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getAltitudeAccuracy = function getAltitudeAccuracy () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  };\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getHeading = function getHeading () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  };\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getPosition = function getPosition () {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  };\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getProjection = function getProjection () {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  };\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getSpeed = function getSpeed () {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  };\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTracking = function getTracking () {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  };\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.getTrackingOptions = function getTrackingOptions () {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  };\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setProjection = function setProjection (projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  };\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTracking = function setTracking (tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  };\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  Geolocation.prototype.setTrackingOptions = function setTrackingOptions (options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  };\n\n  return Geolocation;\n}(BaseObject));\n\n\nexport default Geolocation;\n\n//# sourceMappingURL=Geolocation.js.map","/**\n * @module ol/geom/flat/geodesic\n */\nimport {squaredSegmentDistance, toRadians, toDegrees} from '../../math.js';\nimport {get as getProjection, getTransform} from '../../proj.js';\n\n\n/**\n * @param {function(number): module:ol/coordinate~Coordinate} interpolate Interpolate function.\n * @param {module:ol/proj~TransformFunction} transform Transform from longitude/latitude to\n *     projected coordinates.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nfunction line(interpolate, transform, squaredTolerance) {\n  // FIXME reduce garbage generation\n  // FIXME optimize stack operations\n\n  /** @type {Array<number>} */\n  var flatCoordinates = [];\n\n  var geoA = interpolate(0);\n  var geoB = interpolate(1);\n\n  var a = transform(geoA);\n  var b = transform(geoB);\n\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  var geoStack = [geoB, geoA];\n  /** @type {Array<module:ol/coordinate~Coordinate>} */\n  var stack = [b, a];\n  /** @type {Array<number>} */\n  var fractionStack = [1, 0];\n\n  /** @type {!Object<string, boolean>} */\n  var fractions = {};\n\n  var maxIterations = 1e5;\n  var geoM, m, fracA, fracB, fracM, key;\n\n  while (--maxIterations > 0 && fractionStack.length > 0) {\n    // Pop the a coordinate off the stack\n    fracA = fractionStack.pop();\n    geoA = geoStack.pop();\n    a = stack.pop();\n    // Add the a coordinate if it has not been added yet\n    key = fracA.toString();\n    if (!(key in fractions)) {\n      flatCoordinates.push(a[0], a[1]);\n      fractions[key] = true;\n    }\n    // Pop the b coordinate off the stack\n    fracB = fractionStack.pop();\n    geoB = geoStack.pop();\n    b = stack.pop();\n    // Find the m point between the a and b coordinates\n    fracM = (fracA + fracB) / 2;\n    geoM = interpolate(fracM);\n    m = transform(geoM);\n    if (squaredSegmentDistance(m[0], m[1], a[0], a[1],\n      b[0], b[1]) < squaredTolerance) {\n      // If the m point is sufficiently close to the straight line, then we\n      // discard it.  Just use the b coordinate and move on to the next line\n      // segment.\n      flatCoordinates.push(b[0], b[1]);\n      key = fracB.toString();\n      fractions[key] = true;\n    } else {\n      // Otherwise, we need to subdivide the current line segment.  Split it\n      // into two and push the two line segments onto the stack.\n      fractionStack.push(fracB, fracM, fracM, fracA);\n      stack.push(b, m, m, a);\n      geoStack.push(geoB, geoM, geoM, geoA);\n    }\n  }\n\n  return flatCoordinates;\n}\n\n\n/**\n * Generate a great-circle arcs between two lat/lon points.\n * @param {number} lon1 Longitude 1 in degrees.\n * @param {number} lat1 Latitude 1 in degrees.\n * @param {number} lon2 Longitude 2 in degrees.\n * @param {number} lat2 Latitude 2 in degrees.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function greatCircleArc(lon1, lat1, lon2, lat2, projection, squaredTolerance) {\n  var geoProjection = getProjection('EPSG:4326');\n\n  var cosLat1 = Math.cos(toRadians(lat1));\n  var sinLat1 = Math.sin(toRadians(lat1));\n  var cosLat2 = Math.cos(toRadians(lat2));\n  var sinLat2 = Math.sin(toRadians(lat2));\n  var cosDeltaLon = Math.cos(toRadians(lon2 - lon1));\n  var sinDeltaLon = Math.sin(toRadians(lon2 - lon1));\n  var d = sinLat1 * sinLat2 + cosLat1 * cosLat2 * cosDeltaLon;\n\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      if (1 <= d) {\n        return [lon2, lat2];\n      }\n      var D = frac * Math.acos(d);\n      var cosD = Math.cos(D);\n      var sinD = Math.sin(D);\n      var y = sinDeltaLon * cosLat2;\n      var x = cosLat1 * sinLat2 - sinLat1 * cosLat2 * cosDeltaLon;\n      var theta = Math.atan2(y, x);\n      var lat = Math.asin(sinLat1 * cosD + cosLat1 * sinD * Math.cos(theta));\n      var lon = toRadians(lon1) +\n            Math.atan2(Math.sin(theta) * sinD * cosLat1,\n              cosD - sinLat1 * Math.sin(lat));\n      return [toDegrees(lon), toDegrees(lat)];\n    }, getTransform(geoProjection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a meridian (line at constant longitude).\n * @param {number} lon Longitude.\n * @param {number} lat1 Latitude 1.\n * @param {number} lat2 Latitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function meridian(lon, lat1, lat2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon, lat1 + ((lat2 - lat1) * frac)];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n\n/**\n * Generate a parallel (line at constant latitude).\n * @param {number} lat Latitude.\n * @param {number} lon1 Longitude 1.\n * @param {number} lon2 Longitude 2.\n * @param {module:ol/proj/Projection} projection Projection.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {Array<number>} Flat coordinates.\n */\nexport function parallel(lat, lon1, lon2, projection, squaredTolerance) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n  return line(\n    /**\n     * @param {number} frac Fraction.\n     * @return {module:ol/coordinate~Coordinate} Coordinate.\n     */\n    function(frac) {\n      return [lon1 + ((lon2 - lon1) * frac), lat];\n    },\n    getTransform(epsg4326Projection, projection), squaredTolerance);\n}\n\n//# sourceMappingURL=geodesic.js.map","/**\n * @module ol/Graticule\n */\nimport {degreesToStringHDMS} from './coordinate.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {intersects, getCenter} from './extent.js';\nimport GeometryLayout from './geom/GeometryLayout.js';\nimport LineString from './geom/LineString.js';\nimport Point from './geom/Point.js';\nimport {meridian, parallel} from './geom/flat/geodesic.js';\nimport {clamp} from './math.js';\nimport {get as getProjection, equivalent as equivalentProjection, getTransform, transformExtent} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport Fill from './style/Fill.js';\nimport Stroke from './style/Stroke.js';\nimport Text from './style/Text.js';\n\n\n/**\n * @type {module:ol/style/Stroke}\n * @private\n * @const\n */\nvar DEFAULT_STROKE_STYLE = new Stroke({\n  color: 'rgba(0,0,0,0.2)'\n});\n\n/**\n * TODO can be configurable\n * @type {Array<number>}\n * @private\n */\nvar INTERVALS = [\n  90, 45, 30, 20, 10, 5, 2, 1, 0.5, 0.2, 0.1, 0.05, 0.01, 0.005, 0.002, 0.001\n];\n\n/**\n * @typedef {Object} GraticuleLabelDataType\n * @property {module:ol/geom/Point} geom\n * @property {string} text\n */\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} [map] Reference to an\n * {@link module:ol/Map~Map} object.\n * @property {number} [maxLines=100] The maximum number of meridians and\n * parallels from the center of the map. The default value of 100 means that at\n * most 200 meridians and 200 parallels will be displayed. The default value is\n * appropriate for conformal projections like Spherical Mercator. If you\n * increase the value, more lines will be drawn and the drawing performance will\n * decrease.\n * @property {module:ol/style/Stroke} [strokeStyle='rgba(0,0,0,0.2)'] The\n * stroke style to use for drawing the graticule. If not provided, a not fully\n * opaque black will be used.\n * @property {number} [targetSize=100] The target size of the graticule cells,\n * in pixels.\n * @property {boolean} [showLabels=false] Render a label with the respective\n * latitude/longitude for each graticule line.\n * @property {function(number):string} [lonLabelFormatter] Label formatter for\n * longitudes. This function is called with the longitude as argument, and\n * should return a formatted string representing the longitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {function(number):string} [latLabelFormatter] Label formatter for\n * latitudes. This function is called with the latitude as argument, and\n * should return a formatted string representing the latitude. By default,\n * labels are formatted as degrees, minutes, seconds and hemisphere.\n * @property {number} [lonLabelPosition=0] Longitude label position in fractions\n * (0..1) of view extent. 0 means at the bottom of the viewport, 1 means at the\n * top.\n * @property {number} [latLabelPosition=1] Latitude label position in fractions\n * (0..1) of view extent. 0 means at the left of the viewport, 1 means at the\n * right.\n * @property {module:ol/style/Text} [lonLabelStyle] Longitude label text\n * style. If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textBaseline: 'bottom',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: new Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textBaseline` configuration will not work well for\n * `lonLabelPosition` configurations that position labels close to the top of\n * the viewport.\n * @property {module:ol/style/Text} [latLabelStyle] Latitude label text style.\n * If not provided, the following style will be used:\n * ```js\n * new Text({\n *   font: '12px Calibri,sans-serif',\n *   textAlign: 'end',\n *   fill: new Fill({\n *     color: 'rgba(0,0,0,1)'\n *   }),\n *   stroke: Stroke({\n *     color: 'rgba(255,255,255,1)',\n *     width: 3\n *   })\n * });\n * ```\n * Note that the default's `textAlign` configuration will not work well for\n * `latLabelPosition` configurations that position labels close to the left of\n * the viewport.\n */\n\n\n/**\n * Render a grid for a coordinate system on a map.\n * @api\n */\nvar Graticule = function Graticule(opt_options) {\n  var options = opt_options || {};\n\n  /**\n   * @type {module:ol/PluggableMap}\n   * @private\n   */\n  this.map_ = null;\n\n  /**\n   * @type {?module:ol/events~EventsKey}\n   * @private\n   */\n  this.postcomposeListenerKey_ = null;\n\n  /**\n   * @type {module:ol/proj/Projection}\n   */\n  this.projection_ = null;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLat_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLon_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLat_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLon_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLatP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLonP_ = Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLatP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.minLonP_ = -Infinity;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.targetSize_ = options.targetSize !== undefined ? options.targetSize : 100;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.maxLines_ = options.maxLines !== undefined ? options.maxLines : 100;\n\n  /**\n   * @type {Array<module:ol/geom/LineString>}\n   * @private\n   */\n  this.meridians_ = [];\n\n  /**\n   * @type {Array<module:ol/geom/LineString>}\n   * @private\n   */\n  this.parallels_ = [];\n\n  /**\n   * @type {module:ol/style/Stroke}\n   * @private\n   */\n  this.strokeStyle_ = options.strokeStyle !== undefined ? options.strokeStyle : DEFAULT_STROKE_STYLE;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.fromLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/proj~TransformFunction|undefined}\n   * @private\n   */\n  this.toLonLatTransform_ = undefined;\n\n  /**\n   * @type {module:ol/coordinate~Coordinate}\n   * @private\n   */\n  this.projectionCenterLonLat_ = null;\n\n  /**\n   * @type {Array<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.meridiansLabels_ = null;\n\n  /**\n   * @type {Array<module:ol/Graticule~GraticuleLabelDataType>}\n   * @private\n   */\n  this.parallelsLabels_ = null;\n\n  if (options.showLabels == true) {\n\n    /**\n     * @type {null|function(number):string}\n     * @private\n     */\n    this.lonLabelFormatter_ = options.lonLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'EW') : options.lonLabelFormatter;\n\n    /**\n     * @type {function(number):string}\n     * @private\n     */\n    this.latLabelFormatter_ = options.latLabelFormatter == undefined ?\n      degreesToStringHDMS.bind(this, 'NS') : options.latLabelFormatter;\n\n    /**\n     * Longitude label position in fractions (0..1) of view extent. 0 means\n     * bottom, 1 means top.\n     * @type {number}\n     * @private\n     */\n    this.lonLabelPosition_ = options.lonLabelPosition == undefined ? 0 :\n      options.lonLabelPosition;\n\n    /**\n     * Latitude Label position in fractions (0..1) of view extent. 0 means left, 1\n     * means right.\n     * @type {number}\n     * @private\n     */\n    this.latLabelPosition_ = options.latLabelPosition == undefined ? 1 :\n      options.latLabelPosition;\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.lonLabelStyle_ = options.lonLabelStyle !== undefined ? options.lonLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textBaseline: 'bottom',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    /**\n     * @type {module:ol/style/Text}\n     * @private\n     */\n    this.latLabelStyle_ = options.latLabelStyle !== undefined ? options.latLabelStyle :\n      new Text({\n        font: '12px Calibri,sans-serif',\n        textAlign: 'end',\n        fill: new Fill({\n          color: 'rgba(0,0,0,1)'\n        }),\n        stroke: new Stroke({\n          color: 'rgba(255,255,255,1)',\n          width: 3\n        })\n      });\n\n    this.meridiansLabels_ = [];\n    this.parallelsLabels_ = [];\n  }\n\n  this.setMap(options.map !== undefined ? options.map : null);\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addMeridian_ = function addMeridian_ (lon, minLat, maxLat, squaredTolerance, extent, index) {\n  var lineString = this.getMeridian_(lon, minLat, maxLat, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.meridiansLabels_) {\n      var textPoint = this.getMeridianPoint_(lineString, extent, index);\n      this.meridiansLabels_[index] = {\n        geom: textPoint,\n        text: this.lonLabelFormatter_(lon)\n      };\n    }\n    this.meridians_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Meridian\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Meridian point.\n * @private\n */\nGraticule.prototype.getMeridianPoint_ = function getMeridianPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedBottom = Math.max(extent[1], flatCoordinates[1]);\n  var clampedTop = Math.min(extent[3], flatCoordinates[flatCoordinates.length - 1]);\n  var lat = clamp(\n    extent[1] + Math.abs(extent[1] - extent[3]) * this.lonLabelPosition_,\n    clampedBottom, clampedTop);\n  var coordinate = [flatCoordinates[0], lat];\n  var point;\n  if (index in this.meridiansLabels_) {\n    point = this.meridiansLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {number} Index.\n * @private\n */\nGraticule.prototype.addParallel_ = function addParallel_ (lat, minLon, maxLon, squaredTolerance, extent, index) {\n  var lineString = this.getParallel_(lat, minLon, maxLon, squaredTolerance, index);\n  if (intersects(lineString.getExtent(), extent)) {\n    if (this.parallelsLabels_) {\n      var textPoint = this.getParallelPoint_(lineString, extent, index);\n      this.parallelsLabels_[index] = {\n        geom: textPoint,\n        text: this.latLabelFormatter_(lat)\n      };\n    }\n    this.parallels_[index++] = lineString;\n  }\n  return index;\n};\n\n/**\n * @param {module:ol/geom/LineString} lineString Parallels.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} index Index.\n * @return {module:ol/geom/Point} Parallel point.\n * @private\n */\nGraticule.prototype.getParallelPoint_ = function getParallelPoint_ (lineString, extent, index) {\n  var flatCoordinates = lineString.getFlatCoordinates();\n  var clampedLeft = Math.max(extent[0], flatCoordinates[0]);\n  var clampedRight = Math.min(extent[2], flatCoordinates[flatCoordinates.length - 2]);\n  var lon = clamp(\n    extent[0] + Math.abs(extent[0] - extent[2]) * this.latLabelPosition_,\n    clampedLeft, clampedRight);\n  var coordinate = [lon, flatCoordinates[1]];\n  var point;\n  if (index in this.parallelsLabels_) {\n    point = this.parallelsLabels_[index].geom;\n    point.setCoordinates(coordinate);\n  } else {\n    point = new Point(coordinate);\n  }\n  return point;\n};\n\n/**\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {module:ol/coordinate~Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} squaredTolerance Squared tolerance.\n * @private\n */\nGraticule.prototype.createGraticule_ = function createGraticule_ (extent, center, resolution, squaredTolerance) {\n    var this$1 = this;\n\n\n  var interval = this.getInterval_(resolution);\n  if (interval == -1) {\n    this.meridians_.length = this.parallels_.length = 0;\n    if (this.meridiansLabels_) {\n      this.meridiansLabels_.length = 0;\n    }\n    if (this.parallelsLabels_) {\n      this.parallelsLabels_.length = 0;\n    }\n    return;\n  }\n\n  var centerLonLat = this.toLonLatTransform_(center);\n  var centerLon = centerLonLat[0];\n  var centerLat = centerLonLat[1];\n  var maxLines = this.maxLines_;\n  var cnt, idx, lat, lon;\n\n  var validExtent = [\n    Math.max(extent[0], this.minLonP_),\n    Math.max(extent[1], this.minLatP_),\n    Math.min(extent[2], this.maxLonP_),\n    Math.min(extent[3], this.maxLatP_)\n  ];\n\n  validExtent = transformExtent(validExtent, this.projection_, 'EPSG:4326');\n  var maxLat = validExtent[3];\n  var maxLon = validExtent[2];\n  var minLat = validExtent[1];\n  var minLon = validExtent[0];\n\n  // Create meridians\n\n  centerLon = Math.floor(centerLon / interval) * interval;\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  idx = this.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lon != this.minLon_ && cnt++ < maxLines) {\n    lon = Math.max(lon - interval, this$1.minLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  lon = clamp(centerLon, this.minLon_, this.maxLon_);\n\n  cnt = 0;\n  while (lon != this.maxLon_ && cnt++ < maxLines) {\n    lon = Math.min(lon + interval, this$1.maxLon_);\n    idx = this$1.addMeridian_(lon, minLat, maxLat, squaredTolerance, extent, idx);\n  }\n\n  this.meridians_.length = idx;\n  if (this.meridiansLabels_) {\n    this.meridiansLabels_.length = idx;\n  }\n\n  // Create parallels\n\n  centerLat = Math.floor(centerLat / interval) * interval;\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  idx = this.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, 0);\n\n  cnt = 0;\n  while (lat != this.minLat_ && cnt++ < maxLines) {\n    lat = Math.max(lat - interval, this$1.minLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  lat = clamp(centerLat, this.minLat_, this.maxLat_);\n\n  cnt = 0;\n  while (lat != this.maxLat_ && cnt++ < maxLines) {\n    lat = Math.min(lat + interval, this$1.maxLat_);\n    idx = this$1.addParallel_(lat, minLon, maxLon, squaredTolerance, extent, idx);\n  }\n\n  this.parallels_.length = idx;\n  if (this.parallelsLabels_) {\n    this.parallelsLabels_.length = idx;\n  }\n\n};\n\n/**\n * @param {number} resolution Resolution.\n * @return {number} The interval in degrees.\n * @private\n */\nGraticule.prototype.getInterval_ = function getInterval_ (resolution) {\n    var this$1 = this;\n\n  var centerLon = this.projectionCenterLonLat_[0];\n  var centerLat = this.projectionCenterLonLat_[1];\n  var interval = -1;\n  var target = Math.pow(this.targetSize_ * resolution, 2);\n  /** @type {Array<number>} **/\n  var p1 = [];\n  /** @type {Array<number>} **/\n  var p2 = [];\n  for (var i = 0, ii = INTERVALS.length; i < ii; ++i) {\n    var delta = INTERVALS[i] / 2;\n    p1[0] = centerLon - delta;\n    p1[1] = centerLat - delta;\n    p2[0] = centerLon + delta;\n    p2[1] = centerLat + delta;\n    this$1.fromLonLatTransform_(p1, p1);\n    this$1.fromLonLatTransform_(p2, p2);\n    var dist = Math.pow(p2[0] - p1[0], 2) + Math.pow(p2[1] - p1[1], 2);\n    if (dist <= target) {\n      break;\n    }\n    interval = INTERVALS[i];\n  }\n  return interval;\n};\n\n/**\n * Get the map associated with this graticule.\n * @return {module:ol/PluggableMap} The map.\n * @api\n */\nGraticule.prototype.getMap = function getMap () {\n  return this.map_;\n};\n\n/**\n * @param {number} lon Longitude.\n * @param {number} minLat Minimal latitude.\n * @param {number} maxLat Maximal latitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The meridian line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getMeridian_ = function getMeridian_ (lon, minLat, maxLat, squaredTolerance, index) {\n  var flatCoordinates = meridian(lon, minLat, maxLat, this.projection_, squaredTolerance);\n  var lineString = this.meridians_[index];\n  if (!lineString) {\n    lineString = this.meridians_[index] = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of meridians.Meridians are lines of equal longitude.\n * @return {Array<module:ol/geom/LineString>} The meridians.\n * @api\n */\nGraticule.prototype.getMeridians = function getMeridians () {\n  return this.meridians_;\n};\n\n/**\n * @param {number} lat Latitude.\n * @param {number} minLon Minimal longitude.\n * @param {number} maxLon Maximal longitude.\n * @param {number} squaredTolerance Squared tolerance.\n * @return {module:ol/geom/LineString} The parallel line string.\n * @param {number} index Index.\n * @private\n */\nGraticule.prototype.getParallel_ = function getParallel_ (lat, minLon, maxLon, squaredTolerance, index) {\n  var flatCoordinates = parallel(lat, minLon, maxLon, this.projection_, squaredTolerance);\n  var lineString = this.parallels_[index];\n  if (!lineString) {\n    lineString = new LineString(flatCoordinates, GeometryLayout.XY);\n  } else {\n    lineString.setFlatCoordinates(GeometryLayout.XY, flatCoordinates);\n    lineString.changed();\n  }\n  return lineString;\n};\n\n/**\n * Get the list of parallels.Parallels are lines of equal latitude.\n * @return {Array<module:ol/geom/LineString>} The parallels.\n * @api\n */\nGraticule.prototype.getParallels = function getParallels () {\n  return this.parallels_;\n};\n\n/**\n * @param {module:ol/render/Event} e Event.\n * @private\n */\nGraticule.prototype.handlePostCompose_ = function handlePostCompose_ (e) {\n    var this$1 = this;\n\n  var vectorContext = e.vectorContext;\n  var frameState = e.frameState;\n  var extent = frameState.extent;\n  var viewState = frameState.viewState;\n  var center = viewState.center;\n  var projection = viewState.projection;\n  var resolution = viewState.resolution;\n  var pixelRatio = frameState.pixelRatio;\n  var squaredTolerance =\n      resolution * resolution / (4 * pixelRatio * pixelRatio);\n\n  var updateProjectionInfo = !this.projection_ ||\n      !equivalentProjection(this.projection_, projection);\n\n  if (updateProjectionInfo) {\n    this.updateProjectionInfo_(projection);\n  }\n\n  this.createGraticule_(extent, center, resolution, squaredTolerance);\n\n  // Draw the lines\n  vectorContext.setFillStrokeStyle(null, this.strokeStyle_);\n  var i, l, line;\n  for (i = 0, l = this.meridians_.length; i < l; ++i) {\n    line = this$1.meridians_[i];\n    vectorContext.drawGeometry(line);\n  }\n  for (i = 0, l = this.parallels_.length; i < l; ++i) {\n    line = this$1.parallels_[i];\n    vectorContext.drawGeometry(line);\n  }\n  var labelData;\n  if (this.meridiansLabels_) {\n    for (i = 0, l = this.meridiansLabels_.length; i < l; ++i) {\n      labelData = this$1.meridiansLabels_[i];\n      this$1.lonLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.lonLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n  if (this.parallelsLabels_) {\n    for (i = 0, l = this.parallelsLabels_.length; i < l; ++i) {\n      labelData = this$1.parallelsLabels_[i];\n      this$1.latLabelStyle_.setText(labelData.text);\n      vectorContext.setTextStyle(this$1.latLabelStyle_);\n      vectorContext.drawGeometry(labelData.geom);\n    }\n  }\n};\n\n/**\n * @param {module:ol/proj/Projection} projection Projection.\n * @private\n */\nGraticule.prototype.updateProjectionInfo_ = function updateProjectionInfo_ (projection) {\n  var epsg4326Projection = getProjection('EPSG:4326');\n\n  var worldExtent = projection.getWorldExtent();\n  var worldExtentP = transformExtent(worldExtent, epsg4326Projection, projection);\n\n  this.maxLat_ = worldExtent[3];\n  this.maxLon_ = worldExtent[2];\n  this.minLat_ = worldExtent[1];\n  this.minLon_ = worldExtent[0];\n\n  this.maxLatP_ = worldExtentP[3];\n  this.maxLonP_ = worldExtentP[2];\n  this.minLatP_ = worldExtentP[1];\n  this.minLonP_ = worldExtentP[0];\n\n  this.fromLonLatTransform_ = getTransform(epsg4326Projection, projection);\n\n  this.toLonLatTransform_ = getTransform(projection, epsg4326Projection);\n\n  this.projectionCenterLonLat_ = this.toLonLatTransform_(getCenter(projection.getExtent()));\n\n  this.projection_ = projection;\n};\n\n/**\n * Set the map for this graticule.The graticule will be rendered on the\n * provided map.\n * @param {module:ol/PluggableMap} map Map.\n * @api\n */\nGraticule.prototype.setMap = function setMap (map) {\n  if (this.map_) {\n    unlistenByKey(this.postcomposeListenerKey_);\n    this.postcomposeListenerKey_ = null;\n    this.map_.render();\n  }\n  if (map) {\n    this.postcomposeListenerKey_ = listen(map, RenderEventType.POSTCOMPOSE, this.handlePostCompose_, this);\n    map.render();\n  }\n  this.map_ = map;\n};\n\nexport default Graticule;\n\n//# sourceMappingURL=Graticule.js.map","/**\n * @module ol/VectorImageTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {getHeight, getIntersection, getWidth} from './extent.js';\nimport EventType from './events/EventType.js';\nimport {loadFeaturesXhr} from './featureloader.js';\nimport {VOID} from './functions.js';\n\n\n/**\n * @typedef {Object} ReplayState\n * @property {boolean} dirty\n * @property {null|module:ol/render~OrderFunction} renderedRenderOrder\n * @property {number} renderedTileRevision\n * @property {number} renderedRevision\n */\n\n\nvar VectorImageTile = (function (Tile) {\n  function VectorImageTile(tileCoord, state, sourceRevision, format, tileLoadFunction,\n    urlTileCoord, tileUrlFunction, sourceTileGrid, tileGrid, sourceTiles,\n    pixelRatio, projection, tileClass, handleTileChange, zoom) {\n    var this$1 = this;\n\n\n    Tile.call(this, tileCoord, state, {transition: 0});\n\n    /**\n     * @private\n     * @type {!Object<string, CanvasRenderingContext2D>}\n     */\n    this.context_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/VectorImageTile~ReplayState>}\n     */\n    this.replayState_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/VectorTile>}\n     */\n    this.sourceTiles_ = sourceTiles;\n\n    /**\n     * Keys of source tiles used by this tile. Use with {@link #getTile}.\n     * @type {Array<string>}\n     */\n    this.tileKeys = [];\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent = null;\n\n    /**\n     * @type {number}\n     */\n    this.sourceRevision_ = sourceRevision;\n\n    /**\n     * @type {module:ol/tilecoord~TileCoord}\n     */\n    this.wrappedTileCoord = urlTileCoord;\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.loadListenerKeys_ = [];\n\n    /**\n     * @type {Array<module:ol/events~EventsKey>}\n     */\n    this.sourceTileListenerKeys_ = [];\n\n    if (urlTileCoord) {\n      var extent = this.extent = tileGrid.getTileCoordExtent(urlTileCoord);\n      var resolution = tileGrid.getResolution(zoom);\n      var sourceZ = sourceTileGrid.getZForResolution(resolution);\n      var useLoadedOnly = zoom != tileCoord[0];\n      var loadCount = 0;\n      sourceTileGrid.forEachTileCoord(extent, sourceZ, function(sourceTileCoord) {\n        var sharedExtent = getIntersection(extent,\n          sourceTileGrid.getTileCoordExtent(sourceTileCoord));\n        var sourceExtent = sourceTileGrid.getExtent();\n        if (sourceExtent) {\n          sharedExtent = getIntersection(sharedExtent, sourceExtent, sharedExtent);\n        }\n        if (getWidth(sharedExtent) / resolution >= 0.5 &&\n            getHeight(sharedExtent) / resolution >= 0.5) {\n          // only include source tile if overlap is at least 1 pixel\n          ++loadCount;\n          var sourceTileKey = sourceTileCoord.toString();\n          var sourceTile = sourceTiles[sourceTileKey];\n          if (!sourceTile && !useLoadedOnly) {\n            var tileUrl = tileUrlFunction(sourceTileCoord, pixelRatio, projection);\n            sourceTile = sourceTiles[sourceTileKey] = new tileClass(sourceTileCoord,\n              tileUrl == undefined ? TileState.EMPTY : TileState.IDLE,\n              tileUrl == undefined ? '' : tileUrl,\n              format, tileLoadFunction);\n            this.sourceTileListenerKeys_.push(\n              listen(sourceTile, EventType.CHANGE, handleTileChange));\n          }\n          if (sourceTile && (!useLoadedOnly || sourceTile.getState() == TileState.LOADED)) {\n            sourceTile.consumers++;\n            this.tileKeys.push(sourceTileKey);\n          }\n        }\n      }.bind(this));\n\n      if (useLoadedOnly && loadCount == this.tileKeys.length) {\n        this.finishLoading_();\n      }\n\n      if (zoom <= tileCoord[0] && this.state != TileState.LOADED) {\n        while (zoom > tileGrid.getMinZoom()) {\n          var tile = new VectorImageTile(tileCoord, state, sourceRevision,\n            format, tileLoadFunction, urlTileCoord, tileUrlFunction,\n            sourceTileGrid, tileGrid, sourceTiles, pixelRatio, projection,\n            tileClass, VOID, --zoom);\n          if (tile.state == TileState.LOADED) {\n            this$1.interimTile = tile;\n            break;\n          }\n        }\n      }\n    }\n\n  }\n\n  if ( Tile ) VectorImageTile.__proto__ = Tile;\n  VectorImageTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorImageTile.prototype.constructor = VectorImageTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    this.state = TileState.ABORT;\n    this.changed();\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n\n    for (var i = 0, ii = this.tileKeys.length; i < ii; ++i) {\n      var sourceTileKey = this$1.tileKeys[i];\n      var sourceTile = this$1.getTile(sourceTileKey);\n      sourceTile.consumers--;\n      if (sourceTile.consumers == 0) {\n        delete this$1.sourceTiles_[sourceTileKey];\n        sourceTile.dispose();\n      }\n    }\n    this.tileKeys.length = 0;\n    this.sourceTiles_ = null;\n    this.loadListenerKeys_.forEach(unlistenByKey);\n    this.loadListenerKeys_.length = 0;\n    this.sourceTileListenerKeys_.forEach(unlistenByKey);\n    this.sourceTileListenerKeys_.length = 0;\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {CanvasRenderingContext2D} The rendering context.\n   */\n  VectorImageTile.prototype.getContext = function getContext (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.context_)) {\n      this.context_[key] = createCanvasContext2D();\n    }\n    return this.context_[key];\n  };\n\n  /**\n   * Get the Canvas for this tile.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  VectorImageTile.prototype.getImage = function getImage (layer) {\n    return this.getReplayState(layer).renderedTileRevision == -1 ?\n      null : this.getContext(layer).canvas;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @return {module:ol/VectorImageTile~ReplayState} The replay state.\n   */\n  VectorImageTile.prototype.getReplayState = function getReplayState (layer) {\n    var key = getUid(layer).toString();\n    if (!(key in this.replayState_)) {\n      this.replayState_[key] = {\n        dirty: false,\n        renderedRenderOrder: null,\n        renderedRevision: -1,\n        renderedTileRevision: -1\n      };\n    }\n    return this.replayState_[key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.getKey = function getKey () {\n    return this.tileKeys.join('/') + '-' + this.sourceRevision_;\n  };\n\n  /**\n   * @param {string} tileKey Key (tileCoord) of the source tile.\n   * @return {module:ol/VectorTile} Source tile.\n   */\n  VectorImageTile.prototype.getTile = function getTile (tileKey) {\n    return this.sourceTiles_[tileKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorImageTile.prototype.load = function load () {\n    // Source tiles with LOADED state - we just count them because once they are\n    // loaded, we're no longer listening to state changes.\n    var leftToLoad = 0;\n    // Source tiles with ERROR state - we track them because they can still have\n    // an ERROR state after another load attempt.\n    var errorSourceTiles = {};\n\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n    }\n    if (this.state == TileState.LOADING) {\n      this.tileKeys.forEach(function(sourceTileKey) {\n        var sourceTile = this.getTile(sourceTileKey);\n        if (sourceTile.state == TileState.IDLE) {\n          sourceTile.setLoader(this.loader_);\n          sourceTile.load();\n        }\n        if (sourceTile.state == TileState.LOADING) {\n          var key = listen(sourceTile, EventType.CHANGE, function(e) {\n            var state = sourceTile.getState();\n            if (state == TileState.LOADED ||\n                state == TileState.ERROR) {\n              var uid = getUid(sourceTile);\n              if (state == TileState.ERROR) {\n                errorSourceTiles[uid] = true;\n              } else {\n                --leftToLoad;\n                delete errorSourceTiles[uid];\n              }\n              if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n                this.finishLoading_();\n              }\n            }\n          }.bind(this));\n          this.loadListenerKeys_.push(key);\n          ++leftToLoad;\n        }\n      }.bind(this));\n    }\n    if (leftToLoad - Object.keys(errorSourceTiles).length == 0) {\n      setTimeout(this.finishLoading_.bind(this), 0);\n    }\n  };\n\n  /**\n   * @private\n   */\n  VectorImageTile.prototype.finishLoading_ = function finishLoading_ () {\n    var this$1 = this;\n\n    var loaded = this.tileKeys.length;\n    var empty = 0;\n    for (var i = loaded - 1; i >= 0; --i) {\n      var state = this$1.getTile(this$1.tileKeys[i]).getState();\n      if (state != TileState.LOADED) {\n        --loaded;\n      }\n      if (state == TileState.EMPTY) {\n        ++empty;\n      }\n    }\n    if (loaded == this.tileKeys.length) {\n      this.loadListenerKeys_.forEach(unlistenByKey);\n      this.loadListenerKeys_.length = 0;\n      this.setState(TileState.LOADED);\n    } else {\n      this.setState(empty == this.tileKeys.length ? TileState.EMPTY : TileState.ERROR);\n    }\n  };\n\n  return VectorImageTile;\n}(Tile));\n\n\nexport default VectorImageTile;\n\n/**\n * Sets the loader for a tile.\n * @param {module:ol/VectorTile} tile Vector tile.\n * @param {string} url URL.\n */\nexport function defaultLoadFunction(tile, url) {\n  var loader = loadFeaturesXhr(url, tile.getFormat(), tile.onLoad.bind(tile), tile.onError.bind(tile));\n  tile.setLoader(loader);\n}\n\n//# sourceMappingURL=VectorImageTile.js.map","/**\n * @module ol/VectorTile\n */\nimport {getUid} from './util.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\n\n/**\n * @const\n * @type {module:ol/extent~Extent}\n */\nvar DEFAULT_EXTENT = [0, 0, 4096, 4096];\n\n\n/**\n * @typedef {function(new: module:ol/VectorTile, module:ol/tilecoord~TileCoord,\n * module:ol/TileState, string, ?string, module:ol/Tile~LoadFunction)} TileClass\n * @api\n */\n\nvar VectorTile = (function (Tile) {\n  function VectorTile(tileCoord, state, src, format, tileLoadFunction, opt_options) {\n\n    Tile.call(this, tileCoord, state, opt_options);\n\n    /**\n     * @type {number}\n     */\n    this.consumers = 0;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature}\n     */\n    this.format_ = format;\n\n    /**\n     * @private\n     * @type {Array<module:ol/Feature>}\n     */\n    this.features_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_;\n\n    /**\n     * Data projection\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.projection_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/render/ReplayGroup>}\n     */\n    this.replayGroups_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Tile~LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.url_ = src;\n\n  }\n\n  if ( Tile ) VectorTile.__proto__ = Tile;\n  VectorTile.prototype = Object.create( Tile && Tile.prototype );\n  VectorTile.prototype.constructor = VectorTile;\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.disposeInternal = function disposeInternal () {\n    this.features_ = null;\n    this.replayGroups_ = {};\n    this.state = TileState.ABORT;\n    this.changed();\n    Tile.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * Gets the extent of the vector tile.\n   * @return {module:ol/extent~Extent} The extent.\n   * @api\n   */\n  VectorTile.prototype.getExtent = function getExtent () {\n    return this.extent_ || DEFAULT_EXTENT;\n  };\n\n  /**\n   * Get the feature format assigned for reading this tile's features.\n   * @return {module:ol/format/Feature} Feature format.\n   * @api\n   */\n  VectorTile.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n  /**\n   * Get the features for this tile. Geometries will be in the projection returned\n   * by {@link module:ol/VectorTile~VectorTile#getProjection}.\n   * @return {Array<module:ol/Feature|module:ol/render/Feature>} Features.\n   * @api\n   */\n  VectorTile.prototype.getFeatures = function getFeatures () {\n    return this.features_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.getKey = function getKey () {\n    return this.url_;\n  };\n\n  /**\n   * Get the feature projection of features returned by\n   * {@link module:ol/VectorTile~VectorTile#getFeatures}.\n   * @return {module:ol/proj/Projection} Feature projection.\n   * @api\n   */\n  VectorTile.prototype.getProjection = function getProjection () {\n    return this.projection_;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @return {module:ol/render/ReplayGroup} Replay group.\n   */\n  VectorTile.prototype.getReplayGroup = function getReplayGroup (layer, key) {\n    return this.replayGroups_[getUid(layer) + ',' + key];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  VectorTile.prototype.load = function load () {\n    if (this.state == TileState.IDLE) {\n      this.setState(TileState.LOADING);\n      this.tileLoadFunction_(this, this.url_);\n      this.loader_(null, NaN, null);\n    }\n  };\n\n  /**\n   * Handler for successful tile load.\n   * @param {Array<module:ol/Feature>} features The loaded features.\n   * @param {module:ol/proj/Projection} dataProjection Data projection.\n   * @param {module:ol/extent~Extent} extent Extent.\n   */\n  VectorTile.prototype.onLoad = function onLoad (features, dataProjection, extent) {\n    this.setProjection(dataProjection);\n    this.setFeatures(features);\n    this.setExtent(extent);\n  };\n\n  /**\n   * Handler for tile load errors.\n   */\n  VectorTile.prototype.onError = function onError () {\n    this.setState(TileState.ERROR);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s\n   * `tileLoadFunction`. Sets the extent of the vector tile. This is only required\n   * for tiles in projections with `tile-pixels` as units. The extent should be\n   * set to `[0, 0, tilePixelSize, tilePixelSize]`, where `tilePixelSize` is\n   * calculated by multiplying the tile size with the tile pixel ratio. For\n   * sources using {@link module:ol/format/MVT~MVT} as feature format, the\n   * {@link module:ol/format/MVT~MVT#getLastExtent} method will return the correct\n   * extent. The default is `[0, 0, 4096, 4096]`.\n   * @param {module:ol/extent~Extent} extent The extent.\n   * @api\n   */\n  VectorTile.prototype.setExtent = function setExtent (extent) {\n    this.extent_ = extent;\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the features for the tile.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @api\n   */\n  VectorTile.prototype.setFeatures = function setFeatures (features) {\n    this.features_ = features;\n    this.setState(TileState.LOADED);\n  };\n\n  /**\n   * Function for use in an {@link module:ol/source/VectorTile~VectorTile}'s `tileLoadFunction`.\n   * Sets the projection of the features that were added with\n   * {@link module:ol/VectorTile~VectorTile#setFeatures}.\n   * @param {module:ol/proj/Projection} projection Feature projection.\n   * @api\n   */\n  VectorTile.prototype.setProjection = function setProjection (projection) {\n    this.projection_ = projection;\n  };\n\n  /**\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @param {string} key Key.\n   * @param {module:ol/render/ReplayGroup} replayGroup Replay group.\n   */\n  VectorTile.prototype.setReplayGroup = function setReplayGroup (layer, key, replayGroup) {\n    this.replayGroups_[getUid(layer) + ',' + key] = replayGroup;\n  };\n\n  /**\n   * Set the feature loader for reading this tile's features.\n   * @param {module:ol/featureloader~FeatureLoader} loader Feature loader.\n   * @api\n   */\n  VectorTile.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorTile;\n}(Tile));\n\nexport default VectorTile;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/webgl/Shader\n */\nimport {FALSE} from '../functions.js';\n\n/**\n * @abstract\n */\nvar WebGLShader = function WebGLShader(source) {\n\n  /**\n   * @private\n   * @type {string}\n   */\n  this.source_ = source;\n\n};\n\n/**\n * @abstract\n * @return {number} Type.\n */\nWebGLShader.prototype.getType = function getType () {};\n\n/**\n * @return {string} Source.\n */\nWebGLShader.prototype.getSource = function getSource () {\n  return this.source_;\n};\n\n\n/**\n * @return {boolean} Is animated?\n */\nWebGLShader.prototype.isAnimated = FALSE;\nexport default WebGLShader;\n\n//# sourceMappingURL=Shader.js.map","/**\n * @module ol/webgl/Fragment\n */\n\nimport {FRAGMENT_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLFragment = (function (WebGLShader) {\n  function WebGLFragment(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLFragment.__proto__ = WebGLShader;\n  WebGLFragment.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLFragment.prototype.constructor = WebGLFragment;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLFragment.prototype.getType = function getType () {\n    return FRAGMENT_SHADER;\n  };\n\n  return WebGLFragment;\n}(WebGLShader));\n\n\nexport default WebGLFragment;\n\n//# sourceMappingURL=Fragment.js.map","/**\n * @module ol/webgl/Vertex\n */\n\nimport {VERTEX_SHADER} from '../webgl.js';\nimport WebGLShader from '../webgl/Shader.js';\n\nvar WebGLVertex = (function (WebGLShader) {\n  function WebGLVertex(source) {\n    WebGLShader.call(this, source);\n  }\n\n  if ( WebGLShader ) WebGLVertex.__proto__ = WebGLShader;\n  WebGLVertex.prototype = Object.create( WebGLShader && WebGLShader.prototype );\n  WebGLVertex.prototype.constructor = WebGLVertex;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVertex.prototype.getType = function getType () {\n    return VERTEX_SHADER;\n  };\n\n  return WebGLVertex;\n}(WebGLShader));\n\n\nexport default WebGLVertex;\n\n//# sourceMappingURL=Vertex.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_fillColor;\\nuniform vec4 u_strokeColor;\\nuniform vec2 u_size;\\n\\nvoid main(void) {\\n  vec2 windowCenter = vec2((v_center.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_center.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  vec2 windowOffset = vec2((v_offset.x + 1.0) / 2.0 * u_size.x * v_pixelRatio,\\n      (v_offset.y + 1.0) / 2.0 * u_size.y * v_pixelRatio);\\n  float radius = length(windowCenter - windowOffset);\\n  float dist = length(windowCenter - gl_FragCoord.xy);\\n  if (dist > radius + v_halfWidth) {\\n    if (u_strokeColor.a == 0.0) {\\n      gl_FragColor = u_fillColor;\\n    } else {\\n      gl_FragColor = u_strokeColor;\\n    }\\n    gl_FragColor.a = gl_FragColor.a - (dist - (radius + v_halfWidth));\\n  } else if (u_fillColor.a == 0.0) {\\n    // Hooray, no fill, just stroke. We can use real antialiasing.\\n    gl_FragColor = u_strokeColor;\\n    if (dist < radius - v_halfWidth) {\\n      gl_FragColor.a = gl_FragColor.a - (radius - v_halfWidth - dist);\\n    }\\n  } else {\\n    gl_FragColor = u_fillColor;\\n    float strokeDist = radius - v_halfWidth;\\n    float antialias = 2.0 * v_pixelRatio;\\n    if (dist > strokeDist) {\\n      gl_FragColor = u_strokeColor;\\n    } else if (dist >= strokeDist - antialias) {\\n      float step = smoothstep(strokeDist - antialias, strokeDist, dist);\\n      gl_FragColor = mix(u_fillColor, u_strokeColor, step);\\n    }\\n  }\\n  gl_FragColor.a = gl_FragColor.a * u_opacity;\\n  if (gl_FragColor.a <= 0.0) {\\n    discard;\\n  }\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying vec2 b;varying float c;varying float d;uniform float m;uniform vec4 n;uniform vec4 o;uniform vec2 p;void main(void){vec2 windowCenter=vec2((a.x+1.0)/2.0*p.x*d,(a.y+1.0)/2.0*p.y*d);vec2 windowOffset=vec2((b.x+1.0)/2.0*p.x*d,(b.y+1.0)/2.0*p.y*d);float radius=length(windowCenter-windowOffset);float dist=length(windowCenter-gl_FragCoord.xy);if(dist>radius+c){if(o.a==0.0){gl_FragColor=n;}else{gl_FragColor=o;}gl_FragColor.a=gl_FragColor.a-(dist-(radius+c));}else if(n.a==0.0){gl_FragColor=o;if(dist<radius-c){gl_FragColor.a=gl_FragColor.a-(radius-c-dist);}} else{gl_FragColor=n;float strokeDist=radius-c;float antialias=2.0*d;if(dist>strokeDist){gl_FragColor=o;}else if(dist>=strokeDist-antialias){float step=smoothstep(strokeDist-antialias,strokeDist,dist);gl_FragColor=mix(n,o,step);}} gl_FragColor.a=gl_FragColor.a*m;if(gl_FragColor.a<=0.0){discard;}}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_center;\\nvarying vec2 v_offset;\\nvarying float v_halfWidth;\\nvarying float v_pixelRatio;\\n\\n\\nattribute vec2 a_position;\\nattribute float a_instruction;\\nattribute float a_radius;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  v_center = vec4(u_projectionMatrix * vec4(a_position, 0.0, 1.0)).xy;\\n  v_pixelRatio = u_pixelRatio;\\n  float lineWidth = u_lineWidth * u_pixelRatio;\\n  v_halfWidth = lineWidth / 2.0;\\n  if (lineWidth == 0.0) {\\n    lineWidth = 2.0 * u_pixelRatio;\\n  }\\n  vec2 offset;\\n  // Radius with anitaliasing (roughly).\\n  float radius = a_radius + 3.0 * u_pixelRatio;\\n  // Until we get gl_VertexID in WebGL, we store an instruction.\\n  if (a_instruction == 0.0) {\\n    // Offsetting the edges of the triangle by lineWidth / 2 is necessary, however\\n    // we should also leave some space for the antialiasing, thus we offset by lineWidth.\\n    offset = vec2(-1.0, 1.0);\\n  } else if (a_instruction == 1.0) {\\n    offset = vec2(-1.0, -1.0);\\n  } else if (a_instruction == 2.0) {\\n    offset = vec2(1.0, -1.0);\\n  } else {\\n    offset = vec2(1.0, 1.0);\\n  }\\n\\n  gl_Position = u_projectionMatrix * vec4(a_position + offset * radius, 0.0, 1.0) +\\n      offsetMatrix * vec4(offset * lineWidth, 0.0, 0.0);\\n  v_offset = vec4(u_projectionMatrix * vec4(a_position.x + a_radius, a_position.y,\\n      0.0, 1.0)).xy;\\n\\n  if (distance(v_center, v_offset) > 20000.0) {\\n    gl_Position = vec4(v_center, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying vec2 a;varying vec2 b;varying float c;varying float d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;void main(void){mat4 offsetMatrix=i*j;a=vec4(h*vec4(e,0.0,1.0)).xy;d=l;float lineWidth=k*l;c=lineWidth/2.0;if(lineWidth==0.0){lineWidth=2.0*l;}vec2 offset;float radius=g+3.0*l;if(f==0.0){offset=vec2(-1.0,1.0);}else if(f==1.0){offset=vec2(-1.0,-1.0);}else if(f==2.0){offset=vec2(1.0,-1.0);}else{offset=vec2(1.0,1.0);}gl_Position=h*vec4(e+offset*radius,0.0,1.0)+offsetMatrix*vec4(offset*lineWidth,0.0,0.0);b=vec4(h*vec4(e.x+g,e.y,0.0,1.0)).xy;if(distance(a,b)>20000.0){gl_Position=vec4(a,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/circlereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_fillColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_fillColor' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_strokeColor = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_strokeColor' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_instruction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_instruction' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_radius = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_radius' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/vec/mat4\n */\n\n\n/**\n * @return {Array<number>} 4x4 matrix representing a 3D identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n}\n\n\n/**\n * @param {Array<number>} mat4 Flattened 4x4 matrix receiving the result.\n * @param {module:ol/transform~Transform} transform Transformation matrix.\n * @return {Array<number>} 2D transformation matrix as flattened 4x4 matrix.\n */\nexport function fromTransform(mat4, transform) {\n  mat4[0] = transform[0];\n  mat4[1] = transform[1];\n  mat4[4] = transform[2];\n  mat4[5] = transform[3];\n  mat4[12] = transform[4];\n  mat4[13] = transform[5];\n  return mat4;\n}\n\n//# sourceMappingURL=mat4.js.map","/**\n * @module ol/render/webgl/Replay\n */\n\nimport {getCenter} from '../../extent.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  create as createTransform,\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform\n} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TRIANGLES,\n  UNSIGNED_INT, UNSIGNED_SHORT} from '../../webgl.js';\n\nvar WebGLReplay = (function (VectorContext) {\n  function WebGLReplay(tolerance, maxExtent) {\n    VectorContext.call(this);\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * The origin of the coordinate system for the point coordinates sent to\n     * the GPU. To eliminate jitter caused by precision problems in the GPU\n     * we use the \"Rendering Relative to Eye\" technique described in the \"3D\n     * Engine Design for Virtual Globes\" book.\n     * @protected\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.origin = getCenter(maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetRotateMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {module:ol/transform~Transform}\n     */\n    this.offsetScaleMatrix_ = createTransform();\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.indices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.indicesBuffer = null;\n\n    /**\n     * Start index per feature (the index).\n     * @protected\n     * @type {Array<number>}\n     */\n    this.startIndices = [];\n\n    /**\n     * Start index per feature (the feature).\n     * @protected\n     * @type {Array<module:ol/Feature|module:ol/render/Feature>}\n     */\n    this.startIndicesFeature = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.vertices = [];\n\n    /**\n     * @protected\n     * @type {?module:ol/webgl/Buffer}\n     */\n    this.verticesBuffer = null;\n\n    /**\n     * Optional parameter for PolygonReplay instances.\n     * @protected\n     * @type {module:ol/render/webgl/LineStringReplay|undefined}\n     */\n    this.lineStringReplay = undefined;\n\n  }\n\n  if ( VectorContext ) WebGLReplay.__proto__ = VectorContext;\n  WebGLReplay.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLReplay.prototype.constructor = WebGLReplay;\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplay.prototype.finish = function finish (context) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} Locations.\n   */\n  WebGLReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/render/webgl/circlereplay/defaultshader/Locations|\n     module:ol/render/webgl/linestringreplay/defaultshader/Locations|\n     module:ol/render/webgl/polygonreplay/defaultshader/Locations|\n     module:ol/render/webgl/texturereplay/defaultshader/Locations} locations Locations.\n   */\n  WebGLReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {boolean} hitDetection Hit detection mode.\n   */\n  WebGLReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {};\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplay = function drawHitDetectionReplay (gl, context, skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent) {\n    if (!oneByOne) {\n      // draw all hit-detection features in \"once\" (by texture group)\n      return this.drawHitDetectionReplayAll(gl, context,\n        skippedFeaturesHash, featureCallback);\n    } else {\n      // draw hit-detection features one by one\n      return this.drawHitDetectionReplayOneByOne(gl, context,\n        skippedFeaturesHash, featureCallback, opt_hitExtent);\n    }\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.drawHitDetectionReplayAll = function drawHitDetectionReplayAll (gl, context, skippedFeaturesHash, featureCallback) {\n    gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n    this.drawReplay(gl, context, skippedFeaturesHash, true);\n\n    var result = featureCallback(null);\n    if (result) {\n      return result;\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplay.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var gl = context.getGL();\n    var tmpStencil, tmpStencilFunc, tmpStencilMaskVal, tmpStencilRef, tmpStencilMask,\n        tmpStencilOpFail, tmpStencilOpPass, tmpStencilOpZFail;\n\n    if (this.lineStringReplay) {\n      tmpStencil = gl.isEnabled(gl.STENCIL_TEST);\n      tmpStencilFunc = gl.getParameter(gl.STENCIL_FUNC);\n      tmpStencilMaskVal = gl.getParameter(gl.STENCIL_VALUE_MASK);\n      tmpStencilRef = gl.getParameter(gl.STENCIL_REF);\n      tmpStencilMask = gl.getParameter(gl.STENCIL_WRITEMASK);\n      tmpStencilOpFail = gl.getParameter(gl.STENCIL_FAIL);\n      tmpStencilOpPass = gl.getParameter(gl.STENCIL_PASS_DEPTH_PASS);\n      tmpStencilOpZFail = gl.getParameter(gl.STENCIL_PASS_DEPTH_FAIL);\n\n      gl.enable(gl.STENCIL_TEST);\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilMask(255);\n      gl.stencilFunc(gl.ALWAYS, 1, 255);\n      gl.stencilOp(gl.KEEP, gl.KEEP, gl.REPLACE);\n\n      this.lineStringReplay.replay(context,\n        center, resolution, rotation, size, pixelRatio,\n        opacity, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n\n      gl.stencilMask(0);\n      gl.stencilFunc(gl.NOTEQUAL, 1, 255);\n    }\n\n    context.bindBuffer(ARRAY_BUFFER, this.verticesBuffer);\n\n    context.bindBuffer(ELEMENT_ARRAY_BUFFER, this.indicesBuffer);\n\n    var locations = this.setUpProgram(gl, context, size, pixelRatio);\n\n    // set the \"uniform\" values\n    var projectionMatrix = resetTransform(this.projectionMatrix_);\n    scaleTransform(projectionMatrix, 2 / (resolution * size[0]), 2 / (resolution * size[1]));\n    rotateTransform(projectionMatrix, -rotation);\n    translateTransform(projectionMatrix, -(center[0] - this.origin[0]), -(center[1] - this.origin[1]));\n\n    var offsetScaleMatrix = resetTransform(this.offsetScaleMatrix_);\n    scaleTransform(offsetScaleMatrix, 2 / size[0], 2 / size[1]);\n\n    var offsetRotateMatrix = resetTransform(this.offsetRotateMatrix_);\n    if (rotation !== 0) {\n      rotateTransform(offsetRotateMatrix, -rotation);\n    }\n\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, projectionMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetScaleMatrix, false,\n      fromTransform(this.tmpMat4_, offsetScaleMatrix));\n    gl.uniformMatrix4fv(locations.u_offsetRotateMatrix, false,\n      fromTransform(this.tmpMat4_, offsetRotateMatrix));\n    gl.uniform1f(locations.u_opacity, opacity);\n\n    // draw!\n    var result;\n    if (featureCallback === undefined) {\n      this.drawReplay(gl, context, skippedFeaturesHash, false);\n    } else {\n      // draw feature by feature for the hit-detection\n      result = this.drawHitDetectionReplay(gl, context, skippedFeaturesHash,\n        featureCallback, oneByOne, opt_hitExtent);\n    }\n\n    // disable the vertex attrib arrays\n    this.shutDownProgram(gl, locations);\n\n    if (this.lineStringReplay) {\n      if (!tmpStencil) {\n        gl.disable(gl.STENCIL_TEST);\n      }\n      gl.clear(gl.STENCIL_BUFFER_BIT);\n      gl.stencilFunc(/** @type {number} */ (tmpStencilFunc),\n        /** @type {number} */ (tmpStencilRef), /** @type {number} */ (tmpStencilMaskVal));\n      gl.stencilMask(/** @type {number} */ (tmpStencilMask));\n      gl.stencilOp(/** @type {number} */ (tmpStencilOpFail),\n        /** @type {number} */ (tmpStencilOpZFail), /** @type {number} */ (tmpStencilOpPass));\n    }\n\n    return result;\n  };\n\n  /**\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {number} start Start index.\n   * @param {number} end End index.\n   */\n  WebGLReplay.prototype.drawElements = function drawElements (gl, context, start, end) {\n    var elementType = context.hasOESElementIndexUint ?\n      UNSIGNED_INT : UNSIGNED_SHORT;\n    var elementSize = context.hasOESElementIndexUint ? 4 : 2;\n\n    var numItems = end - start;\n    var offsetInBytes = start * elementSize;\n    gl.drawElements(TRIANGLES, numItems, elementType, offsetInBytes);\n  };\n\n  return WebGLReplay;\n}(VectorContext));\n\n\nexport default WebGLReplay;\n\n//# sourceMappingURL=Replay.js.map","/**\n * @module ol/render/webgl\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_FONT = '10px sans-serif';\n\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_FILLSTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINECAP = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport var DEFAULT_LINEDASH = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEDASHOFFSET = 0;\n\n\n/**\n * @const\n * @type {string}\n */\nexport var DEFAULT_LINEJOIN = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_MITERLIMIT = 10;\n\n/**\n * @const\n * @type {module:ol/color~Color}\n */\nexport var DEFAULT_STROKESTYLE = [0.0, 0.0, 0.0, 1.0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTALIGN = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_TEXTBASELINE = 0.5;\n\n\n/**\n * @const\n * @type {number}\n */\nexport var DEFAULT_LINEWIDTH = 1;\n\n/**\n * @const\n * @type {number}\n */\nexport var EPSILON = Number.EPSILON || 2.220446049250313e-16;\n\n/**\n * Calculates the orientation of a triangle based on the determinant method.\n * @param {number} x1 First X coordinate.\n * @param {number} y1 First Y coordinate.\n * @param {number} x2 Second X coordinate.\n * @param {number} y2 Second Y coordinate.\n * @param {number} x3 Third X coordinate.\n * @param {number} y3 Third Y coordinate.\n * @return {boolean|undefined} Triangle is clockwise.\n */\nexport var triangleIsCounterClockwise = function(x1, y1, x2, y2, x3, y3) {\n  var area = (x2 - x1) * (y3 - y1) - (x3 - x1) * (y2 - y1);\n  return (area <= EPSILON && area >= -EPSILON) ?\n    undefined : area > 0;\n};\n\n\n//# sourceMappingURL=webgl.js.map","/**\n * @module ol/webgl/Buffer\n */\nimport {STATIC_DRAW, STREAM_DRAW, DYNAMIC_DRAW} from '../webgl.js';\n\n/**\n * @enum {number}\n */\nvar BufferUsage = {\n  STATIC_DRAW: STATIC_DRAW,\n  STREAM_DRAW: STREAM_DRAW,\n  DYNAMIC_DRAW: DYNAMIC_DRAW\n};\n\n\nvar WebGLBuffer = function WebGLBuffer(opt_arr, opt_usage) {\n\n  /**\n   * @private\n   * @type {Array<number>}\n   */\n  this.arr_ = opt_arr !== undefined ? opt_arr : [];\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.usage_ = opt_usage !== undefined ? opt_usage : BufferUsage.STATIC_DRAW;\n\n};\n\n/**\n * @return {Array<number>} Array.\n */\nWebGLBuffer.prototype.getArray = function getArray () {\n  return this.arr_;\n};\n\n/**\n * @return {number} Usage.\n */\nWebGLBuffer.prototype.getUsage = function getUsage () {\n  return this.usage_;\n};\n\nexport default WebGLBuffer;\n\n//# sourceMappingURL=Buffer.js.map","/**\n * @module ol/render/webgl/CircleReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/circlereplay/defaultshader.js';\nimport Locations from '../webgl/circlereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET, DEFAULT_STROKESTYLE,\n  DEFAULT_FILLSTYLE, DEFAULT_LINEWIDTH} from '../webgl.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLCircleReplay = (function (WebGLReplay) {\n  function WebGLCircleReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/circlereplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<Array<number>|number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.radius_ = 0;\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         strokeColor: (Array<number>|null),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineWidth: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      strokeColor: null,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineWidth: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLCircleReplay.__proto__ = WebGLReplay;\n  WebGLCircleReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLCircleReplay.prototype.constructor = WebGLCircleReplay;\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLCircleReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    var n = numVertices / 4;\n    var i, ii;\n    for (i = offset, ii = end; i < ii; i += stride) {\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 0;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 1;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 2;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.vertices[numVertices++] = flatCoordinates[i];\n      this$1.vertices[numVertices++] = flatCoordinates[i + 1];\n      this$1.vertices[numVertices++] = 3;\n      this$1.vertices[numVertices++] = this$1.radius_;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n      this$1.indices[numIndices++] = n;\n\n      n += 4;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawCircle = function drawCircle (circleGeometry, feature) {\n    var radius = circleGeometry.getRadius();\n    var stride = circleGeometry.getStride();\n    if (radius) {\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n\n      this.radius_ = radius;\n      var flatCoordinates = circleGeometry.getFlatCoordinates();\n      flatCoordinates = translate(flatCoordinates, 0, 2,\n        stride, -this.origin[0], -this.origin[1]);\n      this.drawCoordinates_(flatCoordinates, 0, 2, stride);\n    } else {\n      if (this.state_.changed) {\n        this.styles_.pop();\n        if (this.styles_.length) {\n          var lastState = this.styles_[this.styles_.length - 1];\n          this.state_.fillColor = /** @type {Array<number>} */ (lastState[0]);\n          this.state_.strokeColor = /** @type {Array<number>} */ (lastState[1]);\n          this.state_.lineWidth = /** @type {number} */ (lastState[2]);\n          this.state_.changed = false;\n        }\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLCircleReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    // We only delete our stuff here. The shaders and the program may\n    // be used by other CircleReplay instances (for other layers). And\n    // they will be deleted when disposing of the module:ol/webgl/Context~WebGLContext\n    // object.\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 16, 0);\n\n    gl.enableVertexAttribArray(locations.a_instruction);\n    gl.vertexAttribPointer(locations.a_instruction, 1, FLOAT,\n      false, 16, 8);\n\n    gl.enableVertexAttribArray(locations.a_radius);\n    gl.vertexAttribPointer(locations.a_radius, 1, FLOAT,\n      false, 16, 12);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_instruction);\n    gl.disableVertexAttribArray(locations.a_radius);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n        this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n          /** @type {number} */ (nextStyle[2]));\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLCircleReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, /** @type {Array<number>} */ (nextStyle[0]));\n      this$1.setStrokeStyle_(gl, /** @type {Array<number>} */ (nextStyle[1]),\n        /** @type {number} */ (nextStyle[2]));\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLCircleReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_fillColor, color);\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   */\n  WebGLCircleReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth) {\n    gl.uniform4fv(this.defaultLocations_.u_strokeColor, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLCircleReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleColor, strokeStyleWidth;\n    if (strokeStyle) {\n      var strokeStyleLineDash = strokeStyle.getLineDash();\n      this.state_.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash : DEFAULT_LINEDASH;\n      var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n      strokeStyleColor = strokeStyle.getColor();\n      if (!(strokeStyleColor instanceof CanvasGradient) &&\n          !(strokeStyleColor instanceof CanvasPattern)) {\n        strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n          return i != 3 ? c / 255 : c;\n        }) || DEFAULT_STROKESTYLE;\n      } else {\n        strokeStyleColor = DEFAULT_STROKESTYLE;\n      }\n      strokeStyleWidth = strokeStyle.getWidth();\n      strokeStyleWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : DEFAULT_LINEWIDTH;\n    } else {\n      strokeStyleColor = [0, 0, 0, 0];\n      strokeStyleWidth = 0;\n    }\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        !this.state_.fillColor || !equals(this.state_.fillColor, fillStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth) {\n      this.state_.changed = true;\n      this.state_.fillColor = fillStyleColor;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.styles_.push([fillStyleColor, strokeStyleColor, strokeStyleWidth]);\n    }\n  };\n\n  return WebGLCircleReplay;\n}(WebGLReplay));\n\n\nexport default WebGLCircleReplay;\n\n//# sourceMappingURL=CircleReplay.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nuniform float u_opacity;\\nuniform sampler2D u_image;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_image, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  float alpha = texColor.a * v_opacity * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying vec2 a;varying float b;uniform float k;uniform sampler2D l;void main(void){vec4 texColor=texture2D(l,a);gl_FragColor.rgb=texColor.rgb;float alpha=texColor.a*b*k;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\nvarying float v_opacity;\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nattribute vec2 a_offsets;\\nattribute float a_opacity;\\nattribute float a_rotateWithView;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  mat4 offsetMatrix = u_offsetScaleMatrix;\\n  if (a_rotateWithView == 1.0) {\\n    offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  }\\n  vec4 offsets = offsetMatrix * vec4(a_offsets, 0.0, 0.0);\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0) + offsets;\\n  v_texCoord = a_texCoord;\\n  v_opacity = a_opacity;\\n}\\n\\n\\n' :\n  'varying vec2 a;varying float b;attribute vec2 c;attribute vec2 d;attribute vec2 e;attribute float f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;void main(void){mat4 offsetMatrix=i;if(g==1.0){offsetMatrix=i*j;}vec4 offsets=offsetMatrix*vec4(e,0.0,0.0);gl_Position=h*vec4(c,0.0,1.0)+offsets;a=d;b=f;}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/texturereplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_image = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_image' : 'l');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'c');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_offsets = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_offsets' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_opacity = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_rotateWithView = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_rotateWithView' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/webgl/ContextEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LOST: 'webglcontextlost',\n  RESTORED: 'webglcontextrestored'\n};\n\n//# sourceMappingURL=ContextEventType.js.map","/**\n * @module ol/webgl/Context\n */\nimport {getUid} from '../util.js';\nimport {EXTENSIONS as WEBGL_EXTENSIONS} from '../webgl.js';\nimport Disposable from '../Disposable.js';\nimport {includes} from '../array.js';\nimport {listen, unlistenAll} from '../events.js';\nimport {clear} from '../obj.js';\nimport {ARRAY_BUFFER, ELEMENT_ARRAY_BUFFER, TEXTURE_2D, TEXTURE_WRAP_S, TEXTURE_WRAP_T} from '../webgl.js';\nimport ContextEventType from '../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} BufferCacheEntry\n * @property {module:ol/webgl/Buffer} buf\n * @property {WebGLBuffer} buffer\n */\n\n\n/**\n * @classdesc\n * A WebGL context for accessing low-level WebGL capabilities.\n */\nvar WebGLContext = (function (Disposable) {\n  function WebGLContext(canvas, gl) {\n    Disposable.call(this);\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = canvas;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = gl;\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/webgl/Context~BufferCacheEntry>}\n     */\n    this.bufferCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLShader>}\n     */\n    this.shaderCache_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, WebGLProgram>}\n     */\n    this.programCache_ = {};\n\n    /**\n     * @private\n     * @type {WebGLProgram}\n     */\n    this.currentProgram_ = null;\n\n    /**\n     * @private\n     * @type {WebGLFramebuffer}\n     */\n    this.hitDetectionFramebuffer_ = null;\n\n    /**\n     * @private\n     * @type {WebGLTexture}\n     */\n    this.hitDetectionTexture_ = null;\n\n    /**\n     * @private\n     * @type {WebGLRenderbuffer}\n     */\n    this.hitDetectionRenderbuffer_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.hasOESElementIndexUint = includes(WEBGL_EXTENSIONS, 'OES_element_index_uint');\n\n    // use the OES_element_index_uint extension if available\n    if (this.hasOESElementIndexUint) {\n      gl.getExtension('OES_element_index_uint');\n    }\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n  }\n\n  if ( Disposable ) WebGLContext.__proto__ = Disposable;\n  WebGLContext.prototype = Object.create( Disposable && Disposable.prototype );\n  WebGLContext.prototype.constructor = WebGLContext;\n\n  /**\n   * Just bind the buffer if it's in the cache. Otherwise create\n   * the WebGL buffer, bind it, populate it, and add an entry to\n   * the cache.\n   * @param {number} target Target.\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.bindBuffer = function bindBuffer (target, buf) {\n    var gl = this.getGL();\n    var arr = buf.getArray();\n    var bufferKey = String(getUid(buf));\n    if (bufferKey in this.bufferCache_) {\n      var bufferCacheEntry = this.bufferCache_[bufferKey];\n      gl.bindBuffer(target, bufferCacheEntry.buffer);\n    } else {\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(target, buffer);\n      var /** @type {ArrayBufferView} */ arrayBuffer;\n      if (target == ARRAY_BUFFER) {\n        arrayBuffer = new Float32Array(arr);\n      } else if (target == ELEMENT_ARRAY_BUFFER) {\n        arrayBuffer = this.hasOESElementIndexUint ?\n          new Uint32Array(arr) : new Uint16Array(arr);\n      }\n      gl.bufferData(target, arrayBuffer, buf.getUsage());\n      this.bufferCache_[bufferKey] = {\n        buf: buf,\n        buffer: buffer\n      };\n    }\n  };\n\n  /**\n   * @param {module:ol/webgl/Buffer} buf Buffer.\n   */\n  WebGLContext.prototype.deleteBuffer = function deleteBuffer (buf) {\n    var gl = this.getGL();\n    var bufferKey = String(getUid(buf));\n    var bufferCacheEntry = this.bufferCache_[bufferKey];\n    if (!gl.isContextLost()) {\n      gl.deleteBuffer(bufferCacheEntry.buffer);\n    }\n    delete this.bufferCache_[bufferKey];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLContext.prototype.disposeInternal = function disposeInternal () {\n    var this$1 = this;\n\n    unlistenAll(this.canvas_);\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      for (var key in this$1.bufferCache_) {\n        gl.deleteBuffer(this$1.bufferCache_[key].buffer);\n      }\n      for (var key$1 in this$1.programCache_) {\n        gl.deleteProgram(this$1.programCache_[key$1]);\n      }\n      for (var key$2 in this$1.shaderCache_) {\n        gl.deleteShader(this$1.shaderCache_[key$2]);\n      }\n      // delete objects for hit-detection\n      gl.deleteFramebuffer(this.hitDetectionFramebuffer_);\n      gl.deleteRenderbuffer(this.hitDetectionRenderbuffer_);\n      gl.deleteTexture(this.hitDetectionTexture_);\n    }\n  };\n\n  /**\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  WebGLContext.prototype.getCanvas = function getCanvas () {\n    return this.canvas_;\n  };\n\n  /**\n   * Get the WebGL rendering context\n   * @return {WebGLRenderingContext} The rendering context.\n   * @api\n   */\n  WebGLContext.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * Get the frame buffer for hit detection.\n   * @return {WebGLFramebuffer} The hit detection frame buffer.\n   */\n  WebGLContext.prototype.getHitDetectionFramebuffer = function getHitDetectionFramebuffer () {\n    if (!this.hitDetectionFramebuffer_) {\n      this.initHitDetectionFramebuffer_();\n    }\n    return this.hitDetectionFramebuffer_;\n  };\n\n  /**\n   * Get shader from the cache if it's in the cache. Otherwise, create\n   * the WebGL shader, compile it, and add entry to cache.\n   * @param {module:ol/webgl/Shader} shaderObject Shader object.\n   * @return {WebGLShader} Shader.\n   */\n  WebGLContext.prototype.getShader = function getShader (shaderObject) {\n    var shaderKey = String(getUid(shaderObject));\n    if (shaderKey in this.shaderCache_) {\n      return this.shaderCache_[shaderKey];\n    } else {\n      var gl = this.getGL();\n      var shader = gl.createShader(shaderObject.getType());\n      gl.shaderSource(shader, shaderObject.getSource());\n      gl.compileShader(shader);\n      this.shaderCache_[shaderKey] = shader;\n      return shader;\n    }\n  };\n\n  /**\n   * Get the program from the cache if it's in the cache. Otherwise create\n   * the WebGL program, attach the shaders to it, and add an entry to the\n   * cache.\n   * @param {module:ol/webgl/Fragment} fragmentShaderObject Fragment shader.\n   * @param {module:ol/webgl/Vertex} vertexShaderObject Vertex shader.\n   * @return {WebGLProgram} Program.\n   */\n  WebGLContext.prototype.getProgram = function getProgram (fragmentShaderObject, vertexShaderObject) {\n    var programKey = getUid(fragmentShaderObject) + '/' + getUid(vertexShaderObject);\n    if (programKey in this.programCache_) {\n      return this.programCache_[programKey];\n    } else {\n      var gl = this.getGL();\n      var program = gl.createProgram();\n      gl.attachShader(program, this.getShader(fragmentShaderObject));\n      gl.attachShader(program, this.getShader(vertexShaderObject));\n      gl.linkProgram(program);\n      this.programCache_[programKey] = program;\n      return program;\n    }\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    clear(this.bufferCache_);\n    clear(this.shaderCache_);\n    clear(this.programCache_);\n    this.currentProgram_ = null;\n    this.hitDetectionFramebuffer_ = null;\n    this.hitDetectionTexture_ = null;\n    this.hitDetectionRenderbuffer_ = null;\n  };\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  WebGLContext.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n  };\n\n  /**\n   * Creates a 1x1 pixel framebuffer for the hit-detection.\n   * @private\n   */\n  WebGLContext.prototype.initHitDetectionFramebuffer_ = function initHitDetectionFramebuffer_ () {\n    var gl = this.gl_;\n    var framebuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\n    var texture = createEmptyTexture(gl, 1, 1);\n    var renderbuffer = gl.createRenderbuffer();\n    gl.bindRenderbuffer(gl.RENDERBUFFER, renderbuffer);\n    gl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, 1, 1);\n    gl.framebufferTexture2D(\n      gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    gl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT,\n      gl.RENDERBUFFER, renderbuffer);\n\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindRenderbuffer(gl.RENDERBUFFER, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n    this.hitDetectionFramebuffer_ = framebuffer;\n    this.hitDetectionTexture_ = texture;\n    this.hitDetectionRenderbuffer_ = renderbuffer;\n  };\n\n  /**\n   * Use a program.  If the program is already in use, this will return `false`.\n   * @param {WebGLProgram} program Program.\n   * @return {boolean} Changed.\n   * @api\n   */\n  WebGLContext.prototype.useProgram = function useProgram (program) {\n    if (program == this.currentProgram_) {\n      return false;\n    } else {\n      var gl = this.getGL();\n      gl.useProgram(program);\n      this.currentProgram_ = program;\n      return true;\n    }\n  };\n\n  return WebGLContext;\n}(Disposable));\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nfunction createTextureInternal(gl, opt_wrapS, opt_wrapT) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n  if (opt_wrapS !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_S, opt_wrapS);\n  }\n  if (opt_wrapT !== undefined) {\n    gl.texParameteri(\n      TEXTURE_2D, TEXTURE_WRAP_T, opt_wrapT);\n  }\n\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {number} width Width.\n * @param {number} height Height.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createEmptyTexture(gl, width, height, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n  return texture;\n}\n\n\n/**\n * @param {WebGLRenderingContext} gl WebGL rendering context.\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n * @param {number=} opt_wrapS wrapS.\n * @param {number=} opt_wrapT wrapT.\n * @return {WebGLTexture} The texture.\n */\nexport function createTexture(gl, image, opt_wrapS, opt_wrapT) {\n  var texture = createTextureInternal(gl, opt_wrapS, opt_wrapT);\n  gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n  return texture;\n}\n\nexport default WebGLContext;\n\n//# sourceMappingURL=Context.js.map","/**\n * @module ol/render/webgl/TextureReplay\n */\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {fragment, vertex} from '../webgl/texturereplay/defaultshader.js';\nimport Locations from '../webgl/texturereplay/defaultshader/Locations.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {CLAMP_TO_EDGE, FLOAT, TEXTURE_2D} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\nvar WebGLTextureReplay = (function (WebGLReplay) {\n  function WebGLTextureReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.anchorY = undefined;\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.groupIndices = [];\n\n    /**\n     * @type {Array<number>}\n     * @protected\n     */\n    this.hitDetectionGroupIndices = [];\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.height = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageHeight = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.imageWidth = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/render/webgl/texturereplay/defaultshader/Locations}\n     */\n    this.defaultLocations = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.opacity = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originX = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.originY = undefined;\n\n    /**\n     * @protected\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.rotation = undefined;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.scale = undefined;\n\n    /**\n     * @type {number|undefined}\n     * @protected\n     */\n    this.width = undefined;\n  }\n\n  if ( WebGLReplay ) WebGLTextureReplay.__proto__ = WebGLReplay;\n  WebGLTextureReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLTextureReplay.prototype.constructor = WebGLTextureReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var textures = this.getTextures(true);\n    var gl = context.getGL();\n    return function() {\n      if (!gl.isContextLost()) {\n        var i, ii;\n        for (i = 0, ii = textures.length; i < ii; ++i) {\n          gl.deleteTexture(textures[i]);\n        }\n      }\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {number} My end.\n   * @protected\n   */\n  WebGLTextureReplay.prototype.drawCoordinates = function drawCoordinates (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    var anchorX = /** @type {number} */ (this.anchorX);\n    var anchorY = /** @type {number} */ (this.anchorY);\n    var height = /** @type {number} */ (this.height);\n    var imageHeight = /** @type {number} */ (this.imageHeight);\n    var imageWidth = /** @type {number} */ (this.imageWidth);\n    var opacity = /** @type {number} */ (this.opacity);\n    var originX = /** @type {number} */ (this.originX);\n    var originY = /** @type {number} */ (this.originY);\n    var rotateWithView = this.rotateWithView ? 1.0 : 0.0;\n    // this.rotation_ is anti-clockwise, but rotation is clockwise\n    var rotation = /** @type {number} */ (-this.rotation);\n    var scale = /** @type {number} */ (this.scale);\n    var width = /** @type {number} */ (this.width);\n    var cos = Math.cos(rotation);\n    var sin = Math.sin(rotation);\n    var numIndices = this.indices.length;\n    var numVertices = this.vertices.length;\n    var i, n, offsetX, offsetY, x, y;\n    for (i = offset; i < end; i += stride) {\n      x = flatCoordinates[i] - this$1.origin[0];\n      y = flatCoordinates[i + 1] - this$1.origin[1];\n\n      // There are 4 vertices per [x, y] point, one for each corner of the\n      // rectangle we're going to draw. We'd use 1 vertex per [x, y] point if\n      // WebGL supported Geometry Shaders (which can emit new vertices), but that\n      // is not currently the case.\n      //\n      // And each vertex includes 8 values: the x and y coordinates, the x and\n      // y offsets used to calculate the position of the corner, the u and\n      // v texture coordinates for the corner, the opacity, and whether the\n      // the image should be rotated with the view (rotateWithView).\n\n      n = numVertices / 8;\n\n      // bottom-left corner\n      offsetX = -scale * anchorX;\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // bottom-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = -scale * (height - anchorY);\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = (originY + height) / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-right corner\n      offsetX = scale * (width - anchorX);\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = (originX + width) / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      // top-left corner\n      offsetX = -scale * anchorX;\n      offsetY = scale * anchorY;\n      this$1.vertices[numVertices++] = x;\n      this$1.vertices[numVertices++] = y;\n      this$1.vertices[numVertices++] = offsetX * cos - offsetY * sin;\n      this$1.vertices[numVertices++] = offsetX * sin + offsetY * cos;\n      this$1.vertices[numVertices++] = originX / imageWidth;\n      this$1.vertices[numVertices++] = originY / imageHeight;\n      this$1.vertices[numVertices++] = opacity;\n      this$1.vertices[numVertices++] = rotateWithView;\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 1;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 3;\n    }\n\n    return numVertices;\n  };\n\n  /**\n   * @protected\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>} images Images.\n   * @param {!Object<string, WebGLTexture>} texturePerImage Texture cache.\n   * @param {WebGLRenderingContext} gl Gl.\n   */\n  WebGLTextureReplay.prototype.createTextures = function createTextures (textures, images, texturePerImage, gl) {\n    var texture, image, uid, i;\n    var ii = images.length;\n    for (i = 0; i < ii; ++i) {\n      image = images[i];\n\n      uid = getUid(image).toString();\n      if (uid in texturePerImage) {\n        texture = texturePerImage[uid];\n      } else {\n        texture = createTexture(\n          gl, image, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n        texturePerImage[uid] = texture;\n      }\n      textures[i] = texture;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations) {\n      locations = new Locations(gl, program);\n      this.defaultLocations = locations;\n    } else {\n      locations = this.defaultLocations;\n    }\n\n    // use the program (FIXME: use the return value)\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 32, 0);\n\n    gl.enableVertexAttribArray(locations.a_offsets);\n    gl.vertexAttribPointer(locations.a_offsets, 2, FLOAT,\n      false, 32, 8);\n\n    gl.enableVertexAttribArray(locations.a_texCoord);\n    gl.vertexAttribPointer(locations.a_texCoord, 2, FLOAT,\n      false, 32, 16);\n\n    gl.enableVertexAttribArray(locations.a_opacity);\n    gl.vertexAttribPointer(locations.a_opacity, 1, FLOAT,\n      false, 32, 24);\n\n    gl.enableVertexAttribArray(locations.a_rotateWithView);\n    gl.vertexAttribPointer(locations.a_rotateWithView, 1, FLOAT,\n      false, 32, 28);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_offsets);\n    gl.disableVertexAttribArray(locations.a_texCoord);\n    gl.disableVertexAttribArray(locations.a_opacity);\n    gl.disableVertexAttribArray(locations.a_rotateWithView);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    var textures = hitDetection ? this.getHitDetectionTextures() : this.getTextures();\n    var groupIndices = hitDetection ? this.hitDetectionGroupIndices : this.groupIndices;\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping(gl, context, skippedFeaturesHash, textures, groupIndices);\n    } else {\n      var i, ii, start;\n      for (i = 0, ii = textures.length, start = 0; i < ii; ++i) {\n        gl.bindTexture(TEXTURE_2D, textures[i]);\n        var end = groupIndices[i];\n        this$1.drawElements(gl, context, start, end);\n        start = end;\n      }\n    }\n  };\n\n  /**\n   * Draw the replay while paying attention to skipped features.\n   *\n   * This functions creates groups of features that can be drawn to together,\n   * so that the number of `drawElements` calls is minimized.\n   *\n   * For example given the following texture groups:\n   *\n   *    Group 1: A B C\n   *    Group 2: D [E] F G\n   *\n   * If feature E should be skipped, the following `drawElements` calls will be\n   * made:\n   *\n   *    drawElements with feature A, B and C\n   *    drawElements with feature D\n   *    drawElements with feature F and G\n   *\n   * @protected\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features\n   *  to skip.\n   * @param {Array<WebGLTexture>} textures Textures.\n   * @param {Array<number>} groupIndices Texture group indices.\n   */\n  WebGLTextureReplay.prototype.drawReplaySkipping = function drawReplaySkipping (gl, context, skippedFeaturesHash, textures, groupIndices) {\n    var this$1 = this;\n\n    var featureIndex = 0;\n\n    var i, ii;\n    for (i = 0, ii = textures.length; i < ii; ++i) {\n      gl.bindTexture(TEXTURE_2D, textures[i]);\n      var groupStart = (i > 0) ? groupIndices[i - 1] : 0;\n      var groupEnd = groupIndices[i];\n\n      var start = groupStart;\n      var end = groupStart;\n      while (featureIndex < this.startIndices.length &&\n          this.startIndices[featureIndex] <= groupEnd) {\n        var feature = this$1.startIndicesFeature[featureIndex];\n\n        var featureUid = getUid(feature).toString();\n        if (skippedFeaturesHash[featureUid] !== undefined) {\n          // feature should be skipped\n          if (start !== end) {\n            // draw the features so far\n            this$1.drawElements(gl, context, start, end);\n          }\n          // continue with the next feature\n          start = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n          end = start;\n        } else {\n          // the feature is not skipped, augment the end index\n          end = (featureIndex === this$1.startIndices.length - 1) ?\n            groupEnd : this$1.startIndices[featureIndex + 1];\n        }\n        featureIndex++;\n      }\n\n      if (start !== end) {\n        // draw the remaining features (in case there was no skipped feature\n        // in this texture group, all features of a group are drawn together)\n        this$1.drawElements(gl, context, start, end);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, groupStart, start, end, feature, featureUid;\n    var featureIndex = this.startIndices.length - 1;\n    var hitDetectionTextures = this.getHitDetectionTextures();\n    for (i = hitDetectionTextures.length - 1; i >= 0; --i) {\n      gl.bindTexture(TEXTURE_2D, hitDetectionTextures[i]);\n      groupStart = (i > 0) ? this$1.hitDetectionGroupIndices[i - 1] : 0;\n      end = this$1.hitDetectionGroupIndices[i];\n\n      // draw all features for this texture group\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n          if (result) {\n            return result;\n          }\n        }\n\n        end = start;\n        featureIndex--;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextureReplay.prototype.finish = function finish (context) {\n    this.anchorX = undefined;\n    this.anchorY = undefined;\n    this.height = undefined;\n    this.imageHeight = undefined;\n    this.imageWidth = undefined;\n    this.indices = null;\n    this.opacity = undefined;\n    this.originX = undefined;\n    this.originY = undefined;\n    this.rotateWithView = undefined;\n    this.rotation = undefined;\n    this.scale = undefined;\n    this.vertices = null;\n    this.width = undefined;\n  };\n\n  /**\n   * @abstract\n   * @protected\n   * @param {boolean=} opt_all Return hit detection textures with regular ones.\n   * @returns {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getTextures = function getTextures (opt_all) {};\n\n  /**\n   * @abstract\n   * @protected\n   * @returns {Array<WebGLTexture>} Textures.\n   */\n  WebGLTextureReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {};\n\n  return WebGLTextureReplay;\n}(WebGLReplay));\n\n\nexport default WebGLTextureReplay;\n\n//# sourceMappingURL=TextureReplay.js.map","/**\n * @module ol/render/webgl/ImageReplay\n */\nimport {getUid} from '../../util.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\nvar WebGLImageReplay = (function (WebGLTextureReplay) {\n  function WebGLImageReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.images_ = [];\n\n    /**\n     * @type {Array<HTMLCanvasElement|HTMLImageElement|HTMLVideoElement>}\n     * @protected\n     */\n    this.hitDetectionImages_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.textures_ = [];\n\n    /**\n     * @type {Array<WebGLTexture>}\n     * @private\n     */\n    this.hitDetectionTextures_ = [];\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLImageReplay.__proto__ = WebGLTextureReplay;\n  WebGLImageReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLImageReplay.prototype.constructor = WebGLImageReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawMultiPoint = function drawMultiPoint (multiPointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    var stride = multiPointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.drawPoint = function drawPoint (pointGeometry, feature) {\n    this.startIndices.push(this.indices.length);\n    this.startIndicesFeature.push(feature);\n    var flatCoordinates = pointGeometry.getFlatCoordinates();\n    var stride = pointGeometry.getStride();\n    this.drawCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices.push(this.indices.length);\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    var indices = this.indices;\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.createTextures(this.hitDetectionTextures_, this.hitDetectionImages_,\n      texturePerImage, gl);\n\n    this.images_ = null;\n    this.hitDetectionImages_ = null;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    var anchor = imageStyle.getAnchor();\n    var image = imageStyle.getImage(1);\n    var imageSize = imageStyle.getImageSize();\n    var hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    var opacity = imageStyle.getOpacity();\n    var origin = imageStyle.getOrigin();\n    var rotateWithView = imageStyle.getRotateWithView();\n    var rotation = imageStyle.getRotation();\n    var size = imageStyle.getSize();\n    var scale = imageStyle.getScale();\n\n    var currentImage;\n    if (this.images_.length === 0) {\n      this.images_.push(image);\n    } else {\n      currentImage = this.images_[this.images_.length - 1];\n      if (getUid(currentImage) != getUid(image)) {\n        this.groupIndices.push(this.indices.length);\n        this.images_.push(image);\n      }\n    }\n\n    if (this.hitDetectionImages_.length === 0) {\n      this.hitDetectionImages_.push(hitDetectionImage);\n    } else {\n      currentImage =\n          this.hitDetectionImages_[this.hitDetectionImages_.length - 1];\n      if (getUid(currentImage) != getUid(hitDetectionImage)) {\n        this.hitDetectionGroupIndices.push(this.indices.length);\n        this.hitDetectionImages_.push(hitDetectionImage);\n      }\n    }\n\n    this.anchorX = anchor[0];\n    this.anchorY = anchor[1];\n    this.height = size[1];\n    this.imageHeight = imageSize[1];\n    this.imageWidth = imageSize[0];\n    this.opacity = opacity;\n    this.originX = origin[0];\n    this.originY = origin[1];\n    this.rotation = rotation;\n    this.rotateWithView = rotateWithView;\n    this.scale = scale;\n    this.width = size[0];\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getTextures = function getTextures (opt_all) {\n    return opt_all ? this.textures_.concat(this.hitDetectionTextures_) : this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.hitDetectionTextures_;\n  };\n\n  return WebGLImageReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLImageReplay;\n\n//# sourceMappingURL=ImageReplay.js.map","/**\n * @module ol/geom/flat/topology\n */\nimport {linearRing as linearRingArea} from '../flat/area.js';\n\n/**\n * Check if the linestring is a boundary.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} The linestring is a boundary.\n */\nexport function lineStringIsClosed(flatCoordinates, offset, end, stride) {\n  var lastCoord = end - stride;\n  if (flatCoordinates[offset] === flatCoordinates[lastCoord] &&\n      flatCoordinates[offset + 1] === flatCoordinates[lastCoord + 1] && (end - offset) / stride > 3) {\n    return !!linearRingArea(flatCoordinates, offset, end, stride);\n  }\n  return false;\n}\n\n//# sourceMappingURL=topology.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\n\\nuniform float u_opacity;\\nuniform vec4 u_color;\\nuniform vec2 u_size;\\nuniform float u_pixelRatio;\\n\\nvoid main(void) {\\n  if (v_round > 0.0) {\\n    vec2 windowCoords = vec2((v_roundVertex.x + 1.0) / 2.0 * u_size.x * u_pixelRatio,\\n        (v_roundVertex.y + 1.0) / 2.0 * u_size.y * u_pixelRatio);\\n    if (length(windowCoords - gl_FragCoord.xy) > v_halfWidth * u_pixelRatio) {\\n      discard;\\n    }\\n  }\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;varying float a;varying vec2 aVertex;varying float c;uniform float m;uniform vec4 n;uniform vec2 o;uniform float p;void main(void){if(a>0.0){vec2 windowCoords=vec2((aVertex.x+1.0)/2.0*o.x*p,(aVertex.y+1.0)/2.0*o.y*p);if(length(windowCoords-gl_FragCoord.xy)>c*p){discard;}} gl_FragColor=n;float alpha=n.a*m;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying float v_round;\\nvarying vec2 v_roundVertex;\\nvarying float v_halfWidth;\\n\\n\\nattribute vec2 a_lastPos;\\nattribute vec2 a_position;\\nattribute vec2 a_nextPos;\\nattribute float a_direction;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\nuniform float u_lineWidth;\\nuniform float u_miterLimit;\\n\\nbool nearlyEquals(in float value, in float ref) {\\n  float epsilon = 0.000000000001;\\n  return value >= ref - epsilon && value <= ref + epsilon;\\n}\\n\\nvoid alongNormal(out vec2 offset, in vec2 nextP, in float turnDir, in float direction) {\\n  vec2 dirVect = nextP - a_position;\\n  vec2 normal = normalize(vec2(-turnDir * dirVect.y, turnDir * dirVect.x));\\n  offset = u_lineWidth / 2.0 * normal * direction;\\n}\\n\\nvoid miterUp(out vec2 offset, out float round, in bool isRound, in float direction) {\\n  float halfWidth = u_lineWidth / 2.0;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_nextPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n  offset = normal * direction * miterLength;\\n  round = 0.0;\\n  if (isRound) {\\n    round = 1.0;\\n  } else if (miterLength > u_miterLimit + u_lineWidth) {\\n    offset = halfWidth * tmpNormal * direction;\\n  }\\n}\\n\\nbool miterDown(out vec2 offset, in vec4 projPos, in mat4 offsetMatrix, in float direction) {\\n  bool degenerate = false;\\n  vec2 tangent = normalize(normalize(a_nextPos - a_position) + normalize(a_position - a_lastPos));\\n  vec2 normal = vec2(-tangent.y, tangent.x);\\n  vec2 dirVect = a_lastPos - a_position;\\n  vec2 tmpNormal = normalize(vec2(-dirVect.y, dirVect.x));\\n  vec2 longOffset, shortOffset, longVertex;\\n  vec4 shortProjVertex;\\n  float halfWidth = u_lineWidth / 2.0;\\n  if (length(a_nextPos - a_position) > length(a_lastPos - a_position)) {\\n    longOffset = tmpNormal * direction * halfWidth;\\n    shortOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_nextPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_lastPos, 0.0, 1.0);\\n  } else {\\n    shortOffset = tmpNormal * direction * halfWidth;\\n    longOffset = normalize(vec2(dirVect.y, -dirVect.x)) * direction * halfWidth;\\n    longVertex = a_lastPos;\\n    shortProjVertex = u_projectionMatrix * vec4(a_nextPos, 0.0, 1.0);\\n  }\\n  //Intersection algorithm based on theory by Paul Bourke (http://paulbourke.net/geometry/pointlineplane/).\\n  vec4 p1 = u_projectionMatrix * vec4(longVertex, 0.0, 1.0) + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p2 = projPos + offsetMatrix * vec4(longOffset, 0.0, 0.0);\\n  vec4 p3 = shortProjVertex + offsetMatrix * vec4(-shortOffset, 0.0, 0.0);\\n  vec4 p4 = shortProjVertex + offsetMatrix * vec4(shortOffset, 0.0, 0.0);\\n  float denom = (p4.y - p3.y) * (p2.x - p1.x) - (p4.x - p3.x) * (p2.y - p1.y);\\n  float firstU = ((p4.x - p3.x) * (p1.y - p3.y) - (p4.y - p3.y) * (p1.x - p3.x)) / denom;\\n  float secondU = ((p2.x - p1.x) * (p1.y - p3.y) - (p2.y - p1.y) * (p1.x - p3.x)) / denom;\\n  float epsilon = 0.000000000001;\\n  if (firstU > epsilon && firstU < 1.0 - epsilon && secondU > epsilon && secondU < 1.0 - epsilon) {\\n    shortProjVertex.x = p1.x + firstU * (p2.x - p1.x);\\n    shortProjVertex.y = p1.y + firstU * (p2.y - p1.y);\\n    offset = shortProjVertex.xy;\\n    degenerate = true;\\n  } else {\\n    float miterLength = abs(halfWidth / dot(normal, tmpNormal));\\n    offset = normal * direction * miterLength;\\n  }\\n  return degenerate;\\n}\\n\\nvoid squareCap(out vec2 offset, out float round, in bool isRound, in vec2 nextP,\\n    in float turnDir, in float direction) {\\n  round = 0.0;\\n  vec2 dirVect = a_position - nextP;\\n  vec2 firstNormal = normalize(dirVect);\\n  vec2 secondNormal = vec2(turnDir * firstNormal.y * direction, -turnDir * firstNormal.x * direction);\\n  vec2 hypotenuse = normalize(firstNormal - secondNormal);\\n  vec2 normal = vec2(turnDir * hypotenuse.y * direction, -turnDir * hypotenuse.x * direction);\\n  float length = sqrt(v_halfWidth * v_halfWidth * 2.0);\\n  offset = normal * length;\\n  if (isRound) {\\n    round = 1.0;\\n  }\\n}\\n\\nvoid main(void) {\\n  bool degenerate = false;\\n  float direction = float(sign(a_direction));\\n  mat4 offsetMatrix = u_offsetScaleMatrix * u_offsetRotateMatrix;\\n  vec2 offset;\\n  vec4 projPos = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n  bool round = nearlyEquals(mod(a_direction, 2.0), 0.0);\\n\\n  v_round = 0.0;\\n  v_halfWidth = u_lineWidth / 2.0;\\n  v_roundVertex = projPos.xy;\\n\\n  if (nearlyEquals(mod(a_direction, 3.0), 0.0) || nearlyEquals(mod(a_direction, 17.0), 0.0)) {\\n    alongNormal(offset, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 5.0), 0.0) || nearlyEquals(mod(a_direction, 13.0), 0.0)) {\\n    alongNormal(offset, a_lastPos, -1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 23.0), 0.0)) {\\n    miterUp(offset, v_round, round, direction);\\n  } else if (nearlyEquals(mod(a_direction, 19.0), 0.0)) {\\n    degenerate = miterDown(offset, projPos, offsetMatrix, direction);\\n  } else if (nearlyEquals(mod(a_direction, 7.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_nextPos, 1.0, direction);\\n  } else if (nearlyEquals(mod(a_direction, 11.0), 0.0)) {\\n    squareCap(offset, v_round, round, a_lastPos, -1.0, direction);\\n  }\\n  if (!degenerate) {\\n    vec4 offsets = offsetMatrix * vec4(offset, 0.0, 0.0);\\n    gl_Position = projPos + offsets;\\n  } else {\\n    gl_Position = vec4(offset, 0.0, 1.0);\\n  }\\n}\\n\\n\\n' :\n  'varying float a;varying vec2 aVertex;varying float c;attribute vec2 d;attribute vec2 e;attribute vec2 f;attribute float g;uniform mat4 h;uniform mat4 i;uniform mat4 j;uniform float k;uniform float l;bool nearlyEquals(in float value,in float ref){float epsilon=0.000000000001;return value>=ref-epsilon&&value<=ref+epsilon;}void alongNormal(out vec2 offset,in vec2 nextP,in float turnDir,in float direction){vec2 dirVect=nextP-e;vec2 normal=normalize(vec2(-turnDir*dirVect.y,turnDir*dirVect.x));offset=k/2.0*normal*direction;}void miterUp(out vec2 offset,out float round,in bool isRound,in float direction){float halfWidth=k/2.0;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=f-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;round=0.0;if(isRound){round=1.0;}else if(miterLength>l+k){offset=halfWidth*tmpNormal*direction;}} bool miterDown(out vec2 offset,in vec4 projPos,in mat4 offsetMatrix,in float direction){bool degenerate=false;vec2 tangent=normalize(normalize(f-e)+normalize(e-d));vec2 normal=vec2(-tangent.y,tangent.x);vec2 dirVect=d-e;vec2 tmpNormal=normalize(vec2(-dirVect.y,dirVect.x));vec2 longOffset,shortOffset,longVertex;vec4 shortProjVertex;float halfWidth=k/2.0;if(length(f-e)>length(d-e)){longOffset=tmpNormal*direction*halfWidth;shortOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=f;shortProjVertex=h*vec4(d,0.0,1.0);}else{shortOffset=tmpNormal*direction*halfWidth;longOffset=normalize(vec2(dirVect.y,-dirVect.x))*direction*halfWidth;longVertex=d;shortProjVertex=h*vec4(f,0.0,1.0);}vec4 p1=h*vec4(longVertex,0.0,1.0)+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p2=projPos+offsetMatrix*vec4(longOffset,0.0,0.0);vec4 p3=shortProjVertex+offsetMatrix*vec4(-shortOffset,0.0,0.0);vec4 p4=shortProjVertex+offsetMatrix*vec4(shortOffset,0.0,0.0);float denom=(p4.y-p3.y)*(p2.x-p1.x)-(p4.x-p3.x)*(p2.y-p1.y);float firstU=((p4.x-p3.x)*(p1.y-p3.y)-(p4.y-p3.y)*(p1.x-p3.x))/denom;float secondU=((p2.x-p1.x)*(p1.y-p3.y)-(p2.y-p1.y)*(p1.x-p3.x))/denom;float epsilon=0.000000000001;if(firstU>epsilon&&firstU<1.0-epsilon&&secondU>epsilon&&secondU<1.0-epsilon){shortProjVertex.x=p1.x+firstU*(p2.x-p1.x);shortProjVertex.y=p1.y+firstU*(p2.y-p1.y);offset=shortProjVertex.xy;degenerate=true;}else{float miterLength=abs(halfWidth/dot(normal,tmpNormal));offset=normal*direction*miterLength;}return degenerate;}void squareCap(out vec2 offset,out float round,in bool isRound,in vec2 nextP,in float turnDir,in float direction){round=0.0;vec2 dirVect=e-nextP;vec2 firstNormal=normalize(dirVect);vec2 secondNormal=vec2(turnDir*firstNormal.y*direction,-turnDir*firstNormal.x*direction);vec2 hypotenuse=normalize(firstNormal-secondNormal);vec2 normal=vec2(turnDir*hypotenuse.y*direction,-turnDir*hypotenuse.x*direction);float length=sqrt(c*c*2.0);offset=normal*length;if(isRound){round=1.0;}} void main(void){bool degenerate=false;float direction=float(sign(g));mat4 offsetMatrix=i*j;vec2 offset;vec4 projPos=h*vec4(e,0.0,1.0);bool round=nearlyEquals(mod(g,2.0),0.0);a=0.0;c=k/2.0;aVertex=projPos.xy;if(nearlyEquals(mod(g,3.0),0.0)||nearlyEquals(mod(g,17.0),0.0)){alongNormal(offset,f,1.0,direction);}else if(nearlyEquals(mod(g,5.0),0.0)||nearlyEquals(mod(g,13.0),0.0)){alongNormal(offset,d,-1.0,direction);}else if(nearlyEquals(mod(g,23.0),0.0)){miterUp(offset,a,round,direction);}else if(nearlyEquals(mod(g,19.0),0.0)){degenerate=miterDown(offset,projPos,offsetMatrix,direction);}else if(nearlyEquals(mod(g,7.0),0.0)){squareCap(offset,a,round,f,1.0,direction);}else if(nearlyEquals(mod(g,11.0),0.0)){squareCap(offset,a,round,d,-1.0,direction);}if(!degenerate){vec4 offsets=offsetMatrix*vec4(offset,0.0,0.0);gl_Position=projPos+offsets;}else{gl_Position=vec4(offset,0.0,1.0);}}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/linestringreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'h');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'i');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'j');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_lineWidth = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_lineWidth' : 'k');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_miterLimit = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_miterLimit' : 'l');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'm');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'n');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_size = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_size' : 'o');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_pixelRatio = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_pixelRatio' : 'p');\n\n  /**\n   * @type {number}\n   */\n  this.a_lastPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_lastPos' : 'd');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_nextPos = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_nextPos' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_direction = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_direction' : 'g');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/render/webgl/LineStringReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {lineStringIsClosed} from '../../geom/flat/topology.js';\nimport {isEmpty} from '../../obj.js';\nimport {DEFAULT_LINECAP, DEFAULT_LINEDASH, DEFAULT_LINEDASHOFFSET,\n  DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT, DEFAULT_STROKESTYLE,\n  triangleIsCounterClockwise} from '../webgl.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {fragment, vertex} from '../webgl/linestringreplay/defaultshader.js';\nimport Locations from '../webgl/linestringreplay/defaultshader/Locations.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @enum {number}\n */\nvar Instruction = {\n  ROUND: 2,\n  BEGIN_LINE: 3,\n  END_LINE: 5,\n  BEGIN_LINE_CAP: 7,\n  END_LINE_CAP: 11,\n  BEVEL_FIRST: 13,\n  BEVEL_SECOND: 17,\n  MITER_BOTTOM: 19,\n  MITER_TOP: 23\n};\n\n\nvar WebGLLineStringReplay = (function (WebGLReplay) {\n  function WebGLLineStringReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/linestringreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<?>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{strokeColor: (Array<number>|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: (number|undefined),\n     *         miterLimit: (number|undefined),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: undefined,\n      miterLimit: undefined,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLLineStringReplay.__proto__ = WebGLReplay;\n  WebGLLineStringReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLLineStringReplay.prototype.constructor = WebGLLineStringReplay;\n\n  /**\n   * Draw one segment.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n\n    var i, ii;\n    var numVertices = this.vertices.length;\n    var numIndices = this.indices.length;\n    //To save a vertex, the direction of a point is a product of the sign (1 or -1), a prime from\n    //Instruction, and a rounding factor (1 or 2). If the product is even,\n    //we round it. If it is odd, we don't.\n    var lineJoin = this.state_.lineJoin === 'bevel' ? 0 :\n      this.state_.lineJoin === 'miter' ? 1 : 2;\n    var lineCap = this.state_.lineCap === 'butt' ? 0 :\n      this.state_.lineCap === 'square' ? 1 : 2;\n    var closed = lineStringIsClosed(flatCoordinates, offset, end, stride);\n    var startCoords, sign, n;\n    var lastIndex = numIndices;\n    var lastSign = 1;\n    //We need the adjacent vertices to define normals in joins. p0 = last, p1 = current, p2 = next.\n    var p0, p1, p2;\n\n    for (i = offset, ii = end; i < ii; i += stride) {\n\n      n = numVertices / 7;\n\n      p0 = p1;\n      p1 = p2 || [flatCoordinates[i], flatCoordinates[i + 1]];\n      //First vertex.\n      if (i === offset) {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n        if (end - offset === stride * 2 && equals(p1, p2)) {\n          break;\n        }\n        if (closed) {\n          //A closed line! Complete the circle.\n          p0 = [flatCoordinates[end - stride * 2],\n            flatCoordinates[end - stride * 2 + 1]];\n\n          startCoords = p2;\n        } else {\n          //Add the first two/four vertices.\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_([0, 0], p1, p2,\n              -lastSign * Instruction.BEGIN_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_([0, 0], p1, p2,\n            -lastSign * Instruction.BEGIN_LINE * (lineCap || 1), numVertices);\n\n          lastIndex = numVertices / 7 - 1;\n\n          continue;\n        }\n      } else if (i === end - stride) {\n        //Last vertex.\n        if (closed) {\n          //Same as the first vertex.\n          p2 = startCoords;\n          break;\n        } else {\n          p0 = p0 || [0, 0];\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          numVertices = this$1.addVertices_(p0, p1, [0, 0],\n            -lastSign * Instruction.END_LINE * (lineCap || 1), numVertices);\n\n          this$1.indices[numIndices++] = n;\n          this$1.indices[numIndices++] = lastIndex - 1;\n          this$1.indices[numIndices++] = lastIndex;\n\n          this$1.indices[numIndices++] = lastIndex;\n          this$1.indices[numIndices++] = n + 1;\n          this$1.indices[numIndices++] = n;\n\n          if (lineCap) {\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            numVertices = this$1.addVertices_(p0, p1, [0, 0],\n              -lastSign * Instruction.END_LINE_CAP * lineCap, numVertices);\n\n            this$1.indices[numIndices++] = n + 2;\n            this$1.indices[numIndices++] = n;\n            this$1.indices[numIndices++] = n + 1;\n\n            this$1.indices[numIndices++] = n + 1;\n            this$1.indices[numIndices++] = n + 3;\n            this$1.indices[numIndices++] = n + 2;\n\n          }\n\n          break;\n        }\n      } else {\n        p2 = [flatCoordinates[i + stride], flatCoordinates[i + stride + 1]];\n      }\n\n      // We group CW and straight lines, thus the not so inituitive CCW checking function.\n      sign = triangleIsCounterClockwise(p0[0], p0[1], p1[0], p1[1], p2[0], p2[1])\n        ? -1 : 1;\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_SECOND * (lineJoin || 1), numVertices);\n\n      numVertices = this$1.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      if (i > offset) {\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastIndex - 1;\n        this$1.indices[numIndices++] = lastIndex;\n\n        this$1.indices[numIndices++] = n + 2;\n        this$1.indices[numIndices++] = n;\n        this$1.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n      }\n\n      this$1.indices[numIndices++] = n;\n      this$1.indices[numIndices++] = n + 2;\n      this$1.indices[numIndices++] = n + 1;\n\n      lastIndex = n + 2;\n      lastSign = sign;\n\n      //Add miter\n      if (lineJoin) {\n        numVertices = this$1.addVertices_(p0, p1, p2,\n          sign * Instruction.MITER_TOP * lineJoin, numVertices);\n\n        this$1.indices[numIndices++] = n + 1;\n        this$1.indices[numIndices++] = n + 3;\n        this$1.indices[numIndices++] = n;\n      }\n    }\n\n    if (closed) {\n      n = n || numVertices / 7;\n      sign = linearRingIsClockwise([p0[0], p0[1], p1[0], p1[1], p2[0], p2[1]], 0, 6, 2)\n        ? 1 : -1;\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        sign * Instruction.BEVEL_FIRST * (lineJoin || 1), numVertices);\n\n      numVertices = this.addVertices_(p0, p1, p2,\n        -sign * Instruction.MITER_BOTTOM * (lineJoin || 1), numVertices);\n\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastIndex - 1;\n      this.indices[numIndices++] = lastIndex;\n\n      this.indices[numIndices++] = n + 1;\n      this.indices[numIndices++] = n;\n      this.indices[numIndices++] = lastSign * sign > 0 ? lastIndex : lastIndex - 1;\n    }\n  };\n\n  /**\n   * @param {Array<number>} p0 Last coordinates.\n   * @param {Array<number>} p1 Current coordinates.\n   * @param {Array<number>} p2 Next coordinates.\n   * @param {number} product Sign, instruction, and rounding product.\n   * @param {number} numVertices Vertex counter.\n   * @return {number} Vertex counter.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.addVertices_ = function addVertices_ (p0, p1, p2, product, numVertices) {\n    this.vertices[numVertices++] = p0[0];\n    this.vertices[numVertices++] = p0[1];\n    this.vertices[numVertices++] = p1[0];\n    this.vertices[numVertices++] = p1[1];\n    this.vertices[numVertices++] = p2[0];\n    this.vertices[numVertices++] = p2[1];\n    this.vertices[numVertices++] = product;\n\n    return numVertices;\n  };\n\n  /**\n   * Check if the linestring can be drawn (i. e. valid).\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @return {boolean} The linestring can be drawn.\n   * @private\n   */\n  WebGLLineStringReplay.prototype.isValid_ = function isValid_ (flatCoordinates, offset, end, stride) {\n    var range = end - offset;\n    if (range < stride * 2) {\n      return false;\n    } else if (range === stride * 2) {\n      var firstP = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n      var lastP = [flatCoordinates[offset + stride], flatCoordinates[offset + stride + 1]];\n      return !equals(firstP, lastP);\n    }\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawLineString = function drawLineString (lineStringGeometry, feature) {\n    var flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    var stride = lineStringGeometry.getStride();\n    if (this.isValid_(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates = translate(flatCoordinates, 0, flatCoordinates.length,\n        stride, -this.origin[0], -this.origin[1]);\n      if (this.state_.changed) {\n        this.styleIndices_.push(this.indices.length);\n        this.state_.changed = false;\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n      this.drawCoordinates_(\n        flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawMultiLineString = function drawMultiLineString (multiLineStringGeometry, feature) {\n    var this$1 = this;\n\n    var indexCount = this.indices.length;\n    var ends = multiLineStringGeometry.getEnds();\n    ends.unshift(0);\n    var flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    var stride = multiLineStringGeometry.getStride();\n    var i, ii;\n    if (ends.length > 1) {\n      for (i = 1, ii = ends.length; i < ii; ++i) {\n        if (this$1.isValid_(flatCoordinates, ends[i - 1], ends[i], stride)) {\n          var lineString = translate(flatCoordinates, ends[i - 1], ends[i],\n            stride, -this$1.origin[0], -this$1.origin[1]);\n          this$1.drawCoordinates_(\n            lineString, 0, lineString.length, stride);\n        }\n      }\n    }\n    if (this.indices.length > indexCount) {\n      this.startIndices.push(indexCount);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(indexCount);\n        this.state_.changed = false;\n      }\n    }\n  };\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   */\n  WebGLLineStringReplay.prototype.drawPolygonCoordinates = function drawPolygonCoordinates (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    if (!lineStringIsClosed(flatCoordinates, 0, flatCoordinates.length, stride)) {\n      flatCoordinates.push(flatCoordinates[0]);\n      flatCoordinates.push(flatCoordinates[1]);\n    }\n    this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        if (!lineStringIsClosed(holeFlatCoordinates[i], 0, holeFlatCoordinates[i].length, stride)) {\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][0]);\n          holeFlatCoordinates[i].push(holeFlatCoordinates[i][1]);\n        }\n        this$1.drawCoordinates_(holeFlatCoordinates[i], 0,\n          holeFlatCoordinates[i].length, stride);\n      }\n    }\n  };\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {number=} opt_index Index count.\n   */\n  WebGLLineStringReplay.prototype.setPolygonStyle = function setPolygonStyle (feature, opt_index) {\n    var index = opt_index === undefined ? this.indices.length : opt_index;\n    this.startIndices.push(index);\n    this.startIndicesFeature.push(feature);\n    if (this.state_.changed) {\n      this.styleIndices_.push(index);\n      this.state_.changed = false;\n    }\n  };\n\n  /**\n   * @return {number} Current index.\n   */\n  WebGLLineStringReplay.prototype.getCurrentIndex = function getCurrentIndex () {\n    return this.indices.length;\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLLineStringReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_lastPos);\n    gl.vertexAttribPointer(locations.a_lastPos, 2, FLOAT,\n      false, 28, 0);\n\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 28, 8);\n\n    gl.enableVertexAttribArray(locations.a_nextPos);\n    gl.vertexAttribPointer(locations.a_nextPos, 2, FLOAT,\n      false, 28, 16);\n\n    gl.enableVertexAttribArray(locations.a_direction);\n    gl.vertexAttribPointer(locations.a_direction, 1, FLOAT,\n      false, 28, 24);\n\n    // Enable renderer specific uniforms.\n    gl.uniform2fv(locations.u_size, size);\n    gl.uniform1f(locations.u_pixelRatio, pixelRatio);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_lastPos);\n    gl.disableVertexAttribArray(locations.a_position);\n    gl.disableVertexAttribArray(locations.a_nextPos);\n    gl.disableVertexAttribArray(locations.a_direction);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLLineStringReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setStrokeStyle_(gl, nextStyle[0], nextStyle[1], nextStyle[2]);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   * @param {number} lineWidth Line width.\n   * @param {number} miterLimit Miter limit.\n   */\n  WebGLLineStringReplay.prototype.setStrokeStyle_ = function setStrokeStyle_ (gl, color, lineWidth, miterLimit) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n    gl.uniform1f(this.defaultLocations_.u_lineWidth, lineWidth);\n    gl.uniform1f(this.defaultLocations_.u_miterLimit, miterLimit);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLLineStringReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var strokeStyleLineCap = strokeStyle.getLineCap();\n    this.state_.lineCap = strokeStyleLineCap !== undefined ?\n      strokeStyleLineCap : DEFAULT_LINECAP;\n    var strokeStyleLineDash = strokeStyle.getLineDash();\n    this.state_.lineDash = strokeStyleLineDash ?\n      strokeStyleLineDash : DEFAULT_LINEDASH;\n    var strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n    this.state_.lineDashOffset = strokeStyleLineDashOffset ?\n      strokeStyleLineDashOffset : DEFAULT_LINEDASHOFFSET;\n    var strokeStyleLineJoin = strokeStyle.getLineJoin();\n    this.state_.lineJoin = strokeStyleLineJoin !== undefined ?\n      strokeStyleLineJoin : DEFAULT_LINEJOIN;\n    var strokeStyleColor = strokeStyle.getColor();\n    if (!(strokeStyleColor instanceof CanvasGradient) &&\n        !(strokeStyleColor instanceof CanvasPattern)) {\n      strokeStyleColor = asArray(strokeStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_STROKESTYLE;\n    } else {\n      strokeStyleColor = DEFAULT_STROKESTYLE;\n    }\n    var strokeStyleWidth = strokeStyle.getWidth();\n    strokeStyleWidth = strokeStyleWidth !== undefined ?\n      strokeStyleWidth : DEFAULT_LINEWIDTH;\n    var strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n    strokeStyleMiterLimit = strokeStyleMiterLimit !== undefined ?\n      strokeStyleMiterLimit : DEFAULT_MITERLIMIT;\n    if (!this.state_.strokeColor || !equals(this.state_.strokeColor, strokeStyleColor) ||\n        this.state_.lineWidth !== strokeStyleWidth || this.state_.miterLimit !== strokeStyleMiterLimit) {\n      this.state_.changed = true;\n      this.state_.strokeColor = strokeStyleColor;\n      this.state_.lineWidth = strokeStyleWidth;\n      this.state_.miterLimit = strokeStyleMiterLimit;\n      this.styles_.push([strokeStyleColor, strokeStyleWidth, strokeStyleMiterLimit]);\n    }\n  };\n\n  return WebGLLineStringReplay;\n}(WebGLReplay));\n\n\nexport default WebGLLineStringReplay;\n\n//# sourceMappingURL=LineStringReplay.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\nimport WebGLFragment from '../../../webgl/Fragment.js';\nimport WebGLVertex from '../../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\n\\n\\n\\nuniform vec4 u_color;\\nuniform float u_opacity;\\n\\nvoid main(void) {\\n  gl_FragColor = u_color;\\n  float alpha = u_color.a * u_opacity;\\n  if (alpha == 0.0) {\\n    discard;\\n  }\\n  gl_FragColor.a = alpha;\\n}\\n' :\n  'precision mediump float;uniform vec4 e;uniform float f;void main(void){gl_FragColor=e;float alpha=e.a*f;if(alpha==0.0){discard;}gl_FragColor.a=alpha;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  '\\n\\nattribute vec2 a_position;\\n\\nuniform mat4 u_projectionMatrix;\\nuniform mat4 u_offsetScaleMatrix;\\nuniform mat4 u_offsetRotateMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0.0, 1.0);\\n}\\n\\n\\n' :\n  'attribute vec2 a;uniform mat4 b;uniform mat4 c;uniform mat4 d;void main(void){gl_Position=b*vec4(a,0.0,1.0);}');\n\n//# sourceMappingURL=defaultshader.js.map","/**\n * @module ol/render/webgl/polygonreplay/defaultshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'b');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetScaleMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetScaleMatrix' : 'c');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_offsetRotateMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_offsetRotateMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_color = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_color' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'a');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/structs/LinkedList\n */\n\n\n/**\n * @typedef {Object} Item\n * @property {module:ol/structs/LinkedList~Item} [prev]\n * @property {module:ol/structs/LinkedList~Item} [next]\n * @property {?} data\n */\n\n/**\n * @classdesc\n * Creates an empty linked list structure.\n */\nvar LinkedList = function LinkedList(opt_circular) {\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.first_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.last_;\n\n  /**\n   * @private\n   * @type {module:ol/structs/LinkedList~Item|undefined}\n   */\n  this.head_;\n\n  /**\n   * @private\n   * @type {boolean}\n   */\n  this.circular_ = opt_circular === undefined ? true : opt_circular;\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.length_ = 0;\n\n};\n\n/**\n * Inserts an item into the linked list right after the current one.\n *\n * @param {?} data Item data.\n */\nLinkedList.prototype.insertItem = function insertItem (data) {\n\n  /** @type {module:ol/structs/LinkedList~Item} */\n  var item = {\n    prev: undefined,\n    next: undefined,\n    data: data\n  };\n\n  var head = this.head_;\n\n  //Initialize the list.\n  if (!head) {\n    this.first_ = item;\n    this.last_ = item;\n    if (this.circular_) {\n      item.next = item;\n      item.prev = item;\n    }\n  } else {\n    //Link the new item to the adjacent ones.\n    var next = head.next;\n    item.prev = head;\n    item.next = next;\n    head.next = item;\n    if (next) {\n      next.prev = item;\n    }\n\n    if (head === this.last_) {\n      this.last_ = item;\n    }\n  }\n  this.head_ = item;\n  this.length_++;\n};\n\n/**\n * Removes the current item from the list. Sets the cursor to the next item,\n * if possible.\n */\nLinkedList.prototype.removeItem = function removeItem () {\n  var head = this.head_;\n  if (head) {\n    var next = head.next;\n    var prev = head.prev;\n    if (next) {\n      next.prev = prev;\n    }\n    if (prev) {\n      prev.next = next;\n    }\n    this.head_ = next || prev;\n\n    if (this.first_ === this.last_) {\n      this.head_ = undefined;\n      this.first_ = undefined;\n      this.last_ = undefined;\n    } else if (this.first_ === head) {\n      this.first_ = this.head_;\n    } else if (this.last_ === head) {\n      this.last_ = prev ? this.head_.prev : this.head_;\n    }\n    this.length_--;\n  }\n};\n\n/**\n * Sets the cursor to the first item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.firstItem = function firstItem () {\n  this.head_ = this.first_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n* Sets the cursor to the last item, and returns the associated data.\n*\n* @return {?} Item data.\n*/\nLinkedList.prototype.lastItem = function lastItem () {\n  this.head_ = this.last_;\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the next item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.nextItem = function nextItem () {\n  if (this.head_ && this.head_.next) {\n    this.head_ = this.head_.next;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the next item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getNextItem = function getNextItem () {\n  if (this.head_ && this.head_.next) {\n    return this.head_.next.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the cursor to the previous item, and returns the associated data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.prevItem = function prevItem () {\n  if (this.head_ && this.head_.prev) {\n    this.head_ = this.head_.prev;\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the previous item's data without moving the cursor.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getPrevItem = function getPrevItem () {\n  if (this.head_ && this.head_.prev) {\n    return this.head_.prev.data;\n  }\n  return undefined;\n};\n\n/**\n * Returns the current item's data.\n *\n * @return {?} Item data.\n */\nLinkedList.prototype.getCurrItem = function getCurrItem () {\n  if (this.head_) {\n    return this.head_.data;\n  }\n  return undefined;\n};\n\n/**\n * Sets the first item of the list. This only works for circular lists, and sets\n * the last item accordingly.\n */\nLinkedList.prototype.setFirstItem = function setFirstItem () {\n  if (this.circular_ && this.head_) {\n    this.first_ = this.head_;\n    this.last_ = this.head_.prev;\n  }\n};\n\n/**\n * Concatenates two lists.\n * @param {module:ol/structs/LinkedList} list List to merge into the current list.\n */\nLinkedList.prototype.concat = function concat (list) {\n  if (list.head_) {\n    if (this.head_) {\n      var end = this.head_.next;\n      this.head_.next = list.first_;\n      list.first_.prev = this.head_;\n      end.prev = list.last_;\n      list.last_.next = end;\n      this.length_ += list.length_;\n    } else {\n      this.head_ = list.head_;\n      this.first_ = list.first_;\n      this.last_ = list.last_;\n      this.length_ = list.length_;\n    }\n    list.head_ = undefined;\n    list.first_ = undefined;\n    list.last_ = undefined;\n    list.length_ = 0;\n  }\n};\n\n/**\n * Returns the current length of the list.\n *\n * @return {number} Length.\n */\nLinkedList.prototype.getLength = function getLength () {\n  return this.length_;\n};\n\n\nexport default LinkedList;\n\n//# sourceMappingURL=LinkedList.js.map","/**\n * @module ol/render/webgl/PolygonReplay\n */\nimport {getUid} from '../../util.js';\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {intersects} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {linearRingContainsXY} from '../../geom/flat/contains.js';\nimport {linearRingIsClockwise} from '../../geom/flat/orient.js';\nimport {translate} from '../../geom/flat/transform.js';\nimport {fragment, vertex} from '../webgl/polygonreplay/defaultshader.js';\nimport Locations from '../webgl/polygonreplay/defaultshader/Locations.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLReplay from '../webgl/Replay.js';\nimport {triangleIsCounterClockwise, EPSILON, DEFAULT_FILLSTYLE} from '../webgl.js';\nimport Stroke from '../../style/Stroke.js';\nimport LinkedList from '../../structs/LinkedList.js';\nimport RBush from '../../structs/RBush.js';\nimport {FLOAT} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n\n/**\n * @typedef {Object} PolygonVertex\n * @property {number} x\n * @property {number} y\n * @property {number} i\n * @property {boolean} [reflex]\n */\n\n/**\n * @typedef {Object} PolygonSegment\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0\n * @property {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1\n */\n\n\nvar WebGLPolygonReplay = (function (WebGLReplay) {\n  function WebGLPolygonReplay(tolerance, maxExtent) {\n    WebGLReplay.call(this, tolerance, maxExtent);\n\n    this.lineStringReplay = new WebGLLineStringReplay(\n      tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/polygonreplay/defaultshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n    /**\n     * @private\n     * @type {Array<Array<number>>}\n     */\n    this.styles_ = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.styleIndices_ = [];\n\n    /**\n     * @private\n     * @type {{fillColor: (Array<number>|null),\n     *         changed: boolean}|null}\n     */\n    this.state_ = {\n      fillColor: null,\n      changed: false\n    };\n\n  }\n\n  if ( WebGLReplay ) WebGLPolygonReplay.__proto__ = WebGLReplay;\n  WebGLPolygonReplay.prototype = Object.create( WebGLReplay && WebGLReplay.prototype );\n  WebGLPolygonReplay.prototype.constructor = WebGLPolygonReplay;\n\n  /**\n   * Draw one polygon.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {Array<Array<number>>} holeFlatCoordinates Hole flat coordinates.\n   * @param {number} stride Stride.\n   * @private\n   */\n  WebGLPolygonReplay.prototype.drawCoordinates_ = function drawCoordinates_ (flatCoordinates, holeFlatCoordinates, stride) {\n    var this$1 = this;\n\n    // Triangulate the polygon\n    var outerRing = new LinkedList();\n    var rtree = new RBush();\n    // Initialize the outer ring\n    this.processFlatCoordinates_(flatCoordinates, stride, outerRing, rtree, true);\n    var maxCoords = this.getMaxCoords_(outerRing);\n\n    // Eliminate holes, if there are any\n    if (holeFlatCoordinates.length) {\n      var i, ii;\n      var holeLists = [];\n      for (i = 0, ii = holeFlatCoordinates.length; i < ii; ++i) {\n        var holeList = {\n          list: new LinkedList(),\n          maxCoords: undefined,\n          rtree: new RBush()\n        };\n        holeLists.push(holeList);\n        this$1.processFlatCoordinates_(holeFlatCoordinates[i],\n          stride, holeList.list, holeList.rtree, false);\n        this$1.classifyPoints_(holeList.list, holeList.rtree, true);\n        holeList.maxCoords = this$1.getMaxCoords_(holeList.list);\n      }\n      holeLists.sort(function(a, b) {\n        return b.maxCoords[0] === a.maxCoords[0] ?\n          a.maxCoords[1] - b.maxCoords[1] : b.maxCoords[0] - a.maxCoords[0];\n      });\n      for (i = 0; i < holeLists.length; ++i) {\n        var currList = holeLists[i].list;\n        var start = currList.firstItem();\n        var currItem = start;\n        var intersection = (void 0);\n        do {\n          //TODO: Triangulate holes when they intersect the outer ring.\n          if (this$1.getIntersections_(currItem, rtree).length) {\n            intersection = true;\n            break;\n          }\n          currItem = currList.nextItem();\n        } while (start !== currItem);\n        if (!intersection) {\n          if (this$1.bridgeHole_(currList, holeLists[i].maxCoords[0], outerRing, maxCoords[0], rtree)) {\n            rtree.concat(holeLists[i].rtree);\n            this$1.classifyPoints_(outerRing, rtree, false);\n          }\n        }\n      }\n    } else {\n      this.classifyPoints_(outerRing, rtree, false);\n    }\n    this.triangulate_(outerRing, rtree);\n  };\n\n  /**\n   * Inserts flat coordinates in a linked list and adds them to the vertex buffer.\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @param {module:ol/structs/LinkedList} list Linked list.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} clockwise Coordinate order should be clockwise.\n   */\n  WebGLPolygonReplay.prototype.processFlatCoordinates_ = function processFlatCoordinates_ (flatCoordinates, stride, list, rtree, clockwise) {\n    var this$1 = this;\n\n    var isClockwise = linearRingIsClockwise(flatCoordinates,\n      0, flatCoordinates.length, stride);\n    var i, ii;\n    var n = this.vertices.length / 2;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var start;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p0;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p1;\n    var extents = [];\n    var segments = [];\n    if (clockwise === isClockwise) {\n      start = this.createPoint_(flatCoordinates[0], flatCoordinates[1], n++);\n      p0 = start;\n      for (i = stride, ii = flatCoordinates.length; i < ii; i += stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    } else {\n      var end = flatCoordinates.length - stride;\n      start = this.createPoint_(flatCoordinates[end], flatCoordinates[end + 1], n++);\n      p0 = start;\n      for (i = end - stride, ii = 0; i >= ii; i -= stride) {\n        p1 = this$1.createPoint_(flatCoordinates[i], flatCoordinates[i + 1], n++);\n        segments.push(this$1.insertItem_(p0, p1, list));\n        extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n          Math.max(p0.y, p1.y)]);\n        p0 = p1;\n      }\n      segments.push(this.insertItem_(p1, start, list));\n      extents.push([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y), Math.max(p0.x, p1.x),\n        Math.max(p0.y, p1.y)]);\n    }\n    rtree.load(extents, segments);\n  };\n\n  /**\n   * Returns the rightmost coordinates of a polygon on the X axis.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygons ring.\n   * @return {Array<number>} Max X coordinates.\n   */\n  WebGLPolygonReplay.prototype.getMaxCoords_ = function getMaxCoords_ (list) {\n    var start = list.firstItem();\n    var seg = start;\n    var maxCoords = [seg.p0.x, seg.p0.y];\n\n    do {\n      seg = list.nextItem();\n      if (seg.p0.x > maxCoords[0]) {\n        maxCoords = [seg.p0.x, seg.p0.y];\n      }\n    } while (seg !== start);\n\n    return maxCoords;\n  };\n\n  /**\n   * Classifies the points of a polygon list as convex, reflex. Removes collinear vertices.\n   * @private\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} ccw The orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were reclassified points.\n   */\n  WebGLPolygonReplay.prototype.classifyPoints_ = function classifyPoints_ (list, rtree, ccw) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var pointsReclassified = false;\n    do {\n      var reflex = ccw ? triangleIsCounterClockwise(s1.p1.x,\n        s1.p1.y, s0.p1.x, s0.p1.y, s0.p0.x, s0.p0.y) :\n        triangleIsCounterClockwise(s0.p0.x, s0.p0.y, s0.p1.x,\n          s0.p1.y, s1.p1.x, s1.p1.y);\n      if (reflex === undefined) {\n        this$1.removeItem_(s0, s1, list, rtree);\n        pointsReclassified = true;\n        if (s1 === start) {\n          start = list.getNextItem();\n        }\n        s1 = s0;\n        list.prevItem();\n      } else if (s0.p1.reflex !== reflex) {\n        s0.p1.reflex = reflex;\n        pointsReclassified = true;\n      }\n      s0 = s1;\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return pointsReclassified;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} hole Linked list of the hole.\n   * @param {number} holeMaxX Maximum X value of the hole.\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {number} listMaxX Maximum X value of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} Bridging was successful.\n   */\n  WebGLPolygonReplay.prototype.bridgeHole_ = function bridgeHole_ (hole, holeMaxX, list, listMaxX, rtree) {\n    var this$1 = this;\n\n    var seg = hole.firstItem();\n    while (seg.p1.x !== holeMaxX) {\n      seg = hole.nextItem();\n    }\n\n    var p1 = seg.p1;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p2 = {x: listMaxX, y: p1.y, i: -1};\n    var minDist = Infinity;\n    var i, ii, bestPoint;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p5;\n\n    var intersectingSegments = this.getIntersections_({p0: p1, p1: p2}, rtree, true);\n    for (i = 0, ii = intersectingSegments.length; i < ii; ++i) {\n      var currSeg = intersectingSegments[i];\n      var intersection = this$1.calculateIntersection_(p1, p2, currSeg.p0,\n        currSeg.p1, true);\n      var dist = Math.abs(p1.x - intersection[0]);\n      if (dist < minDist && triangleIsCounterClockwise(p1.x, p1.y,\n        currSeg.p0.x, currSeg.p0.y, currSeg.p1.x, currSeg.p1.y) !== undefined) {\n        minDist = dist;\n        p5 = {x: intersection[0], y: intersection[1], i: -1};\n        seg = currSeg;\n      }\n    }\n    if (minDist === Infinity) {\n      return false;\n    }\n    bestPoint = seg.p1;\n\n    if (minDist > 0) {\n      var pointsInTriangle = this.getPointsInTriangle_(p1, p5, seg.p1, rtree);\n      if (pointsInTriangle.length) {\n        var theta = Infinity;\n        for (i = 0, ii = pointsInTriangle.length; i < ii; ++i) {\n          var currPoint = pointsInTriangle[i];\n          var currTheta = Math.atan2(p1.y - currPoint.y, p2.x - currPoint.x);\n          if (currTheta < theta || (currTheta === theta && currPoint.x < bestPoint.x)) {\n            theta = currTheta;\n            bestPoint = currPoint;\n          }\n        }\n      }\n    }\n\n    seg = list.firstItem();\n    while (seg.p1.x !== bestPoint.x || seg.p1.y !== bestPoint.y) {\n      seg = list.nextItem();\n    }\n\n    //We clone the bridge points as they can have different convexity.\n    var p0Bridge = {x: p1.x, y: p1.y, i: p1.i, reflex: undefined};\n    var p1Bridge = {x: seg.p1.x, y: seg.p1.y, i: seg.p1.i, reflex: undefined};\n\n    hole.getNextItem().p0 = p0Bridge;\n    this.insertItem_(p1, seg.p1, hole, rtree);\n    this.insertItem_(p1Bridge, p0Bridge, hole, rtree);\n    seg.p1 = p1Bridge;\n    hole.setFirstItem();\n    list.concat(hole);\n\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.triangulate_ = function triangulate_ (list, rtree) {\n    var this$1 = this;\n\n    var ccw = false;\n    var simple = this.isSimple_(list, rtree);\n\n    // Start clipping ears\n    while (list.getLength() > 3) {\n      if (simple) {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // Due to the behavior of OL's PIP algorithm, the ear clipping cannot\n            // introduce touching segments. However, the original data may have some.\n            if (!this$1.resolveSelfIntersections_(list, rtree, true)) {\n              break;\n            }\n          }\n        }\n      } else {\n        if (!this$1.clipEars_(list, rtree, simple, ccw)) {\n          // We ran out of ears, try to reclassify.\n          if (!this$1.classifyPoints_(list, rtree, ccw)) {\n            // We have a bad polygon, try to resolve local self-intersections.\n            if (!this$1.resolveSelfIntersections_(list, rtree)) {\n              simple = this$1.isSimple_(list, rtree);\n              if (!simple) {\n                // We have a really bad polygon, try more time consuming methods.\n                this$1.splitPolygon_(list, rtree);\n                break;\n              } else {\n                ccw = !this$1.isClockwise_(list);\n                this$1.classifyPoints_(list, rtree, ccw);\n              }\n            }\n          }\n        }\n      }\n    }\n    if (list.getLength() === 3) {\n      var numIndices = this.indices.length;\n      this.indices[numIndices++] = list.getPrevItem().p0.i;\n      this.indices[numIndices++] = list.getCurrItem().p0.i;\n      this.indices[numIndices++] = list.getNextItem().p0.i;\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean} simple The polygon is simple.\n   * @param {boolean} ccw Orientation of the polygon is counter-clockwise.\n   * @return {boolean} There were processed ears.\n   */\n  WebGLPolygonReplay.prototype.clipEars_ = function clipEars_ (list, rtree, simple, ccw) {\n    var this$1 = this;\n\n    var numIndices = this.indices.length;\n    var start = list.firstItem();\n    var s0 = list.getPrevItem();\n    var s1 = start;\n    var s2 = list.nextItem();\n    var s3 = list.getNextItem();\n    var p0, p1, p2;\n    var processedEars = false;\n    do {\n      p0 = s1.p0;\n      p1 = s1.p1;\n      p2 = s2.p1;\n      if (p1.reflex === false) {\n        // We might have a valid ear\n        var variableCriterion = (void 0);\n        if (simple) {\n          variableCriterion = this$1.getPointsInTriangle_(p0, p1, p2, rtree, true).length === 0;\n        } else {\n          variableCriterion = ccw ? this$1.diagonalIsInside_(s3.p1, p2, p1, p0,\n            s0.p0) : this$1.diagonalIsInside_(s0.p0, p0, p1, p2, s3.p1);\n        }\n        if ((simple || this$1.getIntersections_({p0: p0, p1: p2}, rtree).length === 0) &&\n            variableCriterion) {\n          //The diagonal is completely inside the polygon\n          if (simple || p0.reflex === false || p2.reflex === false ||\n              linearRingIsClockwise([s0.p0.x, s0.p0.y, p0.x,\n                p0.y, p1.x, p1.y, p2.x, p2.y, s3.p1.x, s3.p1.y], 0, 10, 2) === !ccw) {\n            //The diagonal is persumably valid, we have an ear\n            this$1.indices[numIndices++] = p0.i;\n            this$1.indices[numIndices++] = p1.i;\n            this$1.indices[numIndices++] = p2.i;\n            this$1.removeItem_(s1, s2, list, rtree);\n            if (s2 === start) {\n              start = s3;\n            }\n            processedEars = true;\n          }\n        }\n      }\n      // Else we have a reflex point.\n      s0 = list.getPrevItem();\n      s1 = list.getCurrItem();\n      s2 = list.nextItem();\n      s3 = list.getNextItem();\n    } while (s1 !== start && list.getLength() > 3);\n\n    return processedEars;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Resolve touching segments.\n   * @return {boolean} There were resolved intersections.\n  */\n  WebGLPolygonReplay.prototype.resolveSelfIntersections_ = function resolveSelfIntersections_ (list, rtree, opt_touch) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    list.nextItem();\n    var s0 = start;\n    var s1 = list.nextItem();\n    var resolvedIntersections = false;\n\n    do {\n      var intersection = this$1.calculateIntersection_(s0.p0, s0.p1, s1.p0, s1.p1,\n        opt_touch);\n      if (intersection) {\n        var breakCond = false;\n        var numVertices = this$1.vertices.length;\n        var numIndices = this$1.indices.length;\n        var n = numVertices / 2;\n        var seg = list.prevItem();\n        list.removeItem();\n        rtree.remove(seg);\n        breakCond = (seg === start);\n        var p = (void 0);\n        if (opt_touch) {\n          if (intersection[0] === s0.p0.x && intersection[1] === s0.p0.y) {\n            list.prevItem();\n            p = s0.p0;\n            s1.p0 = p;\n            rtree.remove(s0);\n            breakCond = breakCond || (s0 === start);\n          } else {\n            p = s1.p1;\n            s0.p1 = p;\n            rtree.remove(s1);\n            breakCond = breakCond || (s1 === start);\n          }\n          list.removeItem();\n        } else {\n          p = this$1.createPoint_(intersection[0], intersection[1], n);\n          s0.p1 = p;\n          s1.p0 = p;\n          rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n            Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n          rtree.update([Math.min(s1.p0.x, s1.p1.x), Math.min(s1.p0.y, s1.p1.y),\n            Math.max(s1.p0.x, s1.p1.x), Math.max(s1.p0.y, s1.p1.y)], s1);\n        }\n\n        this$1.indices[numIndices++] = seg.p0.i;\n        this$1.indices[numIndices++] = seg.p1.i;\n        this$1.indices[numIndices++] = p.i;\n\n        resolvedIntersections = true;\n        if (breakCond) {\n          break;\n        }\n      }\n\n      s0 = list.getPrevItem();\n      s1 = list.nextItem();\n    } while (s0 !== start);\n    return resolvedIntersections;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @return {boolean} The polygon is simple.\n   */\n  WebGLPolygonReplay.prototype.isSimple_ = function isSimple_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var seg = start;\n    do {\n      if (this$1.getIntersections_(seg, rtree).length) {\n        return false;\n      }\n      seg = list.nextItem();\n    } while (seg !== start);\n    return true;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @return {boolean} Orientation is clockwise.\n   */\n  WebGLPolygonReplay.prototype.isClockwise_ = function isClockwise_ (list) {\n    var length = list.getLength() * 2;\n    var flatCoordinates = new Array(length);\n    var start = list.firstItem();\n    var seg = start;\n    var i = 0;\n    do {\n      flatCoordinates[i++] = seg.p0.x;\n      flatCoordinates[i++] = seg.p0.y;\n      seg = list.nextItem();\n    } while (seg !== start);\n    return linearRingIsClockwise(flatCoordinates, 0, length, 2);\n  };\n\n  /**\n   * @private\n   * @param {module:ol/structs/LinkedList} list Linked list of the polygon.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   */\n  WebGLPolygonReplay.prototype.splitPolygon_ = function splitPolygon_ (list, rtree) {\n    var this$1 = this;\n\n    var start = list.firstItem();\n    var s0 = start;\n    do {\n      var intersections = this$1.getIntersections_(s0, rtree);\n      if (intersections.length) {\n        var s1 = intersections[0];\n        var n = this$1.vertices.length / 2;\n        var intersection = this$1.calculateIntersection_(s0.p0,\n          s0.p1, s1.p0, s1.p1);\n        var p = this$1.createPoint_(intersection[0], intersection[1], n);\n        var newPolygon = new LinkedList();\n        var newRtree = new RBush();\n        this$1.insertItem_(p, s0.p1, newPolygon, newRtree);\n        s0.p1 = p;\n        rtree.update([Math.min(s0.p0.x, p.x), Math.min(s0.p0.y, p.y),\n          Math.max(s0.p0.x, p.x), Math.max(s0.p0.y, p.y)], s0);\n        var currItem = list.nextItem();\n        while (currItem !== s1) {\n          this$1.insertItem_(currItem.p0, currItem.p1, newPolygon, newRtree);\n          rtree.remove(currItem);\n          list.removeItem();\n          currItem = list.getCurrItem();\n        }\n        this$1.insertItem_(s1.p0, p, newPolygon, newRtree);\n        s1.p0 = p;\n        rtree.update([Math.min(s1.p1.x, p.x), Math.min(s1.p1.y, p.y),\n          Math.max(s1.p1.x, p.x), Math.max(s1.p1.y, p.y)], s1);\n        this$1.classifyPoints_(list, rtree, false);\n        this$1.triangulate_(list, rtree);\n        this$1.classifyPoints_(newPolygon, newRtree, false);\n        this$1.triangulate_(newPolygon, newRtree);\n        break;\n      }\n      s0 = list.nextItem();\n    } while (s0 !== start);\n  };\n\n  /**\n   * @private\n   * @param {number} x X coordinate.\n   * @param {number} y Y coordinate.\n   * @param {number} i Index.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonVertex} List item.\n   */\n  WebGLPolygonReplay.prototype.createPoint_ = function createPoint_ (x, y, i) {\n    var numVertices = this.vertices.length;\n    this.vertices[numVertices++] = x;\n    this.vertices[numVertices++] = y;\n    /** @type {module:ol/render/webgl/PolygonReplay~PolygonVertex} */\n    var p = {\n      x: x,\n      y: y,\n      i: i,\n      reflex: undefined\n    };\n    return p;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point of segment.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point of segment.\n   * @param {module:ol/structs/LinkedList} list Polygon ring.\n   * @param {module:ol/structs/RBush=} opt_rtree Insert the segment into the R-Tree.\n   * @return {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment.\n   */\n  WebGLPolygonReplay.prototype.insertItem_ = function insertItem_ (p0, p1, list, opt_rtree) {\n    var seg = {\n      p0: p0,\n      p1: p1\n    };\n    list.insertItem(seg);\n    if (opt_rtree) {\n      opt_rtree.insert([Math.min(p0.x, p1.x), Math.min(p0.y, p1.y),\n        Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)], seg);\n    }\n    return seg;\n  };\n\n  /**\n    * @private\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s0 Segment before the remove candidate.\n    * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} s1 Remove candidate segment.\n    * @param {module:ol/structs/LinkedList} list Polygon ring.\n    * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n    */\n  WebGLPolygonReplay.prototype.removeItem_ = function removeItem_ (s0, s1, list, rtree) {\n    if (list.getCurrItem() === s1) {\n      list.removeItem();\n      s0.p1 = s1.p1;\n      rtree.remove(s1);\n      rtree.update([Math.min(s0.p0.x, s0.p1.x), Math.min(s0.p0.y, s0.p1.y),\n        Math.max(s0.p0.x, s0.p1.x), Math.max(s0.p0.y, s0.p1.y)], s0);\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_reflex Only include reflex points.\n   * @return {Array<module:ol/render/webgl/PolygonReplay~PolygonVertex>} Points in the triangle.\n   */\n  WebGLPolygonReplay.prototype.getPointsInTriangle_ = function getPointsInTriangle_ (p0, p1, p2, rtree, opt_reflex) {\n    var result = [];\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x, p2.x),\n      Math.min(p0.y, p1.y, p2.y), Math.max(p0.x, p1.x, p2.x), Math.max(p0.y,\n        p1.y, p2.y)]);\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      for (var j in segmentsInExtent[i]) {\n        var p = segmentsInExtent[i][j];\n        if (typeof p === 'object' && (!opt_reflex || p.reflex)) {\n          if ((p.x !== p0.x || p.y !== p0.y) && (p.x !== p1.x || p.y !== p1.y) &&\n              (p.x !== p2.x || p.y !== p2.y) && result.indexOf(p) === -1 &&\n              linearRingContainsXY([p0.x, p0.y, p1.x, p1.y, p2.x, p2.y], 0, 6, 2, p.x, p.y)) {\n            result.push(p);\n          }\n        }\n      }\n    }\n    return result;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonSegment} segment Segment.\n   * @param {module:ol/structs/RBush} rtree R-Tree of the polygon.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<module:ol/render/webgl/PolygonReplay~PolygonSegment>} Intersecting segments.\n   */\n  WebGLPolygonReplay.prototype.getIntersections_ = function getIntersections_ (segment, rtree, opt_touch) {\n    var this$1 = this;\n\n    var p0 = segment.p0;\n    var p1 = segment.p1;\n    var segmentsInExtent = rtree.getInExtent([Math.min(p0.x, p1.x),\n      Math.min(p0.y, p1.y), Math.max(p0.x, p1.x), Math.max(p0.y, p1.y)]);\n    var result = [];\n    for (var i = 0, ii = segmentsInExtent.length; i < ii; ++i) {\n      var currSeg = segmentsInExtent[i];\n      if (segment !== currSeg && (opt_touch || currSeg.p0 !== p1 || currSeg.p1 !== p0) &&\n          this$1.calculateIntersection_(p0, p1, currSeg.p0, currSeg.p1, opt_touch)) {\n        result.push(currSeg);\n      }\n    }\n    return result;\n  };\n\n  /**\n   * Line intersection algorithm by Paul Bourke.\n   * See http://paulbourke.net/geometry/pointlineplane/.\n   *\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 First point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Second point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Third point.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 Fourth point.\n   * @param {boolean=} opt_touch Touching segments should be considered an intersection.\n   * @return {Array<number>|undefined} Intersection coordinates.\n   */\n  WebGLPolygonReplay.prototype.calculateIntersection_ = function calculateIntersection_ (p0, p1, p2, p3, opt_touch) {\n    var denom = (p3.y - p2.y) * (p1.x - p0.x) - (p3.x - p2.x) * (p1.y - p0.y);\n    if (denom !== 0) {\n      var ua = ((p3.x - p2.x) * (p0.y - p2.y) - (p3.y - p2.y) * (p0.x - p2.x)) / denom;\n      var ub = ((p1.x - p0.x) * (p0.y - p2.y) - (p1.y - p0.y) * (p0.x - p2.x)) / denom;\n      if ((!opt_touch && ua > EPSILON && ua < 1 - EPSILON &&\n          ub > EPSILON && ub < 1 - EPSILON) || (opt_touch &&\n          ua >= 0 && ua <= 1 && ub >= 0 && ub <= 1)) {\n        return [p0.x + ua * (p1.x - p0.x), p0.y + ua * (p1.y - p0.y)];\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p0 Point before the start of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p1 Start point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p2 Ear candidate.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p3 End point of the diagonal.\n   * @param {module:ol/render/webgl/PolygonReplay~PolygonVertex} p4 Point after the end of the diagonal.\n   * @return {boolean} Diagonal is inside the polygon.\n   */\n  WebGLPolygonReplay.prototype.diagonalIsInside_ = function diagonalIsInside_ (p0, p1, p2, p3, p4) {\n    if (p1.reflex === undefined || p3.reflex === undefined) {\n      return false;\n    }\n    var p1IsLeftOf = (p2.x - p3.x) * (p1.y - p3.y) > (p2.y - p3.y) * (p1.x - p3.x);\n    var p1IsRightOf = (p4.x - p3.x) * (p1.y - p3.y) < (p4.y - p3.y) * (p1.x - p3.x);\n    var p3IsLeftOf = (p0.x - p1.x) * (p3.y - p1.y) > (p0.y - p1.y) * (p3.x - p1.x);\n    var p3IsRightOf = (p2.x - p1.x) * (p3.y - p1.y) < (p2.y - p1.y) * (p3.x - p1.x);\n    var p1InCone = p3.reflex ? p1IsRightOf || p1IsLeftOf : p1IsRightOf && p1IsLeftOf;\n    var p3InCone = p1.reflex ? p3IsRightOf || p3IsLeftOf : p3IsRightOf && p3IsLeftOf;\n    return p1InCone && p3InCone;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawMultiPolygon = function drawMultiPolygon (multiPolygonGeometry, feature) {\n    var this$1 = this;\n\n    var endss = multiPolygonGeometry.getEndss();\n    var stride = multiPolygonGeometry.getStride();\n    var currIndex = this.indices.length;\n    var currLineIndex = this.lineStringReplay.getCurrentIndex();\n    var flatCoordinates = multiPolygonGeometry.getFlatCoordinates();\n    var i, ii, j, jj;\n    var start = 0;\n    for (i = 0, ii = endss.length; i < ii; ++i) {\n      var ends = endss[i];\n      if (ends.length > 0) {\n        var outerRing = translate(flatCoordinates, start, ends[0],\n          stride, -this$1.origin[0], -this$1.origin[1]);\n        if (outerRing.length) {\n          var holes = [];\n          var holeFlatCoords = (void 0);\n          for (j = 1, jj = ends.length; j < jj; ++j) {\n            if (ends[j] !== ends[j - 1]) {\n              holeFlatCoords = translate(flatCoordinates, ends[j - 1],\n                ends[j], stride, -this$1.origin[0], -this$1.origin[1]);\n              holes.push(holeFlatCoords);\n            }\n          }\n          this$1.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n          this$1.drawCoordinates_(outerRing, holes, stride);\n        }\n      }\n      start = ends[ends.length - 1];\n    }\n    if (this.indices.length > currIndex) {\n      this.startIndices.push(currIndex);\n      this.startIndicesFeature.push(feature);\n      if (this.state_.changed) {\n        this.styleIndices_.push(currIndex);\n        this.state_.changed = false;\n      }\n    }\n    if (this.lineStringReplay.getCurrentIndex() > currLineIndex) {\n      this.lineStringReplay.setPolygonStyle(feature, currLineIndex);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawPolygon = function drawPolygon (polygonGeometry, feature) {\n    var this$1 = this;\n\n    var ends = polygonGeometry.getEnds();\n    var stride = polygonGeometry.getStride();\n    if (ends.length > 0) {\n      var flatCoordinates = polygonGeometry.getFlatCoordinates().map(Number);\n      var outerRing = translate(flatCoordinates, 0, ends[0],\n        stride, -this.origin[0], -this.origin[1]);\n      if (outerRing.length) {\n        var holes = [];\n        var i, ii, holeFlatCoords;\n        for (i = 1, ii = ends.length; i < ii; ++i) {\n          if (ends[i] !== ends[i - 1]) {\n            holeFlatCoords = translate(flatCoordinates, ends[i - 1],\n              ends[i], stride, -this$1.origin[0], -this$1.origin[1]);\n            holes.push(holeFlatCoords);\n          }\n        }\n\n        this.startIndices.push(this.indices.length);\n        this.startIndicesFeature.push(feature);\n        if (this.state_.changed) {\n          this.styleIndices_.push(this.indices.length);\n          this.state_.changed = false;\n        }\n        this.lineStringReplay.setPolygonStyle(feature);\n\n        this.lineStringReplay.drawPolygonCoordinates(outerRing, holes, stride);\n        this.drawCoordinates_(outerRing, holes, stride);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   **/\n  WebGLPolygonReplay.prototype.finish = function finish (context) {\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    this.startIndices.push(this.indices.length);\n\n    this.lineStringReplay.finish(context);\n\n    //Clean up, if there is nothing to draw\n    if (this.styleIndices_.length === 0 && this.styles_.length > 0) {\n      this.styles_ = [];\n    }\n\n    this.vertices = null;\n    this.indices = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var verticesBuffer = this.verticesBuffer;\n    var indicesBuffer = this.indicesBuffer;\n    var lineDeleter = this.lineStringReplay.getDeleteResourcesFunction(context);\n    return function() {\n      context.deleteBuffer(verticesBuffer);\n      context.deleteBuffer(indicesBuffer);\n      lineDeleter();\n    };\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setUpProgram = function setUpProgram (gl, context, size, pixelRatio) {\n    // get the program\n    var program = context.getProgram(fragment, vertex);\n\n    // get the locations\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    context.useProgram(program);\n\n    // enable the vertex attrib arrays\n    gl.enableVertexAttribArray(locations.a_position);\n    gl.vertexAttribPointer(locations.a_position, 2, FLOAT,\n      false, 8, 0);\n\n    return locations;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.shutDownProgram = function shutDownProgram (gl, locations) {\n    gl.disableVertexAttribArray(locations.a_position);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawReplay = function drawReplay (gl, context, skippedFeaturesHash, hitDetection) {\n    var this$1 = this;\n\n    //Save GL parameters.\n    var tmpDepthFunc = /** @type {number} */ (gl.getParameter(gl.DEPTH_FUNC));\n    var tmpDepthMask = /** @type {boolean} */ (gl.getParameter(gl.DEPTH_WRITEMASK));\n\n    if (!hitDetection) {\n      gl.enable(gl.DEPTH_TEST);\n      gl.depthMask(true);\n      gl.depthFunc(gl.NOTEQUAL);\n    }\n\n    if (!isEmpty(skippedFeaturesHash)) {\n      this.drawReplaySkipping_(gl, context, skippedFeaturesHash);\n    } else {\n      //Draw by style groups to minimize drawElements() calls.\n      var i, start, end, nextStyle;\n      end = this.startIndices[this.startIndices.length - 1];\n      for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n        start = this$1.styleIndices_[i];\n        nextStyle = this$1.styles_[i];\n        this$1.setFillStyle_(gl, nextStyle);\n        this$1.drawElements(gl, context, start, end);\n        end = start;\n      }\n    }\n    if (!hitDetection) {\n      gl.disable(gl.DEPTH_TEST);\n      gl.clear(gl.DEPTH_BUFFER_BIT);\n      //Restore GL parameters.\n      gl.depthMask(tmpDepthMask);\n      gl.depthFunc(tmpDepthFunc);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.drawHitDetectionReplayOneByOne = function drawHitDetectionReplayOneByOne (gl, context, skippedFeaturesHash, featureCallback, opt_hitExtent) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex;\n    featureIndex = this.startIndices.length - 2;\n    end = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        start = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid] === undefined &&\n            feature.getGeometry() &&\n            (opt_hitExtent === undefined || intersects(\n              /** @type {Array<number>} */ (opt_hitExtent),\n              feature.getGeometry().getExtent()))) {\n          gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT);\n          this$1.drawElements(gl, context, start, end);\n\n          var result = featureCallback(feature);\n\n          if (result) {\n            return result;\n          }\n\n        }\n        featureIndex--;\n        end = start;\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {Object} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLPolygonReplay.prototype.drawReplaySkipping_ = function drawReplaySkipping_ (gl, context, skippedFeaturesHash) {\n    var this$1 = this;\n\n    var i, start, end, nextStyle, groupStart, feature, featureUid, featureIndex, featureStart;\n    featureIndex = this.startIndices.length - 2;\n    end = start = this.startIndices[featureIndex + 1];\n    for (i = this.styleIndices_.length - 1; i >= 0; --i) {\n      nextStyle = this$1.styles_[i];\n      this$1.setFillStyle_(gl, nextStyle);\n      groupStart = this$1.styleIndices_[i];\n\n      while (featureIndex >= 0 &&\n          this.startIndices[featureIndex] >= groupStart) {\n        featureStart = this$1.startIndices[featureIndex];\n        feature = this$1.startIndicesFeature[featureIndex];\n        featureUid = getUid(feature).toString();\n\n        if (skippedFeaturesHash[featureUid]) {\n          if (start !== end) {\n            this$1.drawElements(gl, context, start, end);\n            gl.clear(gl.DEPTH_BUFFER_BIT);\n          }\n          end = featureStart;\n        }\n        featureIndex--;\n        start = featureStart;\n      }\n      if (start !== end) {\n        this$1.drawElements(gl, context, start, end);\n        gl.clear(gl.DEPTH_BUFFER_BIT);\n      }\n      start = end = groupStart;\n    }\n  };\n\n  /**\n   * @private\n   * @param {WebGLRenderingContext} gl gl.\n   * @param {Array<number>} color Color.\n   */\n  WebGLPolygonReplay.prototype.setFillStyle_ = function setFillStyle_ (gl, color) {\n    gl.uniform4fv(this.defaultLocations_.u_color, color);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLPolygonReplay.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    var fillStyleColor = fillStyle ? fillStyle.getColor() : [0, 0, 0, 0];\n    if (!(fillStyleColor instanceof CanvasGradient) &&\n        !(fillStyleColor instanceof CanvasPattern)) {\n      fillStyleColor = asArray(fillStyleColor).map(function(c, i) {\n        return i != 3 ? c / 255 : c;\n      }) || DEFAULT_FILLSTYLE;\n    } else {\n      fillStyleColor = DEFAULT_FILLSTYLE;\n    }\n    if (!this.state_.fillColor || !equals(fillStyleColor, this.state_.fillColor)) {\n      this.state_.fillColor = fillStyleColor;\n      this.state_.changed = true;\n      this.styles_.push(fillStyleColor);\n    }\n    //Provide a null stroke style, if no strokeStyle is provided. Required for the draw interaction to work.\n    if (strokeStyle) {\n      this.lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    } else {\n      var nullStrokeStyle = new Stroke({\n        color: [0, 0, 0, 0],\n        lineWidth: 0\n      });\n      this.lineStringReplay.setFillStrokeStyle(null, nullStrokeStyle);\n    }\n  };\n\n  return WebGLPolygonReplay;\n}(WebGLReplay));\n\n\nexport default WebGLPolygonReplay;\n\n//# sourceMappingURL=PolygonReplay.js.map","/**\n * @module ol/style/Atlas\n */\nimport {createCanvasContext2D} from '../dom.js';\n\n\n/**\n * @typedef {Object} AtlasBlock\n * @property {number} x\n * @property {number} y\n * @property {number} width\n * @property {number} height\n */\n\n/**\n * Provides information for an image inside an atlas.\n * `offsetX` and `offsetY` are the position of the image inside the atlas image `image`.\n * @typedef {Object} AtlasInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n */\n\n\n/**\n * @classesc\n * This class facilitates the creation of image atlases.\n *\n * Images added to an atlas will be rendered onto a single\n * atlas canvas. The distribution of images on the canvas is\n * managed with the bin packing algorithm described in:\n * http://www.blackpawn.com/texts/lightmaps/\n *\n * @param {number} size The size in pixels of the sprite image.\n * @param {number} space The space in pixels between images.\n *    Because texture coordinates are float values, the edges of\n *    images might not be completely correct (in a way that the\n *    edges overlap when being rendered). To avoid this we add a\n *    padding around each image.\n */\nvar Atlas = function Atlas(size, space) {\n\n  /**\n   * @private\n   * @type {number}\n   */\n  this.space_ = space;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas~AtlasBlock>}\n   */\n  this.emptyBlocks_ = [{x: 0, y: 0, width: size, height: size}];\n\n  /**\n   * @private\n   * @type {Object<string, module:ol/style/Atlas~AtlasInfo>}\n   */\n  this.entries_ = {};\n\n  /**\n   * @private\n   * @type {CanvasRenderingContext2D}\n   */\n  this.context_ = createCanvasContext2D(size, size);\n\n  /**\n   * @private\n   * @type {HTMLCanvasElement}\n   */\n  this.canvas_ = this.context_.canvas;\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The atlas info.\n */\nAtlas.prototype.get = function get (id) {\n  return this.entries_[id] || null;\n};\n\n/**\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry.\n */\nAtlas.prototype.add = function add (id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  for (var i = 0, ii = this.emptyBlocks_.length; i < ii; ++i) {\n    var block = this$1.emptyBlocks_[i];\n    if (block.width >= width + this$1.space_ &&\n        block.height >= height + this$1.space_) {\n      // we found a block that is big enough for our entry\n      var entry = {\n        offsetX: block.x + this$1.space_,\n        offsetY: block.y + this$1.space_,\n        image: this$1.canvas_\n      };\n      this$1.entries_[id] = entry;\n\n      // render the image on the atlas image\n      renderCallback.call(opt_this, this$1.context_,\n        block.x + this$1.space_, block.y + this$1.space_);\n\n      // split the block after the insertion, either horizontally or vertically\n      this$1.split_(i, block, width + this$1.space_, height + this$1.space_);\n\n      return entry;\n    }\n  }\n\n  // there is no space for the new entry in this atlas\n  return null;\n};\n\n/**\n * @private\n * @param {number} index The index of the block.\n * @param {module:ol/style/Atlas~AtlasBlock} block The block to split.\n * @param {number} width The width of the entry to insert.\n * @param {number} height The height of the entry to insert.\n */\nAtlas.prototype.split_ = function split_ (index, block, width, height) {\n  var deltaWidth = block.width - width;\n  var deltaHeight = block.height - height;\n\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock1;\n  /** @type {module:ol/style/Atlas~AtlasBlock} */\n  var newBlock2;\n\n  if (deltaWidth > deltaHeight) {\n    // split vertically\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: block.height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  } else {\n    // split horizontally\n    // block right of the inserted entry\n    newBlock1 = {\n      x: block.x + width,\n      y: block.y,\n      width: block.width - width,\n      height: height\n    };\n\n    // block below the inserted entry\n    newBlock2 = {\n      x: block.x,\n      y: block.y + height,\n      width: block.width,\n      height: block.height - height\n    };\n    this.updateBlocks_(index, newBlock1, newBlock2);\n  }\n};\n\n/**\n * Remove the old block and insert new blocks at the same array position.\n * The new blocks are inserted at the same position, so that splitted\n * blocks (that are potentially smaller) are filled first.\n * @private\n * @param {number} index The index of the block to remove.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock1 The 1st block to add.\n * @param {module:ol/style/Atlas~AtlasBlock} newBlock2 The 2nd block to add.\n */\nAtlas.prototype.updateBlocks_ = function updateBlocks_ (index, newBlock1, newBlock2) {\n  var args = [index, 1];\n  if (newBlock1.width > 0 && newBlock1.height > 0) {\n    args.push(newBlock1);\n  }\n  if (newBlock2.width > 0 && newBlock2.height > 0) {\n    args.push(newBlock2);\n  }\n  this.emptyBlocks_.splice.apply(this.emptyBlocks_, args);\n};\n\nexport default Atlas;\n\n//# sourceMappingURL=Atlas.js.map","/**\n * @module ol/style/AtlasManager\n */\nimport {MAX_TEXTURE_SIZE as WEBGL_MAX_TEXTURE_SIZE} from '../webgl.js';\nimport {VOID} from '../functions.js';\nimport Atlas from '../style/Atlas.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [initialSize=256] The size in pixels of the first atlas image.\n * @property {number} [maxSize] The maximum size in pixels of atlas images. Default is\n * `webgl/MAX_TEXTURE_SIZE` or 2048 if WebGL is not supported.\n * @property {number} [space=1] The space in pixels between images.\n */\n\n\n/**\n * Provides information for an image inside an atlas manager.\n * `offsetX` and `offsetY` is the position of the image inside\n * the atlas image `image` and the position of the hit-detection image\n * inside the hit-detection atlas image `hitImage`.\n * @typedef {Object} AtlasManagerInfo\n * @property {number} offsetX\n * @property {number} offsetY\n * @property {HTMLCanvasElement} image\n * @property {HTMLCanvasElement} hitImage\n */\n\n\n/**\n * The size in pixels of the first atlas image.\n * @type {number}\n */\nvar INITIAL_ATLAS_SIZE = 256;\n\n/**\n * The maximum size in pixels of atlas images.\n * @type {number}\n */\nvar MAX_ATLAS_SIZE = -1;\n\n\n/**\n * @classdesc\n * Manages the creation of image atlases.\n *\n * Images added to this manager will be inserted into an atlas, which\n * will be used for rendering.\n * The `size` given in the constructor is the size for the first\n * atlas. After that, when new atlases are created, they will have\n * twice the size as the latest atlas (until `maxSize` is reached).\n *\n * If an application uses many images or very large images, it is recommended\n * to set a higher `size` value to avoid the creation of too many atlases.\n * @api\n */\nvar AtlasManager = function AtlasManager(opt_options) {\n\n  var options = opt_options || {};\n\n  /**\n   * The size in pixels of the latest atlas image.\n   * @private\n   * @type {number}\n   */\n  this.currentSize_ = options.initialSize !== undefined ?\n    options.initialSize : INITIAL_ATLAS_SIZE;\n\n  /**\n   * The maximum size in pixels of atlas images.\n   * @private\n   * @type {number}\n   */\n  this.maxSize_ = options.maxSize !== undefined ?\n    options.maxSize : MAX_ATLAS_SIZE != -1 ?\n      MAX_ATLAS_SIZE : WEBGL_MAX_TEXTURE_SIZE !== undefined ?\n        WEBGL_MAX_TEXTURE_SIZE : 2048;\n\n  /**\n   * The size in pixels between images.\n   * @private\n   * @type {number}\n   */\n  this.space_ = options.space !== undefined ? options.space : 1;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas>}\n   */\n  this.atlases_ = [new Atlas(this.currentSize_, this.space_)];\n\n  /**\n   * The size in pixels of the latest atlas image for hit-detection images.\n   * @private\n   * @type {number}\n   */\n  this.currentHitSize_ = this.currentSize_;\n\n  /**\n   * @private\n   * @type {Array<module:ol/style/Atlas>}\n   */\n  this.hitAtlases_ = [new Atlas(this.currentHitSize_, this.space_)];\n};\n\n/**\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlas manager.\n */\nAtlasManager.prototype.getInfo = function getInfo (id) {\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.getInfo_(this.atlases_, id);\n\n  if (!info) {\n    return null;\n  }\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.getInfo_(this.hitAtlases_, id));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {Array<module:ol/style/Atlas>} atlases The atlases to search.\n * @param {string} id The identifier of the entry to check.\n * @return {?module:ol/style/Atlas~AtlasInfo} The position and atlas image for the entry,\n *  or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.getInfo_ = function getInfo_ (atlases, id) {\n  for (var i = 0, ii = atlases.length; i < ii; ++i) {\n    var atlas = atlases[i];\n    var info = atlas.get(id);\n    if (info) {\n      return info;\n    }\n  }\n  return null;\n};\n\n/**\n * @private\n * @param {module:ol/style/Atlas~AtlasInfo} info The info for the real image.\n * @param {module:ol/style/Atlas~AtlasInfo} hitInfo The info for the hit-detection\n *  image.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo} The position and atlas image for the\n *  entry, or `null` if the entry is not part of the atlases.\n */\nAtlasManager.prototype.mergeInfos_ = function mergeInfos_ (info, hitInfo) {\n  return (\n    /** @type {module:ol/style/AtlasManager~AtlasManagerInfo} */ ({\n      offsetX: info.offsetX,\n      offsetY: info.offsetY,\n      image: info.image,\n      hitImage: hitInfo.image\n    })\n  );\n};\n\n/**\n * Add an image to the atlas manager.\n *\n * If an entry for the given id already exists, the entry will\n * be overridden (but the space on the atlas graphic will not be freed).\n *\n * If `renderHitCallback` is provided, the image (or the hit-detection version\n * of the image) will be rendered into a separate hit-detection atlas image.\n *\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {function(CanvasRenderingContext2D, number, number)=} opt_renderHitCallback Called to render a hit-detection image onto a hit\n *  detection atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/AtlasManager~AtlasManagerInfo}The position and atlas image for the\n *  entry, or `null` if the image is too big.\n */\nAtlasManager.prototype.add = function add (id, width, height, renderCallback, opt_renderHitCallback, opt_this) {\n  if (width + this.space_ > this.maxSize_ ||\n      height + this.space_ > this.maxSize_) {\n    return null;\n  }\n\n  /** @type {?module:ol/style/Atlas~AtlasInfo} */\n  var info = this.add_(false, id, width, height, renderCallback, opt_this);\n  if (!info) {\n    return null;\n  }\n\n  // even if no hit-detection entry is requested, we insert a fake entry into\n  // the hit-detection atlas, to make sure that the offset is the same for\n  // the original image and the hit-detection image.\n  var renderHitCallback = opt_renderHitCallback !== undefined ?\n    opt_renderHitCallback : VOID;\n\n  var hitInfo = /** @type {module:ol/style/Atlas~AtlasInfo} */ (this.add_(true,\n    id, width, height, renderHitCallback, opt_this));\n\n  return this.mergeInfos_(info, hitInfo);\n};\n\n/**\n * @private\n * @param {boolean} isHitAtlas If the hit-detection atlases are used.\n * @param {string} id The identifier of the entry to add.\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {function(CanvasRenderingContext2D, number, number)} renderCallback\n *  Called to render the new image onto an atlas image.\n * @param {Object=} opt_this Value to use as `this` when executing\n *  `renderCallback` and `renderHitCallback`.\n * @return {?module:ol/style/Atlas~AtlasInfo}The position and atlas image for the entry,\n *  or `null` if the image is too big.\n */\nAtlasManager.prototype.add_ = function add_ (isHitAtlas, id, width, height, renderCallback, opt_this) {\n    var this$1 = this;\n\n  var atlases = (isHitAtlas) ? this.hitAtlases_ : this.atlases_;\n  var atlas, info, i, ii;\n  for (i = 0, ii = atlases.length; i < ii; ++i) {\n    atlas = atlases[i];\n    info = atlas.add(id, width, height, renderCallback, opt_this);\n    if (info) {\n      return info;\n    } else if (!info && i === ii - 1) {\n      // the entry could not be added to one of the existing atlases,\n      // create a new atlas that is twice as big and try to add to this one.\n      var size = (void 0);\n      if (isHitAtlas) {\n        size = Math.min(this$1.currentHitSize_ * 2, this$1.maxSize_);\n        this$1.currentHitSize_ = size;\n      } else {\n        size = Math.min(this$1.currentSize_ * 2, this$1.maxSize_);\n        this$1.currentSize_ = size;\n      }\n      atlas = new Atlas(size, this$1.space_);\n      atlases.push(atlas);\n      // run the loop another time\n      ++ii;\n    }\n  }\n  return null;\n};\n\nexport default AtlasManager;\n\n//# sourceMappingURL=AtlasManager.js.map","/**\n * @module ol/render/webgl/TextReplay\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {CANVAS_LINE_DASH} from '../../has.js';\nimport {TEXT_ALIGN} from '../replay.js';\nimport {DEFAULT_FILLSTYLE, DEFAULT_FONT, DEFAULT_LINECAP, DEFAULT_LINEDASH,\n  DEFAULT_LINEDASHOFFSET, DEFAULT_LINEJOIN, DEFAULT_LINEWIDTH, DEFAULT_MITERLIMIT,\n  DEFAULT_STROKESTYLE, DEFAULT_TEXTALIGN, DEFAULT_TEXTBASELINE} from '../webgl.js';\nimport WebGLTextureReplay from '../webgl/TextureReplay.js';\nimport AtlasManager from '../../style/AtlasManager.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @typedef {Object} GlyphAtlas\n * @property {module:ol/style/AtlasManager} atlas\n * @property {Object<string, number>} width\n * @property {number} height\n */\n\n\nvar WebGLTextReplay = (function (WebGLTextureReplay) {\n  function WebGLTextReplay(tolerance, maxExtent) {\n    WebGLTextureReplay.call(this, tolerance, maxExtent);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.images_ = [];\n\n    /**\n     * @private\n     * @type {Array<WebGLTexture>}\n     */\n    this.textures_ = [];\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.measureCanvas_ = createCanvasContext2D(0, 0).canvas;\n\n    /**\n     * @private\n     * @type {{strokeColor: (module:ol/colorlike~ColorLike|null),\n     *         lineCap: (string|undefined),\n     *         lineDash: Array<number>,\n     *         lineDashOffset: (number|undefined),\n     *         lineJoin: (string|undefined),\n     *         lineWidth: number,\n     *         miterLimit: (number|undefined),\n     *         fillColor: (module:ol/colorlike~ColorLike|null),\n     *         font: (string|undefined),\n     *         scale: (number|undefined)}}\n     */\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textAlign_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.textBaseline_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.offsetY_ = undefined;\n\n    /**\n     * @private\n     * @type {Object<string, module:ol/render/webgl/TextReplay~GlyphAtlas>}\n     */\n    this.atlases_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/TextReplay~GlyphAtlas|undefined}\n     */\n    this.currAtlas_ = undefined;\n\n    this.scale = 1;\n\n    this.opacity = 1;\n\n  }\n\n  if ( WebGLTextureReplay ) WebGLTextReplay.__proto__ = WebGLTextureReplay;\n  WebGLTextReplay.prototype = Object.create( WebGLTextureReplay && WebGLTextureReplay.prototype );\n  WebGLTextReplay.prototype.constructor = WebGLTextReplay;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.drawText = function drawText (geometry, feature) {\n    var this$1 = this;\n\n    if (this.text_) {\n      var flatCoordinates = null;\n      var offset = 0;\n      var end = 2;\n      var stride = 2;\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          stride = geometry.getStride();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {module:ol/geom/Circle} */ (geometry).getCenter();\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/LineString} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {module:ol/geom/MultiLineString} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/Polygon} */ (geometry).getFlatInteriorPoint();\n          break;\n        case GeometryType.MULTI_POLYGON:\n          flatCoordinates = /** @type {module:ol/geom/MultiPolygon} */ (geometry).getFlatInteriorPoints();\n          end = flatCoordinates.length;\n          break;\n        default:\n      }\n      this.startIndices.push(this.indices.length);\n      this.startIndicesFeature.push(feature);\n\n      var glyphAtlas = this.currAtlas_;\n      var lines = this.text_.split('\\n');\n      var textSize = this.getTextSize_(lines);\n      var i, ii, j, jj, currX, currY, charArr, charInfo;\n      var anchorX = Math.round(textSize[0] * this.textAlign_ - this.offsetX_);\n      var anchorY = Math.round(textSize[1] * this.textBaseline_ - this.offsetY_);\n      var lineWidth = (this.state_.lineWidth / 2) * this.state_.scale;\n\n      for (i = 0, ii = lines.length; i < ii; ++i) {\n        currX = 0;\n        currY = glyphAtlas.height * i;\n        charArr = lines[i].split('');\n\n        for (j = 0, jj = charArr.length; j < jj; ++j) {\n          charInfo = glyphAtlas.atlas.getInfo(charArr[j]);\n\n          if (charInfo) {\n            var image = charInfo.image;\n\n            this$1.anchorX = anchorX - currX;\n            this$1.anchorY = anchorY - currY;\n            this$1.originX = j === 0 ? charInfo.offsetX - lineWidth : charInfo.offsetX;\n            this$1.originY = charInfo.offsetY;\n            this$1.height = glyphAtlas.height;\n            this$1.width = j === 0 || j === charArr.length - 1 ?\n              glyphAtlas.width[charArr[j]] + lineWidth : glyphAtlas.width[charArr[j]];\n            this$1.imageHeight = image.height;\n            this$1.imageWidth = image.width;\n\n            if (this$1.images_.length === 0) {\n              this$1.images_.push(image);\n            } else {\n              var currentImage = this$1.images_[this$1.images_.length - 1];\n              if (getUid(currentImage) != getUid(image)) {\n                this$1.groupIndices.push(this$1.indices.length);\n                this$1.images_.push(image);\n              }\n            }\n\n            this$1.drawText_(flatCoordinates, offset, end, stride);\n          }\n          currX += this$1.width;\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {Array<string>} lines Label to draw split to lines.\n   * @return {Array<number>} Size of the label in pixels.\n   */\n  WebGLTextReplay.prototype.getTextSize_ = function getTextSize_ (lines) {\n    var self = this;\n    var glyphAtlas = this.currAtlas_;\n    var textHeight = lines.length * glyphAtlas.height;\n    //Split every line to an array of chars, sum up their width, and select the longest.\n    var textWidth = lines.map(function(str) {\n      var sum = 0;\n      for (var i = 0, ii = str.length; i < ii; ++i) {\n        var curr = str[i];\n        if (!glyphAtlas.width[curr]) {\n          self.addCharToAtlas_(curr);\n        }\n        sum += glyphAtlas.width[curr] ? glyphAtlas.width[curr] : 0;\n      }\n      return sum;\n    }).reduce(function(max, curr) {\n      return Math.max(max, curr);\n    });\n\n    return [textWidth, textHeight];\n  };\n\n  /**\n   * @private\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   */\n  WebGLTextReplay.prototype.drawText_ = function drawText_ (flatCoordinates, offset, end, stride) {\n    var this$1 = this;\n\n    for (var i = offset, ii = end; i < ii; i += stride) {\n      this$1.drawCoordinates(flatCoordinates, offset, end, stride);\n    }\n  };\n\n  /**\n   * @private\n   * @param {string} char Character.\n   */\n  WebGLTextReplay.prototype.addCharToAtlas_ = function addCharToAtlas_ (char) {\n    if (char.length === 1) {\n      var glyphAtlas = this.currAtlas_;\n      var state = this.state_;\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var width = Math.ceil(mCtx.measureText(char).width * state.scale);\n\n      var info = glyphAtlas.atlas.add(char, width, glyphAtlas.height,\n        function(ctx, x, y) {\n          //Parameterize the canvas\n          ctx.font = /** @type {string} */ (state.font);\n          ctx.fillStyle = state.fillColor;\n          ctx.strokeStyle = state.strokeColor;\n          ctx.lineWidth = state.lineWidth;\n          ctx.lineCap = /*** @type {string} */ (state.lineCap);\n          ctx.lineJoin = /** @type {string} */ (state.lineJoin);\n          ctx.miterLimit = /** @type {number} */ (state.miterLimit);\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          if (CANVAS_LINE_DASH && state.lineDash) {\n            //FIXME: use pixelRatio\n            ctx.setLineDash(state.lineDash);\n            ctx.lineDashOffset = /** @type {number} */ (state.lineDashOffset);\n          }\n          if (state.scale !== 1) {\n            //FIXME: use pixelRatio\n            ctx.setTransform(/** @type {number} */ (state.scale), 0, 0,\n              /** @type {number} */ (state.scale), 0, 0);\n          }\n\n          //Draw the character on the canvas\n          if (state.strokeColor) {\n            ctx.strokeText(char, x, y);\n          }\n          if (state.fillColor) {\n            ctx.fillText(char, x, y);\n          }\n        });\n\n      if (info) {\n        glyphAtlas.width[char] = width;\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.finish = function finish (context) {\n    var gl = context.getGL();\n\n    this.groupIndices.push(this.indices.length);\n    this.hitDetectionGroupIndices = this.groupIndices;\n\n    // create, bind, and populate the vertices buffer\n    this.verticesBuffer = new WebGLBuffer(this.vertices);\n\n    // create, bind, and populate the indices buffer\n    this.indicesBuffer = new WebGLBuffer(this.indices);\n\n    // create textures\n    /** @type {Object<string, WebGLTexture>} */\n    var texturePerImage = {};\n\n    this.createTextures(this.textures_, this.images_, texturePerImage, gl);\n\n    this.state_ = {\n      strokeColor: null,\n      lineCap: undefined,\n      lineDash: null,\n      lineDashOffset: undefined,\n      lineJoin: undefined,\n      lineWidth: 0,\n      miterLimit: undefined,\n      fillColor: null,\n      font: undefined,\n      scale: undefined\n    };\n    this.text_ = '';\n    this.textAlign_ = undefined;\n    this.textBaseline_ = undefined;\n    this.offsetX_ = undefined;\n    this.offsetY_ = undefined;\n    this.images_ = null;\n    this.atlases_ = {};\n    this.currAtlas_ = undefined;\n    WebGLTextureReplay.prototype.finish.call(this, context);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.setTextStyle = function setTextStyle (textStyle) {\n    var state = this.state_;\n    var textFillStyle = textStyle.getFill();\n    var textStrokeStyle = textStyle.getStroke();\n    if (!textStyle || !textStyle.getText() || (!textFillStyle && !textStrokeStyle)) {\n      this.text_ = '';\n    } else {\n      if (!textFillStyle) {\n        state.fillColor = null;\n      } else {\n        var textFillStyleColor = textFillStyle.getColor();\n        state.fillColor = asColorLike(textFillStyleColor ?\n          textFillStyleColor : DEFAULT_FILLSTYLE);\n      }\n      if (!textStrokeStyle) {\n        state.strokeColor = null;\n        state.lineWidth = 0;\n      } else {\n        var textStrokeStyleColor = textStrokeStyle.getColor();\n        state.strokeColor = asColorLike(textStrokeStyleColor ?\n          textStrokeStyleColor : DEFAULT_STROKESTYLE);\n        state.lineWidth = textStrokeStyle.getWidth() || DEFAULT_LINEWIDTH;\n        state.lineCap = textStrokeStyle.getLineCap() || DEFAULT_LINECAP;\n        state.lineDashOffset = textStrokeStyle.getLineDashOffset() || DEFAULT_LINEDASHOFFSET;\n        state.lineJoin = textStrokeStyle.getLineJoin() || DEFAULT_LINEJOIN;\n        state.miterLimit = textStrokeStyle.getMiterLimit() || DEFAULT_MITERLIMIT;\n        var lineDash = textStrokeStyle.getLineDash();\n        state.lineDash = lineDash ? lineDash.slice() : DEFAULT_LINEDASH;\n      }\n      state.font = textStyle.getFont() || DEFAULT_FONT;\n      state.scale = textStyle.getScale() || 1;\n      this.text_ = /** @type {string} */ (textStyle.getText());\n      var textAlign = TEXT_ALIGN[textStyle.getTextAlign()];\n      var textBaseline = TEXT_ALIGN[textStyle.getTextBaseline()];\n      this.textAlign_ = textAlign === undefined ?\n        DEFAULT_TEXTALIGN : textAlign;\n      this.textBaseline_ = textBaseline === undefined ?\n        DEFAULT_TEXTBASELINE : textBaseline;\n      this.offsetX_ = textStyle.getOffsetX() || 0;\n      this.offsetY_ = textStyle.getOffsetY() || 0;\n      this.rotateWithView = !!textStyle.getRotateWithView();\n      this.rotation = textStyle.getRotation() || 0;\n\n      this.currAtlas_ = this.getAtlas_(state);\n    }\n  };\n\n  /**\n   * @private\n   * @param {Object} state Font attributes.\n   * @return {module:ol/render/webgl/TextReplay~GlyphAtlas} Glyph atlas.\n   */\n  WebGLTextReplay.prototype.getAtlas_ = function getAtlas_ (state) {\n    var params = [];\n    for (var i in state) {\n      if (state[i] || state[i] === 0) {\n        if (Array.isArray(state[i])) {\n          params = params.concat(state[i]);\n        } else {\n          params.push(state[i]);\n        }\n      }\n    }\n    var hash = this.calculateHash_(params);\n    if (!this.atlases_[hash]) {\n      var mCtx = this.measureCanvas_.getContext('2d');\n      mCtx.font = state.font;\n      var height = Math.ceil((mCtx.measureText('M').width * 1.5 +\n          state.lineWidth / 2) * state.scale);\n\n      this.atlases_[hash] = {\n        atlas: new AtlasManager({\n          space: state.lineWidth + 1\n        }),\n        width: {},\n        height: height\n      };\n    }\n    return this.atlases_[hash];\n  };\n\n  /**\n   * @private\n   * @param {Array<string|number>} params Array of parameters.\n   * @return {string} Hash string.\n   */\n  WebGLTextReplay.prototype.calculateHash_ = function calculateHash_ (params) {\n    //TODO: Create a more performant, reliable, general hash function.\n    var hash = '';\n    for (var i = 0, ii = params.length; i < ii; ++i) {\n      hash += params[i];\n    }\n    return hash;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getTextures = function getTextures (opt_all) {\n    return this.textures_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTextReplay.prototype.getHitDetectionTextures = function getHitDetectionTextures () {\n    return this.textures_;\n  };\n\n  return WebGLTextReplay;\n}(WebGLTextureReplay));\n\n\nexport default WebGLTextReplay;\n\n//# sourceMappingURL=TextReplay.js.map","/**\n * @module ol/render/webgl/ReplayGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {buffer, createOrUpdateFromCoordinate} from '../../extent.js';\nimport {isEmpty} from '../../obj.js';\nimport {ORDER} from '../replay.js';\nimport ReplayGroup from '../ReplayGroup.js';\nimport WebGLCircleReplay from '../webgl/CircleReplay.js';\nimport WebGLImageReplay from '../webgl/ImageReplay.js';\nimport WebGLLineStringReplay from '../webgl/LineStringReplay.js';\nimport WebGLPolygonReplay from '../webgl/PolygonReplay.js';\nimport WebGLTextReplay from '../webgl/TextReplay.js';\n\n/**\n * @type {Array<number>}\n */\nvar HIT_DETECTION_SIZE = [1, 1];\n\n/**\n * @type {Object<module:ol/render/ReplayType,\n *                function(new: module:ol/render/webgl/Replay, number,\n *                module:ol/extent~Extent)>}\n */\nvar BATCH_CONSTRUCTORS = {\n  'Circle': WebGLCircleReplay,\n  'Image': WebGLImageReplay,\n  'LineString': WebGLLineStringReplay,\n  'Polygon': WebGLPolygonReplay,\n  'Text': WebGLTextReplay\n};\n\n\nvar WebGLReplayGroup = (function (ReplayGroup) {\n  function WebGLReplayGroup(tolerance, maxExtent, opt_renderBuffer) {\n    ReplayGroup.call(this);\n\n    /**\n     * @type {module:ol/extent~Extent}\n     * @private\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string,\n     *        Object<module:ol/render/ReplayType, module:ol/render/webgl/Replay>>}\n     */\n    this.replaysByZIndex_ = {};\n\n  }\n\n  if ( ReplayGroup ) WebGLReplayGroup.__proto__ = ReplayGroup;\n  WebGLReplayGroup.prototype = Object.create( ReplayGroup && ReplayGroup.prototype );\n  WebGLReplayGroup.prototype.constructor = WebGLReplayGroup;\n\n  /**\n   * @param {module:ol/style/Style} style Style.\n   * @param {boolean} group Group with previous replay.\n   */\n  WebGLReplayGroup.prototype.addDeclutter = function addDeclutter (style, group) {};\n\n  /**\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @return {function()} Delete resources function.\n   */\n  WebGLReplayGroup.prototype.getDeleteResourcesFunction = function getDeleteResourcesFunction (context) {\n    var this$1 = this;\n\n    var functions = [];\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        functions.push(\n          replays[replayKey].getDeleteResourcesFunction(context));\n      }\n    }\n    return function() {\n      var arguments$1 = arguments;\n      var this$1 = this;\n\n      var length = functions.length;\n      var result;\n      for (var i = 0; i < length; i++) {\n        result = functions[i].apply(this$1, arguments$1);\n      }\n      return result;\n    };\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLReplayGroup.prototype.finish = function finish (context) {\n    var this$1 = this;\n\n    var zKey;\n    for (zKey in this$1.replaysByZIndex_) {\n      var replays = this$1.replaysByZIndex_[zKey];\n      for (var replayKey in replays) {\n        replays[replayKey].finish(context);\n      }\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.getReplay = function getReplay (zIndex, replayType) {\n    var zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    var replays = this.replaysByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.replaysByZIndex_[zIndexKey] = replays;\n    }\n    var replay = replays[replayType];\n    if (replay === undefined) {\n      /**\n       * @type {Function}\n       */\n      var Constructor = BATCH_CONSTRUCTORS[replayType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_);\n      replays[replayType] = replay;\n    }\n    return replay;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLReplayGroup.prototype.isEmpty = function isEmpty$1 () {\n    return isEmpty(this.replaysByZIndex_);\n  };\n\n  /**\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   */\n  WebGLReplayGroup.prototype.replay = function replay (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    var i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = 0, jj = ORDER.length; j < jj; ++j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          replay.replay(context,\n            center, resolution, rotation, size, pixelRatio,\n            opacity, skippedFeaturesHash,\n            undefined, false);\n        }\n      }\n    }\n  };\n\n  /**\n   * @private\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} featureCallback Feature callback.\n   * @param {boolean} oneByOne Draw features one-by-one for the hit-detecion.\n   * @param {module:ol/extent~Extent=} opt_hitExtent Hit extent: Only features intersecting\n   *  this extent are checked.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.replayHitDetection_ = function replayHitDetection_ (\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    featureCallback,\n    oneByOne,\n    opt_hitExtent\n  ) {\n    var this$1 = this;\n\n    /** @type {Array<number>} */\n    var zs = Object.keys(this.replaysByZIndex_).map(Number);\n    zs.sort(function(a, b) {\n      return b - a;\n    });\n\n    var i, ii, j, replays, replay, result;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      replays = this$1.replaysByZIndex_[zs[i].toString()];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        replay = replays[ORDER[j]];\n        if (replay !== undefined) {\n          result = replay.replay(context,\n            center, resolution, rotation, size, pixelRatio, opacity,\n            skippedFeaturesHash, featureCallback, oneByOne, opt_hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @param {function((module:ol/Feature|module:ol/render/Feature)): T|undefined} callback Feature callback.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  WebGLReplayGroup.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash,\n    callback\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n\n    /**\n     * @type {module:ol/extent~Extent}\n     */\n    var hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      // build an extent around the coordinate, so that only features that\n      // intersect this extent are checked\n      hitExtent = buffer(createOrUpdateFromCoordinate(coordinate), resolution * this.renderBuffer_);\n    }\n\n    return this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n        if (imageData[3] > 0) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      }, true, hitExtent);\n  };\n\n  /**\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {module:ol/webgl/Context} context Context.\n   * @param {module:ol/coordinate~Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} opacity Global opacity.\n   * @param {Object<string, boolean>} skippedFeaturesHash Ids of features to skip.\n   * @return {boolean} Is there a feature at the given coordinate?\n   */\n  WebGLReplayGroup.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (\n    coordinate,\n    context,\n    center,\n    resolution,\n    rotation,\n    size,\n    pixelRatio,\n    opacity,\n    skippedFeaturesHash\n  ) {\n    var gl = context.getGL();\n    gl.bindFramebuffer(\n      gl.FRAMEBUFFER, context.getHitDetectionFramebuffer());\n\n    var hasFeature = this.replayHitDetection_(context,\n      coordinate, resolution, rotation, HIT_DETECTION_SIZE,\n      pixelRatio, opacity, skippedFeaturesHash,\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {boolean} Is there a feature?\n       */\n      function(feature) {\n        var imageData = new Uint8Array(4);\n        gl.readPixels(0, 0, 1, 1, gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n        return imageData[3] > 0;\n      }, false);\n\n    return hasFeature !== undefined;\n  };\n\n  return WebGLReplayGroup;\n}(ReplayGroup));\n\n\nexport default WebGLReplayGroup;\n\n//# sourceMappingURL=ReplayGroup.js.map","/**\n * @module ol/render/webgl/Immediate\n */\n\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport ReplayType from '../ReplayType.js';\nimport VectorContext from '../VectorContext.js';\nimport WebGLReplayGroup from '../webgl/ReplayGroup.js';\n\nvar WebGLImmediateRenderer = (function (VectorContext) {\n  function WebGLImmediateRenderer(context, center, resolution, rotation, size, extent, pixelRatio) {\n    VectorContext.call(this);\n\n    /**\n     * @private\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     */\n    this.center_ = center;\n\n    /**\n     * @private\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     */\n    this.rotation_ = rotation;\n\n    /**\n     * @private\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {module:ol/style/Image}\n     */\n    this.imageStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Fill}\n     */\n    this.fillStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Stroke}\n     */\n    this.strokeStyle_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/style/Text}\n     */\n    this.textStyle_ = null;\n\n  }\n\n  if ( VectorContext ) WebGLImmediateRenderer.__proto__ = VectorContext;\n  WebGLImmediateRenderer.prototype = Object.create( VectorContext && VectorContext.prototype );\n  WebGLImmediateRenderer.prototype.constructor = WebGLImmediateRenderer;\n\n  /**\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry Geometry.\n   * @private\n   */\n  WebGLImmediateRenderer.prototype.drawText_ = function drawText_ (replayGroup, geometry) {\n    var context = this.context_;\n    var replay = /** @type {module:ol/render/webgl/TextReplay} */ (\n      replayGroup.getReplay(0, ReplayType.TEXT));\n    replay.setTextStyle(this.textStyle_);\n    replay.drawText(geometry, null);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n  };\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {module:ol/style/Style} style The rendering style.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.setStyle = function setStyle (style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  };\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link ol/render/webgl/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {module:ol/geom/Geometry|module:ol/render/Feature} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawGeometry = function drawGeometry (geometry) {\n    var type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {module:ol/geom/Point} */ (geometry), null);\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {module:ol/geom/LineString} */ (geometry), null);\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {module:ol/geom/Polygon} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {module:ol/geom/MultiPoint} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {module:ol/geom/MultiLineString} */ (geometry), null);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {module:ol/geom/MultiPolygon} */ (geometry), null);\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {module:ol/geom/GeometryCollection} */ (geometry), null);\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {module:ol/geom/Circle} */ (geometry), null);\n        break;\n      default:\n        // pass\n    }\n  };\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  WebGLImmediateRenderer.prototype.drawFeature = function drawFeature (feature, style) {\n    var geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawGeometryCollection = function drawGeometryCollection (geometry, data) {\n    var this$1 = this;\n\n    var geometries = geometry.getGeometriesArray();\n    var i, ii;\n    for (i = 0, ii = geometries.length; i < ii; ++i) {\n      this$1.drawGeometry(geometries[i]);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPoint = function drawPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawPoint(geometry, data);\n    replay.finish(context);\n    // default colors\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPoint = function drawMultiPoint (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/ImageReplay} */ (\n      replayGroup.getReplay(0, ReplayType.IMAGE));\n    replay.setImageStyle(this.imageStyle_);\n    replay.drawMultiPoint(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawLineString = function drawLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiLineString = function drawMultiLineString (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/LineStringReplay} */ (\n      replayGroup.getReplay(0, ReplayType.LINE_STRING));\n    replay.setFillStrokeStyle(null, this.strokeStyle_);\n    replay.drawMultiLineString(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawPolygon = function drawPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawMultiPolygon = function drawMultiPolygon (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/PolygonReplay} */ (\n      replayGroup.getReplay(0, ReplayType.POLYGON));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawMultiPolygon(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.drawCircle = function drawCircle (geometry, data) {\n    var context = this.context_;\n    var replayGroup = new WebGLReplayGroup(1, this.extent_);\n    var replay = /** @type {module:ol/render/webgl/CircleReplay} */ (\n      replayGroup.getReplay(0, ReplayType.CIRCLE));\n    replay.setFillStrokeStyle(this.fillStyle_, this.strokeStyle_);\n    replay.drawCircle(geometry, data);\n    replay.finish(context);\n    var opacity = 1;\n    var skippedFeatures = {};\n    var featureCallback;\n    var oneByOne = false;\n    replay.replay(this.context_, this.center_, this.resolution_, this.rotation_,\n      this.size_, this.pixelRatio_, opacity, skippedFeatures, featureCallback,\n      oneByOne);\n    replay.getDeleteResourcesFunction(context)();\n\n    if (this.textStyle_) {\n      this.drawText_(replayGroup, geometry);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setImageStyle = function setImageStyle (imageStyle) {\n    this.imageStyle_ = imageStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setFillStrokeStyle = function setFillStrokeStyle (fillStyle, strokeStyle) {\n    this.fillStyle_ = fillStyle;\n    this.strokeStyle_ = strokeStyle;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImmediateRenderer.prototype.setTextStyle = function setTextStyle (textStyle) {\n    this.textStyle_ = textStyle;\n  };\n\n  return WebGLImmediateRenderer;\n}(VectorContext));\n\n\nexport default WebGLImmediateRenderer;\n\n//# sourceMappingURL=Immediate.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform float u_opacity;\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  vec4 texColor = texture2D(u_texture, v_texCoord);\\n  gl_FragColor.rgb = texColor.rgb;\\n  gl_FragColor.a = texColor.a * u_opacity;\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform float f;uniform sampler2D g;void main(void){vec4 texColor=texture2D(g,a);gl_FragColor.rgb=texColor.rgb;gl_FragColor.a=texColor.a*f;}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\n\\nuniform mat4 u_texCoordMatrix;\\nuniform mat4 u_projectionMatrix;\\n\\nvoid main(void) {\\n  gl_Position = u_projectionMatrix * vec4(a_position, 0., 1.);\\n  v_texCoord = (u_texCoordMatrix * vec4(a_texCoord, 0., 1.)).st;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform mat4 d;uniform mat4 e;void main(void){gl_Position=e*vec4(b,0.,1.);a=(d*vec4(c,0.,1.)).st;}');\n\n//# sourceMappingURL=defaultmapshader.js.map","/**\n * @module ol/renderer/webgl/defaultmapshader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texCoordMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texCoordMatrix' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_projectionMatrix = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_projectionMatrix' : 'e');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_opacity = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_opacity' : 'f');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'g');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/Layer\n */\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport LayerRenderer from '../Layer.js';\nimport {fragment, vertex} from '../webgl/defaultmapshader.js';\nimport Locations from '../webgl/defaultmapshader/Locations.js';\nimport {create as createTransform} from '../../transform.js';\nimport {create, fromTransform} from '../../vec/mat4.js';\nimport {ARRAY_BUFFER, FRAMEBUFFER, FLOAT, TEXTURE_2D,\n  TRIANGLE_STRIP, COLOR_ATTACHMENT0} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\nimport {createEmptyTexture} from '../../webgl/Context.js';\n\nvar WebGLLayerRenderer = (function (LayerRenderer) {\n  function WebGLLayerRenderer(mapRenderer, layer) {\n\n    LayerRenderer.call(this, layer);\n\n    /**\n     * @protected\n     * @type {module:ol/renderer/webgl/Map}\n     */\n    this.mapRenderer = mapRenderer;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.arrayBuffer_ = new WebGLBuffer([\n      -1, -1, 0, 0,\n      1, -1, 1, 0,\n      -1, 1, 0, 1,\n      1, 1, 1, 1\n    ]);\n\n    /**\n     * @protected\n     * @type {WebGLTexture}\n     */\n    this.texture = null;\n\n    /**\n     * @protected\n     * @type {WebGLFramebuffer}\n     */\n    this.framebuffer = null;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.framebufferDimension = undefined;\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.texCoordMatrix = createTransform();\n\n    /**\n     * @protected\n     * @type {module:ol/transform~Transform}\n     */\n    this.projectionMatrix = createTransform();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.tmpMat4_ = create();\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/defaultmapshader/Locations}\n     */\n    this.defaultLocations_ = null;\n\n  }\n\n  if ( LayerRenderer ) WebGLLayerRenderer.__proto__ = LayerRenderer;\n  WebGLLayerRenderer.prototype = Object.create( LayerRenderer && LayerRenderer.prototype );\n  WebGLLayerRenderer.prototype.constructor = WebGLLayerRenderer;\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {number} framebufferDimension Framebuffer dimension.\n   * @protected\n   */\n  WebGLLayerRenderer.prototype.bindFramebuffer = function bindFramebuffer (frameState, framebufferDimension) {\n\n    var gl = this.mapRenderer.getGL();\n\n    if (this.framebufferDimension === undefined ||\n        this.framebufferDimension != framebufferDimension) {\n      /**\n       * @param {WebGLRenderingContext} gl GL.\n       * @param {WebGLFramebuffer} framebuffer Framebuffer.\n       * @param {WebGLTexture} texture Texture.\n       */\n      var postRenderFunction = function(gl, framebuffer, texture) {\n        if (!gl.isContextLost()) {\n          gl.deleteFramebuffer(framebuffer);\n          gl.deleteTexture(texture);\n        }\n      }.bind(null, gl, this.framebuffer, this.texture);\n\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n      );\n\n      var texture = createEmptyTexture(\n        gl, framebufferDimension, framebufferDimension);\n\n      var framebuffer = gl.createFramebuffer();\n      gl.bindFramebuffer(FRAMEBUFFER, framebuffer);\n      gl.framebufferTexture2D(FRAMEBUFFER,\n        COLOR_ATTACHMENT0, TEXTURE_2D, texture, 0);\n\n      this.texture = texture;\n      this.framebuffer = framebuffer;\n      this.framebufferDimension = framebufferDimension;\n\n    } else {\n      gl.bindFramebuffer(FRAMEBUFFER, this.framebuffer);\n    }\n\n  };\n\n  /**\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   */\n  WebGLLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n\n    this.dispatchComposeEvent_(RenderEventType.PRECOMPOSE, context, frameState);\n\n    context.bindBuffer(ARRAY_BUFFER, this.arrayBuffer_);\n\n    var gl = context.getGL();\n\n    var program = context.getProgram(fragment, vertex);\n\n    var locations;\n    if (!this.defaultLocations_) {\n      locations = new Locations(gl, program);\n      this.defaultLocations_ = locations;\n    } else {\n      locations = this.defaultLocations_;\n    }\n\n    if (context.useProgram(program)) {\n      gl.enableVertexAttribArray(locations.a_position);\n      gl.vertexAttribPointer(\n        locations.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(locations.a_texCoord);\n      gl.vertexAttribPointer(\n        locations.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(locations.u_texture, 0);\n    }\n\n    gl.uniformMatrix4fv(locations.u_texCoordMatrix, false,\n      fromTransform(this.tmpMat4_, this.getTexCoordMatrix()));\n    gl.uniformMatrix4fv(locations.u_projectionMatrix, false,\n      fromTransform(this.tmpMat4_, this.getProjectionMatrix()));\n    gl.uniform1f(locations.u_opacity, layerState.opacity);\n    gl.bindTexture(TEXTURE_2D, this.getTexture());\n    gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n\n    this.dispatchComposeEvent_(RenderEventType.POSTCOMPOSE, context, frameState);\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/webgl/Context} context WebGL context.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLLayerRenderer.prototype.dispatchComposeEvent_ = function dispatchComposeEvent_ (type, context, frameState) {\n    var layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      var viewState = frameState.viewState;\n      var resolution = viewState.resolution;\n      var pixelRatio = frameState.pixelRatio;\n      var extent = frameState.extent;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n      var size = frameState.size;\n\n      var render = new WebGLImmediateRenderer(\n        context, center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(\n        type, render, frameState, null, context);\n      layer.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getTexCoordMatrix = function getTexCoordMatrix () {\n    return this.texCoordMatrix;\n  };\n\n  /**\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLLayerRenderer.prototype.getTexture = function getTexture () {\n    return this.texture;\n  };\n\n  /**\n   * @return {!module:ol/transform~Transform} Matrix.\n   */\n  WebGLLayerRenderer.prototype.getProjectionMatrix = function getProjectionMatrix () {\n    return this.projectionMatrix;\n  };\n\n  /**\n   * Handle webglcontextlost.\n   */\n  WebGLLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    this.texture = null;\n    this.framebuffer = null;\n    this.framebufferDimension = undefined;\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @param {module:ol/layer/Layer~State} layerState Layer state.\n   * @param {module:ol/webgl/Context} context Context.\n   * @return {boolean} whether composeFrame should be called.\n   */\n  WebGLLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {};\n\n  /**\n   * @abstract\n   * @param {module:ol/pixel~Pixel} pixel Pixel.\n   * @param {module:ol/PluggableMap~FrameState} frameState FrameState.\n   * @param {function(this: S, module:ol/layer/Layer, (Uint8ClampedArray|Uint8Array)): T} callback Layer\n   *     callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  WebGLLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {};\n\n  return WebGLLayerRenderer;\n}(LayerRenderer));\n\n\nexport default WebGLLayerRenderer;\n\n//# sourceMappingURL=Layer.js.map","/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, VOID} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nvar WebGLImageLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLImageLayerRenderer(mapRenderer, imageLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLImageLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLImageLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLImageLayerRenderer.prototype.constructor = WebGLImageLayerRenderer;\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  WebGLImageLayerRenderer.prototype.createTexture_ = function createTexture_ (image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    var imageElement = image.getImage();\n    var gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    var layer = this.getLayer();\n    var source = layer.getSource();\n    var resolution = frameState.viewState.resolution;\n    var rotation = frameState.viewState.rotation;\n    var skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n\n    var gl = this.mapRenderer.getGL();\n\n    var pixelRatio = frameState.pixelRatio;\n    var viewState = frameState.viewState;\n    var viewCenter = viewState.center;\n    var viewResolution = viewState.resolution;\n    var viewRotation = viewState.rotation;\n\n    var image = this.image_;\n    var texture = this.texture;\n    var imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    var imageSource = imageLayer.getSource();\n\n    var hints = frameState.viewHints;\n\n    var renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      var projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        var sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      var image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        var loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            var postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      var canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      var texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  };\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.updateProjectionMatrix_ = function updateProjectionMatrix_ (\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    var canvasExtentWidth = canvasWidth * viewResolution;\n    var canvasExtentHeight = canvasHeight * viewResolution;\n\n    var projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLImageLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== VOID) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      var coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      var hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      var imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      var pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      var imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  };\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  WebGLImageLayerRenderer.prototype.getHitTransformationMatrix_ = function getHitTransformationMatrix_ (mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    var mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    var projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    var transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  };\n\n  return WebGLImageLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n\n//# sourceMappingURL=ImageLayer.js.map","/**\n * @module ol/renderer/webgl/Map\n */\n\nimport {stableSort} from '../../array.js';\nimport {CLASS_UNSELECTABLE} from '../../css.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {listen} from '../../events.js';\nimport {visibleAtResolution} from '../../layer/Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport WebGLImmediateRenderer from '../../render/webgl/Immediate.js';\nimport MapRenderer, {sortByZIndex} from '../Map.js';\nimport SourceState from '../../source/State.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport PriorityQueue from '../../structs/PriorityQueue.js';\nimport {BLEND, CLAMP_TO_EDGE, COLOR_BUFFER_BIT, CULL_FACE, DEPTH_TEST, FRAMEBUFFER,\n  getContext, LINEAR, ONE, ONE_MINUS_SRC_ALPHA, RGBA, SCISSOR_TEST, SRC_ALPHA,\n  STENCIL_TEST, TEXTURE0, TEXTURE_2D, TEXTURE_MAG_FILTER, TEXTURE_MIN_FILTER,\n  TEXTURE_WRAP_S, TEXTURE_WRAP_T, UNSIGNED_BYTE} from '../../webgl.js';\nimport WebGLContext from '../../webgl/Context.js';\nimport ContextEventType from '../../webgl/ContextEventType.js';\n\n\n/**\n * @typedef {Object} TextureCacheEntry\n * @property {number} magFilter\n * @property {number} minFilter\n * @property {WebGLTexture} texture\n */\n\n\n/**\n * Texture cache high water mark.\n * @type {number}\n */\nvar WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK = 1024;\n\n\n/**\n * @classdesc\n * WebGL map renderer.\n * @api\n */\nvar WebGLMapRenderer = (function (MapRenderer) {\n  function WebGLMapRenderer(map) {\n    MapRenderer.call(this, map);\n\n    var container = map.getViewport();\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = /** @type {HTMLCanvasElement} */\n      (document.createElement('canvas'));\n    this.canvas_.style.width = '100%';\n    this.canvas_.style.height = '100%';\n    this.canvas_.style.display = 'block';\n    this.canvas_.className = CLASS_UNSELECTABLE;\n    container.insertBefore(this.canvas_, container.childNodes[0] || null);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasWidth_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.clipTileCanvasHeight_ = 0;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.clipTileContext_ = createCanvasContext2D();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n\n    /**\n     * @private\n     * @type {WebGLRenderingContext}\n     */\n    this.gl_ = getContext(this.canvas_, {\n      antialias: true,\n      depth: true,\n      failIfMajorPerformanceCaveat: true,\n      preserveDrawingBuffer: false,\n      stencil: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Context}\n     */\n    this.context_ = new WebGLContext(this.canvas_, this.gl_);\n\n    listen(this.canvas_, ContextEventType.LOST,\n      this.handleWebGLContextLost, this);\n    listen(this.canvas_, ContextEventType.RESTORED,\n      this.handleWebGLContextRestored, this);\n\n    /**\n     * @private\n     * @type {module:ol/structs/LRUCache<module:ol/renderer/webgl/Map~TextureCacheEntry|null>}\n     */\n    this.textureCache_ = new LRUCache();\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.focus_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/PriorityQueue<Array>}\n     */\n    this.tileTextureQueue_ = new PriorityQueue(\n      /**\n       * @param {Array<*>} element Element.\n       * @return {number} Priority.\n       * @this {module:ol/renderer/webgl/Map}\n       */\n      (function(element) {\n        var tileCenter = /** @type {module:ol/coordinate~Coordinate} */ (element[1]);\n        var tileResolution = /** @type {number} */ (element[2]);\n        var deltaX = tileCenter[0] - this.focus_[0];\n        var deltaY = tileCenter[1] - this.focus_[1];\n        return 65536 * Math.log(tileResolution) +\n              Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution;\n      }).bind(this),\n      /**\n       * @param {Array<*>} element Element.\n       * @return {string} Key.\n       */\n      function(element) {\n        return (\n          /** @type {module:ol/Tile} */ (element[0]).getKey()\n        );\n      });\n\n\n    /**\n     * @param {module:ol/PluggableMap} map Map.\n     * @param {?module:ol/PluggableMap~FrameState} frameState Frame state.\n     * @return {boolean} false.\n     * @this {module:ol/renderer/webgl/Map}\n     */\n    this.loadNextTileTexture_ =\n        function(map, frameState) {\n          if (!this.tileTextureQueue_.isEmpty()) {\n            this.tileTextureQueue_.reprioritize();\n            var element = this.tileTextureQueue_.dequeue();\n            var tile = /** @type {module:ol/Tile} */ (element[0]);\n            var tileSize = /** @type {module:ol/size~Size} */ (element[3]);\n            var tileGutter = /** @type {number} */ (element[4]);\n            this.bindTileTexture(\n              tile, tileSize, tileGutter, LINEAR, LINEAR);\n          }\n          return false;\n        }.bind(this);\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    this.initializeGL_();\n  }\n\n  if ( MapRenderer ) WebGLMapRenderer.__proto__ = MapRenderer;\n  WebGLMapRenderer.prototype = Object.create( MapRenderer && MapRenderer.prototype );\n  WebGLMapRenderer.prototype.constructor = WebGLMapRenderer;\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @param {module:ol/size~Size} tileSize Tile size.\n   * @param {number} tileGutter Tile gutter.\n   * @param {number} magFilter Mag filter.\n   * @param {number} minFilter Min filter.\n   */\n  WebGLMapRenderer.prototype.bindTileTexture = function bindTileTexture (tile, tileSize, tileGutter, magFilter, minFilter) {\n    var gl = this.getGL();\n    var tileKey = tile.getKey();\n    if (this.textureCache_.containsKey(tileKey)) {\n      var textureCacheEntry = this.textureCache_.get(tileKey);\n      gl.bindTexture(TEXTURE_2D, textureCacheEntry.texture);\n      if (textureCacheEntry.magFilter != magFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n        textureCacheEntry.magFilter = magFilter;\n      }\n      if (textureCacheEntry.minFilter != minFilter) {\n        gl.texParameteri(\n          TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n        textureCacheEntry.minFilter = minFilter;\n      }\n    } else {\n      var texture = gl.createTexture();\n      gl.bindTexture(TEXTURE_2D, texture);\n      if (tileGutter > 0) {\n        var clipTileCanvas = this.clipTileContext_.canvas;\n        var clipTileContext = this.clipTileContext_;\n        if (this.clipTileCanvasWidth_ !== tileSize[0] ||\n            this.clipTileCanvasHeight_ !== tileSize[1]) {\n          clipTileCanvas.width = tileSize[0];\n          clipTileCanvas.height = tileSize[1];\n          this.clipTileCanvasWidth_ = tileSize[0];\n          this.clipTileCanvasHeight_ = tileSize[1];\n        } else {\n          clipTileContext.clearRect(0, 0, tileSize[0], tileSize[1]);\n        }\n        clipTileContext.drawImage(tile.getImage(), tileGutter, tileGutter,\n          tileSize[0], tileSize[1], 0, 0, tileSize[0], tileSize[1]);\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, clipTileCanvas);\n      } else {\n        gl.texImage2D(TEXTURE_2D, 0,\n          RGBA, RGBA,\n          UNSIGNED_BYTE, tile.getImage());\n      }\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MAG_FILTER, magFilter);\n      gl.texParameteri(\n        TEXTURE_2D, TEXTURE_MIN_FILTER, minFilter);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_S,\n        CLAMP_TO_EDGE);\n      gl.texParameteri(TEXTURE_2D, TEXTURE_WRAP_T,\n        CLAMP_TO_EDGE);\n      this.textureCache_.set(tileKey, {\n        texture: texture,\n        magFilter: magFilter,\n        minFilter: minFilter\n      });\n    }\n  };\n\n  /**\n   * @param {module:ol/render/EventType} type Event type.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   */\n  WebGLMapRenderer.prototype.dispatchRenderEvent = function dispatchRenderEvent (type, frameState) {\n    var map = this.getMap();\n    if (map.hasListener(type)) {\n      var context = this.context_;\n\n      var extent = frameState.extent;\n      var size = frameState.size;\n      var viewState = frameState.viewState;\n      var pixelRatio = frameState.pixelRatio;\n\n      var resolution = viewState.resolution;\n      var center = viewState.center;\n      var rotation = viewState.rotation;\n\n      var vectorContext = new WebGLImmediateRenderer(context,\n        center, resolution, rotation, size, extent, pixelRatio);\n      var composeEvent = new RenderEvent(type, vectorContext,\n        frameState, null, context);\n      map.dispatchEvent(composeEvent);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.disposeInternal = function disposeInternal () {\n    var gl = this.getGL();\n    if (!gl.isContextLost()) {\n      this.textureCache_.forEach(\n        /**\n         * @param {?module:ol/renderer/webgl/Map~TextureCacheEntry} textureCacheEntry\n         *     Texture cache entry.\n         */\n        function(textureCacheEntry) {\n          if (textureCacheEntry) {\n            gl.deleteTexture(textureCacheEntry.texture);\n          }\n        });\n    }\n    this.context_.dispose();\n    MapRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @param {module:ol/PluggableMap} map Map.\n   * @param {module:ol/PluggableMap~FrameState} frameState Frame state.\n   * @private\n   */\n  WebGLMapRenderer.prototype.expireCache_ = function expireCache_ (map, frameState) {\n    var this$1 = this;\n\n    var gl = this.getGL();\n    var textureCacheEntry;\n    while (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      textureCacheEntry = this$1.textureCache_.peekLast();\n      if (!textureCacheEntry) {\n        if (+this$1.textureCache_.peekLastKey() == frameState.index) {\n          break;\n        } else {\n          --this$1.textureCacheFrameMarkerCount_;\n        }\n      } else {\n        gl.deleteTexture(textureCacheEntry.texture);\n      }\n      this$1.textureCache_.pop();\n    }\n  };\n\n  /**\n   * @return {module:ol/webgl/Context} The context.\n   */\n  WebGLMapRenderer.prototype.getContext = function getContext () {\n    return this.context_;\n  };\n\n  /**\n   * @return {WebGLRenderingContext} GL.\n   */\n  WebGLMapRenderer.prototype.getGL = function getGL () {\n    return this.gl_;\n  };\n\n  /**\n   * @return {module:ol/structs/PriorityQueue<Array>} Tile texture queue.\n   */\n  WebGLMapRenderer.prototype.getTileTextureQueue = function getTileTextureQueue () {\n    return this.tileTextureQueue_;\n  };\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost (event) {\n    event.preventDefault();\n    this.textureCache_.clear();\n    this.textureCacheFrameMarkerCount_ = 0;\n\n    var renderers = this.getLayerRenderers();\n    for (var id in renderers) {\n      var renderer = /** @type {module:ol/renderer/webgl/Layer} */ (renderers[id]);\n      renderer.handleWebGLContextLost();\n    }\n  };\n\n  /**\n   * @protected\n   */\n  WebGLMapRenderer.prototype.handleWebGLContextRestored = function handleWebGLContextRestored () {\n    this.initializeGL_();\n    this.getMap().render();\n  };\n\n  /**\n   * @private\n   */\n  WebGLMapRenderer.prototype.initializeGL_ = function initializeGL_ () {\n    var gl = this.gl_;\n    gl.activeTexture(TEXTURE0);\n    gl.blendFuncSeparate(\n      SRC_ALPHA, ONE_MINUS_SRC_ALPHA,\n      ONE, ONE_MINUS_SRC_ALPHA);\n    gl.disable(CULL_FACE);\n    gl.disable(DEPTH_TEST);\n    gl.disable(SCISSOR_TEST);\n    gl.disable(STENCIL_TEST);\n  };\n\n  /**\n   * @param {module:ol/Tile} tile Tile.\n   * @return {boolean} Is tile texture loaded.\n   */\n  WebGLMapRenderer.prototype.isTileTextureLoaded = function isTileTextureLoaded (tile) {\n    return this.textureCache_.containsKey(tile.getKey());\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.renderFrame = function renderFrame (frameState) {\n    var this$1 = this;\n\n\n    var context = this.getContext();\n    var gl = this.getGL();\n\n    if (gl.isContextLost()) {\n      return false;\n    }\n\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.canvas_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return false;\n    }\n\n    this.focus_ = frameState.focus;\n\n    this.textureCache_.set((-frameState.index).toString(), null);\n    ++this.textureCacheFrameMarkerCount_;\n\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    /** @type {Array<module:ol/layer/Layer~State>} */\n    var layerStatesToDraw = [];\n    var layerStatesArray = frameState.layerStatesArray;\n    stableSort(layerStatesArray, sortByZIndex);\n\n    var viewResolution = frameState.viewState.resolution;\n    var i, ii, layerRenderer, layerState;\n    for (i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      layerState = layerStatesArray[i];\n      if (visibleAtResolution(layerState, viewResolution) &&\n          layerState.sourceState == SourceState.READY) {\n        layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n        if (layerRenderer.prepareFrame(frameState, layerState, context)) {\n          layerStatesToDraw.push(layerState);\n        }\n      }\n    }\n\n    var width = frameState.size[0] * frameState.pixelRatio;\n    var height = frameState.size[1] * frameState.pixelRatio;\n    if (this.canvas_.width != width || this.canvas_.height != height) {\n      this.canvas_.width = width;\n      this.canvas_.height = height;\n    }\n\n    gl.bindFramebuffer(FRAMEBUFFER, null);\n\n    gl.clearColor(0, 0, 0, 0);\n    gl.clear(COLOR_BUFFER_BIT);\n    gl.enable(BLEND);\n    gl.viewport(0, 0, this.canvas_.width, this.canvas_.height);\n\n    for (i = 0, ii = layerStatesToDraw.length; i < ii; ++i) {\n      layerState = layerStatesToDraw[i];\n      layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layerState.layer));\n      layerRenderer.composeFrame(frameState, layerState, context);\n    }\n\n    if (!this.renderedVisible_) {\n      this.canvas_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.calculateMatrices2D(frameState);\n\n    if (this.textureCache_.getCount() - this.textureCacheFrameMarkerCount_ >\n        WEBGL_TEXTURE_CACHE_HIGH_WATER_MARK) {\n      frameState.postRenderFunctions.push(\n        /** @type {module:ol/PluggableMap~PostRenderFunction} */ (this.expireCache_.bind(this))\n      );\n    }\n\n    if (!this.tileTextureQueue_.isEmpty()) {\n      frameState.postRenderFunctions.push(this.loadNextTileTexture_);\n      frameState.animate = true;\n    }\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    this.scheduleRemoveUnusedLayerRenderers(frameState);\n    this.scheduleExpireIconCache(frameState);\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2\n  ) {\n    var this$1 = this;\n\n    var result;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg2, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        result = layerRenderer.forEachFeatureAtCoordinate(\n          coordinate, frameState, hitTolerance, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState, hitTolerance, layerFilter, thisArg) {\n    var this$1 = this;\n\n    var hasFeature = false;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = this$1.getLayerRenderer(layer);\n        hasFeature =\n            layerRenderer.hasFeatureAtCoordinate(coordinate, frameState);\n        if (hasFeature) {\n          return true;\n        }\n      }\n    }\n    return hasFeature;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLMapRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, hitTolerance, callback, thisArg, layerFilter, thisArg2) {\n    var this$1 = this;\n\n    if (this.getGL().isContextLost()) {\n      return false;\n    }\n\n    var viewState = frameState.viewState;\n    var result;\n\n    var layerStates = frameState.layerStatesArray;\n    var numLayers = layerStates.length;\n    var i;\n    for (i = numLayers - 1; i >= 0; --i) {\n      var layerState = layerStates[i];\n      var layer = layerState.layer;\n      if (visibleAtResolution(layerState, viewState.resolution) &&\n          layerFilter.call(thisArg, layer)) {\n        var layerRenderer = /** @type {module:ol/renderer/webgl/Layer} */ (this$1.getLayerRenderer(layer));\n        result = layerRenderer.forEachLayerAtPixel(\n          pixel, frameState, callback, thisArg);\n        if (result) {\n          return result;\n        }\n      }\n    }\n    return undefined;\n  };\n\n  return WebGLMapRenderer;\n}(MapRenderer));\n\n\nexport default WebGLMapRenderer;\n\n//# sourceMappingURL=Map.js.map","/**\n * @module ol/renderer/webgl/tilelayershader\n */\n// This file is automatically generated, do not edit.\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../webgl.js';\nimport WebGLFragment from '../../webgl/Fragment.js';\nimport WebGLVertex from '../../webgl/Vertex.js';\n\nexport var fragment = new WebGLFragment(DEBUG_WEBGL ?\n  'precision mediump float;\\nvarying vec2 v_texCoord;\\n\\n\\nuniform sampler2D u_texture;\\n\\nvoid main(void) {\\n  gl_FragColor = texture2D(u_texture, v_texCoord);\\n}\\n' :\n  'precision mediump float;varying vec2 a;uniform sampler2D e;void main(void){gl_FragColor=texture2D(e,a);}');\n\nexport var vertex = new WebGLVertex(DEBUG_WEBGL ?\n  'varying vec2 v_texCoord;\\n\\n\\nattribute vec2 a_position;\\nattribute vec2 a_texCoord;\\nuniform vec4 u_tileOffset;\\n\\nvoid main(void) {\\n  gl_Position = vec4(a_position * u_tileOffset.xy + u_tileOffset.zw, 0., 1.);\\n  v_texCoord = a_texCoord;\\n}\\n\\n\\n' :\n  'varying vec2 a;attribute vec2 b;attribute vec2 c;uniform vec4 d;void main(void){gl_Position=vec4(b*d.xy+d.zw,0.,1.);a=c;}');\n\n//# sourceMappingURL=tilelayershader.js.map","/**\n * @module ol/renderer/webgl/tilelayershader/Locations\n */\n// This file is automatically generated, do not edit\n// Run `make shaders` to generate, and commit the result.\n\nimport {DEBUG as DEBUG_WEBGL} from '../../../webgl.js';\n\nvar Locations = function Locations(gl, program) {\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_tileOffset = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_tileOffset' : 'd');\n\n  /**\n   * @type {WebGLUniformLocation}\n   */\n  this.u_texture = gl.getUniformLocation(\n    program, DEBUG_WEBGL ? 'u_texture' : 'e');\n\n  /**\n   * @type {number}\n   */\n  this.a_position = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_position' : 'b');\n\n  /**\n   * @type {number}\n   */\n  this.a_texCoord = gl.getAttribLocation(\n    program, DEBUG_WEBGL ? 'a_texCoord' : 'c');\n\n};\n\nexport default Locations;\n\n//# sourceMappingURL=Locations.js.map","/**\n * @module ol/renderer/webgl/TileLayer\n */\n// FIXME large resolutions lead to too large framebuffers :-(\n// FIXME animated shaders! check in redraw\n\nimport LayerType from '../../LayerType.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createEmpty, intersects} from '../../extent.js';\nimport {roundUpToPowerOfTwo} from '../../math.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {fragment, vertex} from '../webgl/tilelayershader.js';\nimport Locations from '../webgl/tilelayershader/Locations.js';\nimport {toSize} from '../../size.js';\nimport {\n  reset as resetTransform,\n  rotate as rotateTransform,\n  scale as scaleTransform,\n  translate as translateTransform,\n  apply as applyTransform\n} from '../../transform.js';\nimport {COLOR_BUFFER_BIT, BLEND, ARRAY_BUFFER, FLOAT, LINEAR, TRIANGLE_STRIP} from '../../webgl.js';\nimport WebGLBuffer from '../../webgl/Buffer.js';\n\n/**\n * @classdesc\n * WebGL renderer for tile layers.\n * @api\n */\nvar WebGLTileLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLTileLayerRenderer(mapRenderer, tileLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, tileLayer);\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Fragment}\n     */\n    this.fragmentShader_ = fragment;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Vertex}\n     */\n    this.vertexShader_ = vertex;\n\n    /**\n     * @private\n     * @type {module:ol/renderer/webgl/tilelayershader/Locations}\n     */\n    this.locations_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/webgl/Buffer}\n     */\n    this.renderArrayBuffer_ = new WebGLBuffer([\n      0, 0, 0, 1,\n      1, 0, 1, 1,\n      0, 1, 0, 0,\n      1, 1, 1, 0\n    ]);\n\n    /**\n     * @private\n     * @type {module:ol/TileRange}\n     */\n    this.renderedTileRange_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedFramebufferExtent_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLTileLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLTileLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLTileLayerRenderer.prototype.constructor = WebGLTileLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var context = this.mapRenderer.getContext();\n    context.deleteBuffer(this.renderArrayBuffer_);\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.createLoadedTileFinder = function createLoadedTileFinder (source, projection, tiles) {\n    var mapRenderer = this.mapRenderer;\n\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {module:ol/TileRange} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      function(zoom, tileRange) {\n        function callback(tile) {\n          var loaded = mapRenderer.isTileTextureLoaded(tile);\n          if (loaded) {\n            if (!tiles[zoom]) {\n              tiles[zoom] = {};\n            }\n            tiles[zoom][tile.tileCoord.toString()] = tile;\n          }\n          return loaded;\n        }\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.handleWebGLContextLost = function handleWebGLContextLost () {\n    WebGLLayerRenderer.prototype.handleWebGLContextLost.call(this);\n    this.locations_ = null;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var this$1 = this;\n\n\n    var mapRenderer = this.mapRenderer;\n    var gl = context.getGL();\n\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n\n    var tileLayer = /** @type {module:ol/layer/Tile} */ (this.getLayer());\n    var tileSource = tileLayer.getSource();\n    var tileGrid = tileSource.getTileGridForProjection(projection);\n    var z = tileGrid.getZForResolution(viewState.resolution);\n    var tileResolution = tileGrid.getResolution(z);\n\n    var tilePixelSize =\n        tileSource.getTilePixelSize(z, frameState.pixelRatio, projection);\n    var pixelRatio = tilePixelSize[0] /\n        toSize(tileGrid.getTileSize(z), this.tmpSize_)[0];\n    var tilePixelResolution = tileResolution / pixelRatio;\n    var tileGutter = tileSource.getTilePixelRatio(pixelRatio) * tileSource.getGutterForProjection(projection);\n\n    var center = viewState.center;\n    var extent = frameState.extent;\n    var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    var framebufferExtent;\n    if (this.renderedTileRange_ &&\n        this.renderedTileRange_.equals(tileRange) &&\n        this.renderedRevision_ == tileSource.getRevision()) {\n      framebufferExtent = this.renderedFramebufferExtent_;\n    } else {\n\n      var tileRangeSize = tileRange.getSize();\n\n      var maxDimension = Math.max(\n        tileRangeSize[0] * tilePixelSize[0],\n        tileRangeSize[1] * tilePixelSize[1]);\n      var framebufferDimension = roundUpToPowerOfTwo(maxDimension);\n      var framebufferExtentDimension = tilePixelResolution * framebufferDimension;\n      var origin = tileGrid.getOrigin(z);\n      var minX = origin[0] +\n          tileRange.minX * tilePixelSize[0] * tilePixelResolution;\n      var minY = origin[1] +\n          tileRange.minY * tilePixelSize[1] * tilePixelResolution;\n      framebufferExtent = [\n        minX, minY,\n        minX + framebufferExtentDimension, minY + framebufferExtentDimension\n      ];\n\n      this.bindFramebuffer(frameState, framebufferDimension);\n      gl.viewport(0, 0, framebufferDimension, framebufferDimension);\n\n      gl.clearColor(0, 0, 0, 0);\n      gl.clear(COLOR_BUFFER_BIT);\n      gl.disable(BLEND);\n\n      var program = context.getProgram(this.fragmentShader_, this.vertexShader_);\n      context.useProgram(program);\n      if (!this.locations_) {\n        this.locations_ = new Locations(gl, program);\n      }\n\n      context.bindBuffer(ARRAY_BUFFER, this.renderArrayBuffer_);\n      gl.enableVertexAttribArray(this.locations_.a_position);\n      gl.vertexAttribPointer(\n        this.locations_.a_position, 2, FLOAT, false, 16, 0);\n      gl.enableVertexAttribArray(this.locations_.a_texCoord);\n      gl.vertexAttribPointer(\n        this.locations_.a_texCoord, 2, FLOAT, false, 16, 8);\n      gl.uniform1i(this.locations_.u_texture, 0);\n\n      /**\n       * @type {Object<number, Object<string, module:ol/Tile>>}\n       */\n      var tilesToDrawByZ = {};\n      tilesToDrawByZ[z] = {};\n\n      var findLoadedTiles = this.createLoadedTileFinder(\n        tileSource, projection, tilesToDrawByZ);\n\n      var useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n      var allTilesLoaded = true;\n      var tmpExtent = createEmpty();\n      var tmpTileRange = new TileRange(0, 0, 0, 0);\n      var childTileRange, drawable, fullyLoaded, tile, tileState;\n      var x, y, tileExtent;\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n\n          tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n          if (layerState.extent !== undefined) {\n            // ignore tiles outside layer extent\n            tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n            if (!intersects(tileExtent, layerState.extent)) {\n              continue;\n            }\n          }\n          tileState = tile.getState();\n          drawable = tileState == TileState.LOADED ||\n              tileState == TileState.EMPTY ||\n              tileState == TileState.ERROR && !useInterimTilesOnError;\n          if (!drawable) {\n            tile = tile.getInterimTile();\n          }\n          tileState = tile.getState();\n          if (tileState == TileState.LOADED) {\n            if (mapRenderer.isTileTextureLoaded(tile)) {\n              tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n              continue;\n            }\n          } else if (tileState == TileState.EMPTY ||\n                     (tileState == TileState.ERROR &&\n                      !useInterimTilesOnError)) {\n            continue;\n          }\n\n          allTilesLoaded = false;\n          fullyLoaded = tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord, findLoadedTiles, null, tmpTileRange, tmpExtent);\n          if (!fullyLoaded) {\n            childTileRange = tileGrid.getTileCoordChildTileRange(\n              tile.tileCoord, tmpTileRange, tmpExtent);\n            if (childTileRange) {\n              findLoadedTiles(z + 1, childTileRange);\n            }\n          }\n\n        }\n\n      }\n\n      /** @type {Array<number>} */\n      var zs = Object.keys(tilesToDrawByZ).map(Number);\n      zs.sort(numberSafeCompareFunction);\n      var u_tileOffset = new Float32Array(4);\n      for (var i = 0, ii = zs.length; i < ii; ++i) {\n        var tilesToDraw = tilesToDrawByZ[zs[i]];\n        for (var tileKey in tilesToDraw) {\n          tile = tilesToDraw[tileKey];\n          tileExtent = tileGrid.getTileCoordExtent(tile.tileCoord, tmpExtent);\n          u_tileOffset[0] = 2 * (tileExtent[2] - tileExtent[0]) /\n              framebufferExtentDimension;\n          u_tileOffset[1] = 2 * (tileExtent[3] - tileExtent[1]) /\n              framebufferExtentDimension;\n          u_tileOffset[2] = 2 * (tileExtent[0] - framebufferExtent[0]) /\n              framebufferExtentDimension - 1;\n          u_tileOffset[3] = 2 * (tileExtent[1] - framebufferExtent[1]) /\n              framebufferExtentDimension - 1;\n          gl.uniform4fv(this$1.locations_.u_tileOffset, u_tileOffset);\n          mapRenderer.bindTileTexture(tile, tilePixelSize,\n            tileGutter * pixelRatio, LINEAR, LINEAR);\n          gl.drawArrays(TRIANGLE_STRIP, 0, 4);\n        }\n      }\n\n      if (allTilesLoaded) {\n        this.renderedTileRange_ = tileRange;\n        this.renderedFramebufferExtent_ = framebufferExtent;\n        this.renderedRevision_ = tileSource.getRevision();\n      } else {\n        this.renderedTileRange_ = null;\n        this.renderedFramebufferExtent_ = null;\n        this.renderedRevision_ = -1;\n        frameState.animate = true;\n      }\n\n    }\n\n    this.updateUsedTiles(frameState.usedTiles, tileSource, z, tileRange);\n    var tileTextureQueue = mapRenderer.getTileTextureQueue();\n    this.manageTilePyramid(\n      frameState, tileSource, tileGrid, pixelRatio, projection, extent, z,\n      tileLayer.getPreload(),\n      /**\n       * @param {module:ol/Tile} tile Tile.\n       */\n      function(tile) {\n        if (tile.getState() == TileState.LOADED &&\n              !mapRenderer.isTileTextureLoaded(tile) &&\n              !tileTextureQueue.isKeyQueued(tile.getKey())) {\n          tileTextureQueue.enqueue([\n            tile,\n            tileGrid.getTileCoordCenter(tile.tileCoord),\n            tileGrid.getResolution(tile.tileCoord[0]),\n            tilePixelSize, tileGutter * pixelRatio\n          ]);\n        }\n      }, this);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    var texCoordMatrix = this.texCoordMatrix;\n    resetTransform(texCoordMatrix);\n    translateTransform(texCoordMatrix,\n      (Math.round(center[0] / tileResolution) * tileResolution - framebufferExtent[0]) /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      (Math.round(center[1] / tileResolution) * tileResolution - framebufferExtent[1]) /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    if (viewState.rotation !== 0) {\n      rotateTransform(texCoordMatrix, viewState.rotation);\n    }\n    scaleTransform(texCoordMatrix,\n      frameState.size[0] * viewState.resolution /\n            (framebufferExtent[2] - framebufferExtent[0]),\n      frameState.size[1] * viewState.resolution /\n            (framebufferExtent[3] - framebufferExtent[1]));\n    translateTransform(texCoordMatrix, -0.5, -0.5);\n\n    return true;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLTileLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    if (!this.framebuffer) {\n      return undefined;\n    }\n\n    var pixelOnMapScaled = [\n      pixel[0] / frameState.size[0],\n      (frameState.size[1] - pixel[1]) / frameState.size[1]];\n\n    var pixelOnFrameBufferScaled = applyTransform(\n      this.texCoordMatrix, pixelOnMapScaled.slice());\n    var pixelOnFrameBuffer = [\n      pixelOnFrameBufferScaled[0] * this.framebufferDimension,\n      pixelOnFrameBufferScaled[1] * this.framebufferDimension];\n\n    var gl = this.mapRenderer.getContext().getGL();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    var imageData = new Uint8Array(4);\n    gl.readPixels(pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1,\n      gl.RGBA, gl.UNSIGNED_BYTE, imageData);\n\n    if (imageData[3] > 0) {\n      return callback.call(thisArg, this.getLayer(), imageData);\n    } else {\n      return undefined;\n    }\n  };\n\n  return WebGLTileLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLTileLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.TILE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/TileLayer} The layer renderer.\n */\nWebGLTileLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLTileLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Tile} */ (layer)\n  );\n};\n\n\nexport default WebGLTileLayerRenderer;\n\n//# sourceMappingURL=TileLayer.js.map","/**\n * @module ol/renderer/webgl/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, containsExtent, createEmpty} from '../../extent.js';\nimport WebGLReplayGroup from '../../render/webgl/ReplayGroup.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {apply as applyTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * WebGL renderer for vector layers.\n * @api\n */\nvar WebGLVectorLayerRenderer = (function (WebGLLayerRenderer) {\n  function WebGLVectorLayerRenderer(mapRenderer, vectorLayer) {\n\n    WebGLLayerRenderer.call(this, mapRenderer, vectorLayer);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {function(module:ol/Feature, module:ol/Feature): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/render/webgl/ReplayGroup}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * The last layer state.\n     * @private\n     * @type {?module:ol/layer/Layer~State}\n     */\n    this.layerState_ = null;\n\n  }\n\n  if ( WebGLLayerRenderer ) WebGLVectorLayerRenderer.__proto__ = WebGLLayerRenderer;\n  WebGLVectorLayerRenderer.prototype = Object.create( WebGLLayerRenderer && WebGLLayerRenderer.prototype );\n  WebGLVectorLayerRenderer.prototype.constructor = WebGLVectorLayerRenderer;\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.composeFrame = function composeFrame (frameState, layerState, context) {\n    this.layerState_ = layerState;\n    var viewState = frameState.viewState;\n    var replayGroup = this.replayGroup_;\n    var size = frameState.size;\n    var pixelRatio = frameState.pixelRatio;\n    var gl = this.mapRenderer.getGL();\n    if (replayGroup && !replayGroup.isEmpty()) {\n      gl.enable(gl.SCISSOR_TEST);\n      gl.scissor(0, 0, size[0] * pixelRatio, size[1] * pixelRatio);\n      replayGroup.replay(context,\n        viewState.center, viewState.resolution, viewState.rotation,\n        size, pixelRatio, layerState.opacity,\n        layerState.managed ? frameState.skippedFeatureUids : {});\n      gl.disable(gl.SCISSOR_TEST);\n    }\n\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.disposeInternal = function disposeInternal () {\n    var replayGroup = this.replayGroup_;\n    if (replayGroup) {\n      var context = this.mapRenderer.getContext();\n      replayGroup.getDeleteResourcesFunction(context)();\n      this.replayGroup_ = null;\n    }\n    WebGLLayerRenderer.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachFeatureAtCoordinate = function forEachFeatureAtCoordinate (coordinate, frameState, hitTolerance, callback, thisArg) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return undefined;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layer = this.getLayer();\n      var layerState = this.layerState_;\n      /** @type {!Object<string, boolean>} */\n      var features = {};\n      return this.replayGroup_.forEachFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        {},\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          var key = getUid(feature).toString();\n          if (!(key in features)) {\n            features[key] = true;\n            return callback.call(thisArg, feature, layer);\n          }\n        });\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.hasFeatureAtCoordinate = function hasFeatureAtCoordinate (coordinate, frameState) {\n    if (!this.replayGroup_ || !this.layerState_) {\n      return false;\n    } else {\n      var context = this.mapRenderer.getContext();\n      var viewState = frameState.viewState;\n      var layerState = this.layerState_;\n      return this.replayGroup_.hasFeatureAtCoordinate(coordinate,\n        context, viewState.center, viewState.resolution, viewState.rotation,\n        frameState.size, frameState.pixelRatio, layerState.opacity,\n        frameState.skippedFeatureUids);\n    }\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.forEachLayerAtPixel = function forEachLayerAtPixel (pixel, frameState, callback, thisArg) {\n    var coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform, pixel.slice());\n    var hasFeature = this.hasFeatureAtCoordinate(coordinate, frameState);\n\n    if (hasFeature) {\n      return callback.call(thisArg, this.getLayer(), null);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * Handle changes in image style state.\n   * @param {module:ol/events/Event} event Image style change event.\n   * @private\n   */\n  WebGLVectorLayerRenderer.prototype.handleStyleImageChange_ = function handleStyleImageChange_ (event) {\n    this.renderIfReadyAndVisible();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  WebGLVectorLayerRenderer.prototype.prepareFrame = function prepareFrame (frameState, layerState, context) {\n    var vectorLayer = /** @type {module:ol/layer/Vector} */ (this.getLayer());\n    var vectorSource = vectorLayer.getSource();\n\n    var animating = frameState.viewHints[ViewHint.ANIMATING];\n    var interacting = frameState.viewHints[ViewHint.INTERACTING];\n    var updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    var updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      return true;\n    }\n\n    var frameStateExtent = frameState.extent;\n    var viewState = frameState.viewState;\n    var projection = viewState.projection;\n    var resolution = viewState.resolution;\n    var pixelRatio = frameState.pixelRatio;\n    var vectorLayerRevision = vectorLayer.getRevision();\n    var vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    var vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    var extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      frameState.postRenderFunctions.push(\n        this.replayGroup_.getDeleteResourcesFunction(context));\n    }\n\n    this.dirty_ = false;\n\n    var replayGroup = new WebGLReplayGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent, vectorLayer.getRenderBuffer());\n    vectorSource.loadFeatures(extent, resolution, projection);\n    /**\n     * @param {module:ol/Feature} feature Feature.\n     * @this {module:ol/renderer/webgl/VectorLayer}\n     */\n    var render = function(feature) {\n      var styles;\n      var styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        var dirty = this.renderFeature(\n          feature, resolution, pixelRatio, styles, replayGroup);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    };\n    if (vectorLayerRenderOrder) {\n      /** @type {Array<module:ol/Feature>} */\n      var features = [];\n      vectorSource.forEachFeatureInExtent(extent,\n        /**\n         * @param {module:ol/Feature} feature Feature.\n         */\n        function(feature) {\n          features.push(feature);\n        }, this);\n      features.sort(vectorLayerRenderOrder);\n      features.forEach(render.bind(this));\n    } else {\n      vectorSource.forEachFeatureInExtent(extent, render, this);\n    }\n    replayGroup.finish(context);\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.replayGroup_ = replayGroup;\n\n    return true;\n  };\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/style/Style|Array<module:ol/style/Style>} styles The style or array of\n   *     styles.\n   * @param {module:ol/render/webgl/ReplayGroup} replayGroup Replay group.\n   * @return {boolean} `true` if an image is loading.\n   */\n  WebGLVectorLayerRenderer.prototype.renderFeature = function renderFeature$1 (feature, resolution, pixelRatio, styles, replayGroup) {\n    var this$1 = this;\n\n    if (!styles) {\n      return false;\n    }\n    var loading = false;\n    if (Array.isArray(styles)) {\n      for (var i = styles.length - 1, ii = 0; i >= ii; --i) {\n        loading = renderFeature(\n          replayGroup, feature, styles[i],\n          getSquaredRenderTolerance(resolution, pixelRatio),\n          this$1.handleStyleImageChange_, this$1) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        replayGroup, feature, styles,\n        getSquaredRenderTolerance(resolution, pixelRatio),\n        this.handleStyleImageChange_, this) || loading;\n    }\n    return loading;\n  };\n\n  return WebGLVectorLayerRenderer;\n}(WebGLLayerRenderer));\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLVectorLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.VECTOR;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/VectorLayer} The layer renderer.\n */\nWebGLVectorLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLVectorLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Vector} */ (layer)\n  );\n};\n\n\nexport default WebGLVectorLayerRenderer;\n\n//# sourceMappingURL=VectorLayer.js.map","/**\n * @module ol/WebGLMap\n */\nimport PluggableMap from './PluggableMap.js';\nimport {defaults as defaultControls} from './control.js';\nimport {defaults as defaultInteractions} from './interaction.js';\nimport {assign} from './obj.js';\nimport WebGLImageLayerRenderer from './renderer/webgl/ImageLayer.js';\nimport WebGLMapRenderer from './renderer/webgl/Map.js';\nimport WebGLTileLayerRenderer from './renderer/webgl/TileLayer.js';\nimport WebGLVectorLayerRenderer from './renderer/webgl/VectorLayer.js';\n\n\n/**\n * @classdesc\n * The WebGLMap uses WebGL for rendering map layers.  This renderer has limited\n * support for vector data and no support for vector tiles.\n *\n *     import WebGLMap from 'ol/WebGLMap';\n *     import TileLayer from 'ol/layer/Tile';\n *     import OSM from 'ol/source/OSM';\n *     import View from 'ol/View';\n *\n *     var map = new WebGLMap({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM()\n *         })\n *       ],\n *       target: 'map'\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~Tile} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`.\n * Note that {@link module:ol/layer/Group~Group} is a subclass of\n * {@link module:ol/layer/Base}, so layers entered in the options or added\n * with `addLayer` can be groups, which can contain further groups, and so on.\n *\n * @fires module:ol/MapBrowserEvent~MapBrowserEvent\n * @fires module:ol/MapEvent~MapEvent\n * @fires module:ol/render/Event~RenderEvent#postcompose\n * @fires module:ol/render/Event~RenderEvent#precompose\n * @api\n */\nvar WebGLMap = (function (PluggableMap) {\n  function WebGLMap(options) {\n    options = assign({}, options);\n    if (!options.controls) {\n      options.controls = defaultControls();\n    }\n    if (!options.interactions) {\n      options.interactions = defaultInteractions();\n    }\n\n    PluggableMap.call(this, options);\n  }\n\n  if ( PluggableMap ) WebGLMap.__proto__ = PluggableMap;\n  WebGLMap.prototype = Object.create( PluggableMap && PluggableMap.prototype );\n  WebGLMap.prototype.constructor = WebGLMap;\n\n  WebGLMap.prototype.createRenderer = function createRenderer () {\n    var renderer = new WebGLMapRenderer(this);\n    renderer.registerLayerRenderers([\n      WebGLImageLayerRenderer,\n      WebGLTileLayerRenderer,\n      WebGLVectorLayerRenderer\n    ]);\n    return renderer;\n  };\n\n  return WebGLMap;\n}(PluggableMap));\n\n\nexport default WebGLMap;\n\n//# sourceMappingURL=WebGLMap.js.map","/**\n * @module ol\n */\n\nexport {default as AssertionError} from './AssertionError.js';\nexport {default as Collection} from './Collection.js';\nexport {default as Disposable} from './Disposable.js';\nexport {default as Feature} from './Feature.js';\nexport {default as Geolocation} from './Geolocation.js';\nexport {default as Graticule} from './Graticule.js';\nexport {default as Image} from './Image.js';\nexport {default as ImageBase} from './ImageBase.js';\nexport {default as ImageCanvas} from './ImageCanvas.js';\nexport {default as ImageTile} from './ImageTile.js';\nexport {default as Kinetic} from './Kinetic.js';\nexport {default as Map} from './Map.js';\nexport {default as MapBrowserEvent} from './MapBrowserEvent.js';\nexport {default as MapBrowserEventHandler} from './MapBrowserEventHandler.js';\nexport {default as MapBrowserPointerEvent} from './MapBrowserPointerEvent.js';\nexport {default as MapEvent} from './MapEvent.js';\nexport {default as Object} from './Object.js';\nexport {default as Observable} from './Observable.js';\nexport {default as Overlay} from './Overlay.js';\nexport {default as PluggableMap} from './PluggableMap.js';\nexport {default as Tile} from './Tile.js';\nexport {default as TileCache} from './TileCache.js';\nexport {default as TileQueue} from './TileQueue.js';\nexport {default as TileRange} from './TileRange.js';\nexport {default as VectorImageTile} from './VectorImageTile.js';\nexport {default as VectorTile} from './VectorTile.js';\nexport {default as View} from './View.js';\nexport {default as WebGLMap} from './WebGLMap.js';\n\nexport {getUid, inherits, VERSION} from './util.js';\n\n\n//# sourceMappingURL=index.js.map","/**\n * Default WMS version.\n * @type {string}\n */\nexport var DEFAULT_WMS_VERSION = '1.3.0';\n\n//# sourceMappingURL=common.js.map","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from '../reproj/Triangulation.js';\n\n\n/**\n * @typedef {function(module:ol/extent~Extent, number, number) : module:ol/ImageBase} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nvar ReprojImage = (function (ImageBase) {\n  function ReprojImage(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    var maxSourceExtent = sourceProj.getExtent();\n    var maxTargetExtent = targetProj.getExtent();\n\n    var limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    var targetCenter = getCenter(limitedTargetExtent);\n    var sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    var errorThresholdInPixels = ERROR_THRESHOLD;\n\n    var triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    var sourceExtent = triangulation.calculateSourceExtent();\n    var sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    var state = ImageState.LOADED;\n    if (sourceImage) {\n      state = ImageState.IDLE;\n    }\n    var sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    ImageBase.call(this, targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {module:ol/proj/Projection}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!module:ol/reproj/Triangulation}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {module:ol/ImageBase}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/events~EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  if ( ImageBase ) ReprojImage.__proto__ = ImageBase;\n  ReprojImage.prototype = Object.create( ImageBase && ImageBase.prototype );\n  ReprojImage.prototype.constructor = ReprojImage;\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.disposeInternal = function disposeInternal () {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    ImageBase.prototype.disposeInternal.call(this);\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.getImage = function getImage () {\n    return this.canvas_;\n  };\n\n  /**\n   * @return {module:ol/proj/Projection} Projection.\n   */\n  ReprojImage.prototype.getProjection = function getProjection () {\n    return this.targetProj_;\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.reproject_ = function reproject_ () {\n    var sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      var width = getWidth(this.targetExtent_) / this.targetResolution_;\n      var height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ReprojImage.prototype.load = function load () {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      var sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            var sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  };\n\n  /**\n   * @private\n   */\n  ReprojImage.prototype.unlistenSource_ = function unlistenSource_ () {\n    unlistenByKey(/** @type {!module:ol/events~EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  };\n\n  return ReprojImage;\n}(ImageBase));\n\n\nexport default ReprojImage;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/Image\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\n\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from '../source/Source.js';\n\n\n/**\n * @enum {string}\n */\nvar ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event ol/source/Image~ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event ol/source/Image~ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nvar ImageSourceEvent = (function (Event) {\n  function ImageSourceEvent(type, image) {\n\n    Event.call(this, type);\n\n    /**\n     * The image related to the event.\n     * @type {module:ol/Image}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n  if ( Event ) ImageSourceEvent.__proto__ = Event;\n  ImageSourceEvent.prototype = Object.create( Event && Event.prototype );\n  ImageSourceEvent.prototype.constructor = ImageSourceEvent;\n\n  return ImageSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions]\n * @property {module:ol/extent~Extent} [extent]\n * @property {module:ol/proj~ProjectionLike} projection\n * @property {Array<number>} [resolutions]\n * @property {module:ol/source/State} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @api\n */\nvar ImageSource = (function (Source) {\n  function ImageSource(options) {\n    Source.call(this, {\n      attributions: options.attributions,\n      extent: options.extent,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {module:ol/reproj/Image}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  if ( Source ) ImageSource.__proto__ = Source;\n  ImageSource.prototype = Object.create( Source && Source.prototype );\n  ImageSource.prototype.constructor = ImageSource;\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  ImageSource.prototype.getResolutions = function getResolutions () {\n    return this.resolutions_;\n  };\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  ImageSource.prototype.findNearestResolution = function findNearestResolution (resolution) {\n    if (this.resolutions_) {\n      var idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   */\n  ImageSource.prototype.getImage = function getImage (extent, resolution, pixelRatio, projection) {\n    var sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  };\n\n  /**\n   * @abstract\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @return {module:ol/ImageBase} Single image.\n   * @protected\n   */\n  ImageSource.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {};\n\n  /**\n   * Handle image change events.\n   * @param {module:ol/events/Event} event Event.\n   * @protected\n   */\n  ImageSource.prototype.handleImageChange = function handleImageChange (event) {\n    var image = /** @type {module:ol/Image} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  };\n\n  return ImageSource;\n}(Source));\n\n\n/**\n * Default image load function for image sources that use module:ol/Image~Image image\n * instances.\n * @param {module:ol/Image} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  image.getImage().src = src;\n}\n\n\nexport default ImageSource;\n\n//# sourceMappingURL=Image.js.map","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  CARMENTA_SERVER: 'carmentaserver',\n  GEOSERVER: 'geoserver',\n  MAPSERVER: 'mapserver',\n  QGIS: 'qgis'\n};\n\n//# sourceMappingURL=WMSServerType.js.map","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport {listen} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from '../source/Image.js';\nimport WMSServerType from '../source/WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {module:ol/size~Size}\n */\nvar GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you are using the WebGL renderer or if you want to\n * access pixel data with the Canvas renderer.  See\n * https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {module:ol/source/WMSServerType|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {module:ol/Image~LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {module:ol/proj~ProjectionLike} projection Projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires ol/source/Image~ImageSourceEvent\n * @api\n */\nvar ImageWMS = (function (ImageSource) {\n  function ImageWMS(opt_options) {\n\n    var options = opt_options || {};\n\n    ImageSource.call(this, {\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {module:ol/Image~LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {module:ol/source/WMSServerType|undefined}\n     */\n    this.serverType_ = /** @type {module:ol/source/WMSServerType|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {module:ol/Image}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/size~Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  if ( ImageSource ) ImageWMS.__proto__ = ImageSource;\n  ImageWMS.prototype = Object.create( ImageSource && ImageSource.prototype );\n  ImageWMS.prototype.constructor = ImageWMS;\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj~ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  ImageWMS.prototype.getGetFeatureInfoUrl = function getGetFeatureInfoUrl (coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    var projectionObj = getProjection(projection);\n    var sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    var extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    var baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    var x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    var y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  };\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  ImageWMS.prototype.getParams = function getParams () {\n    return this.params_;\n  };\n\n  /**\n   * @inheritDoc\n   */\n  ImageWMS.prototype.getImageInternal = function getImageInternal (extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    var imageResolution = resolution / pixelRatio;\n\n    var center = getCenter(extent);\n    var viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    var viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    var viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    var requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    var requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    var requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    var image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    var params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    var url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    listen(this.image_, EventType.CHANGE,\n      this.handleImageChange, this);\n\n    return this.image_;\n\n  };\n\n  /**\n   * Return the image load function of the source.\n   * @return {module:ol/Image~LoadFunction} The image load function.\n   * @api\n   */\n  ImageWMS.prototype.getImageLoadFunction = function getImageLoadFunction () {\n    return this.imageLoadFunction_;\n  };\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {module:ol/size~Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/proj/Projection} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  ImageWMS.prototype.getRequestUrl_ = function getRequestUrl_ (extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          var dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    var axisOrientation = projection.getAxisOrientation();\n    var bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  };\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  ImageWMS.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n  /**\n   * Set the image load function of the source.\n   * @param {module:ol/Image~LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  ImageWMS.prototype.setImageLoadFunction = function setImageLoadFunction (imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  };\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  ImageWMS.prototype.setUrl = function setUrl (url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  };\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  ImageWMS.prototype.updateParams = function updateParams (params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  };\n\n  /**\n   * @private\n   */\n  ImageWMS.prototype.updateV13_ = function updateV13_ () {\n    var version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  };\n\n  return ImageWMS;\n}(ImageSource));\n\n\nexport default ImageWMS;\n\n//# sourceMappingURL=ImageWMS.js.map","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  var keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  var qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n\n//# sourceMappingURL=uri.js.map","/**\n * @module ol/layer/Vector\n */\nimport LayerType from '../LayerType.js';\nimport Layer from '../layer/Layer.js';\nimport VectorRenderType from '../layer/VectorRenderType.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during animations. This means that no\n * vectors will be shown clipped, but the setting will have a performance impact for large\n * amounts of vector data. When set to `false`, batches will be recreated when no animation\n * is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true` and `renderMode`\n * is `vector`, feature batches will be recreated during interactions. See also\n * `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nvar VectorLayer = (function (Layer) {\n  function VectorLayer(opt_options) {\n    var options = opt_options ?\n      opt_options : /** @type {module:ol/layer/Vector~Options} */ ({});\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    Layer.call(this, baseOptions);\n\n    /**\n    * @private\n    * @type {boolean}\n    */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n    * User provided style.\n    * @type {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n    * @private\n    */\n    this.style_ = null;\n\n    /**\n    * Style function for use within the library.\n    * @type {module:ol/style/Style~StyleFunction|undefined}\n    * @private\n    */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n    * @type {boolean}\n    * @private\n    */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n    /**\n    * @private\n    * @type {module:ol/layer/VectorTileRenderType|string}\n    */\n    this.renderMode_ = options.renderMode || VectorRenderType.VECTOR;\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR;\n\n  }\n\n  if ( Layer ) VectorLayer.__proto__ = Layer;\n  VectorLayer.prototype = Object.create( Layer && Layer.prototype );\n  VectorLayer.prototype.constructor = VectorLayer;\n\n  /**\n  * @return {boolean} Declutter.\n  */\n  VectorLayer.prototype.getDeclutter = function getDeclutter () {\n    return this.declutter_;\n  };\n\n  /**\n  * @param {boolean} declutter Declutter.\n  */\n  VectorLayer.prototype.setDeclutter = function setDeclutter (declutter) {\n    this.declutter_ = declutter;\n  };\n\n  /**\n  * @return {number|undefined} Render buffer.\n  */\n  VectorLayer.prototype.getRenderBuffer = function getRenderBuffer () {\n    return this.renderBuffer_;\n  };\n\n  /**\n  * @return {function(module:ol/Feature, module:ol/Feature): number|null|undefined} Render\n  *     order.\n  */\n  VectorLayer.prototype.getRenderOrder = function getRenderOrder () {\n    return (\n    /** @type {module:ol/render~OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  };\n\n  /**\n  * Get the style for features.  This returns whatever was passed to the `style`\n  * option at construction or to the `setStyle` method.\n  * @return {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction}\n  *     Layer style.\n  * @api\n  */\n  VectorLayer.prototype.getStyle = function getStyle () {\n    return this.style_;\n  };\n\n  /**\n  * Get the style function.\n  * @return {module:ol/style/Style~StyleFunction|undefined} Layer style function.\n  * @api\n  */\n  VectorLayer.prototype.getStyleFunction = function getStyleFunction () {\n    return this.styleFunction_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     animating.\n  */\n  VectorLayer.prototype.getUpdateWhileAnimating = function getUpdateWhileAnimating () {\n    return this.updateWhileAnimating_;\n  };\n\n  /**\n  * @return {boolean} Whether the rendered layer should be updated while\n  *     interacting.\n  */\n  VectorLayer.prototype.getUpdateWhileInteracting = function getUpdateWhileInteracting () {\n    return this.updateWhileInteracting_;\n  };\n\n  /**\n  * @param {module:ol/render~OrderFunction|null|undefined} renderOrder\n  *     Render order.\n  */\n  VectorLayer.prototype.setRenderOrder = function setRenderOrder (renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  };\n\n  /**\n  * Set the style for features.  This can be a single style object, an array\n  * of styles, or a function that takes a feature and resolution and returns\n  * an array of styles. If it is `undefined` the default style is used. If\n  * it is `null` the layer has no style (a `null` style), so only features\n  * that have their own styles will be rendered in the layer. See\n  * {@link module:ol/style} for information on the default style.\n  * @param {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction|null|undefined} style Layer style.\n  * @api\n  */\n  VectorLayer.prototype.setStyle = function setStyle (style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  };\n\n  /**\n  * @return {module:ol/layer/VectorRenderType|string} The render mode.\n  */\n  VectorLayer.prototype.getRenderMode = function getRenderMode () {\n    return this.renderMode_;\n  };\n\n  return VectorLayer;\n}(Layer));\n\n\n/**\n * Return the associated {@link module:ol/source/Vector vectorsource} of the layer.\n * @function\n * @return {module:ol/source/Vector} Source.\n * @api\n */\nVectorLayer.prototype.getSource;\n\n\nexport default VectorLayer;\n\n//# sourceMappingURL=Vector.js.map","/**\n * @module ol/layer/Heatmap\n */\nimport {listen} from '../events.js';\nimport {getChangeEventType} from '../Object.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport Icon from '../style/Icon.js';\nimport Style from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {Array<string>} [gradient=['#00f', '#0ff', '#0f0', '#ff0', '#f00']] The color gradient\n * of the heatmap, specified as an array of CSS color strings.\n * @property {number} [radius=8] Radius size in pixels.\n * @property {number} [blur=15] Blur size in pixels.\n * @property {number} [shadow=250] Shadow size in pixels.\n * @property {string|function(module:ol/Feature):number} [weight='weight'] The feature\n * attribute to use for the weight or a function that returns a weight from a feature. Weight values\n * should range from 0 to 1 (and values outside will be clamped to that range).\n * @property {module:ol/layer/VectorRenderType|string} [renderMode='vector'] Render mode for vector layers:\n *  * `'image'`: Vector layers are rendered as images. Great performance, but point symbols and\n *    texts are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'vector'`: Vector layers are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance.\n * @property {module:ol/source/Vector} [source] Source.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nvar Property = {\n  BLUR: 'blur',\n  GRADIENT: 'gradient',\n  RADIUS: 'radius'\n};\n\n\n/**\n * @const\n * @type {Array<string>}\n */\nvar DEFAULT_GRADIENT = ['#00f', '#0ff', '#0f0', '#ff0', '#f00'];\n\n\n/**\n * @classdesc\n * Layer for rendering vector data as a heatmap.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @fires module:ol/render/Event~RenderEvent\n * @api\n */\nvar Heatmap = (function (VectorLayer) {\n  function Heatmap(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.gradient;\n    delete baseOptions.radius;\n    delete baseOptions.blur;\n    delete baseOptions.shadow;\n    delete baseOptions.weight;\n    VectorLayer.call(this, baseOptions);\n\n    /**\n     * @private\n     * @type {Uint8ClampedArray}\n     */\n    this.gradient_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.shadow_ = options.shadow !== undefined ? options.shadow : 250;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.circleImage_ = undefined;\n\n    /**\n     * @private\n     * @type {Array<Array<module:ol/style/Style>>}\n     */\n    this.styleCache_ = null;\n\n    listen(this,\n      getChangeEventType(Property.GRADIENT),\n      this.handleGradientChanged_, this);\n\n    this.setGradient(options.gradient ? options.gradient : DEFAULT_GRADIENT);\n\n    this.setBlur(options.blur !== undefined ? options.blur : 15);\n\n    this.setRadius(options.radius !== undefined ? options.radius : 8);\n\n    listen(this,\n      getChangeEventType(Property.BLUR),\n      this.handleStyleChanged_, this);\n    listen(this,\n      getChangeEventType(Property.RADIUS),\n      this.handleStyleChanged_, this);\n\n    this.handleStyleChanged_();\n\n    var weight = options.weight ? options.weight : 'weight';\n    var weightFunction;\n    if (typeof weight === 'string') {\n      weightFunction = function(feature) {\n        return feature.get(weight);\n      };\n    } else {\n      weightFunction = weight;\n    }\n\n    this.setStyle(function(feature, resolution) {\n      var weight = weightFunction(feature);\n      var opacity = weight !== undefined ? clamp(weight, 0, 1) : 1;\n      // cast to 8 bits\n      var index = (255 * opacity) | 0;\n      var style = this.styleCache_[index];\n      if (!style) {\n        style = [\n          new Style({\n            image: new Icon({\n              opacity: opacity,\n              src: this.circleImage_\n            })\n          })\n        ];\n        this.styleCache_[index] = style;\n      }\n      return style;\n    }.bind(this));\n\n    // For performance reasons, don't sort the features before rendering.\n    // The render order is not relevant for a heatmap representation.\n    this.setRenderOrder(null);\n\n    listen(this, RenderEventType.RENDER, this.handleRender_, this);\n  }\n\n  if ( VectorLayer ) Heatmap.__proto__ = VectorLayer;\n  Heatmap.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  Heatmap.prototype.constructor = Heatmap;\n\n  /**\n   * @return {string} Data URL for a circle.\n   * @private\n   */\n  Heatmap.prototype.createCircle_ = function createCircle_ () {\n    var radius = this.getRadius();\n    var blur = this.getBlur();\n    var halfSize = radius + blur + 1;\n    var size = 2 * halfSize;\n    var context = createCanvasContext2D(size, size);\n    context.shadowOffsetX = context.shadowOffsetY = this.shadow_;\n    context.shadowBlur = blur;\n    context.shadowColor = '#000';\n    context.beginPath();\n    var center = halfSize - this.shadow_;\n    context.arc(center, center, radius, 0, Math.PI * 2, true);\n    context.fill();\n    return context.canvas.toDataURL();\n  };\n\n  /**\n   * Return the blur size in pixels.\n   * @return {number} Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getBlur = function getBlur () {\n    return /** @type {number} */ (this.get(Property.BLUR));\n  };\n\n  /**\n   * Return the gradient colors as array of strings.\n   * @return {Array<string>} Colors.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getGradient = function getGradient () {\n    return /** @type {Array<string>} */ (this.get(Property.GRADIENT));\n  };\n\n  /**\n   * Return the size of the radius in pixels.\n   * @return {number} Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.getRadius = function getRadius () {\n    return /** @type {number} */ (this.get(Property.RADIUS));\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleGradientChanged_ = function handleGradientChanged_ () {\n    this.gradient_ = createGradient(this.getGradient());\n  };\n\n  /**\n   * @private\n   */\n  Heatmap.prototype.handleStyleChanged_ = function handleStyleChanged_ () {\n    this.circleImage_ = this.createCircle_();\n    this.styleCache_ = new Array(256);\n    this.changed();\n  };\n\n  /**\n   * @param {module:ol/render/Event} event Post compose event\n   * @private\n   */\n  Heatmap.prototype.handleRender_ = function handleRender_ (event) {\n    var this$1 = this;\n\n    var context = event.context;\n    var canvas = context.canvas;\n    var image = context.getImageData(0, 0, canvas.width, canvas.height);\n    var view8 = image.data;\n    for (var i = 0, ii = view8.length; i < ii; i += 4) {\n      var alpha = view8[i + 3] * 4;\n      if (alpha) {\n        view8[i] = this$1.gradient_[alpha];\n        view8[i + 1] = this$1.gradient_[alpha + 1];\n        view8[i + 2] = this$1.gradient_[alpha + 2];\n      }\n    }\n    context.putImageData(image, 0, 0);\n  };\n\n  /**\n   * Set the blur size in pixels.\n   * @param {number} blur Blur size in pixels.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setBlur = function setBlur (blur) {\n    this.set(Property.BLUR, blur);\n  };\n\n  /**\n   * Set the gradient colors as array of strings.\n   * @param {Array<string>} colors Gradient.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setGradient = function setGradient (colors) {\n    this.set(Property.GRADIENT, colors);\n  };\n\n  /**\n   * Set the size of the radius in pixels.\n   * @param {number} radius Radius size in pixel.\n   * @api\n   * @observable\n   */\n  Heatmap.prototype.setRadius = function setRadius (radius) {\n    this.set(Property.RADIUS, radius);\n  };\n\n  return Heatmap;\n}(VectorLayer));\n\n\n/**\n * @param {Array<string>} colors A list of colored.\n * @return {Uint8ClampedArray} An array.\n */\nfunction createGradient(colors) {\n  var width = 1;\n  var height = 256;\n  var context = createCanvasContext2D(width, height);\n\n  var gradient = context.createLinearGradient(0, 0, width, height);\n  var step = 1 / (colors.length - 1);\n  for (var i = 0, ii = colors.length; i < ii; ++i) {\n    gradient.addColorStop(i * step, colors[i]);\n  }\n\n  context.fillStyle = gradient;\n  context.fillRect(0, 0, width, height);\n\n  return context.getImageData(0, 0, width, height).data;\n}\n\n\nexport default Heatmap;\n\n//# sourceMappingURL=Heatmap.js.map","/**\n * @module ol/layer/VectorTile\n */\nimport LayerType from '../LayerType.js';\nimport {assert} from '../asserts.js';\nimport TileProperty from '../layer/TileProperty.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorTileRenderType from '../layer/VectorTileRenderType.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @enum {string}\n * Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but\n *    point symbols and texts are always rotated with the view and pixels are\n *    scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels\n *    are scaled during zoom animations. Point symbols and texts are accurately\n *    rendered as vectors and can stay upright on rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering\n *    even during animations, but slower performance than the other options.\n * @api\n */\nexport var RenderType = {\n  IMAGE: 'image',\n  HYBRID: 'hybrid',\n  VECTOR: 'vector'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {module:ol/extent~Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex=0] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the tile extent used by the\n * renderer when getting features from the vector tile for the rendering or hit-detection.\n * Recommended value: Vector tiles are usually generated with a buffer, so this value should match\n * the largest possible buffer of the used tiles. It should be at least the size of the largest\n * point symbol or line width.\n * @property {module:ol/layer/VectorTileRenderType|string} [renderMode='hybrid'] Render mode for vector tiles:\n *  * `'image'`: Vector tiles are rendered as images. Great performance, but point symbols and texts\n *    are always rotated with the view and pixels are scaled during zoom animations.\n *  * `'hybrid'`: Polygon and line elements are rendered as images, so pixels are scaled during zoom\n *    animations. Point symbols and texts are accurately rendered as vectors and can stay upright on\n *    rotated views.\n *  * `'vector'`: Vector tiles are rendered as vectors. Most accurate rendering even during\n *    animations, but slower performance than the other options.\n *\n * When `declutter` is set to `true`, `'hybrid'` will be used instead of `'image'`.\n * @property {module:ol/source/VectorTile} [source] Source.\n * @property {module:ol/PluggableMap} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles, and the priority is defined by the z-index of the style. Lower z-index\n * means higher priority. When set to `true`, a `renderMode` of `'image'` will be overridden with\n * `'hybrid'`.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will be\n * recreated during animations. This means that no vectors will be shown clipped, but the setting\n * will have a performance impact for large amounts of vector data. When set to `false`, batches\n * will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will be\n * recreated during interactions. See also `updateWhileAnimating`.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {module:ol/render~OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created.\n * @property {module:ol/style/Style|Array<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * Layer for vector tile data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @param {module:ol/layer/VectorTile~Options=} opt_options Options.\n * @api\n */\nvar VectorTileLayer = (function (VectorLayer) {\n  function VectorTileLayer(opt_options) {\n    var options = opt_options ? opt_options : {};\n\n    var renderMode = options.renderMode || VectorTileRenderType.HYBRID;\n    assert(renderMode == undefined ||\n       renderMode == VectorTileRenderType.IMAGE ||\n       renderMode == VectorTileRenderType.HYBRID ||\n       renderMode == VectorTileRenderType.VECTOR,\n    28); // `renderMode` must be `'image'`, `'hybrid'` or `'vector'`\n    if (options.declutter && renderMode == VectorTileRenderType.IMAGE) {\n      renderMode = VectorTileRenderType.HYBRID;\n    }\n    options.renderMode = renderMode;\n\n    var baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    VectorLayer.call(this, baseOptions);\n\n    this.setPreload(options.preload ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n    /**\n    * The layer type.\n    * @protected\n    * @type {module:ol/LayerType}\n    */\n    this.type = LayerType.VECTOR_TILE;\n\n  }\n\n  if ( VectorLayer ) VectorTileLayer.__proto__ = VectorLayer;\n  VectorTileLayer.prototype = Object.create( VectorLayer && VectorLayer.prototype );\n  VectorTileLayer.prototype.constructor = VectorTileLayer;\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getPreload = function getPreload () {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  };\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.getUseInterimTilesOnError = function getUseInterimTilesOnError () {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  };\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setPreload = function setPreload (preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  };\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  VectorTileLayer.prototype.setUseInterimTilesOnError = function setUseInterimTilesOnError (useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  };\n\n  return VectorTileLayer;\n}(VectorLayer));\n\n\n/**\n * Return the associated {@link module:ol/source/VectorTile vectortilesource} of the layer.\n * @function\n * @return {module:ol/source/VectorTile} Source.\n * @api\n */\nVectorTileLayer.prototype.getSource;\nexport default VectorTileLayer;\n\n//# sourceMappingURL=VectorTile.js.map","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {module:ol/extent~Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<module:ol/extent~Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {module:ol/tilegrid/TileGrid} tileGrid Tile grid.\n * @return {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {module:ol/extent~Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<module:ol/extent~Extent>} Extents.\n     */\n    function(extent, resolution) {\n      var z = tileGrid.getZForResolution(resolution);\n      var tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<module:ol/extent~Extent>} */\n      var extents = [];\n      /** @type {module:ol/tilecoord~TileCoord} */\n      var tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n\n//# sourceMappingURL=loadingstrategy.js.map","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event ol/source/Vector~VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event ol/source/Vector~VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event ol/source/Vector~VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event ol/source/Vector~VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n\n//# sourceMappingURL=VectorEventType.js.map","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from '../source/Source.js';\nimport SourceState from '../source/State.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(module:ol/extent~Extent, number): Array<module:ol/extent~Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n */\nexport var VectorSourceEvent = (function (Event) {\n  function VectorSourceEvent(type, opt_feature) {\n\n    Event.call(this, type);\n\n    /**\n     * The feature being added or removed.\n     * @type {module:ol/Feature|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n  if ( Event ) VectorSourceEvent.__proto__ = Event;\n  VectorSourceEvent.prototype = Object.create( Event && Event.prototype );\n  VectorSourceEvent.prototype.constructor = VectorSourceEvent;\n\n  return VectorSourceEvent;\n}(Event));\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/source/Source~AttributionLike} [attributions] Attributions.\n * @property {Array<module:ol/Feature>|module:ol/Collection<module:ol/Feature>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {module:ol/format/Feature} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {module:ol/featureloader~FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {module:ol/source/Vector~LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|module:ol/featureloader~FeatureUrlfunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlfunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires ol/source/Vector~VectorSourceEvent\n * @api\n */\nvar VectorSource = (function (Source) {\n  function VectorSource(opt_options) {\n\n    var options = opt_options || {};\n\n    Source.call(this, {\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/featureloader~FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {module:ol/format/Feature|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|module:ol/featureloader~FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {module:ol/format/Feature} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {module:ol/source/Vector~LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    var useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<module:ol/Feature>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {module:ol/structs/RBush<{extent: module:ol/extent~Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features without id (keyed by getUid(feature)).\n     * @private\n     * @type {!Object<string, module:ol/Feature>}\n     */\n    this.undefIdIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<module:ol/events~EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {module:ol/Collection<module:ol/Feature>}\n     */\n    this.featuresCollection_ = null;\n\n    var collection, features;\n    if (options.features instanceof Collection) {\n      collection = options.features;\n      features = collection.getArray();\n    } else if (Array.isArray(options.features)) {\n      features = options.features;\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  if ( Source ) VectorSource.__proto__ = Source;\n  VectorSource.prototype = Object.create( Source && Source.prototype );\n  VectorSource.prototype.constructor = VectorSource;\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * @param {module:ol/Feature} feature Feature to add.\n   * @api\n   */\n  VectorSource.prototype.addFeature = function addFeature (feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.addFeatureInternal = function addFeatureInternal (feature) {\n    var featureKey = getUid(feature).toString();\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    var geometry = feature.getGeometry();\n    if (geometry) {\n      var extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @private\n   */\n  VectorSource.prototype.setupChangeEvents_ = function setupChangeEvents_ (featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  };\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  VectorSource.prototype.addToIndex_ = function addToIndex_ (featureKey, feature) {\n    var valid = true;\n    var id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    } else {\n      assert(!(featureKey in this.undefIdIndex_),\n        30); // The passed `feature` was already added to the source\n      this.undefIdIndex_[featureKey] = feature;\n    }\n    return valid;\n  };\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<module:ol/Feature>} features Features to add.\n   * @api\n   */\n  VectorSource.prototype.addFeatures = function addFeatures (features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  };\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<module:ol/Feature>} features Features.\n   * @protected\n   */\n  VectorSource.prototype.addFeaturesInternal = function addFeaturesInternal (features) {\n    var this$1 = this;\n\n    var extents = [];\n    var newFeatures = [];\n    var geometryFeatures = [];\n\n    for (var i = 0, length = features.length; i < length; i++) {\n      var feature = features[i];\n      var featureKey = getUid(feature).toString();\n      if (this$1.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (var i$1 = 0, length$1 = newFeatures.length; i$1 < length$1; i$1++) {\n      var feature$1 = newFeatures[i$1];\n      var featureKey$1 = getUid(feature$1).toString();\n      this$1.setupChangeEvents_(featureKey$1, feature$1);\n\n      var geometry = feature$1.getGeometry();\n      if (geometry) {\n        var extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature$1);\n      } else {\n        this$1.nullGeometryFeatures_[featureKey$1] = feature$1;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (var i$2 = 0, length$2 = newFeatures.length; i$2 < length$2; i$2++) {\n      this$1.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i$2]));\n    }\n  };\n\n\n  /**\n   * @param {!module:ol/Collection<module:ol/Feature>} collection Collection.\n   * @private\n   */\n  VectorSource.prototype.bindFeaturesCollection_ = function bindFeaturesCollection_ (collection) {\n    var modifyingCollection = false;\n    listen(this, VectorEventType.ADDFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(this, VectorEventType.REMOVEFEATURE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    listen(collection, CollectionEventType.ADD,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    listen(collection, CollectionEventType.REMOVE,\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {module:ol/Feature} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }, this);\n    this.featuresCollection_ = collection;\n  };\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector~VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  VectorSource.prototype.clear = function clear (opt_fast) {\n    var this$1 = this;\n\n    if (opt_fast) {\n      for (var featureId in this$1.featureChangeKeys_) {\n        var keys = this$1.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.undefIdIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal, this);\n        for (var id in this$1.nullGeometryFeatures_) {\n          this$1.removeFeatureInternal(this$1.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.loadedExtentsRtree_.clear();\n    this.nullGeometryFeatures_ = {};\n\n    var clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  };\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeature = function forEachFeature (callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  VectorSource.prototype.forEachFeatureAtCoordinateDirect = function forEachFeatureAtCoordinateDirect (coordinate, callback) {\n    var extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      var geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  };\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureInExtent = function forEachFeatureInExtent (extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.forEach(callback);\n    }\n  };\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {function(module:ol/Feature): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  VectorSource.prototype.forEachFeatureIntersectingExtent = function forEachFeatureIntersectingExtent (extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       * @template T\n       */\n      function(feature) {\n        var geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          var result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  };\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {module:ol/Collection<module:ol/Feature>} The collection of features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesCollection = function getFeaturesCollection () {\n    return this.featuresCollection_;\n  };\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeatures = function getFeatures () {\n    var features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<module:ol/Feature>} */ (features)\n    );\n  };\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesAtCoordinate = function getFeaturesAtCoordinate (coordinate) {\n    var features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  };\n\n\n  /**\n   * Get all features in the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @return {Array<module:ol/Feature>} Features.\n   * @api\n   */\n  VectorSource.prototype.getFeaturesInExtent = function getFeaturesInExtent (extent) {\n    return this.featuresRtree_.getInExtent(extent);\n  };\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n   * @param {function(module:ol/Feature):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {module:ol/Feature} Closest feature.\n   * @api\n   */\n  VectorSource.prototype.getClosestFeatureToCoordinate = function getClosestFeatureToCoordinate (coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    var x = coordinate[0];\n    var y = coordinate[1];\n    var closestFeature = null;\n    var closestPoint = [NaN, NaN];\n    var minSquaredDistance = Infinity;\n    var extent = [-Infinity, -Infinity, Infinity, Infinity];\n    var filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {module:ol/Feature} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          var geometry = feature.getGeometry();\n          var previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            var minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  };\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {module:ol/extent~Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {module:ol/extent~Extent} Extent.\n   * @api\n   */\n  VectorSource.prototype.getExtent = function getExtent (opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  };\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {module:ol/Feature} The feature (or `null` if not found).\n   * @api\n   */\n  VectorSource.prototype.getFeatureById = function getFeatureById (id) {\n    var feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  };\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {module:ol/format/Feature|undefined} The feature format.\n   * @api\n   */\n  VectorSource.prototype.getFormat = function getFormat () {\n    return this.format_;\n  };\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  VectorSource.prototype.getOverlaps = function getOverlaps () {\n    return this.overlaps_;\n  };\n\n\n  /**\n   * @override\n   */\n  VectorSource.prototype.getResolutions = function getResolutions () {};\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|module:ol/featureloader~FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  VectorSource.prototype.getUrl = function getUrl () {\n    return this.url_;\n  };\n\n\n  /**\n   * @param {module:ol/events/Event} event Event.\n   * @private\n   */\n  VectorSource.prototype.handleFeatureChange_ = function handleFeatureChange_ (event) {\n    var feature = /** @type {module:ol/Feature} */ (event.target);\n    var featureKey = getUid(feature).toString();\n    var geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      var extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    var id = feature.getId();\n    if (id !== undefined) {\n      var sid = id.toString();\n      if (featureKey in this.undefIdIndex_) {\n        delete this.undefIdIndex_[featureKey];\n        this.idIndex_[sid] = feature;\n      } else {\n        if (this.idIndex_[sid] !== feature) {\n          this.removeFromIdIndex_(feature);\n          this.idIndex_[sid] = feature;\n        }\n      }\n    } else {\n      if (!(featureKey in this.undefIdIndex_)) {\n        this.removeFromIdIndex_(feature);\n        this.undefIdIndex_[featureKey] = feature;\n      }\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  };\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {module:ol/Feature} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  VectorSource.prototype.hasFeature = function hasFeature (feature) {\n    var id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      var featureKey = getUid(feature).toString();\n      return featureKey in this.undefIdIndex_;\n    }\n  };\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  VectorSource.prototype.isEmpty = function isEmpty$1 () {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  };\n\n\n  /**\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {module:ol/proj/Projection} projection Projection.\n   */\n  VectorSource.prototype.loadFeatures = function loadFeatures (extent, resolution, projection) {\n    var this$1 = this;\n\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    var loop = function ( i, ii ) {\n      var extentToLoad = extentsToLoad[i];\n      var alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: module:ol/extent~Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this$1.loader_.call(this$1, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this$1.loading = true;\n      }\n    };\n\n    for (var i = 0, ii = extentsToLoad.length; i < ii; ++i) loop( i, ii );\n  };\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {module:ol/extent~Extent} extent Extent.\n   * @api\n   */\n  VectorSource.prototype.removeLoadedExtent = function removeLoadedExtent (extent) {\n    var loadedExtentsRtree = this.loadedExtentsRtree_;\n    var obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  };\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {module:ol/Feature} feature Feature to remove.\n   * @api\n   */\n  VectorSource.prototype.removeFeature = function removeFeature (feature) {\n    var featureKey = getUid(feature).toString();\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  };\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {module:ol/Feature} feature Feature.\n   * @protected\n   */\n  VectorSource.prototype.removeFeatureInternal = function removeFeatureInternal (feature) {\n    var featureKey = getUid(feature).toString();\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    var id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    } else {\n      delete this.undefIdIndex_[featureKey];\n    }\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  };\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {module:ol/Feature} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  VectorSource.prototype.removeFromIdIndex_ = function removeFromIdIndex_ (feature) {\n    var this$1 = this;\n\n    var removed = false;\n    for (var id in this$1.idIndex_) {\n      if (this$1.idIndex_[id] === feature) {\n        delete this$1.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  };\n\n\n  /**\n   * Set the new loader of the source. The next loadFeatures call will use the\n   * new loader.\n   * @param {module:ol/featureloader~FeatureLoader} loader The loader to set.\n   * @api\n   */\n  VectorSource.prototype.setLoader = function setLoader (loader) {\n    this.loader_ = loader;\n  };\n\n  return VectorSource;\n}(Source));\n\n\nexport default VectorSource;\n\n//# sourceMappingURL=Vector.js.map"],"sourceRoot":""}